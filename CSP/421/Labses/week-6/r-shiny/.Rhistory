library(BayesFactor)
# Question 3:
#   Run cor.test() on the correlation between "area" and "perm" in the rock data set
# and interpret the results. Note that you will have to use the "$" accessor to get
# at each of the two variables. Make sure you interpret both the confidence
# interval and the p-value that is generated by cor.test().
data(rock)
View(rock)
# Capture just the area and perm values
rock.areas <- rock$area
rock.perms <- rock$perm
# Run a correlation t-test on the values.
cor.test(rock.areas, rock.perms)
# bfCorTest function found in the textbook and async material.
bfCorTest <- function (x,y) # Get r from BayesFactor
{
zx <- scale(x) # Standardize X
zy <- scale(y) # Standardize Y
zData <- data.frame(x=zx,rhoNot0=zy) # Put in a data frame
bfOut <- generalTestBF(x ~ rhoNot0, data=zData) # linear coefficient
mcmcOut <- posterior(bfOut,iterations=10000) # posterior samples
print(summary(mcmcOut[,"rhoNot0"])) # Get the HDI for rho
return(bfOut) # Return Bayes factor object
}
bfCorTest(rock.areas, rock.perms)
# Make 2 x 2 table function from the book.
make2x2table <- function(ul)
{
ll <- 50 - ul
ur <- 30 - ul
lr <- 50 - ur
matrix(c(ul,ur,ll,lr),nrow=2, ncol=2, byrow = T)
}
# Calc chi squared function from the book.
calcChiSquared <- function(actual,expected)
{
diffs <- actual - expected
diffsSq <- diffs^2
diffsSqNorm <- diffsSq/expected
sum(diffsSqNorm)
}
# Play with the table maker.
make2x2table(15)
calcChiSquared(make2x2table(15), make2x2table(15))
# Run a chi squared test
chisq.test(UCBAdmissions[,,1], correct=F)
# Run a Bayesian analysis of the gender and admissions data.
ucbOut <- contingencyTableBF(UCBAdmissions[,,1],sampleType="poisson", posterior=F)
summary(ucbOut)
# Run a Bayesian analysis of the gender and admissions data.
# Include posterior probability
ucbOut <- contingencyTableBF(UCBAdmissions[,,1], sampleType="poisson",
posterior=T, iterations = 10000)
# Calculate admission status proportions for males
maleProp <- ucbOut[,"lambda[1,1]"]/ucbOut[,"lambda[2,1]"]
hist(maleProp)
# Calculate admission status proportions for females
femaleProp <- ucbOut[,"lambda[1,2]"]/ucbOut[,"lambda[2,2]"]
hist(femaleProp)
# Calculate the difference between males and females
propDiffs <- maleProp - femaleProp
# Plot the differences and include the 95% HDI lines.
hist(propDiffs,
main="Histogram of Proportion Differences - Male vs. Female",
col="darkslategray4", xlab="DIfference")
abline(v=quantile(propDiffs,c(0.025)), col="black")
abline(v=quantile(propDiffs,c(0.975)), col="black")
# Print the HDI interval
c(quantile(propDiffs,c(0.025)),quantile(propDiffs,c(0.975)))
# Answer for Chi-Square Exercise
library(BayesFactor)
HEcombined <- HairEyeColor[,,1] + HairEyeColor[,,2]
HEcombined # review the result
sum(HEcombined)
shiny::runApp('C:/Users/gregb/OneDrive/Courses/Syracuse/Course Design/SCP/421/Week 6/r-shiny/census-app')
runApp('C:/Users/gregb/OneDrive/Courses/Syracuse/Course Design/SCP/421/Week 6/r-shiny/census-app')
setwd("C:/Users/gregb/OneDrive/Courses/Syracuse/Course Design/SCP/421/Week 6/r-shiny")
runApp('census-app')
runApp('census-app')
runApp('census-app')
runApp('census-app')
setwd("C:/Users/gregb/OneDrive/Courses/Syracuse/Course Design/SCP/421/Week 6/r-shiny/census-app")
runApp('census-app')
setwd("C:/Users/gregb/OneDrive/Courses/Syracuse/Course Design/SCP/421/Week 6/r-shiny")
runApp('census-app')
setwd("C:/Users/gregb/OneDrive/Courses/Syracuse/Course Design/SCP/421/Week 6/r-shiny")
source("census-app/helpers.R")
runApp('census-app')
runApp('census-app')
runApp('census-app')
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
install.packages('rsconnect')
install.packages("rsconnect")
shiny::runApp('census-app')
load("C:/Users/gregb/OneDrive/Courses/Syracuse/Courses/772/Weeks/11/docs/allSchoolsReportStatus.RData")
load("C:/Users/gregb/OneDrive/Courses/Syracuse/Courses/772/Weeks/11/docs/allSchoolsReportStatus.RData")
load("C:/Users/gregb/OneDrive/Courses/Syracuse/Courses/772/Weeks/11/docs/allSchoolsReportStatus.RData")
View(allSchoolsReportStatus)
vaxstatus <- allSchoolsReportStatus
schoolsPP <- ftable(vaxstatus, row.vars = 2, col.vars = "reported")#Extract reporting status by school type
schoolsPP#Display contingency table
chisq.test(schoolsPP, correct = FALSE)#Run chi-squared test
vaxfactor <- as.data.frame(unclass(vaxstatus), stringsAsFactors = TRUE)#Convert to dataframe
pubrpt <- vaxfactor[vaxfactor$pubpriv == "PUBLIC",]#Isolate public schools
prvrpt <- vaxfactor[vaxfactor$pubpriv == "PRIVATE",]#Isolate private schools
#Sum public schools
pubsumY = sum(pubrpt$reported == "Y")
pubsumN = sum(pubrpt$reported == "N")
PubProps = sum(pubrpt$reported == "Y")/(sum(pubrpt$reported == "Y")+sum(pubrpt$reported == "N"))
print(PubProps)
#Sum private schools
prvsumY = sum(prvrpt$reported == "Y")
prvsumN = sum(prvrpt$reported == "N")
PrvProps = sum(prvrpt$reported == "Y")/(sum(prvrpt$reported == "Y")+sum(prvrpt$reported == "N"))
print(PrvProps)
allSchoolsReportStatus$isPublic <- as.numeric(allSchoolsReportStatus$pubpriv=="PUBLIC")
allSchoolsReportStatus$isPublic <- as.numeric(allSchoolsReportStatus$pubpriv=="PUBLIC")
asr$isReported <- as.numeric(allSchoolsReportStatus$reported=="Y")
allSchoolsReportStatus$isReported <- as.numeric(allSchoolsReportStatus$reported=="Y")
t_test <- t.test(allSchoolsReportStatus$isReported[allSchoolsReportStatus$isPub==1],
allSchoolsReportStatus$isReported[allSchoolsReportStatus$isPublic==0])
t_test
