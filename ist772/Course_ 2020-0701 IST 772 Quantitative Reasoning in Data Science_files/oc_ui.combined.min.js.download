/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */
;(function(root, factory) {
	// https://github.com/umdjs/umd/blob/master/returnExports.js
	if (typeof exports == 'object') {
		// For Node.js.
		module.exports = factory(root);
	} else if (typeof define == 'function' && define.amd) {
		// For AMD. Register as an anonymous module.
		define([], factory.bind(root, root));
	} else {
		// For browser globals (not exposing the function separately).
		factory(root);
	}
}(typeof global != 'undefined' ? global : this, function(root) {

	if (root.CSS && root.CSS.escape) {
		return root.CSS.escape;
	}

	// https://drafts.csswg.org/cssom/#serialize-an-identifier
	var cssEscape = function(value) {
		if (arguments.length == 0) {
			throw new TypeError('`CSS.escape` requires an argument.');
		}
		var string = String(value);
		var length = string.length;
		var index = -1;
		var codeUnit;
		var result = '';
		var firstCodeUnit = string.charCodeAt(0);
		while (++index < length) {
			codeUnit = string.charCodeAt(index);
			// Note: there’s no need to special-case astral symbols, surrogate
			// pairs, or lone surrogates.

			// If the character is NULL (U+0000), then the REPLACEMENT CHARACTER
			// (U+FFFD).
			if (codeUnit == 0x0000) {
				result += '\uFFFD';
				continue;
			}

			if (
				// If the character is in the range [\1-\1F] (U+0001 to U+001F) or is
				// U+007F, […]
				(codeUnit >= 0x0001 && codeUnit <= 0x001F) || codeUnit == 0x007F ||
				// If the character is the first character and is in the range [0-9]
				// (U+0030 to U+0039), […]
				(index == 0 && codeUnit >= 0x0030 && codeUnit <= 0x0039) ||
				// If the character is the second character and is in the range [0-9]
				// (U+0030 to U+0039) and the first character is a `-` (U+002D), […]
				(
					index == 1 &&
					codeUnit >= 0x0030 && codeUnit <= 0x0039 &&
					firstCodeUnit == 0x002D
				)
			) {
				// https://drafts.csswg.org/cssom/#escape-a-character-as-code-point
				result += '\\' + codeUnit.toString(16) + ' ';
				continue;
			}

			if (
				// If the character is the first character and is a `-` (U+002D), and
				// there is no second character, […]
				index == 0 &&
				length == 1 &&
				codeUnit == 0x002D
			) {
				result += '\\' + string.charAt(index);
				continue;
			}

			// If the character is not handled by one of the above rules and is
			// greater than or equal to U+0080, is `-` (U+002D) or `_` (U+005F), or
			// is in one of the ranges [0-9] (U+0030 to U+0039), [A-Z] (U+0041 to
			// U+005A), or [a-z] (U+0061 to U+007A), […]
			if (
				codeUnit >= 0x0080 ||
				codeUnit == 0x002D ||
				codeUnit == 0x005F ||
				codeUnit >= 0x0030 && codeUnit <= 0x0039 ||
				codeUnit >= 0x0041 && codeUnit <= 0x005A ||
				codeUnit >= 0x0061 && codeUnit <= 0x007A
			) {
				// the character itself
				result += string.charAt(index);
				continue;
			}

			// Otherwise, the escaped character.
			// https://drafts.csswg.org/cssom/#escape-a-character
			result += '\\' + string.charAt(index);

		}
		return result;
	};

	if (!root.CSS) {
		root.CSS = {};
	}

	root.CSS.escape = cssEscape;
	return cssEscape;

}));

/*!
 * Platform.js v1.3.6
 * Copyright 2014-2020 Benjamin Tan
 * Copyright 2011-2013 John-David Dalton
 * Available under MIT license
 */
;(function() {
  'use strict';

  /** Used to determine if values are of the language type `Object`. */
  var objectTypes = {
    'function': true,
    'object': true
  };

  /** Used as a reference to the global object. */
  var root = (objectTypes[typeof window] && window) || this;

  /** Backup possible global object. */
  var oldRoot = root;

  /** Detect free variable `exports`. */
  var freeExports = objectTypes[typeof exports] && exports;

  /** Detect free variable `module`. */
  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;

  /** Detect free variable `global` from Node.js or Browserified code and use it as `root`. */
  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;
  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {
    root = freeGlobal;
  }

  /**
   * Used as the maximum length of an array-like object.
   * See the [ES6 spec](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength)
   * for more details.
   */
  var maxSafeInteger = Math.pow(2, 53) - 1;

  /** Regular expression to detect Opera. */
  var reOpera = /\bOpera/;

  /** Possible global object. */
  var thisBinding = this;

  /** Used for native method references. */
  var objectProto = Object.prototype;

  /** Used to check for own properties of an object. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /** Used to resolve the internal `[[Class]]` of values. */
  var toString = objectProto.toString;

  /*--------------------------------------------------------------------------*/

  /**
   * Capitalizes a string value.
   *
   * @private
   * @param {string} string The string to capitalize.
   * @returns {string} The capitalized string.
   */
  function capitalize(string) {
    string = String(string);
    return string.charAt(0).toUpperCase() + string.slice(1);
  }

  /**
   * A utility function to clean up the OS name.
   *
   * @private
   * @param {string} os The OS name to clean up.
   * @param {string} [pattern] A `RegExp` pattern matching the OS name.
   * @param {string} [label] A label for the OS.
   */
  function cleanupOS(os, pattern, label) {
    // Platform tokens are defined at:
    // http://msdn.microsoft.com/en-us/library/ms537503(VS.85).aspx
    // http://web.archive.org/web/20081122053950/http://msdn.microsoft.com/en-us/library/ms537503(VS.85).aspx
    var data = {
      '10.0': '10',
      '6.4':  '10 Technical Preview',
      '6.3':  '8.1',
      '6.2':  '8',
      '6.1':  'Server 2008 R2 / 7',
      '6.0':  'Server 2008 / Vista',
      '5.2':  'Server 2003 / XP 64-bit',
      '5.1':  'XP',
      '5.01': '2000 SP1',
      '5.0':  '2000',
      '4.0':  'NT',
      '4.90': 'ME'
    };
    // Detect Windows version from platform tokens.
    if (pattern && label && /^Win/i.test(os) && !/^Windows Phone /i.test(os) &&
        (data = data[/[\d.]+$/.exec(os)])) {
      os = 'Windows ' + data;
    }
    // Correct character case and cleanup string.
    os = String(os);

    if (pattern && label) {
      os = os.replace(RegExp(pattern, 'i'), label);
    }

    os = format(
      os.replace(/ ce$/i, ' CE')
        .replace(/\bhpw/i, 'web')
        .replace(/\bMacintosh\b/, 'Mac OS')
        .replace(/_PowerPC\b/i, ' OS')
        .replace(/\b(OS X) [^ \d]+/i, '$1')
        .replace(/\bMac (OS X)\b/, '$1')
        .replace(/\/(\d)/, ' $1')
        .replace(/_/g, '.')
        .replace(/(?: BePC|[ .]*fc[ \d.]+)$/i, '')
        .replace(/\bx86\.64\b/gi, 'x86_64')
        .replace(/\b(Windows Phone) OS\b/, '$1')
        .replace(/\b(Chrome OS \w+) [\d.]+\b/, '$1')
        .split(' on ')[0]
    );

    return os;
  }

  /**
   * An iteration utility for arrays and objects.
   *
   * @private
   * @param {Array|Object} object The object to iterate over.
   * @param {Function} callback The function called per iteration.
   */
  function each(object, callback) {
    var index = -1,
        length = object ? object.length : 0;

    if (typeof length == 'number' && length > -1 && length <= maxSafeInteger) {
      while (++index < length) {
        callback(object[index], index, object);
      }
    } else {
      forOwn(object, callback);
    }
  }

  /**
   * Trim and conditionally capitalize string values.
   *
   * @private
   * @param {string} string The string to format.
   * @returns {string} The formatted string.
   */
  function format(string) {
    string = trim(string);
    return /^(?:webOS|i(?:OS|P))/.test(string)
      ? string
      : capitalize(string);
  }

  /**
   * Iterates over an object's own properties, executing the `callback` for each.
   *
   * @private
   * @param {Object} object The object to iterate over.
   * @param {Function} callback The function executed per own property.
   */
  function forOwn(object, callback) {
    for (var key in object) {
      if (hasOwnProperty.call(object, key)) {
        callback(object[key], key, object);
      }
    }
  }

  /**
   * Gets the internal `[[Class]]` of a value.
   *
   * @private
   * @param {*} value The value.
   * @returns {string} The `[[Class]]`.
   */
  function getClassOf(value) {
    return value == null
      ? capitalize(value)
      : toString.call(value).slice(8, -1);
  }

  /**
   * Host objects can return type values that are different from their actual
   * data type. The objects we are concerned with usually return non-primitive
   * types of "object", "function", or "unknown".
   *
   * @private
   * @param {*} object The owner of the property.
   * @param {string} property The property to check.
   * @returns {boolean} Returns `true` if the property value is a non-primitive, else `false`.
   */
  function isHostType(object, property) {
    var type = object != null ? typeof object[property] : 'number';
    return !/^(?:boolean|number|string|undefined)$/.test(type) &&
      (type == 'object' ? !!object[property] : true);
  }

  /**
   * Prepares a string for use in a `RegExp` by making hyphens and spaces optional.
   *
   * @private
   * @param {string} string The string to qualify.
   * @returns {string} The qualified string.
   */
  function qualify(string) {
    return String(string).replace(/([ -])(?!$)/g, '$1?');
  }

  /**
   * A bare-bones `Array#reduce` like utility function.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} callback The function called per iteration.
   * @returns {*} The accumulated result.
   */
  function reduce(array, callback) {
    var accumulator = null;
    each(array, function(value, index) {
      accumulator = callback(accumulator, value, index, array);
    });
    return accumulator;
  }

  /**
   * Removes leading and trailing whitespace from a string.
   *
   * @private
   * @param {string} string The string to trim.
   * @returns {string} The trimmed string.
   */
  function trim(string) {
    return String(string).replace(/^ +| +$/g, '');
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Creates a new platform object.
   *
   * @memberOf platform
   * @param {Object|string} [ua=navigator.userAgent] The user agent string or
   *  context object.
   * @returns {Object} A platform object.
   */
  function parse(ua) {

    /** The environment context object. */
    var context = root;

    /** Used to flag when a custom context is provided. */
    var isCustomContext = ua && typeof ua == 'object' && getClassOf(ua) != 'String';

    // Juggle arguments.
    if (isCustomContext) {
      context = ua;
      ua = null;
    }

    /** Browser navigator object. */
    var nav = context.navigator || {};

    /** Browser user agent string. */
    var userAgent = nav.userAgent || '';

    ua || (ua = userAgent);

    /** Used to flag when `thisBinding` is the [ModuleScope]. */
    var isModuleScope = isCustomContext || thisBinding == oldRoot;

    /** Used to detect if browser is like Chrome. */
    var likeChrome = isCustomContext
      ? !!nav.likeChrome
      : /\bChrome\b/.test(ua) && !/internal|\n/i.test(toString.toString());

    /** Internal `[[Class]]` value shortcuts. */
    var objectClass = 'Object',
        airRuntimeClass = isCustomContext ? objectClass : 'ScriptBridgingProxyObject',
        enviroClass = isCustomContext ? objectClass : 'Environment',
        javaClass = (isCustomContext && context.java) ? 'JavaPackage' : getClassOf(context.java),
        phantomClass = isCustomContext ? objectClass : 'RuntimeObject';

    /** Detect Java environments. */
    var java = /\bJava/.test(javaClass) && context.java;

    /** Detect Rhino. */
    var rhino = java && getClassOf(context.environment) == enviroClass;

    /** A character to represent alpha. */
    var alpha = java ? 'a' : '\u03b1';

    /** A character to represent beta. */
    var beta = java ? 'b' : '\u03b2';

    /** Browser document object. */
    var doc = context.document || {};

    /**
     * Detect Opera browser (Presto-based).
     * http://www.howtocreate.co.uk/operaStuff/operaObject.html
     * http://dev.opera.com/articles/view/opera-mini-web-content-authoring-guidelines/#operamini
     */
    var opera = context.operamini || context.opera;

    /** Opera `[[Class]]`. */
    var operaClass = reOpera.test(operaClass = (isCustomContext && opera) ? opera['[[Class]]'] : getClassOf(opera))
      ? operaClass
      : (opera = null);

    /*------------------------------------------------------------------------*/

    /** Temporary variable used over the script's lifetime. */
    var data;

    /** The CPU architecture. */
    var arch = ua;

    /** Platform description array. */
    var description = [];

    /** Platform alpha/beta indicator. */
    var prerelease = null;

    /** A flag to indicate that environment features should be used to resolve the platform. */
    var useFeatures = ua == userAgent;

    /** The browser/environment version. */
    var version = useFeatures && opera && typeof opera.version == 'function' && opera.version();

    /** A flag to indicate if the OS ends with "/ Version" */
    var isSpecialCasedOS;

    /* Detectable layout engines (order is important). */
    var layout = getLayout([
      { 'label': 'EdgeHTML', 'pattern': 'Edge' },
      'Trident',
      { 'label': 'WebKit', 'pattern': 'AppleWebKit' },
      'iCab',
      'Presto',
      'NetFront',
      'Tasman',
      'KHTML',
      'Gecko'
    ]);

    /* Detectable browser names (order is important). */
    var name = getName([
      'Adobe AIR',
      'Arora',
      'Avant Browser',
      'Breach',
      'Camino',
      'Electron',
      'Epiphany',
      'Fennec',
      'Flock',
      'Galeon',
      'GreenBrowser',
      'iCab',
      'Iceweasel',
      'K-Meleon',
      'Konqueror',
      'Lunascape',
      'Maxthon',
      { 'label': 'Microsoft Edge', 'pattern': '(?:Edge|Edg|EdgA|EdgiOS)' },
      'Midori',
      'Nook Browser',
      'PaleMoon',
      'PhantomJS',
      'Raven',
      'Rekonq',
      'RockMelt',
      { 'label': 'Samsung Internet', 'pattern': 'SamsungBrowser' },
      'SeaMonkey',
      { 'label': 'Silk', 'pattern': '(?:Cloud9|Silk-Accelerated)' },
      'Sleipnir',
      'SlimBrowser',
      { 'label': 'SRWare Iron', 'pattern': 'Iron' },
      'Sunrise',
      'Swiftfox',
      'Vivaldi',
      'Waterfox',
      'WebPositive',
      { 'label': 'Yandex Browser', 'pattern': 'YaBrowser' },
      { 'label': 'UC Browser', 'pattern': 'UCBrowser' },
      'Opera Mini',
      { 'label': 'Opera Mini', 'pattern': 'OPiOS' },
      'Opera',
      { 'label': 'Opera', 'pattern': 'OPR' },
      'Chromium',
      'Chrome',
      { 'label': 'Chrome', 'pattern': '(?:HeadlessChrome)' },
      { 'label': 'Chrome Mobile', 'pattern': '(?:CriOS|CrMo)' },
      { 'label': 'Firefox', 'pattern': '(?:Firefox|Minefield)' },
      { 'label': 'Firefox for iOS', 'pattern': 'FxiOS' },
      { 'label': 'IE', 'pattern': 'IEMobile' },
      { 'label': 'IE', 'pattern': 'MSIE' },
      'Safari'
    ]);

    /* Detectable products (order is important). */
    var product = getProduct([
      { 'label': 'BlackBerry', 'pattern': 'BB10' },
      'BlackBerry',
      { 'label': 'Galaxy S', 'pattern': 'GT-I9000' },
      { 'label': 'Galaxy S2', 'pattern': 'GT-I9100' },
      { 'label': 'Galaxy S3', 'pattern': 'GT-I9300' },
      { 'label': 'Galaxy S4', 'pattern': 'GT-I9500' },
      { 'label': 'Galaxy S5', 'pattern': 'SM-G900' },
      { 'label': 'Galaxy S6', 'pattern': 'SM-G920' },
      { 'label': 'Galaxy S6 Edge', 'pattern': 'SM-G925' },
      { 'label': 'Galaxy S7', 'pattern': 'SM-G930' },
      { 'label': 'Galaxy S7 Edge', 'pattern': 'SM-G935' },
      'Google TV',
      'Lumia',
      'iPad',
      'iPod',
      'iPhone',
      'Kindle',
      { 'label': 'Kindle Fire', 'pattern': '(?:Cloud9|Silk-Accelerated)' },
      'Nexus',
      'Nook',
      'PlayBook',
      'PlayStation Vita',
      'PlayStation',
      'TouchPad',
      'Transformer',
      { 'label': 'Wii U', 'pattern': 'WiiU' },
      'Wii',
      'Xbox One',
      { 'label': 'Xbox 360', 'pattern': 'Xbox' },
      'Xoom'
    ]);

    /* Detectable manufacturers. */
    var manufacturer = getManufacturer({
      'Apple': { 'iPad': 1, 'iPhone': 1, 'iPod': 1 },
      'Alcatel': {},
      'Archos': {},
      'Amazon': { 'Kindle': 1, 'Kindle Fire': 1 },
      'Asus': { 'Transformer': 1 },
      'Barnes & Noble': { 'Nook': 1 },
      'BlackBerry': { 'PlayBook': 1 },
      'Google': { 'Google TV': 1, 'Nexus': 1 },
      'HP': { 'TouchPad': 1 },
      'HTC': {},
      'Huawei': {},
      'Lenovo': {},
      'LG': {},
      'Microsoft': { 'Xbox': 1, 'Xbox One': 1 },
      'Motorola': { 'Xoom': 1 },
      'Nintendo': { 'Wii U': 1,  'Wii': 1 },
      'Nokia': { 'Lumia': 1 },
      'Oppo': {},
      'Samsung': { 'Galaxy S': 1, 'Galaxy S2': 1, 'Galaxy S3': 1, 'Galaxy S4': 1 },
      'Sony': { 'PlayStation': 1, 'PlayStation Vita': 1 },
      'Xiaomi': { 'Mi': 1, 'Redmi': 1 }
    });

    /* Detectable operating systems (order is important). */
    var os = getOS([
      'Windows Phone',
      'KaiOS',
      'Android',
      'CentOS',
      { 'label': 'Chrome OS', 'pattern': 'CrOS' },
      'Debian',
      { 'label': 'DragonFly BSD', 'pattern': 'DragonFly' },
      'Fedora',
      'FreeBSD',
      'Gentoo',
      'Haiku',
      'Kubuntu',
      'Linux Mint',
      'OpenBSD',
      'Red Hat',
      'SuSE',
      'Ubuntu',
      'Xubuntu',
      'Cygwin',
      'Symbian OS',
      'hpwOS',
      'webOS ',
      'webOS',
      'Tablet OS',
      'Tizen',
      'Linux',
      'Mac OS X',
      'Macintosh',
      'Mac',
      'Windows 98;',
      'Windows '
    ]);

    /*------------------------------------------------------------------------*/

    /**
     * Picks the layout engine from an array of guesses.
     *
     * @private
     * @param {Array} guesses An array of guesses.
     * @returns {null|string} The detected layout engine.
     */
    function getLayout(guesses) {
      return reduce(guesses, function(result, guess) {
        return result || RegExp('\\b' + (
          guess.pattern || qualify(guess)
        ) + '\\b', 'i').exec(ua) && (guess.label || guess);
      });
    }

    /**
     * Picks the manufacturer from an array of guesses.
     *
     * @private
     * @param {Array} guesses An object of guesses.
     * @returns {null|string} The detected manufacturer.
     */
    function getManufacturer(guesses) {
      return reduce(guesses, function(result, value, key) {
        // Lookup the manufacturer by product or scan the UA for the manufacturer.
        return result || (
          value[product] ||
          value[/^[a-z]+(?: +[a-z]+\b)*/i.exec(product)] ||
          RegExp('\\b' + qualify(key) + '(?:\\b|\\w*\\d)', 'i').exec(ua)
        ) && key;
      });
    }

    /**
     * Picks the browser name from an array of guesses.
     *
     * @private
     * @param {Array} guesses An array of guesses.
     * @returns {null|string} The detected browser name.
     */
    function getName(guesses) {
      return reduce(guesses, function(result, guess) {
        return result || RegExp('\\b' + (
          guess.pattern || qualify(guess)
        ) + '\\b', 'i').exec(ua) && (guess.label || guess);
      });
    }

    /**
     * Picks the OS name from an array of guesses.
     *
     * @private
     * @param {Array} guesses An array of guesses.
     * @returns {null|string} The detected OS name.
     */
    function getOS(guesses) {
      return reduce(guesses, function(result, guess) {
        var pattern = guess.pattern || qualify(guess);
        if (!result && (result =
              RegExp('\\b' + pattern + '(?:/[\\d.]+|[ \\w.]*)', 'i').exec(ua)
            )) {
          result = cleanupOS(result, pattern, guess.label || guess);
        }
        return result;
      });
    }

    /**
     * Picks the product name from an array of guesses.
     *
     * @private
     * @param {Array} guesses An array of guesses.
     * @returns {null|string} The detected product name.
     */
    function getProduct(guesses) {
      return reduce(guesses, function(result, guess) {
        var pattern = guess.pattern || qualify(guess);
        if (!result && (result =
              RegExp('\\b' + pattern + ' *\\d+[.\\w_]*', 'i').exec(ua) ||
              RegExp('\\b' + pattern + ' *\\w+-[\\w]*', 'i').exec(ua) ||
              RegExp('\\b' + pattern + '(?:; *(?:[a-z]+[_-])?[a-z]+\\d+|[^ ();-]*)', 'i').exec(ua)
            )) {
          // Split by forward slash and append product version if needed.
          if ((result = String((guess.label && !RegExp(pattern, 'i').test(guess.label)) ? guess.label : result).split('/'))[1] && !/[\d.]+/.test(result[0])) {
            result[0] += ' ' + result[1];
          }
          // Correct character case and cleanup string.
          guess = guess.label || guess;
          result = format(result[0]
            .replace(RegExp(pattern, 'i'), guess)
            .replace(RegExp('; *(?:' + guess + '[_-])?', 'i'), ' ')
            .replace(RegExp('(' + guess + ')[-_.]?(\\w)', 'i'), '$1 $2'));
        }
        return result;
      });
    }

    /**
     * Resolves the version using an array of UA patterns.
     *
     * @private
     * @param {Array} patterns An array of UA patterns.
     * @returns {null|string} The detected version.
     */
    function getVersion(patterns) {
      return reduce(patterns, function(result, pattern) {
        return result || (RegExp(pattern +
          '(?:-[\\d.]+/|(?: for [\\w-]+)?[ /-])([\\d.]+[^ ();/_-]*)', 'i').exec(ua) || 0)[1] || null;
      });
    }

    /**
     * Returns `platform.description` when the platform object is coerced to a string.
     *
     * @name toString
     * @memberOf platform
     * @returns {string} Returns `platform.description` if available, else an empty string.
     */
    function toStringPlatform() {
      return this.description || '';
    }

    /*------------------------------------------------------------------------*/

    // Convert layout to an array so we can add extra details.
    layout && (layout = [layout]);

    // Detect Android products.
    // Browsers on Android devices typically provide their product IDS after "Android;"
    // up to "Build" or ") AppleWebKit".
    // Example:
    // "Mozilla/5.0 (Linux; Android 8.1.0; Moto G (5) Plus) AppleWebKit/537.36
    // (KHTML, like Gecko) Chrome/70.0.3538.80 Mobile Safari/537.36"
    if (/\bAndroid\b/.test(os) && !product &&
        (data = /\bAndroid[^;]*;(.*?)(?:Build|\) AppleWebKit)\b/i.exec(ua))) {
      product = trim(data[1])
        // Replace any language codes (eg. "en-US").
        .replace(/^[a-z]{2}-[a-z]{2};\s*/i, '')
        || null;
    }
    // Detect product names that contain their manufacturer's name.
    if (manufacturer && !product) {
      product = getProduct([manufacturer]);
    } else if (manufacturer && product) {
      product = product
        .replace(RegExp('^(' + qualify(manufacturer) + ')[-_.\\s]', 'i'), manufacturer + ' ')
        .replace(RegExp('^(' + qualify(manufacturer) + ')[-_.]?(\\w)', 'i'), manufacturer + ' $2');
    }
    // Clean up Google TV.
    if ((data = /\bGoogle TV\b/.exec(product))) {
      product = data[0];
    }
    // Detect simulators.
    if (/\bSimulator\b/i.test(ua)) {
      product = (product ? product + ' ' : '') + 'Simulator';
    }
    // Detect Opera Mini 8+ running in Turbo/Uncompressed mode on iOS.
    if (name == 'Opera Mini' && /\bOPiOS\b/.test(ua)) {
      description.push('running in Turbo/Uncompressed mode');
    }
    // Detect IE Mobile 11.
    if (name == 'IE' && /\blike iPhone OS\b/.test(ua)) {
      data = parse(ua.replace(/like iPhone OS/, ''));
      manufacturer = data.manufacturer;
      product = data.product;
    }
    // Detect iOS.
    else if (/^iP/.test(product)) {
      name || (name = 'Safari');
      os = 'iOS' + ((data = / OS ([\d_]+)/i.exec(ua))
        ? ' ' + data[1].replace(/_/g, '.')
        : '');
    }
    // Detect Kubuntu.
    else if (name == 'Konqueror' && /^Linux\b/i.test(os)) {
      os = 'Kubuntu';
    }
    // Detect Android browsers.
    else if ((manufacturer && manufacturer != 'Google' &&
        ((/Chrome/.test(name) && !/\bMobile Safari\b/i.test(ua)) || /\bVita\b/.test(product))) ||
        (/\bAndroid\b/.test(os) && /^Chrome/.test(name) && /\bVersion\//i.test(ua))) {
      name = 'Android Browser';
      os = /\bAndroid\b/.test(os) ? os : 'Android';
    }
    // Detect Silk desktop/accelerated modes.
    else if (name == 'Silk') {
      if (!/\bMobi/i.test(ua)) {
        os = 'Android';
        description.unshift('desktop mode');
      }
      if (/Accelerated *= *true/i.test(ua)) {
        description.unshift('accelerated');
      }
    }
    // Detect UC Browser speed mode.
    else if (name == 'UC Browser' && /\bUCWEB\b/.test(ua)) {
      description.push('speed mode');
    }
    // Detect PaleMoon identifying as Firefox.
    else if (name == 'PaleMoon' && (data = /\bFirefox\/([\d.]+)\b/.exec(ua))) {
      description.push('identifying as Firefox ' + data[1]);
    }
    // Detect Firefox OS and products running Firefox.
    else if (name == 'Firefox' && (data = /\b(Mobile|Tablet|TV)\b/i.exec(ua))) {
      os || (os = 'Firefox OS');
      product || (product = data[1]);
    }
    // Detect false positives for Firefox/Safari.
    else if (!name || (data = !/\bMinefield\b/i.test(ua) && /\b(?:Firefox|Safari)\b/.exec(name))) {
      // Escape the `/` for Firefox 1.
      if (name && !product && /[\/,]|^[^(]+?\)/.test(ua.slice(ua.indexOf(data + '/') + 8))) {
        // Clear name of false positives.
        name = null;
      }
      // Reassign a generic name.
      if ((data = product || manufacturer || os) &&
          (product || manufacturer || /\b(?:Android|Symbian OS|Tablet OS|webOS)\b/.test(os))) {
        name = /[a-z]+(?: Hat)?/i.exec(/\bAndroid\b/.test(os) ? os : data) + ' Browser';
      }
    }
    // Add Chrome version to description for Electron.
    else if (name == 'Electron' && (data = (/\bChrome\/([\d.]+)\b/.exec(ua) || 0)[1])) {
      description.push('Chromium ' + data);
    }
    // Detect non-Opera (Presto-based) versions (order is important).
    if (!version) {
      version = getVersion([
        '(?:Cloud9|CriOS|CrMo|Edge|Edg|EdgA|EdgiOS|FxiOS|HeadlessChrome|IEMobile|Iron|Opera ?Mini|OPiOS|OPR|Raven|SamsungBrowser|Silk(?!/[\\d.]+$)|UCBrowser|YaBrowser)',
        'Version',
        qualify(name),
        '(?:Firefox|Minefield|NetFront)'
      ]);
    }
    // Detect stubborn layout engines.
    if ((data =
          layout == 'iCab' && parseFloat(version) > 3 && 'WebKit' ||
          /\bOpera\b/.test(name) && (/\bOPR\b/.test(ua) ? 'Blink' : 'Presto') ||
          /\b(?:Midori|Nook|Safari)\b/i.test(ua) && !/^(?:Trident|EdgeHTML)$/.test(layout) && 'WebKit' ||
          !layout && /\bMSIE\b/i.test(ua) && (os == 'Mac OS' ? 'Tasman' : 'Trident') ||
          layout == 'WebKit' && /\bPlayStation\b(?! Vita\b)/i.test(name) && 'NetFront'
        )) {
      layout = [data];
    }
    // Detect Windows Phone 7 desktop mode.
    if (name == 'IE' && (data = (/; *(?:XBLWP|ZuneWP)(\d+)/i.exec(ua) || 0)[1])) {
      name += ' Mobile';
      os = 'Windows Phone ' + (/\+$/.test(data) ? data : data + '.x');
      description.unshift('desktop mode');
    }
    // Detect Windows Phone 8.x desktop mode.
    else if (/\bWPDesktop\b/i.test(ua)) {
      name = 'IE Mobile';
      os = 'Windows Phone 8.x';
      description.unshift('desktop mode');
      version || (version = (/\brv:([\d.]+)/.exec(ua) || 0)[1]);
    }
    // Detect IE 11 identifying as other browsers.
    else if (name != 'IE' && layout == 'Trident' && (data = /\brv:([\d.]+)/.exec(ua))) {
      if (name) {
        description.push('identifying as ' + name + (version ? ' ' + version : ''));
      }
      name = 'IE';
      version = data[1];
    }
    // Leverage environment features.
    if (useFeatures) {
      // Detect server-side environments.
      // Rhino has a global function while others have a global object.
      if (isHostType(context, 'global')) {
        if (java) {
          data = java.lang.System;
          arch = data.getProperty('os.arch');
          os = os || data.getProperty('os.name') + ' ' + data.getProperty('os.version');
        }
        if (rhino) {
          try {
            version = context.require('ringo/engine').version.join('.');
            name = 'RingoJS';
          } catch(e) {
            if ((data = context.system) && data.global.system == context.system) {
              name = 'Narwhal';
              os || (os = data[0].os || null);
            }
          }
          if (!name) {
            name = 'Rhino';
          }
        }
        else if (
          typeof context.process == 'object' && !context.process.browser &&
          (data = context.process)
        ) {
          if (typeof data.versions == 'object') {
            if (typeof data.versions.electron == 'string') {
              description.push('Node ' + data.versions.node);
              name = 'Electron';
              version = data.versions.electron;
            } else if (typeof data.versions.nw == 'string') {
              description.push('Chromium ' + version, 'Node ' + data.versions.node);
              name = 'NW.js';
              version = data.versions.nw;
            }
          }
          if (!name) {
            name = 'Node.js';
            arch = data.arch;
            os = data.platform;
            version = /[\d.]+/.exec(data.version);
            version = version ? version[0] : null;
          }
        }
      }
      // Detect Adobe AIR.
      else if (getClassOf((data = context.runtime)) == airRuntimeClass) {
        name = 'Adobe AIR';
        os = data.flash.system.Capabilities.os;
      }
      // Detect PhantomJS.
      else if (getClassOf((data = context.phantom)) == phantomClass) {
        name = 'PhantomJS';
        version = (data = data.version || null) && (data.major + '.' + data.minor + '.' + data.patch);
      }
      // Detect IE compatibility modes.
      else if (typeof doc.documentMode == 'number' && (data = /\bTrident\/(\d+)/i.exec(ua))) {
        // We're in compatibility mode when the Trident version + 4 doesn't
        // equal the document mode.
        version = [version, doc.documentMode];
        if ((data = +data[1] + 4) != version[1]) {
          description.push('IE ' + version[1] + ' mode');
          layout && (layout[1] = '');
          version[1] = data;
        }
        version = name == 'IE' ? String(version[1].toFixed(1)) : version[0];
      }
      // Detect IE 11 masking as other browsers.
      else if (typeof doc.documentMode == 'number' && /^(?:Chrome|Firefox)\b/.test(name)) {
        description.push('masking as ' + name + ' ' + version);
        name = 'IE';
        version = '11.0';
        layout = ['Trident'];
        os = 'Windows';
      }
      os = os && format(os);
    }
    // Detect prerelease phases.
    if (version && (data =
          /(?:[ab]|dp|pre|[ab]\d+pre)(?:\d+\+?)?$/i.exec(version) ||
          /(?:alpha|beta)(?: ?\d)?/i.exec(ua + ';' + (useFeatures && nav.appMinorVersion)) ||
          /\bMinefield\b/i.test(ua) && 'a'
        )) {
      prerelease = /b/i.test(data) ? 'beta' : 'alpha';
      version = version.replace(RegExp(data + '\\+?$'), '') +
        (prerelease == 'beta' ? beta : alpha) + (/\d+\+?/.exec(data) || '');
    }
    // Detect Firefox Mobile.
    if (name == 'Fennec' || name == 'Firefox' && /\b(?:Android|Firefox OS|KaiOS)\b/.test(os)) {
      name = 'Firefox Mobile';
    }
    // Obscure Maxthon's unreliable version.
    else if (name == 'Maxthon' && version) {
      version = version.replace(/\.[\d.]+/, '.x');
    }
    // Detect Xbox 360 and Xbox One.
    else if (/\bXbox\b/i.test(product)) {
      if (product == 'Xbox 360') {
        os = null;
      }
      if (product == 'Xbox 360' && /\bIEMobile\b/.test(ua)) {
        description.unshift('mobile mode');
      }
    }
    // Add mobile postfix.
    else if ((/^(?:Chrome|IE|Opera)$/.test(name) || name && !product && !/Browser|Mobi/.test(name)) &&
        (os == 'Windows CE' || /Mobi/i.test(ua))) {
      name += ' Mobile';
    }
    // Detect IE platform preview.
    else if (name == 'IE' && useFeatures) {
      try {
        if (context.external === null) {
          description.unshift('platform preview');
        }
      } catch(e) {
        description.unshift('embedded');
      }
    }
    // Detect BlackBerry OS version.
    // http://docs.blackberry.com/en/developers/deliverables/18169/HTTP_headers_sent_by_BB_Browser_1234911_11.jsp
    else if ((/\bBlackBerry\b/.test(product) || /\bBB10\b/.test(ua)) && (data =
          (RegExp(product.replace(/ +/g, ' *') + '/([.\\d]+)', 'i').exec(ua) || 0)[1] ||
          version
        )) {
      data = [data, /BB10/.test(ua)];
      os = (data[1] ? (product = null, manufacturer = 'BlackBerry') : 'Device Software') + ' ' + data[0];
      version = null;
    }
    // Detect Opera identifying/masking itself as another browser.
    // http://www.opera.com/support/kb/view/843/
    else if (this != forOwn && product != 'Wii' && (
          (useFeatures && opera) ||
          (/Opera/.test(name) && /\b(?:MSIE|Firefox)\b/i.test(ua)) ||
          (name == 'Firefox' && /\bOS X (?:\d+\.){2,}/.test(os)) ||
          (name == 'IE' && (
            (os && !/^Win/.test(os) && version > 5.5) ||
            /\bWindows XP\b/.test(os) && version > 8 ||
            version == 8 && !/\bTrident\b/.test(ua)
          ))
        ) && !reOpera.test((data = parse.call(forOwn, ua.replace(reOpera, '') + ';'))) && data.name) {
      // When "identifying", the UA contains both Opera and the other browser's name.
      data = 'ing as ' + data.name + ((data = data.version) ? ' ' + data : '');
      if (reOpera.test(name)) {
        if (/\bIE\b/.test(data) && os == 'Mac OS') {
          os = null;
        }
        data = 'identify' + data;
      }
      // When "masking", the UA contains only the other browser's name.
      else {
        data = 'mask' + data;
        if (operaClass) {
          name = format(operaClass.replace(/([a-z])([A-Z])/g, '$1 $2'));
        } else {
          name = 'Opera';
        }
        if (/\bIE\b/.test(data)) {
          os = null;
        }
        if (!useFeatures) {
          version = null;
        }
      }
      layout = ['Presto'];
      description.push(data);
    }
    // Detect WebKit Nightly and approximate Chrome/Safari versions.
    if ((data = (/\bAppleWebKit\/([\d.]+\+?)/i.exec(ua) || 0)[1])) {
      // Correct build number for numeric comparison.
      // (e.g. "532.5" becomes "532.05")
      data = [parseFloat(data.replace(/\.(\d)$/, '.0$1')), data];
      // Nightly builds are postfixed with a "+".
      if (name == 'Safari' && data[1].slice(-1) == '+') {
        name = 'WebKit Nightly';
        prerelease = 'alpha';
        version = data[1].slice(0, -1);
      }
      // Clear incorrect browser versions.
      else if (version == data[1] ||
          version == (data[2] = (/\bSafari\/([\d.]+\+?)/i.exec(ua) || 0)[1])) {
        version = null;
      }
      // Use the full Chrome version when available.
      data[1] = (/\b(?:Headless)?Chrome\/([\d.]+)/i.exec(ua) || 0)[1];
      // Detect Blink layout engine.
      if (data[0] == 537.36 && data[2] == 537.36 && parseFloat(data[1]) >= 28 && layout == 'WebKit') {
        layout = ['Blink'];
      }
      // Detect JavaScriptCore.
      // http://stackoverflow.com/questions/6768474/how-can-i-detect-which-javascript-engine-v8-or-jsc-is-used-at-runtime-in-androi
      if (!useFeatures || (!likeChrome && !data[1])) {
        layout && (layout[1] = 'like Safari');
        data = (data = data[0], data < 400 ? 1 : data < 500 ? 2 : data < 526 ? 3 : data < 533 ? 4 : data < 534 ? '4+' : data < 535 ? 5 : data < 537 ? 6 : data < 538 ? 7 : data < 601 ? 8 : data < 602 ? 9 : data < 604 ? 10 : data < 606 ? 11 : data < 608 ? 12 : '12');
      } else {
        layout && (layout[1] = 'like Chrome');
        data = data[1] || (data = data[0], data < 530 ? 1 : data < 532 ? 2 : data < 532.05 ? 3 : data < 533 ? 4 : data < 534.03 ? 5 : data < 534.07 ? 6 : data < 534.10 ? 7 : data < 534.13 ? 8 : data < 534.16 ? 9 : data < 534.24 ? 10 : data < 534.30 ? 11 : data < 535.01 ? 12 : data < 535.02 ? '13+' : data < 535.07 ? 15 : data < 535.11 ? 16 : data < 535.19 ? 17 : data < 536.05 ? 18 : data < 536.10 ? 19 : data < 537.01 ? 20 : data < 537.11 ? '21+' : data < 537.13 ? 23 : data < 537.18 ? 24 : data < 537.24 ? 25 : data < 537.36 ? 26 : layout != 'Blink' ? '27' : '28');
      }
      // Add the postfix of ".x" or "+" for approximate versions.
      layout && (layout[1] += ' ' + (data += typeof data == 'number' ? '.x' : /[.+]/.test(data) ? '' : '+'));
      // Obscure version for some Safari 1-2 releases.
      if (name == 'Safari' && (!version || parseInt(version) > 45)) {
        version = data;
      } else if (name == 'Chrome' && /\bHeadlessChrome/i.test(ua)) {
        description.unshift('headless');
      }
    }
    // Detect Opera desktop modes.
    if (name == 'Opera' &&  (data = /\bzbov|zvav$/.exec(os))) {
      name += ' ';
      description.unshift('desktop mode');
      if (data == 'zvav') {
        name += 'Mini';
        version = null;
      } else {
        name += 'Mobile';
      }
      os = os.replace(RegExp(' *' + data + '$'), '');
    }
    // Detect Chrome desktop mode.
    else if (name == 'Safari' && /\bChrome\b/.exec(layout && layout[1])) {
      description.unshift('desktop mode');
      name = 'Chrome Mobile';
      version = null;

      if (/\bOS X\b/.test(os)) {
        manufacturer = 'Apple';
        os = 'iOS 4.3+';
      } else {
        os = null;
      }
    }
    // Newer versions of SRWare Iron uses the Chrome tag to indicate its version number.
    else if (/\bSRWare Iron\b/.test(name) && !version) {
      version = getVersion('Chrome');
    }
    // Strip incorrect OS versions.
    if (version && version.indexOf((data = /[\d.]+$/.exec(os))) == 0 &&
        ua.indexOf('/' + data + '-') > -1) {
      os = trim(os.replace(data, ''));
    }
    // Ensure OS does not include the browser name.
    if (os && os.indexOf(name) != -1 && !RegExp(name + ' OS').test(os)) {
      os = os.replace(RegExp(' *' + qualify(name) + ' *'), '');
    }
    // Add layout engine.
    if (layout && !/\b(?:Avant|Nook)\b/.test(name) && (
        /Browser|Lunascape|Maxthon/.test(name) ||
        name != 'Safari' && /^iOS/.test(os) && /\bSafari\b/.test(layout[1]) ||
        /^(?:Adobe|Arora|Breach|Midori|Opera|Phantom|Rekonq|Rock|Samsung Internet|Sleipnir|SRWare Iron|Vivaldi|Web)/.test(name) && layout[1])) {
      // Don't add layout details to description if they are falsey.
      (data = layout[layout.length - 1]) && description.push(data);
    }
    // Combine contextual information.
    if (description.length) {
      description = ['(' + description.join('; ') + ')'];
    }
    // Append manufacturer to description.
    if (manufacturer && product && product.indexOf(manufacturer) < 0) {
      description.push('on ' + manufacturer);
    }
    // Append product to description.
    if (product) {
      description.push((/^on /.test(description[description.length - 1]) ? '' : 'on ') + product);
    }
    // Parse the OS into an object.
    if (os) {
      data = / ([\d.+]+)$/.exec(os);
      isSpecialCasedOS = data && os.charAt(os.length - data[0].length - 1) == '/';
      os = {
        'architecture': 32,
        'family': (data && !isSpecialCasedOS) ? os.replace(data[0], '') : os,
        'version': data ? data[1] : null,
        'toString': function() {
          var version = this.version;
          return this.family + ((version && !isSpecialCasedOS) ? ' ' + version : '') + (this.architecture == 64 ? ' 64-bit' : '');
        }
      };
    }
    // Add browser/OS architecture.
    if ((data = /\b(?:AMD|IA|Win|WOW|x86_|x)64\b/i.exec(arch)) && !/\bi686\b/i.test(arch)) {
      if (os) {
        os.architecture = 64;
        os.family = os.family.replace(RegExp(' *' + data), '');
      }
      if (
          name && (/\bWOW64\b/i.test(ua) ||
          (useFeatures && /\w(?:86|32)$/.test(nav.cpuClass || nav.platform) && !/\bWin64; x64\b/i.test(ua)))
      ) {
        description.unshift('32-bit');
      }
    }
    // Chrome 39 and above on OS X is always 64-bit.
    else if (
        os && /^OS X/.test(os.family) &&
        name == 'Chrome' && parseFloat(version) >= 39
    ) {
      os.architecture = 64;
    }

    ua || (ua = null);

    /*------------------------------------------------------------------------*/

    /**
     * The platform object.
     *
     * @name platform
     * @type Object
     */
    var platform = {};

    /**
     * The platform description.
     *
     * @memberOf platform
     * @type string|null
     */
    platform.description = ua;

    /**
     * The name of the browser's layout engine.
     *
     * The list of common layout engines include:
     * "Blink", "EdgeHTML", "Gecko", "Trident" and "WebKit"
     *
     * @memberOf platform
     * @type string|null
     */
    platform.layout = layout && layout[0];

    /**
     * The name of the product's manufacturer.
     *
     * The list of manufacturers include:
     * "Apple", "Archos", "Amazon", "Asus", "Barnes & Noble", "BlackBerry",
     * "Google", "HP", "HTC", "LG", "Microsoft", "Motorola", "Nintendo",
     * "Nokia", "Samsung" and "Sony"
     *
     * @memberOf platform
     * @type string|null
     */
    platform.manufacturer = manufacturer;

    /**
     * The name of the browser/environment.
     *
     * The list of common browser names include:
     * "Chrome", "Electron", "Firefox", "Firefox for iOS", "IE",
     * "Microsoft Edge", "PhantomJS", "Safari", "SeaMonkey", "Silk",
     * "Opera Mini" and "Opera"
     *
     * Mobile versions of some browsers have "Mobile" appended to their name:
     * eg. "Chrome Mobile", "Firefox Mobile", "IE Mobile" and "Opera Mobile"
     *
     * @memberOf platform
     * @type string|null
     */
    platform.name = name;

    /**
     * The alpha/beta release indicator.
     *
     * @memberOf platform
     * @type string|null
     */
    platform.prerelease = prerelease;

    /**
     * The name of the product hosting the browser.
     *
     * The list of common products include:
     *
     * "BlackBerry", "Galaxy S4", "Lumia", "iPad", "iPod", "iPhone", "Kindle",
     * "Kindle Fire", "Nexus", "Nook", "PlayBook", "TouchPad" and "Transformer"
     *
     * @memberOf platform
     * @type string|null
     */
    platform.product = product;

    /**
     * The browser's user agent string.
     *
     * @memberOf platform
     * @type string|null
     */
    platform.ua = ua;

    /**
     * The browser/environment version.
     *
     * @memberOf platform
     * @type string|null
     */
    platform.version = name && version;

    /**
     * The name of the operating system.
     *
     * @memberOf platform
     * @type Object
     */
    platform.os = os || {

      /**
       * The CPU architecture the OS is built for.
       *
       * @memberOf platform.os
       * @type number|null
       */
      'architecture': null,

      /**
       * The family of the OS.
       *
       * Common values include:
       * "Windows", "Windows Server 2008 R2 / 7", "Windows Server 2008 / Vista",
       * "Windows XP", "OS X", "Linux", "Ubuntu", "Debian", "Fedora", "Red Hat",
       * "SuSE", "Android", "iOS" and "Windows Phone"
       *
       * @memberOf platform.os
       * @type string|null
       */
      'family': null,

      /**
       * The version of the OS.
       *
       * @memberOf platform.os
       * @type string|null
       */
      'version': null,

      /**
       * Returns the OS string.
       *
       * @memberOf platform.os
       * @returns {string} The OS string.
       */
      'toString': function() { return 'null'; }
    };

    platform.parse = parse;
    platform.toString = toStringPlatform;

    if (platform.version) {
      description.unshift(version);
    }
    if (platform.name) {
      description.unshift(name);
    }
    if (os && name && !(os == String(os).split(' ')[0] && (os == name.split(' ')[0] || product))) {
      description.push(product ? '(' + os + ')' : 'on ' + os);
    }
    if (description.length) {
      platform.description = description.join(' ');
    }
    return platform;
  }

  /*--------------------------------------------------------------------------*/

  // Export platform.
  var platform = parse();

  // Some AMD build optimizers, like r.js, check for condition patterns like the following:
  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {
    // Expose platform on the global object to prevent errors when platform is
    // loaded by a script tag in the presence of an AMD loader.
    // See http://requirejs.org/docs/errors.html#mismatch for more details.
    root.platform = platform;

    // Define as an anonymous module so platform can be aliased through path mapping.
    define(function() {
      return platform;
    });
  }
  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.
  else if (freeExports && freeModule) {
    // Export for CommonJS support.
    forOwn(platform, function(value, key) {
      freeExports[key] = value;
    });
  }
  else {
    // Export to the global object.
    root.platform = platform;
  }
}.call(this));

/**
 * @license
 * lodash 3.10.1 (Custom Build) lodash.com/license | Underscore.js 1.8.3 underscorejs.org/LICENSE
 * Build: `lodash modern -o ./lodash.js`
 */
;(function(){function n(n,t){if(n!==t){var r=null===n,e=n===w,u=n===n,o=null===t,i=t===w,f=t===t;if(n>t&&!o||!u||r&&!i&&f||e&&f)return 1;if(n<t&&!r||!f||o&&!e&&u||i&&u)return-1}return 0}function t(n,t,r){for(var e=n.length,u=r?e:-1;r?u--:++u<e;)if(t(n[u],u,n))return u;return-1}function r(n,t,r){if(t!==t)return p(n,r);r-=1;for(var e=n.length;++r<e;)if(n[r]===t)return r;return-1}function e(n){return typeof n=="function"||false}function u(n){return null==n?"":n+""}function o(n,t){for(var r=-1,e=n.length;++r<e&&-1<t.indexOf(n.charAt(r)););
return r}function i(n,t){for(var r=n.length;r--&&-1<t.indexOf(n.charAt(r)););return r}function f(t,r){return n(t.a,r.a)||t.b-r.b}function a(n){return Nn[n]}function c(n){return Tn[n]}function l(n,t,r){return t?n=Bn[n]:r&&(n=Dn[n]),"\\"+n}function s(n){return"\\"+Dn[n]}function p(n,t,r){var e=n.length;for(t+=r?0:-1;r?t--:++t<e;){var u=n[t];if(u!==u)return t}return-1}function h(n){return!!n&&typeof n=="object"}function _(n){return 160>=n&&9<=n&&13>=n||32==n||160==n||5760==n||6158==n||8192<=n&&(8202>=n||8232==n||8233==n||8239==n||8287==n||12288==n||65279==n);
}function v(n,t){for(var r=-1,e=n.length,u=-1,o=[];++r<e;)n[r]===t&&(n[r]=z,o[++u]=r);return o}function g(n){for(var t=-1,r=n.length;++t<r&&_(n.charCodeAt(t)););return t}function y(n){for(var t=n.length;t--&&_(n.charCodeAt(t)););return t}function d(n){return Ln[n]}function m(_){function Nn(n){if(h(n)&&!(Oo(n)||n instanceof zn)){if(n instanceof Ln)return n;if(nu.call(n,"__chain__")&&nu.call(n,"__wrapped__"))return Mr(n)}return new Ln(n)}function Tn(){}function Ln(n,t,r){this.__wrapped__=n,this.__actions__=r||[],
this.__chain__=!!t}function zn(n){this.__wrapped__=n,this.__actions__=[],this.__dir__=1,this.__filtered__=false,this.__iteratees__=[],this.__takeCount__=Ru,this.__views__=[]}function Bn(){this.__data__={}}function Dn(n){var t=n?n.length:0;for(this.data={hash:gu(null),set:new lu};t--;)this.push(n[t])}function Mn(n,t){var r=n.data;return(typeof t=="string"||ge(t)?r.set.has(t):r.hash[t])?0:-1}function qn(n,t){var r=-1,e=n.length;for(t||(t=Be(e));++r<e;)t[r]=n[r];return t}function Pn(n,t){for(var r=-1,e=n.length;++r<e&&false!==t(n[r],r,n););
return n}function Kn(n,t){for(var r=-1,e=n.length;++r<e;)if(!t(n[r],r,n))return false;return true}function Vn(n,t){for(var r=-1,e=n.length,u=-1,o=[];++r<e;){var i=n[r];t(i,r,n)&&(o[++u]=i)}return o}function Gn(n,t){for(var r=-1,e=n.length,u=Be(e);++r<e;)u[r]=t(n[r],r,n);return u}function Jn(n,t){for(var r=-1,e=t.length,u=n.length;++r<e;)n[u+r]=t[r];return n}function Xn(n,t,r,e){var u=-1,o=n.length;for(e&&o&&(r=n[++u]);++u<o;)r=t(r,n[u],u,n);return r}function Hn(n,t){for(var r=-1,e=n.length;++r<e;)if(t(n[r],r,n))return true;
return false}function Qn(n,t,r,e){return n!==w&&nu.call(e,r)?n:t}function nt(n,t,r){for(var e=-1,u=zo(t),o=u.length;++e<o;){var i=u[e],f=n[i],a=r(f,t[i],i,n,t);(a===a?a===f:f!==f)&&(f!==w||i in n)||(n[i]=a)}return n}function tt(n,t){return null==t?n:et(t,zo(t),n)}function rt(n,t){for(var r=-1,e=null==n,u=!e&&Er(n),o=u?n.length:0,i=t.length,f=Be(i);++r<i;){var a=t[r];f[r]=u?Cr(a,o)?n[a]:w:e?w:n[a]}return f}function et(n,t,r){r||(r={});for(var e=-1,u=t.length;++e<u;){var o=t[e];r[o]=n[o]}return r}function ut(n,t,r){
var e=typeof n;return"function"==e?t===w?n:Bt(n,t,r):null==n?Fe:"object"==e?bt(n):t===w?ze(n):xt(n,t)}function ot(n,t,r,e,u,o,i){var f;if(r&&(f=u?r(n,e,u):r(n)),f!==w)return f;if(!ge(n))return n;if(e=Oo(n)){if(f=kr(n),!t)return qn(n,f)}else{var a=ru.call(n),c=a==K;if(a!=Z&&a!=B&&(!c||u))return Fn[a]?Rr(n,a,t):u?n:{};if(f=Ir(c?{}:n),!t)return tt(f,n)}for(o||(o=[]),i||(i=[]),u=o.length;u--;)if(o[u]==n)return i[u];return o.push(n),i.push(f),(e?Pn:_t)(n,function(e,u){f[u]=ot(e,t,r,u,n,o,i)}),f}function it(n,t,r){
if(typeof n!="function")throw new Ge(L);return su(function(){n.apply(w,r)},t)}function ft(n,t){var e=n?n.length:0,u=[];if(!e)return u;var o=-1,i=xr(),f=i===r,a=f&&t.length>=F&&gu&&lu?new Dn(t):null,c=t.length;a&&(i=Mn,f=false,t=a);n:for(;++o<e;)if(a=n[o],f&&a===a){for(var l=c;l--;)if(t[l]===a)continue n;u.push(a)}else 0>i(t,a,0)&&u.push(a);return u}function at(n,t){var r=true;return Su(n,function(n,e,u){return r=!!t(n,e,u)}),r}function ct(n,t,r,e){var u=e,o=u;return Su(n,function(n,i,f){i=+t(n,i,f),(r(i,u)||i===e&&i===o)&&(u=i,
o=n)}),o}function lt(n,t){var r=[];return Su(n,function(n,e,u){t(n,e,u)&&r.push(n)}),r}function st(n,t,r,e){var u;return r(n,function(n,r,o){return t(n,r,o)?(u=e?r:n,false):void 0}),u}function pt(n,t,r,e){e||(e=[]);for(var u=-1,o=n.length;++u<o;){var i=n[u];h(i)&&Er(i)&&(r||Oo(i)||pe(i))?t?pt(i,t,r,e):Jn(e,i):r||(e[e.length]=i)}return e}function ht(n,t){Nu(n,t,Re)}function _t(n,t){return Nu(n,t,zo)}function vt(n,t){return Tu(n,t,zo)}function gt(n,t){for(var r=-1,e=t.length,u=-1,o=[];++r<e;){var i=t[r];
ve(n[i])&&(o[++u]=i)}return o}function yt(n,t,r){if(null!=n){r!==w&&r in Br(n)&&(t=[r]),r=0;for(var e=t.length;null!=n&&r<e;)n=n[t[r++]];return r&&r==e?n:w}}function dt(n,t,r,e,u,o){if(n===t)n=true;else if(null==n||null==t||!ge(n)&&!h(t))n=n!==n&&t!==t;else n:{var i=dt,f=Oo(n),a=Oo(t),c=D,l=D;f||(c=ru.call(n),c==B?c=Z:c!=Z&&(f=xe(n))),a||(l=ru.call(t),l==B?l=Z:l!=Z&&xe(t));var s=c==Z,a=l==Z,l=c==l;if(!l||f||s){if(!e&&(c=s&&nu.call(n,"__wrapped__"),a=a&&nu.call(t,"__wrapped__"),c||a)){n=i(c?n.value():n,a?t.value():t,r,e,u,o);
break n}if(l){for(u||(u=[]),o||(o=[]),c=u.length;c--;)if(u[c]==n){n=o[c]==t;break n}u.push(n),o.push(t),n=(f?yr:mr)(n,t,i,r,e,u,o),u.pop(),o.pop()}else n=false}else n=dr(n,t,c)}return n}function mt(n,t,r){var e=t.length,u=e,o=!r;if(null==n)return!u;for(n=Br(n);e--;){var i=t[e];if(o&&i[2]?i[1]!==n[i[0]]:!(i[0]in n))return false}for(;++e<u;){var i=t[e],f=i[0],a=n[f],c=i[1];if(o&&i[2]){if(a===w&&!(f in n))return false}else if(i=r?r(a,c,f):w,i===w?!dt(c,a,r,true):!i)return false}return true}function wt(n,t){var r=-1,e=Er(n)?Be(n.length):[];
return Su(n,function(n,u,o){e[++r]=t(n,u,o)}),e}function bt(n){var t=Ar(n);if(1==t.length&&t[0][2]){var r=t[0][0],e=t[0][1];return function(n){return null==n?false:n[r]===e&&(e!==w||r in Br(n))}}return function(n){return mt(n,t)}}function xt(n,t){var r=Oo(n),e=Wr(n)&&t===t&&!ge(t),u=n+"";return n=Dr(n),function(o){if(null==o)return false;var i=u;if(o=Br(o),!(!r&&e||i in o)){if(o=1==n.length?o:yt(o,Et(n,0,-1)),null==o)return false;i=Zr(n),o=Br(o)}return o[i]===t?t!==w||i in o:dt(t,o[i],w,true)}}function At(n,t,r,e,u){
if(!ge(n))return n;var o=Er(t)&&(Oo(t)||xe(t)),i=o?w:zo(t);return Pn(i||t,function(f,a){if(i&&(a=f,f=t[a]),h(f)){e||(e=[]),u||(u=[]);n:{for(var c=a,l=e,s=u,p=l.length,_=t[c];p--;)if(l[p]==_){n[c]=s[p];break n}var p=n[c],v=r?r(p,_,c,n,t):w,g=v===w;g&&(v=_,Er(_)&&(Oo(_)||xe(_))?v=Oo(p)?p:Er(p)?qn(p):[]:me(_)||pe(_)?v=pe(p)?ke(p):me(p)?p:{}:g=false),l.push(_),s.push(v),g?n[c]=At(v,_,r,l,s):(v===v?v!==p:p===p)&&(n[c]=v)}}else c=n[a],l=r?r(c,f,a,n,t):w,(s=l===w)&&(l=f),l===w&&(!o||a in n)||!s&&(l===l?l===c:c!==c)||(n[a]=l);
}),n}function jt(n){return function(t){return null==t?w:t[n]}}function kt(n){var t=n+"";return n=Dr(n),function(r){return yt(r,n,t)}}function It(n,t){for(var r=n?t.length:0;r--;){var e=t[r];if(e!=u&&Cr(e)){var u=e;pu.call(n,e,1)}}}function Rt(n,t){return n+yu(ku()*(t-n+1))}function Ot(n,t,r,e,u){return u(n,function(n,u,o){r=e?(e=false,n):t(r,n,u,o)}),r}function Et(n,t,r){var e=-1,u=n.length;for(t=null==t?0:+t||0,0>t&&(t=-t>u?0:u+t),r=r===w||r>u?u:+r||0,0>r&&(r+=u),u=t>r?0:r-t>>>0,t>>>=0,r=Be(u);++e<u;)r[e]=n[e+t];
return r}function Ct(n,t){var r;return Su(n,function(n,e,u){return r=t(n,e,u),!r}),!!r}function Ut(n,t){var r=n.length;for(n.sort(t);r--;)n[r]=n[r].c;return n}function Wt(t,r,e){var u=wr(),o=-1;return r=Gn(r,function(n){return u(n)}),t=wt(t,function(n){return{a:Gn(r,function(t){return t(n)}),b:++o,c:n}}),Ut(t,function(t,r){var u;n:{for(var o=-1,i=t.a,f=r.a,a=i.length,c=e.length;++o<a;)if(u=n(i[o],f[o])){if(o>=c)break n;o=e[o],u*="asc"===o||true===o?1:-1;break n}u=t.b-r.b}return u})}function $t(n,t){
var r=0;return Su(n,function(n,e,u){r+=+t(n,e,u)||0}),r}function St(n,t){var e=-1,u=xr(),o=n.length,i=u===r,f=i&&o>=F,a=f&&gu&&lu?new Dn(void 0):null,c=[];a?(u=Mn,i=false):(f=false,a=t?[]:c);n:for(;++e<o;){var l=n[e],s=t?t(l,e,n):l;if(i&&l===l){for(var p=a.length;p--;)if(a[p]===s)continue n;t&&a.push(s),c.push(l)}else 0>u(a,s,0)&&((t||f)&&a.push(s),c.push(l))}return c}function Ft(n,t){for(var r=-1,e=t.length,u=Be(e);++r<e;)u[r]=n[t[r]];return u}function Nt(n,t,r,e){for(var u=n.length,o=e?u:-1;(e?o--:++o<u)&&t(n[o],o,n););
return r?Et(n,e?0:o,e?o+1:u):Et(n,e?o+1:0,e?u:o)}function Tt(n,t){var r=n;r instanceof zn&&(r=r.value());for(var e=-1,u=t.length;++e<u;)var o=t[e],r=o.func.apply(o.thisArg,Jn([r],o.args));return r}function Lt(n,t,r){var e=0,u=n?n.length:e;if(typeof t=="number"&&t===t&&u<=Eu){for(;e<u;){var o=e+u>>>1,i=n[o];(r?i<=t:i<t)&&null!==i?e=o+1:u=o}return u}return zt(n,t,Fe,r)}function zt(n,t,r,e){t=r(t);for(var u=0,o=n?n.length:0,i=t!==t,f=null===t,a=t===w;u<o;){var c=yu((u+o)/2),l=r(n[c]),s=l!==w,p=l===l;
(i?p||e:f?p&&s&&(e||null!=l):a?p&&(e||s):null==l?0:e?l<=t:l<t)?u=c+1:o=c}return xu(o,Ou)}function Bt(n,t,r){if(typeof n!="function")return Fe;if(t===w)return n;switch(r){case 1:return function(r){return n.call(t,r)};case 3:return function(r,e,u){return n.call(t,r,e,u)};case 4:return function(r,e,u,o){return n.call(t,r,e,u,o)};case 5:return function(r,e,u,o,i){return n.call(t,r,e,u,o,i)}}return function(){return n.apply(t,arguments)}}function Dt(n){var t=new ou(n.byteLength);return new hu(t).set(new hu(n)),
t}function Mt(n,t,r){for(var e=r.length,u=-1,o=bu(n.length-e,0),i=-1,f=t.length,a=Be(f+o);++i<f;)a[i]=t[i];for(;++u<e;)a[r[u]]=n[u];for(;o--;)a[i++]=n[u++];return a}function qt(n,t,r){for(var e=-1,u=r.length,o=-1,i=bu(n.length-u,0),f=-1,a=t.length,c=Be(i+a);++o<i;)c[o]=n[o];for(i=o;++f<a;)c[i+f]=t[f];for(;++e<u;)c[i+r[e]]=n[o++];return c}function Pt(n,t){return function(r,e,u){var o=t?t():{};if(e=wr(e,u,3),Oo(r)){u=-1;for(var i=r.length;++u<i;){var f=r[u];n(o,f,e(f,u,r),r)}}else Su(r,function(t,r,u){
n(o,t,e(t,r,u),u)});return o}}function Kt(n){return le(function(t,r){var e=-1,u=null==t?0:r.length,o=2<u?r[u-2]:w,i=2<u?r[2]:w,f=1<u?r[u-1]:w;for(typeof o=="function"?(o=Bt(o,f,5),u-=2):(o=typeof f=="function"?f:w,u-=o?1:0),i&&Ur(r[0],r[1],i)&&(o=3>u?w:o,u=1);++e<u;)(i=r[e])&&n(t,i,o);return t})}function Vt(n,t){return function(r,e){var u=r?Bu(r):0;if(!Sr(u))return n(r,e);for(var o=t?u:-1,i=Br(r);(t?o--:++o<u)&&false!==e(i[o],o,i););return r}}function Zt(n){return function(t,r,e){var u=Br(t);e=e(t);for(var o=e.length,i=n?o:-1;n?i--:++i<o;){
var f=e[i];if(false===r(u[f],f,u))break}return t}}function Yt(n,t){function r(){return(this&&this!==Zn&&this instanceof r?e:n).apply(t,arguments)}var e=Jt(n);return r}function Gt(n){return function(t){var r=-1;t=$e(Ce(t));for(var e=t.length,u="";++r<e;)u=n(u,t[r],r);return u}}function Jt(n){return function(){var t=arguments;switch(t.length){case 0:return new n;case 1:return new n(t[0]);case 2:return new n(t[0],t[1]);case 3:return new n(t[0],t[1],t[2]);case 4:return new n(t[0],t[1],t[2],t[3]);case 5:
return new n(t[0],t[1],t[2],t[3],t[4]);case 6:return new n(t[0],t[1],t[2],t[3],t[4],t[5]);case 7:return new n(t[0],t[1],t[2],t[3],t[4],t[5],t[6])}var r=$u(n.prototype),t=n.apply(r,t);return ge(t)?t:r}}function Xt(n){function t(r,e,u){return u&&Ur(r,e,u)&&(e=w),r=gr(r,n,w,w,w,w,w,e),r.placeholder=t.placeholder,r}return t}function Ht(n,t){return le(function(r){var e=r[0];return null==e?e:(r.push(t),n.apply(w,r))})}function Qt(n,t){return function(r,e,u){if(u&&Ur(r,e,u)&&(e=w),e=wr(e,u,3),1==e.length){
u=r=Oo(r)?r:zr(r);for(var o=e,i=-1,f=u.length,a=t,c=a;++i<f;){var l=u[i],s=+o(l);n(s,a)&&(a=s,c=l)}if(u=c,!r.length||u!==t)return u}return ct(r,e,n,t)}}function nr(n,r){return function(e,u,o){return u=wr(u,o,3),Oo(e)?(u=t(e,u,r),-1<u?e[u]:w):st(e,u,n)}}function tr(n){return function(r,e,u){return r&&r.length?(e=wr(e,u,3),t(r,e,n)):-1}}function rr(n){return function(t,r,e){return r=wr(r,e,3),st(t,r,n,true)}}function er(n){return function(){for(var t,r=arguments.length,e=n?r:-1,u=0,o=Be(r);n?e--:++e<r;){
var i=o[u++]=arguments[e];if(typeof i!="function")throw new Ge(L);!t&&Ln.prototype.thru&&"wrapper"==br(i)&&(t=new Ln([],true))}for(e=t?-1:r;++e<r;){var i=o[e],u=br(i),f="wrapper"==u?zu(i):w;t=f&&$r(f[0])&&f[1]==(E|k|R|C)&&!f[4].length&&1==f[9]?t[br(f[0])].apply(t,f[3]):1==i.length&&$r(i)?t[u]():t.thru(i)}return function(){var n=arguments,e=n[0];if(t&&1==n.length&&Oo(e)&&e.length>=F)return t.plant(e).value();for(var u=0,n=r?o[u].apply(this,n):e;++u<r;)n=o[u].call(this,n);return n}}}function ur(n,t){
return function(r,e,u){return typeof e=="function"&&u===w&&Oo(r)?n(r,e):t(r,Bt(e,u,3))}}function or(n){return function(t,r,e){return(typeof r!="function"||e!==w)&&(r=Bt(r,e,3)),n(t,r,Re)}}function ir(n){return function(t,r,e){return(typeof r!="function"||e!==w)&&(r=Bt(r,e,3)),n(t,r)}}function fr(n){return function(t,r,e){var u={};return r=wr(r,e,3),_t(t,function(t,e,o){o=r(t,e,o),e=n?o:e,t=n?t:o,u[e]=t}),u}}function ar(n){return function(t,r,e){return t=u(t),(n?t:"")+pr(t,r,e)+(n?"":t)}}function cr(n){
var t=le(function(r,e){var u=v(e,t.placeholder);return gr(r,n,w,e,u)});return t}function lr(n,t){return function(r,e,u,o){var i=3>arguments.length;return typeof e=="function"&&o===w&&Oo(r)?n(r,e,u,i):Ot(r,wr(e,o,4),u,i,t)}}function sr(n,t,r,e,u,o,i,f,a,c){function l(){for(var m=arguments.length,b=m,j=Be(m);b--;)j[b]=arguments[b];if(e&&(j=Mt(j,e,u)),o&&(j=qt(j,o,i)),_||y){var b=l.placeholder,k=v(j,b),m=m-k.length;if(m<c){var I=f?qn(f):w,m=bu(c-m,0),E=_?k:w,k=_?w:k,C=_?j:w,j=_?w:j;return t|=_?R:O,t&=~(_?O:R),
g||(t&=~(x|A)),j=[n,t,r,C,E,j,k,I,a,m],I=sr.apply(w,j),$r(n)&&Du(I,j),I.placeholder=b,I}}if(b=p?r:this,I=h?b[n]:n,f)for(m=j.length,E=xu(f.length,m),k=qn(j);E--;)C=f[E],j[E]=Cr(C,m)?k[C]:w;return s&&a<j.length&&(j.length=a),this&&this!==Zn&&this instanceof l&&(I=d||Jt(n)),I.apply(b,j)}var s=t&E,p=t&x,h=t&A,_=t&k,g=t&j,y=t&I,d=h?w:Jt(n);return l}function pr(n,t,r){return n=n.length,t=+t,n<t&&mu(t)?(t-=n,r=null==r?" ":r+"",Ue(r,vu(t/r.length)).slice(0,t)):""}function hr(n,t,r,e){function u(){for(var t=-1,f=arguments.length,a=-1,c=e.length,l=Be(c+f);++a<c;)l[a]=e[a];
for(;f--;)l[a++]=arguments[++t];return(this&&this!==Zn&&this instanceof u?i:n).apply(o?r:this,l)}var o=t&x,i=Jt(n);return u}function _r(n){var t=Pe[n];return function(n,r){return(r=r===w?0:+r||0)?(r=au(10,r),t(n*r)/r):t(n)}}function vr(n){return function(t,r,e,u){var o=wr(e);return null==e&&o===ut?Lt(t,r,n):zt(t,r,o(e,u,1),n)}}function gr(n,t,r,e,u,o,i,f){var a=t&A;if(!a&&typeof n!="function")throw new Ge(L);var c=e?e.length:0;if(c||(t&=~(R|O),e=u=w),c-=u?u.length:0,t&O){var l=e,s=u;e=u=w}var p=a?w:zu(n);
return r=[n,t,r,e,u,l,s,o,i,f],p&&(e=r[1],t=p[1],f=e|t,u=t==E&&e==k||t==E&&e==C&&r[7].length<=p[8]||t==(E|C)&&e==k,(f<E||u)&&(t&x&&(r[2]=p[2],f|=e&x?0:j),(e=p[3])&&(u=r[3],r[3]=u?Mt(u,e,p[4]):qn(e),r[4]=u?v(r[3],z):qn(p[4])),(e=p[5])&&(u=r[5],r[5]=u?qt(u,e,p[6]):qn(e),r[6]=u?v(r[5],z):qn(p[6])),(e=p[7])&&(r[7]=qn(e)),t&E&&(r[8]=null==r[8]?p[8]:xu(r[8],p[8])),null==r[9]&&(r[9]=p[9]),r[0]=p[0],r[1]=f),t=r[1],f=r[9]),r[9]=null==f?a?0:n.length:bu(f-c,0)||0,(p?Lu:Du)(t==x?Yt(r[0],r[2]):t!=R&&t!=(x|R)||r[4].length?sr.apply(w,r):hr.apply(w,r),r);
}function yr(n,t,r,e,u,o,i){var f=-1,a=n.length,c=t.length;if(a!=c&&(!u||c<=a))return false;for(;++f<a;){var l=n[f],c=t[f],s=e?e(u?c:l,u?l:c,f):w;if(s!==w){if(s)continue;return false}if(u){if(!Hn(t,function(n){return l===n||r(l,n,e,u,o,i)}))return false}else if(l!==c&&!r(l,c,e,u,o,i))return false}return true}function dr(n,t,r){switch(r){case M:case q:return+n==+t;case P:return n.name==t.name&&n.message==t.message;case V:return n!=+n?t!=+t:n==+t;case Y:case G:return n==t+""}return false}function mr(n,t,r,e,u,o,i){var f=zo(n),a=f.length,c=zo(t).length;
if(a!=c&&!u)return false;for(c=a;c--;){var l=f[c];if(!(u?l in t:nu.call(t,l)))return false}for(var s=u;++c<a;){var l=f[c],p=n[l],h=t[l],_=e?e(u?h:p,u?p:h,l):w;if(_===w?!r(p,h,e,u,o,i):!_)return false;s||(s="constructor"==l)}return s||(r=n.constructor,e=t.constructor,!(r!=e&&"constructor"in n&&"constructor"in t)||typeof r=="function"&&r instanceof r&&typeof e=="function"&&e instanceof e)?true:false}function wr(n,t,r){var e=Nn.callback||Se,e=e===Se?ut:e;return r?e(n,t,r):e}function br(n){for(var t=n.name+"",r=Wu[t],e=r?r.length:0;e--;){
var u=r[e],o=u.func;if(null==o||o==n)return u.name}return t}function xr(n,t,e){var u=Nn.indexOf||Vr,u=u===Vr?r:u;return n?u(n,t,e):u}function Ar(n){n=Oe(n);for(var t=n.length;t--;){var r=n[t][1];n[t][2]=r===r&&!ge(r)}return n}function jr(n,t){var r=null==n?w:n[t];return ye(r)?r:w}function kr(n){var t=n.length,r=new n.constructor(t);return t&&"string"==typeof n[0]&&nu.call(n,"index")&&(r.index=n.index,r.input=n.input),r}function Ir(n){return n=n.constructor,typeof n=="function"&&n instanceof n||(n=Ve),
new n}function Rr(n,t,r){var e=n.constructor;switch(t){case J:return Dt(n);case M:case q:return new e(+n);case X:case H:case Q:case nn:case tn:case rn:case en:case un:case on:return t=n.buffer,new e(r?Dt(t):t,n.byteOffset,n.length);case V:case G:return new e(n);case Y:var u=new e(n.source,kn.exec(n));u.lastIndex=n.lastIndex}return u}function Or(n,t,r){return null==n||Wr(t,n)||(t=Dr(t),n=1==t.length?n:yt(n,Et(t,0,-1)),t=Zr(t)),t=null==n?n:n[t],null==t?w:t.apply(n,r)}function Er(n){return null!=n&&Sr(Bu(n));
}function Cr(n,t){return n=typeof n=="number"||On.test(n)?+n:-1,t=null==t?Cu:t,-1<n&&0==n%1&&n<t}function Ur(n,t,r){if(!ge(r))return false;var e=typeof t;return("number"==e?Er(r)&&Cr(t,r.length):"string"==e&&t in r)?(t=r[t],n===n?n===t:t!==t):false}function Wr(n,t){var r=typeof n;return"string"==r&&dn.test(n)||"number"==r?true:Oo(n)?false:!yn.test(n)||null!=t&&n in Br(t)}function $r(n){var t=br(n),r=Nn[t];return typeof r=="function"&&t in zn.prototype?n===r?true:(t=zu(r),!!t&&n===t[0]):false}function Sr(n){return typeof n=="number"&&-1<n&&0==n%1&&n<=Cu;
}function Fr(n,t){return n===w?t:Eo(n,t,Fr)}function Nr(n,t){n=Br(n);for(var r=-1,e=t.length,u={};++r<e;){var o=t[r];o in n&&(u[o]=n[o])}return u}function Tr(n,t){var r={};return ht(n,function(n,e,u){t(n,e,u)&&(r[e]=n)}),r}function Lr(n){for(var t=Re(n),r=t.length,e=r&&n.length,u=!!e&&Sr(e)&&(Oo(n)||pe(n)),o=-1,i=[];++o<r;){var f=t[o];(u&&Cr(f,e)||nu.call(n,f))&&i.push(f)}return i}function zr(n){return null==n?[]:Er(n)?ge(n)?n:Ve(n):Ee(n)}function Br(n){return ge(n)?n:Ve(n)}function Dr(n){if(Oo(n))return n;
var t=[];return u(n).replace(mn,function(n,r,e,u){t.push(e?u.replace(An,"$1"):r||n)}),t}function Mr(n){return n instanceof zn?n.clone():new Ln(n.__wrapped__,n.__chain__,qn(n.__actions__))}function qr(n,t,r){return n&&n.length?((r?Ur(n,t,r):null==t)&&(t=1),Et(n,0>t?0:t)):[]}function Pr(n,t,r){var e=n?n.length:0;return e?((r?Ur(n,t,r):null==t)&&(t=1),t=e-(+t||0),Et(n,0,0>t?0:t)):[]}function Kr(n){return n?n[0]:w}function Vr(n,t,e){var u=n?n.length:0;if(!u)return-1;if(typeof e=="number")e=0>e?bu(u+e,0):e;else if(e)return e=Lt(n,t),
e<u&&(t===t?t===n[e]:n[e]!==n[e])?e:-1;return r(n,t,e||0)}function Zr(n){var t=n?n.length:0;return t?n[t-1]:w}function Yr(n){return qr(n,1)}function Gr(n,t,e,u){if(!n||!n.length)return[];null!=t&&typeof t!="boolean"&&(u=e,e=Ur(n,t,u)?w:t,t=false);var o=wr();if((null!=e||o!==ut)&&(e=o(e,u,3)),t&&xr()===r){t=e;var i;e=-1,u=n.length;for(var o=-1,f=[];++e<u;){var a=n[e],c=t?t(a,e,n):a;e&&i===c||(i=c,f[++o]=a)}n=f}else n=St(n,e);return n}function Jr(n){if(!n||!n.length)return[];var t=-1,r=0;n=Vn(n,function(n){
return Er(n)?(r=bu(n.length,r),true):void 0});for(var e=Be(r);++t<r;)e[t]=Gn(n,jt(t));return e}function Xr(n,t,r){return n&&n.length?(n=Jr(n),null==t?n:(t=Bt(t,r,4),Gn(n,function(n){return Xn(n,t,w,true)}))):[]}function Hr(n,t){var r=-1,e=n?n.length:0,u={};for(!e||t||Oo(n[0])||(t=[]);++r<e;){var o=n[r];t?u[o]=t[r]:o&&(u[o[0]]=o[1])}return u}function Qr(n){return n=Nn(n),n.__chain__=true,n}function ne(n,t,r){return t.call(r,n)}function te(n,t,r){var e=Oo(n)?Kn:at;return r&&Ur(n,t,r)&&(t=w),(typeof t!="function"||r!==w)&&(t=wr(t,r,3)),
e(n,t)}function re(n,t,r){var e=Oo(n)?Vn:lt;return t=wr(t,r,3),e(n,t)}function ee(n,t,r,e){var u=n?Bu(n):0;return Sr(u)||(n=Ee(n),u=n.length),r=typeof r!="number"||e&&Ur(t,r,e)?0:0>r?bu(u+r,0):r||0,typeof n=="string"||!Oo(n)&&be(n)?r<=u&&-1<n.indexOf(t,r):!!u&&-1<xr(n,t,r)}function ue(n,t,r){var e=Oo(n)?Gn:wt;return t=wr(t,r,3),e(n,t)}function oe(n,t,r){if(r?Ur(n,t,r):null==t){n=zr(n);var e=n.length;return 0<e?n[Rt(0,e-1)]:w}r=-1,n=je(n);var e=n.length,u=e-1;for(t=xu(0>t?0:+t||0,e);++r<t;){var e=Rt(r,u),o=n[e];
n[e]=n[r],n[r]=o}return n.length=t,n}function ie(n,t,r){var e=Oo(n)?Hn:Ct;return r&&Ur(n,t,r)&&(t=w),(typeof t!="function"||r!==w)&&(t=wr(t,r,3)),e(n,t)}function fe(n,t){var r;if(typeof t!="function"){if(typeof n!="function")throw new Ge(L);var e=n;n=t,t=e}return function(){return 0<--n&&(r=t.apply(this,arguments)),1>=n&&(t=w),r}}function ae(n,t,r){function e(t,r){r&&iu(r),a=p=h=w,t&&(_=ho(),c=n.apply(s,f),p||a||(f=s=w))}function u(){var n=t-(ho()-l);0>=n||n>t?e(h,a):p=su(u,n)}function o(){e(g,p);
}function i(){if(f=arguments,l=ho(),s=this,h=g&&(p||!y),false===v)var r=y&&!p;else{a||y||(_=l);var e=v-(l-_),i=0>=e||e>v;i?(a&&(a=iu(a)),_=l,c=n.apply(s,f)):a||(a=su(o,e))}return i&&p?p=iu(p):p||t===v||(p=su(u,t)),r&&(i=true,c=n.apply(s,f)),!i||p||a||(f=s=w),c}var f,a,c,l,s,p,h,_=0,v=false,g=true;if(typeof n!="function")throw new Ge(L);if(t=0>t?0:+t||0,true===r)var y=true,g=false;else ge(r)&&(y=!!r.leading,v="maxWait"in r&&bu(+r.maxWait||0,t),g="trailing"in r?!!r.trailing:g);return i.cancel=function(){p&&iu(p),a&&iu(a),
_=0,a=p=h=w},i}function ce(n,t){function r(){var e=arguments,u=t?t.apply(this,e):e[0],o=r.cache;return o.has(u)?o.get(u):(e=n.apply(this,e),r.cache=o.set(u,e),e)}if(typeof n!="function"||t&&typeof t!="function")throw new Ge(L);return r.cache=new ce.Cache,r}function le(n,t){if(typeof n!="function")throw new Ge(L);return t=bu(t===w?n.length-1:+t||0,0),function(){for(var r=arguments,e=-1,u=bu(r.length-t,0),o=Be(u);++e<u;)o[e]=r[t+e];switch(t){case 0:return n.call(this,o);case 1:return n.call(this,r[0],o);
case 2:return n.call(this,r[0],r[1],o)}for(u=Be(t+1),e=-1;++e<t;)u[e]=r[e];return u[t]=o,n.apply(this,u)}}function se(n,t){return n>t}function pe(n){return h(n)&&Er(n)&&nu.call(n,"callee")&&!cu.call(n,"callee")}function he(n,t,r,e){return e=(r=typeof r=="function"?Bt(r,e,3):w)?r(n,t):w,e===w?dt(n,t,r):!!e}function _e(n){return h(n)&&typeof n.message=="string"&&ru.call(n)==P}function ve(n){return ge(n)&&ru.call(n)==K}function ge(n){var t=typeof n;return!!n&&("object"==t||"function"==t)}function ye(n){
return null==n?false:ve(n)?uu.test(Qe.call(n)):h(n)&&Rn.test(n)}function de(n){return typeof n=="number"||h(n)&&ru.call(n)==V}function me(n){var t;if(!h(n)||ru.call(n)!=Z||pe(n)||!(nu.call(n,"constructor")||(t=n.constructor,typeof t!="function"||t instanceof t)))return false;var r;return ht(n,function(n,t){r=t}),r===w||nu.call(n,r)}function we(n){return ge(n)&&ru.call(n)==Y}function be(n){return typeof n=="string"||h(n)&&ru.call(n)==G}function xe(n){return h(n)&&Sr(n.length)&&!!Sn[ru.call(n)]}function Ae(n,t){
return n<t}function je(n){var t=n?Bu(n):0;return Sr(t)?t?qn(n):[]:Ee(n)}function ke(n){return et(n,Re(n))}function Ie(n){return gt(n,Re(n))}function Re(n){if(null==n)return[];ge(n)||(n=Ve(n));for(var t=n.length,t=t&&Sr(t)&&(Oo(n)||pe(n))&&t||0,r=n.constructor,e=-1,r=typeof r=="function"&&r.prototype===n,u=Be(t),o=0<t;++e<t;)u[e]=e+"";for(var i in n)o&&Cr(i,t)||"constructor"==i&&(r||!nu.call(n,i))||u.push(i);return u}function Oe(n){n=Br(n);for(var t=-1,r=zo(n),e=r.length,u=Be(e);++t<e;){var o=r[t];
u[t]=[o,n[o]]}return u}function Ee(n){return Ft(n,zo(n))}function Ce(n){return(n=u(n))&&n.replace(En,a).replace(xn,"")}function Ue(n,t){var r="";if(n=u(n),t=+t,1>t||!n||!mu(t))return r;do t%2&&(r+=n),t=yu(t/2),n+=n;while(t);return r}function We(n,t,r){var e=n;return(n=u(n))?(r?Ur(e,t,r):null==t)?n.slice(g(n),y(n)+1):(t+="",n.slice(o(n,t),i(n,t)+1)):n}function $e(n,t,r){return r&&Ur(n,t,r)&&(t=w),n=u(n),n.match(t||Wn)||[]}function Se(n,t,r){return r&&Ur(n,t,r)&&(t=w),h(n)?Ne(n):ut(n,t)}function Fe(n){
return n}function Ne(n){return bt(ot(n,true))}function Te(n,t,r){if(null==r){var e=ge(t),u=e?zo(t):w;((u=u&&u.length?gt(t,u):w)?u.length:e)||(u=false,r=t,t=n,n=this)}u||(u=gt(t,zo(t)));var o=true,e=-1,i=ve(n),f=u.length;false===r?o=false:ge(r)&&"chain"in r&&(o=r.chain);for(;++e<f;){r=u[e];var a=t[r];n[r]=a,i&&(n.prototype[r]=function(t){return function(){var r=this.__chain__;if(o||r){var e=n(this.__wrapped__);return(e.__actions__=qn(this.__actions__)).push({func:t,args:arguments,thisArg:n}),e.__chain__=r,e}return t.apply(n,Jn([this.value()],arguments));
}}(a))}return n}function Le(){}function ze(n){return Wr(n)?jt(n):kt(n)}_=_?Yn.defaults(Zn.Object(),_,Yn.pick(Zn,$n)):Zn;var Be=_.Array,De=_.Date,Me=_.Error,qe=_.Function,Pe=_.Math,Ke=_.Number,Ve=_.Object,Ze=_.RegExp,Ye=_.String,Ge=_.TypeError,Je=Be.prototype,Xe=Ve.prototype,He=Ye.prototype,Qe=qe.prototype.toString,nu=Xe.hasOwnProperty,tu=0,ru=Xe.toString,eu=Zn._,uu=Ze("^"+Qe.call(nu).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),ou=_.ArrayBuffer,iu=_.clearTimeout,fu=_.parseFloat,au=Pe.pow,cu=Xe.propertyIsEnumerable,lu=jr(_,"Set"),su=_.setTimeout,pu=Je.splice,hu=_.Uint8Array,_u=jr(_,"WeakMap"),vu=Pe.ceil,gu=jr(Ve,"create"),yu=Pe.floor,du=jr(Be,"isArray"),mu=_.isFinite,wu=jr(Ve,"keys"),bu=Pe.max,xu=Pe.min,Au=jr(De,"now"),ju=_.parseInt,ku=Pe.random,Iu=Ke.NEGATIVE_INFINITY,Ru=Ke.POSITIVE_INFINITY,Ou=4294967294,Eu=2147483647,Cu=9007199254740991,Uu=_u&&new _u,Wu={};
Nn.support={},Nn.templateSettings={escape:_n,evaluate:vn,interpolate:gn,variable:"",imports:{_:Nn}};var $u=function(){function n(){}return function(t){if(ge(t)){n.prototype=t;var r=new n;n.prototype=w}return r||{}}}(),Su=Vt(_t),Fu=Vt(vt,true),Nu=Zt(),Tu=Zt(true),Lu=Uu?function(n,t){return Uu.set(n,t),n}:Fe,zu=Uu?function(n){return Uu.get(n)}:Le,Bu=jt("length"),Du=function(){var n=0,t=0;return function(r,e){var u=ho(),o=S-(u-t);if(t=u,0<o){if(++n>=$)return r}else n=0;return Lu(r,e)}}(),Mu=le(function(n,t){
return h(n)&&Er(n)?ft(n,pt(t,false,true)):[]}),qu=tr(),Pu=tr(true),Ku=le(function(n){for(var t=n.length,e=t,u=Be(l),o=xr(),i=o===r,f=[];e--;){var a=n[e]=Er(a=n[e])?a:[];u[e]=i&&120<=a.length&&gu&&lu?new Dn(e&&a):null}var i=n[0],c=-1,l=i?i.length:0,s=u[0];n:for(;++c<l;)if(a=i[c],0>(s?Mn(s,a):o(f,a,0))){for(e=t;--e;){var p=u[e];if(0>(p?Mn(p,a):o(n[e],a,0)))continue n}s&&s.push(a),f.push(a)}return f}),Vu=le(function(t,r){r=pt(r);var e=rt(t,r);return It(t,r.sort(n)),e}),Zu=vr(),Yu=vr(true),Gu=le(function(n){return St(pt(n,false,true));
}),Ju=le(function(n,t){return Er(n)?ft(n,t):[]}),Xu=le(Jr),Hu=le(function(n){var t=n.length,r=2<t?n[t-2]:w,e=1<t?n[t-1]:w;return 2<t&&typeof r=="function"?t-=2:(r=1<t&&typeof e=="function"?(--t,e):w,e=w),n.length=t,Xr(n,r,e)}),Qu=le(function(n){return n=pt(n),this.thru(function(t){t=Oo(t)?t:[Br(t)];for(var r=n,e=-1,u=t.length,o=-1,i=r.length,f=Be(u+i);++e<u;)f[e]=t[e];for(;++o<i;)f[e++]=r[o];return f})}),no=le(function(n,t){return rt(n,pt(t))}),to=Pt(function(n,t,r){nu.call(n,r)?++n[r]:n[r]=1}),ro=nr(Su),eo=nr(Fu,true),uo=ur(Pn,Su),oo=ur(function(n,t){
for(var r=n.length;r--&&false!==t(n[r],r,n););return n},Fu),io=Pt(function(n,t,r){nu.call(n,r)?n[r].push(t):n[r]=[t]}),fo=Pt(function(n,t,r){n[r]=t}),ao=le(function(n,t,r){var e=-1,u=typeof t=="function",o=Wr(t),i=Er(n)?Be(n.length):[];return Su(n,function(n){var f=u?t:o&&null!=n?n[t]:w;i[++e]=f?f.apply(n,r):Or(n,t,r)}),i}),co=Pt(function(n,t,r){n[r?0:1].push(t)},function(){return[[],[]]}),lo=lr(Xn,Su),so=lr(function(n,t,r,e){var u=n.length;for(e&&u&&(r=n[--u]);u--;)r=t(r,n[u],u,n);return r},Fu),po=le(function(n,t){
if(null==n)return[];var r=t[2];return r&&Ur(t[0],t[1],r)&&(t.length=1),Wt(n,pt(t),[])}),ho=Au||function(){return(new De).getTime()},_o=le(function(n,t,r){var e=x;if(r.length)var u=v(r,_o.placeholder),e=e|R;return gr(n,e,t,r,u)}),vo=le(function(n,t){t=t.length?pt(t):Ie(n);for(var r=-1,e=t.length;++r<e;){var u=t[r];n[u]=gr(n[u],x,n)}return n}),go=le(function(n,t,r){var e=x|A;if(r.length)var u=v(r,go.placeholder),e=e|R;return gr(t,e,n,r,u)}),yo=Xt(k),mo=Xt(I),wo=le(function(n,t){return it(n,1,t)}),bo=le(function(n,t,r){
return it(n,t,r)}),xo=er(),Ao=er(true),jo=le(function(n,t){if(t=pt(t),typeof n!="function"||!Kn(t,e))throw new Ge(L);var r=t.length;return le(function(e){for(var u=xu(e.length,r);u--;)e[u]=t[u](e[u]);return n.apply(this,e)})}),ko=cr(R),Io=cr(O),Ro=le(function(n,t){return gr(n,C,w,w,w,pt(t))}),Oo=du||function(n){return h(n)&&Sr(n.length)&&ru.call(n)==D},Eo=Kt(At),Co=Kt(function(n,t,r){return r?nt(n,t,r):tt(n,t)}),Uo=Ht(Co,function(n,t){return n===w?t:n}),Wo=Ht(Eo,Fr),$o=rr(_t),So=rr(vt),Fo=or(Nu),No=or(Tu),To=ir(_t),Lo=ir(vt),zo=wu?function(n){
var t=null==n?w:n.constructor;return typeof t=="function"&&t.prototype===n||typeof n!="function"&&Er(n)?Lr(n):ge(n)?wu(n):[]}:Lr,Bo=fr(true),Do=fr(),Mo=le(function(n,t){if(null==n)return{};if("function"!=typeof t[0])return t=Gn(pt(t),Ye),Nr(n,ft(Re(n),t));var r=Bt(t[0],t[1],3);return Tr(n,function(n,t,e){return!r(n,t,e)})}),qo=le(function(n,t){return null==n?{}:"function"==typeof t[0]?Tr(n,Bt(t[0],t[1],3)):Nr(n,pt(t))}),Po=Gt(function(n,t,r){return t=t.toLowerCase(),n+(r?t.charAt(0).toUpperCase()+t.slice(1):t);
}),Ko=Gt(function(n,t,r){return n+(r?"-":"")+t.toLowerCase()}),Vo=ar(),Zo=ar(true),Yo=Gt(function(n,t,r){return n+(r?"_":"")+t.toLowerCase()}),Go=Gt(function(n,t,r){return n+(r?" ":"")+(t.charAt(0).toUpperCase()+t.slice(1))}),Jo=le(function(n,t){try{return n.apply(w,t)}catch(r){return _e(r)?r:new Me(r)}}),Xo=le(function(n,t){return function(r){return Or(r,n,t)}}),Ho=le(function(n,t){return function(r){return Or(n,r,t)}}),Qo=_r("ceil"),ni=_r("floor"),ti=Qt(se,Iu),ri=Qt(Ae,Ru),ei=_r("round");return Nn.prototype=Tn.prototype,
Ln.prototype=$u(Tn.prototype),Ln.prototype.constructor=Ln,zn.prototype=$u(Tn.prototype),zn.prototype.constructor=zn,Bn.prototype["delete"]=function(n){return this.has(n)&&delete this.__data__[n]},Bn.prototype.get=function(n){return"__proto__"==n?w:this.__data__[n]},Bn.prototype.has=function(n){return"__proto__"!=n&&nu.call(this.__data__,n)},Bn.prototype.set=function(n,t){return"__proto__"!=n&&(this.__data__[n]=t),this},Dn.prototype.push=function(n){var t=this.data;typeof n=="string"||ge(n)?t.set.add(n):t.hash[n]=true;
},ce.Cache=Bn,Nn.after=function(n,t){if(typeof t!="function"){if(typeof n!="function")throw new Ge(L);var r=n;n=t,t=r}return n=mu(n=+n)?n:0,function(){return 1>--n?t.apply(this,arguments):void 0}},Nn.ary=function(n,t,r){return r&&Ur(n,t,r)&&(t=w),t=n&&null==t?n.length:bu(+t||0,0),gr(n,E,w,w,w,w,t)},Nn.assign=Co,Nn.at=no,Nn.before=fe,Nn.bind=_o,Nn.bindAll=vo,Nn.bindKey=go,Nn.callback=Se,Nn.chain=Qr,Nn.chunk=function(n,t,r){t=(r?Ur(n,t,r):null==t)?1:bu(yu(t)||1,1),r=0;for(var e=n?n.length:0,u=-1,o=Be(vu(e/t));r<e;)o[++u]=Et(n,r,r+=t);
return o},Nn.compact=function(n){for(var t=-1,r=n?n.length:0,e=-1,u=[];++t<r;){var o=n[t];o&&(u[++e]=o)}return u},Nn.constant=function(n){return function(){return n}},Nn.countBy=to,Nn.create=function(n,t,r){var e=$u(n);return r&&Ur(n,t,r)&&(t=w),t?tt(e,t):e},Nn.curry=yo,Nn.curryRight=mo,Nn.debounce=ae,Nn.defaults=Uo,Nn.defaultsDeep=Wo,Nn.defer=wo,Nn.delay=bo,Nn.difference=Mu,Nn.drop=qr,Nn.dropRight=Pr,Nn.dropRightWhile=function(n,t,r){return n&&n.length?Nt(n,wr(t,r,3),true,true):[]},Nn.dropWhile=function(n,t,r){
return n&&n.length?Nt(n,wr(t,r,3),true):[]},Nn.fill=function(n,t,r,e){var u=n?n.length:0;if(!u)return[];for(r&&typeof r!="number"&&Ur(n,t,r)&&(r=0,e=u),u=n.length,r=null==r?0:+r||0,0>r&&(r=-r>u?0:u+r),e=e===w||e>u?u:+e||0,0>e&&(e+=u),u=r>e?0:e>>>0,r>>>=0;r<u;)n[r++]=t;return n},Nn.filter=re,Nn.flatten=function(n,t,r){var e=n?n.length:0;return r&&Ur(n,t,r)&&(t=false),e?pt(n,t):[]},Nn.flattenDeep=function(n){return n&&n.length?pt(n,true):[]},Nn.flow=xo,Nn.flowRight=Ao,Nn.forEach=uo,Nn.forEachRight=oo,Nn.forIn=Fo,
Nn.forInRight=No,Nn.forOwn=To,Nn.forOwnRight=Lo,Nn.functions=Ie,Nn.groupBy=io,Nn.indexBy=fo,Nn.initial=function(n){return Pr(n,1)},Nn.intersection=Ku,Nn.invert=function(n,t,r){r&&Ur(n,t,r)&&(t=w),r=-1;for(var e=zo(n),u=e.length,o={};++r<u;){var i=e[r],f=n[i];t?nu.call(o,f)?o[f].push(i):o[f]=[i]:o[f]=i}return o},Nn.invoke=ao,Nn.keys=zo,Nn.keysIn=Re,Nn.map=ue,Nn.mapKeys=Bo,Nn.mapValues=Do,Nn.matches=Ne,Nn.matchesProperty=function(n,t){return xt(n,ot(t,true))},Nn.memoize=ce,Nn.merge=Eo,Nn.method=Xo,Nn.methodOf=Ho,
Nn.mixin=Te,Nn.modArgs=jo,Nn.negate=function(n){if(typeof n!="function")throw new Ge(L);return function(){return!n.apply(this,arguments)}},Nn.omit=Mo,Nn.once=function(n){return fe(2,n)},Nn.pairs=Oe,Nn.partial=ko,Nn.partialRight=Io,Nn.partition=co,Nn.pick=qo,Nn.pluck=function(n,t){return ue(n,ze(t))},Nn.property=ze,Nn.propertyOf=function(n){return function(t){return yt(n,Dr(t),t+"")}},Nn.pull=function(){var n=arguments,t=n[0];if(!t||!t.length)return t;for(var r=0,e=xr(),u=n.length;++r<u;)for(var o=0,i=n[r];-1<(o=e(t,i,o));)pu.call(t,o,1);
return t},Nn.pullAt=Vu,Nn.range=function(n,t,r){r&&Ur(n,t,r)&&(t=r=w),n=+n||0,r=null==r?1:+r||0,null==t?(t=n,n=0):t=+t||0;var e=-1;t=bu(vu((t-n)/(r||1)),0);for(var u=Be(t);++e<t;)u[e]=n,n+=r;return u},Nn.rearg=Ro,Nn.reject=function(n,t,r){var e=Oo(n)?Vn:lt;return t=wr(t,r,3),e(n,function(n,r,e){return!t(n,r,e)})},Nn.remove=function(n,t,r){var e=[];if(!n||!n.length)return e;var u=-1,o=[],i=n.length;for(t=wr(t,r,3);++u<i;)r=n[u],t(r,u,n)&&(e.push(r),o.push(u));return It(n,o),e},Nn.rest=Yr,Nn.restParam=le,
Nn.set=function(n,t,r){if(null==n)return n;var e=t+"";t=null!=n[e]||Wr(t,n)?[e]:Dr(t);for(var e=-1,u=t.length,o=u-1,i=n;null!=i&&++e<u;){var f=t[e];ge(i)&&(e==o?i[f]=r:null==i[f]&&(i[f]=Cr(t[e+1])?[]:{})),i=i[f]}return n},Nn.shuffle=function(n){return oe(n,Ru)},Nn.slice=function(n,t,r){var e=n?n.length:0;return e?(r&&typeof r!="number"&&Ur(n,t,r)&&(t=0,r=e),Et(n,t,r)):[]},Nn.sortBy=function(n,t,r){if(null==n)return[];r&&Ur(n,t,r)&&(t=w);var e=-1;return t=wr(t,r,3),n=wt(n,function(n,r,u){return{a:t(n,r,u),
b:++e,c:n}}),Ut(n,f)},Nn.sortByAll=po,Nn.sortByOrder=function(n,t,r,e){return null==n?[]:(e&&Ur(t,r,e)&&(r=w),Oo(t)||(t=null==t?[]:[t]),Oo(r)||(r=null==r?[]:[r]),Wt(n,t,r))},Nn.spread=function(n){if(typeof n!="function")throw new Ge(L);return function(t){return n.apply(this,t)}},Nn.take=function(n,t,r){return n&&n.length?((r?Ur(n,t,r):null==t)&&(t=1),Et(n,0,0>t?0:t)):[]},Nn.takeRight=function(n,t,r){var e=n?n.length:0;return e?((r?Ur(n,t,r):null==t)&&(t=1),t=e-(+t||0),Et(n,0>t?0:t)):[]},Nn.takeRightWhile=function(n,t,r){
return n&&n.length?Nt(n,wr(t,r,3),false,true):[]},Nn.takeWhile=function(n,t,r){return n&&n.length?Nt(n,wr(t,r,3)):[]},Nn.tap=function(n,t,r){return t.call(r,n),n},Nn.throttle=function(n,t,r){var e=true,u=true;if(typeof n!="function")throw new Ge(L);return false===r?e=false:ge(r)&&(e="leading"in r?!!r.leading:e,u="trailing"in r?!!r.trailing:u),ae(n,t,{leading:e,maxWait:+t,trailing:u})},Nn.thru=ne,Nn.times=function(n,t,r){if(n=yu(n),1>n||!mu(n))return[];var e=-1,u=Be(xu(n,4294967295));for(t=Bt(t,r,1);++e<n;)4294967295>e?u[e]=t(e):t(e);
return u},Nn.toArray=je,Nn.toPlainObject=ke,Nn.transform=function(n,t,r,e){var u=Oo(n)||xe(n);return t=wr(t,e,4),null==r&&(u||ge(n)?(e=n.constructor,r=u?Oo(n)?new e:[]:$u(ve(e)?e.prototype:w)):r={}),(u?Pn:_t)(n,function(n,e,u){return t(r,n,e,u)}),r},Nn.union=Gu,Nn.uniq=Gr,Nn.unzip=Jr,Nn.unzipWith=Xr,Nn.values=Ee,Nn.valuesIn=function(n){return Ft(n,Re(n))},Nn.where=function(n,t){return re(n,bt(t))},Nn.without=Ju,Nn.wrap=function(n,t){return t=null==t?Fe:t,gr(t,R,w,[n],[])},Nn.xor=function(){for(var n=-1,t=arguments.length;++n<t;){
var r=arguments[n];if(Er(r))var e=e?Jn(ft(e,r),ft(r,e)):r}return e?St(e):[]},Nn.zip=Xu,Nn.zipObject=Hr,Nn.zipWith=Hu,Nn.backflow=Ao,Nn.collect=ue,Nn.compose=Ao,Nn.each=uo,Nn.eachRight=oo,Nn.extend=Co,Nn.iteratee=Se,Nn.methods=Ie,Nn.object=Hr,Nn.select=re,Nn.tail=Yr,Nn.unique=Gr,Te(Nn,Nn),Nn.add=function(n,t){return(+n||0)+(+t||0)},Nn.attempt=Jo,Nn.camelCase=Po,Nn.capitalize=function(n){return(n=u(n))&&n.charAt(0).toUpperCase()+n.slice(1)},Nn.ceil=Qo,Nn.clone=function(n,t,r,e){return t&&typeof t!="boolean"&&Ur(n,t,r)?t=false:typeof t=="function"&&(e=r,
r=t,t=false),typeof r=="function"?ot(n,t,Bt(r,e,3)):ot(n,t)},Nn.cloneDeep=function(n,t,r){return typeof t=="function"?ot(n,true,Bt(t,r,3)):ot(n,true)},Nn.deburr=Ce,Nn.endsWith=function(n,t,r){n=u(n),t+="";var e=n.length;return r=r===w?e:xu(0>r?0:+r||0,e),r-=t.length,0<=r&&n.indexOf(t,r)==r},Nn.escape=function(n){return(n=u(n))&&hn.test(n)?n.replace(sn,c):n},Nn.escapeRegExp=function(n){return(n=u(n))&&bn.test(n)?n.replace(wn,l):n||"(?:)"},Nn.every=te,Nn.find=ro,Nn.findIndex=qu,Nn.findKey=$o,Nn.findLast=eo,
Nn.findLastIndex=Pu,Nn.findLastKey=So,Nn.findWhere=function(n,t){return ro(n,bt(t))},Nn.first=Kr,Nn.floor=ni,Nn.get=function(n,t,r){return n=null==n?w:yt(n,Dr(t),t+""),n===w?r:n},Nn.gt=se,Nn.gte=function(n,t){return n>=t},Nn.has=function(n,t){if(null==n)return false;var r=nu.call(n,t);if(!r&&!Wr(t)){if(t=Dr(t),n=1==t.length?n:yt(n,Et(t,0,-1)),null==n)return false;t=Zr(t),r=nu.call(n,t)}return r||Sr(n.length)&&Cr(t,n.length)&&(Oo(n)||pe(n))},Nn.identity=Fe,Nn.includes=ee,Nn.indexOf=Vr,Nn.inRange=function(n,t,r){
return t=+t||0,r===w?(r=t,t=0):r=+r||0,n>=xu(t,r)&&n<bu(t,r)},Nn.isArguments=pe,Nn.isArray=Oo,Nn.isBoolean=function(n){return true===n||false===n||h(n)&&ru.call(n)==M},Nn.isDate=function(n){return h(n)&&ru.call(n)==q},Nn.isElement=function(n){return!!n&&1===n.nodeType&&h(n)&&!me(n)},Nn.isEmpty=function(n){return null==n?true:Er(n)&&(Oo(n)||be(n)||pe(n)||h(n)&&ve(n.splice))?!n.length:!zo(n).length},Nn.isEqual=he,Nn.isError=_e,Nn.isFinite=function(n){return typeof n=="number"&&mu(n)},Nn.isFunction=ve,Nn.isMatch=function(n,t,r,e){
return r=typeof r=="function"?Bt(r,e,3):w,mt(n,Ar(t),r)},Nn.isNaN=function(n){return de(n)&&n!=+n},Nn.isNative=ye,Nn.isNull=function(n){return null===n},Nn.isNumber=de,Nn.isObject=ge,Nn.isPlainObject=me,Nn.isRegExp=we,Nn.isString=be,Nn.isTypedArray=xe,Nn.isUndefined=function(n){return n===w},Nn.kebabCase=Ko,Nn.last=Zr,Nn.lastIndexOf=function(n,t,r){var e=n?n.length:0;if(!e)return-1;var u=e;if(typeof r=="number")u=(0>r?bu(e+r,0):xu(r||0,e-1))+1;else if(r)return u=Lt(n,t,true)-1,n=n[u],(t===t?t===n:n!==n)?u:-1;
if(t!==t)return p(n,u,true);for(;u--;)if(n[u]===t)return u;return-1},Nn.lt=Ae,Nn.lte=function(n,t){return n<=t},Nn.max=ti,Nn.min=ri,Nn.noConflict=function(){return Zn._=eu,this},Nn.noop=Le,Nn.now=ho,Nn.pad=function(n,t,r){n=u(n),t=+t;var e=n.length;return e<t&&mu(t)?(e=(t-e)/2,t=yu(e),e=vu(e),r=pr("",e,r),r.slice(0,t)+n+r):n},Nn.padLeft=Vo,Nn.padRight=Zo,Nn.parseInt=function(n,t,r){return(r?Ur(n,t,r):null==t)?t=0:t&&(t=+t),n=We(n),ju(n,t||(In.test(n)?16:10))},Nn.random=function(n,t,r){r&&Ur(n,t,r)&&(t=r=w);
var e=null==n,u=null==t;return null==r&&(u&&typeof n=="boolean"?(r=n,n=1):typeof t=="boolean"&&(r=t,u=true)),e&&u&&(t=1,u=false),n=+n||0,u?(t=n,n=0):t=+t||0,r||n%1||t%1?(r=ku(),xu(n+r*(t-n+fu("1e-"+((r+"").length-1))),t)):Rt(n,t)},Nn.reduce=lo,Nn.reduceRight=so,Nn.repeat=Ue,Nn.result=function(n,t,r){var e=null==n?w:n[t];return e===w&&(null==n||Wr(t,n)||(t=Dr(t),n=1==t.length?n:yt(n,Et(t,0,-1)),e=null==n?w:n[Zr(t)]),e=e===w?r:e),ve(e)?e.call(n):e},Nn.round=ei,Nn.runInContext=m,Nn.size=function(n){var t=n?Bu(n):0;
return Sr(t)?t:zo(n).length},Nn.snakeCase=Yo,Nn.some=ie,Nn.sortedIndex=Zu,Nn.sortedLastIndex=Yu,Nn.startCase=Go,Nn.startsWith=function(n,t,r){return n=u(n),r=null==r?0:xu(0>r?0:+r||0,n.length),n.lastIndexOf(t,r)==r},Nn.sum=function(n,t,r){if(r&&Ur(n,t,r)&&(t=w),t=wr(t,r,3),1==t.length){n=Oo(n)?n:zr(n),r=n.length;for(var e=0;r--;)e+=+t(n[r])||0;n=e}else n=$t(n,t);return n},Nn.template=function(n,t,r){var e=Nn.templateSettings;r&&Ur(n,t,r)&&(t=r=w),n=u(n),t=nt(tt({},r||t),e,Qn),r=nt(tt({},t.imports),e.imports,Qn);
var o,i,f=zo(r),a=Ft(r,f),c=0;r=t.interpolate||Cn;var l="__p+='";r=Ze((t.escape||Cn).source+"|"+r.source+"|"+(r===gn?jn:Cn).source+"|"+(t.evaluate||Cn).source+"|$","g");var p="sourceURL"in t?"//# sourceURL="+t.sourceURL+"\n":"";if(n.replace(r,function(t,r,e,u,f,a){return e||(e=u),l+=n.slice(c,a).replace(Un,s),r&&(o=true,l+="'+__e("+r+")+'"),f&&(i=true,l+="';"+f+";\n__p+='"),e&&(l+="'+((__t=("+e+"))==null?'':__t)+'"),c=a+t.length,t}),l+="';",(t=t.variable)||(l="with(obj){"+l+"}"),l=(i?l.replace(fn,""):l).replace(an,"$1").replace(cn,"$1;"),
l="function("+(t||"obj")+"){"+(t?"":"obj||(obj={});")+"var __t,__p=''"+(o?",__e=_.escape":"")+(i?",__j=Array.prototype.join;function print(){__p+=__j.call(arguments,'')}":";")+l+"return __p}",t=Jo(function(){return qe(f,p+"return "+l).apply(w,a)}),t.source=l,_e(t))throw t;return t},Nn.trim=We,Nn.trimLeft=function(n,t,r){var e=n;return(n=u(n))?n.slice((r?Ur(e,t,r):null==t)?g(n):o(n,t+"")):n},Nn.trimRight=function(n,t,r){var e=n;return(n=u(n))?(r?Ur(e,t,r):null==t)?n.slice(0,y(n)+1):n.slice(0,i(n,t+"")+1):n;
},Nn.trunc=function(n,t,r){r&&Ur(n,t,r)&&(t=w);var e=U;if(r=W,null!=t)if(ge(t)){var o="separator"in t?t.separator:o,e="length"in t?+t.length||0:e;r="omission"in t?u(t.omission):r}else e=+t||0;if(n=u(n),e>=n.length)return n;if(e-=r.length,1>e)return r;if(t=n.slice(0,e),null==o)return t+r;if(we(o)){if(n.slice(e).search(o)){var i,f=n.slice(0,e);for(o.global||(o=Ze(o.source,(kn.exec(o)||"")+"g")),o.lastIndex=0;n=o.exec(f);)i=n.index;t=t.slice(0,null==i?e:i)}}else n.indexOf(o,e)!=e&&(o=t.lastIndexOf(o),
-1<o&&(t=t.slice(0,o)));return t+r},Nn.unescape=function(n){return(n=u(n))&&pn.test(n)?n.replace(ln,d):n},Nn.uniqueId=function(n){var t=++tu;return u(n)+t},Nn.words=$e,Nn.all=te,Nn.any=ie,Nn.contains=ee,Nn.eq=he,Nn.detect=ro,Nn.foldl=lo,Nn.foldr=so,Nn.head=Kr,Nn.include=ee,Nn.inject=lo,Te(Nn,function(){var n={};return _t(Nn,function(t,r){Nn.prototype[r]||(n[r]=t)}),n}(),false),Nn.sample=oe,Nn.prototype.sample=function(n){return this.__chain__||null!=n?this.thru(function(t){return oe(t,n)}):oe(this.value());
},Nn.VERSION=b,Pn("bind bindKey curry curryRight partial partialRight".split(" "),function(n){Nn[n].placeholder=Nn}),Pn(["drop","take"],function(n,t){zn.prototype[n]=function(r){var e=this.__filtered__;if(e&&!t)return new zn(this);r=null==r?1:bu(yu(r)||0,0);var u=this.clone();return e?u.__takeCount__=xu(u.__takeCount__,r):u.__views__.push({size:r,type:n+(0>u.__dir__?"Right":"")}),u},zn.prototype[n+"Right"]=function(t){return this.reverse()[n](t).reverse()}}),Pn(["filter","map","takeWhile"],function(n,t){
var r=t+1,e=r!=T;zn.prototype[n]=function(n,t){var u=this.clone();return u.__iteratees__.push({iteratee:wr(n,t,1),type:r}),u.__filtered__=u.__filtered__||e,u}}),Pn(["first","last"],function(n,t){var r="take"+(t?"Right":"");zn.prototype[n]=function(){return this[r](1).value()[0]}}),Pn(["initial","rest"],function(n,t){var r="drop"+(t?"":"Right");zn.prototype[n]=function(){return this.__filtered__?new zn(this):this[r](1)}}),Pn(["pluck","where"],function(n,t){var r=t?"filter":"map",e=t?bt:ze;zn.prototype[n]=function(n){
return this[r](e(n))}}),zn.prototype.compact=function(){return this.filter(Fe)},zn.prototype.reject=function(n,t){return n=wr(n,t,1),this.filter(function(t){return!n(t)})},zn.prototype.slice=function(n,t){n=null==n?0:+n||0;var r=this;return r.__filtered__&&(0<n||0>t)?new zn(r):(0>n?r=r.takeRight(-n):n&&(r=r.drop(n)),t!==w&&(t=+t||0,r=0>t?r.dropRight(-t):r.take(t-n)),r)},zn.prototype.takeRightWhile=function(n,t){return this.reverse().takeWhile(n,t).reverse()},zn.prototype.toArray=function(){return this.take(Ru);
},_t(zn.prototype,function(n,t){var r=/^(?:filter|map|reject)|While$/.test(t),e=/^(?:first|last)$/.test(t),u=Nn[e?"take"+("last"==t?"Right":""):t];u&&(Nn.prototype[t]=function(){function t(n){return e&&i?u(n,1)[0]:u.apply(w,Jn([n],o))}var o=e?[1]:arguments,i=this.__chain__,f=this.__wrapped__,a=!!this.__actions__.length,c=f instanceof zn,l=o[0],s=c||Oo(f);return s&&r&&typeof l=="function"&&1!=l.length&&(c=s=false),l={func:ne,args:[t],thisArg:w},a=c&&!a,e&&!i?a?(f=f.clone(),f.__actions__.push(l),n.call(f)):u.call(w,this.value())[0]:!e&&s?(f=a?f:new zn(this),
f=n.apply(f,o),f.__actions__.push(l),new Ln(f,i)):this.thru(t)})}),Pn("join pop push replace shift sort splice split unshift".split(" "),function(n){var t=(/^(?:replace|split)$/.test(n)?He:Je)[n],r=/^(?:push|sort|unshift)$/.test(n)?"tap":"thru",e=/^(?:join|pop|replace|shift)$/.test(n);Nn.prototype[n]=function(){var n=arguments;return e&&!this.__chain__?t.apply(this.value(),n):this[r](function(r){return t.apply(r,n)})}}),_t(zn.prototype,function(n,t){var r=Nn[t];if(r){var e=r.name+"";(Wu[e]||(Wu[e]=[])).push({
name:t,func:r})}}),Wu[sr(w,A).name]=[{name:"wrapper",func:w}],zn.prototype.clone=function(){var n=new zn(this.__wrapped__);return n.__actions__=qn(this.__actions__),n.__dir__=this.__dir__,n.__filtered__=this.__filtered__,n.__iteratees__=qn(this.__iteratees__),n.__takeCount__=this.__takeCount__,n.__views__=qn(this.__views__),n},zn.prototype.reverse=function(){if(this.__filtered__){var n=new zn(this);n.__dir__=-1,n.__filtered__=true}else n=this.clone(),n.__dir__*=-1;return n},zn.prototype.value=function(){
var n,t=this.__wrapped__.value(),r=this.__dir__,e=Oo(t),u=0>r,o=e?t.length:0;n=o;for(var i=this.__views__,f=0,a=-1,c=i.length;++a<c;){var l=i[a],s=l.size;switch(l.type){case"drop":f+=s;break;case"dropRight":n-=s;break;case"take":n=xu(n,f+s);break;case"takeRight":f=bu(f,n-s)}}if(n={start:f,end:n},i=n.start,f=n.end,n=f-i,u=u?f:i-1,i=this.__iteratees__,f=i.length,a=0,c=xu(n,this.__takeCount__),!e||o<F||o==n&&c==n)return Tt(t,this.__actions__);e=[];n:for(;n--&&a<c;){for(u+=r,o=-1,l=t[u];++o<f;){var p=i[o],s=p.type,p=p.iteratee(l);
if(s==T)l=p;else if(!p){if(s==N)continue n;break n}}e[a++]=l}return e},Nn.prototype.chain=function(){return Qr(this)},Nn.prototype.commit=function(){return new Ln(this.value(),this.__chain__)},Nn.prototype.concat=Qu,Nn.prototype.plant=function(n){for(var t,r=this;r instanceof Tn;){var e=Mr(r);t?u.__wrapped__=e:t=e;var u=e,r=r.__wrapped__}return u.__wrapped__=n,t},Nn.prototype.reverse=function(){function n(n){return n.reverse()}var t=this.__wrapped__;return t instanceof zn?(this.__actions__.length&&(t=new zn(this)),
t=t.reverse(),t.__actions__.push({func:ne,args:[n],thisArg:w}),new Ln(t,this.__chain__)):this.thru(n)},Nn.prototype.toString=function(){return this.value()+""},Nn.prototype.run=Nn.prototype.toJSON=Nn.prototype.valueOf=Nn.prototype.value=function(){return Tt(this.__wrapped__,this.__actions__)},Nn.prototype.collect=Nn.prototype.map,Nn.prototype.head=Nn.prototype.first,Nn.prototype.select=Nn.prototype.filter,Nn.prototype.tail=Nn.prototype.rest,Nn}var w,b="3.10.1",x=1,A=2,j=4,k=8,I=16,R=32,O=64,E=128,C=256,U=30,W="...",$=150,S=16,F=200,N=1,T=2,L="Expected a function",z="__lodash_placeholder__",B="[object Arguments]",D="[object Array]",M="[object Boolean]",q="[object Date]",P="[object Error]",K="[object Function]",V="[object Number]",Z="[object Object]",Y="[object RegExp]",G="[object String]",J="[object ArrayBuffer]",X="[object Float32Array]",H="[object Float64Array]",Q="[object Int8Array]",nn="[object Int16Array]",tn="[object Int32Array]",rn="[object Uint8Array]",en="[object Uint8ClampedArray]",un="[object Uint16Array]",on="[object Uint32Array]",fn=/\b__p\+='';/g,an=/\b(__p\+=)''\+/g,cn=/(__e\(.*?\)|\b__t\))\+'';/g,ln=/&(?:amp|lt|gt|quot|#39|#96);/g,sn=/[&<>"'`]/g,pn=RegExp(ln.source),hn=RegExp(sn.source),_n=/<%-([\s\S]+?)%>/g,vn=/<%([\s\S]+?)%>/g,gn=/<%=([\s\S]+?)%>/g,yn=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\n\\]|\\.)*?\1)\]/,dn=/^\w*$/,mn=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\n\\]|\\.)*?)\2)\]/g,wn=/^[:!,]|[\\^$.*+?()[\]{}|\/]|(^[0-9a-fA-Fnrtuvx])|([\n\r\u2028\u2029])/g,bn=RegExp(wn.source),xn=/[\u0300-\u036f\ufe20-\ufe23]/g,An=/\\(\\)?/g,jn=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,kn=/\w*$/,In=/^0[xX]/,Rn=/^\[object .+?Constructor\]$/,On=/^\d+$/,En=/[\xc0-\xd6\xd8-\xde\xdf-\xf6\xf8-\xff]/g,Cn=/($^)/,Un=/['\n\r\u2028\u2029\\]/g,Wn=RegExp("[A-Z\\xc0-\\xd6\\xd8-\\xde]+(?=[A-Z\\xc0-\\xd6\\xd8-\\xde][a-z\\xdf-\\xf6\\xf8-\\xff]+)|[A-Z\\xc0-\\xd6\\xd8-\\xde]?[a-z\\xdf-\\xf6\\xf8-\\xff]+|[A-Z\\xc0-\\xd6\\xd8-\\xde]+|[0-9]+","g"),$n="Array ArrayBuffer Date Error Float32Array Float64Array Function Int8Array Int16Array Int32Array Math Number Object RegExp Set String _ clearTimeout isFinite parseFloat parseInt setTimeout TypeError Uint8Array Uint8ClampedArray Uint16Array Uint32Array WeakMap".split(" "),Sn={};
Sn[X]=Sn[H]=Sn[Q]=Sn[nn]=Sn[tn]=Sn[rn]=Sn[en]=Sn[un]=Sn[on]=true,Sn[B]=Sn[D]=Sn[J]=Sn[M]=Sn[q]=Sn[P]=Sn[K]=Sn["[object Map]"]=Sn[V]=Sn[Z]=Sn[Y]=Sn["[object Set]"]=Sn[G]=Sn["[object WeakMap]"]=false;var Fn={};Fn[B]=Fn[D]=Fn[J]=Fn[M]=Fn[q]=Fn[X]=Fn[H]=Fn[Q]=Fn[nn]=Fn[tn]=Fn[V]=Fn[Z]=Fn[Y]=Fn[G]=Fn[rn]=Fn[en]=Fn[un]=Fn[on]=true,Fn[P]=Fn[K]=Fn["[object Map]"]=Fn["[object Set]"]=Fn["[object WeakMap]"]=false;var Nn={"\xc0":"A","\xc1":"A","\xc2":"A","\xc3":"A","\xc4":"A","\xc5":"A","\xe0":"a","\xe1":"a","\xe2":"a",
"\xe3":"a","\xe4":"a","\xe5":"a","\xc7":"C","\xe7":"c","\xd0":"D","\xf0":"d","\xc8":"E","\xc9":"E","\xca":"E","\xcb":"E","\xe8":"e","\xe9":"e","\xea":"e","\xeb":"e","\xcc":"I","\xcd":"I","\xce":"I","\xcf":"I","\xec":"i","\xed":"i","\xee":"i","\xef":"i","\xd1":"N","\xf1":"n","\xd2":"O","\xd3":"O","\xd4":"O","\xd5":"O","\xd6":"O","\xd8":"O","\xf2":"o","\xf3":"o","\xf4":"o","\xf5":"o","\xf6":"o","\xf8":"o","\xd9":"U","\xda":"U","\xdb":"U","\xdc":"U","\xf9":"u","\xfa":"u","\xfb":"u","\xfc":"u","\xdd":"Y",
"\xfd":"y","\xff":"y","\xc6":"Ae","\xe6":"ae","\xde":"Th","\xfe":"th","\xdf":"ss"},Tn={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","`":"&#96;"},Ln={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'","&#96;":"`"},zn={"function":true,object:true},Bn={0:"x30",1:"x31",2:"x32",3:"x33",4:"x34",5:"x35",6:"x36",7:"x37",8:"x38",9:"x39",A:"x41",B:"x42",C:"x43",D:"x44",E:"x45",F:"x46",a:"x61",b:"x62",c:"x63",d:"x64",e:"x65",f:"x66",n:"x6e",r:"x72",t:"x74",u:"x75",v:"x76",x:"x78"},Dn={"\\":"\\",
"'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},Mn=zn[typeof exports]&&exports&&!exports.nodeType&&exports,qn=zn[typeof module]&&module&&!module.nodeType&&module,Pn=zn[typeof self]&&self&&self.Object&&self,Kn=zn[typeof window]&&window&&window.Object&&window,Vn=qn&&qn.exports===Mn&&Mn,Zn=Mn&&qn&&typeof global=="object"&&global&&global.Object&&global||Kn!==(this&&this.window)&&Kn||Pn||this,Yn=m();typeof define=="function"&&typeof define.amd=="object"&&define.amd?(Zn._=Yn, define(function(){
return Yn})):Mn&&qn?Vn?(qn.exports=Yn)._=Yn:Mn._=Yn:Zn._=Yn}).call(this);
/*! jQuery v1.11.0 | (c) 2005, 2014 jQuery Foundation, Inc. | jquery.org/license */
!function(a,b){"object"==typeof module&&"object"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error("jQuery requires a window with a document");return b(a)}:b(a)}("undefined"!=typeof window?window:this,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k="".trim,l={},m="1.11.0",n=function(a,b){return new n.fn.init(a,b)},o=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,p=/^-ms-/,q=/-([\da-z])/gi,r=function(a,b){return b.toUpperCase()};n.fn=n.prototype={jquery:m,constructor:n,selector:"",length:0,toArray:function(){return d.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:d.call(this)},pushStack:function(a){var b=n.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a,b){return n.each(this,a,b)},map:function(a){return this.pushStack(n.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.splice},n.extend=n.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for("boolean"==typeof g&&(j=g,g=arguments[h]||{},h++),"object"==typeof g||n.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(e=arguments[h]))for(d in e)a=g[d],c=e[d],g!==c&&(j&&c&&(n.isPlainObject(c)||(b=n.isArray(c)))?(b?(b=!1,f=a&&n.isArray(a)?a:[]):f=a&&n.isPlainObject(a)?a:{},g[d]=n.extend(j,f,c)):void 0!==c&&(g[d]=c));return g},n.extend({expando:"jQuery"+(m+Math.random()).replace(/\D/g,""),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return"function"===n.type(a)},isArray:Array.isArray||function(a){return"array"===n.type(a)},isWindow:function(a){return null!=a&&a==a.window},isNumeric:function(a){return a-parseFloat(a)>=0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},isPlainObject:function(a){var b;if(!a||"object"!==n.type(a)||a.nodeType||n.isWindow(a))return!1;try{if(a.constructor&&!j.call(a,"constructor")&&!j.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}if(l.ownLast)for(b in a)return j.call(a,b);for(b in a);return void 0===b||j.call(a,b)},type:function(a){return null==a?a+"":"object"==typeof a||"function"==typeof a?h[i.call(a)]||"object":typeof a},globalEval:function(b){b&&n.trim(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(p,"ms-").replace(q,r)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b,c){var d,e=0,f=a.length,g=s(a);if(c){if(g){for(;f>e;e++)if(d=b.apply(a[e],c),d===!1)break}else for(e in a)if(d=b.apply(a[e],c),d===!1)break}else if(g){for(;f>e;e++)if(d=b.call(a[e],e,a[e]),d===!1)break}else for(e in a)if(d=b.call(a[e],e,a[e]),d===!1)break;return a},trim:k&&!k.call("\ufeff\xa0")?function(a){return null==a?"":k.call(a)}:function(a){return null==a?"":(a+"").replace(o,"")},makeArray:function(a,b){var c=b||[];return null!=a&&(s(Object(a))?n.merge(c,"string"==typeof a?[a]:a):f.call(c,a)),c},inArray:function(a,b,c){var d;if(b){if(g)return g.call(b,a,c);for(d=b.length,c=c?0>c?Math.max(0,d+c):c:0;d>c;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,b){var c=+b.length,d=0,e=a.length;while(c>d)a[e++]=b[d++];if(c!==c)while(void 0!==b[d])a[e++]=b[d++];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,f=0,g=a.length,h=s(a),i=[];if(h)for(;g>f;f++)d=b(a[f],f,c),null!=d&&i.push(d);else for(f in a)d=b(a[f],f,c),null!=d&&i.push(d);return e.apply([],i)},guid:1,proxy:function(a,b){var c,e,f;return"string"==typeof b&&(f=a[b],b=a,a=f),n.isFunction(a)?(c=d.call(arguments,2),e=function(){return a.apply(b||this,c.concat(d.call(arguments)))},e.guid=a.guid=a.guid||n.guid++,e):void 0},now:function(){return+new Date},support:l}),n.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(a,b){h["[object "+b+"]"]=b.toLowerCase()});function s(a){var b=a.length,c=n.type(a);return"function"===c||n.isWindow(a)?!1:1===a.nodeType&&b?!0:"array"===c||0===b||"number"==typeof b&&b>0&&b-1 in a}var t=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s="sizzle"+-new Date,t=a.document,u=0,v=0,w=eb(),x=eb(),y=eb(),z=function(a,b){return a===b&&(j=!0),0},A="undefined",B=1<<31,C={}.hasOwnProperty,D=[],E=D.pop,F=D.push,G=D.push,H=D.slice,I=D.indexOf||function(a){for(var b=0,c=this.length;c>b;b++)if(this[b]===a)return b;return-1},J="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",K="[\\x20\\t\\r\\n\\f]",L="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",M=L.replace("w","w#"),N="\\["+K+"*("+L+")"+K+"*(?:([*^$|!~]?=)"+K+"*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|("+M+")|)|)"+K+"*\\]",O=":("+L+")(?:\\(((['\"])((?:\\\\.|[^\\\\])*?)\\3|((?:\\\\.|[^\\\\()[\\]]|"+N.replace(3,8)+")*)|.*)\\)|)",P=new RegExp("^"+K+"+|((?:^|[^\\\\])(?:\\\\.)*)"+K+"+$","g"),Q=new RegExp("^"+K+"*,"+K+"*"),R=new RegExp("^"+K+"*([>+~]|"+K+")"+K+"*"),S=new RegExp("="+K+"*([^\\]'\"]*?)"+K+"*\\]","g"),T=new RegExp(O),U=new RegExp("^"+M+"$"),V={ID:new RegExp("^#("+L+")"),CLASS:new RegExp("^\\.("+L+")"),TAG:new RegExp("^("+L.replace("w","w*")+")"),ATTR:new RegExp("^"+N),PSEUDO:new RegExp("^"+O),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+K+"*(even|odd|(([+-]|)(\\d*)n|)"+K+"*(?:([+-]|)"+K+"*(\\d+)|))"+K+"*\\)|)","i"),bool:new RegExp("^(?:"+J+")$","i"),needsContext:new RegExp("^"+K+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+K+"*((?:-\\d)?\\d*)"+K+"*\\)|)(?=[^-]|$)","i")},W=/^(?:input|select|textarea|button)$/i,X=/^h\d$/i,Y=/^[^{]+\{\s*\[native \w/,Z=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,$=/[+~]/,_=/'|\\/g,ab=new RegExp("\\\\([\\da-f]{1,6}"+K+"?|("+K+")|.)","ig"),bb=function(a,b,c){var d="0x"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)};try{G.apply(D=H.call(t.childNodes),t.childNodes),D[t.childNodes.length].nodeType}catch(cb){G={apply:D.length?function(a,b){F.apply(a,H.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function db(a,b,d,e){var f,g,h,i,j,m,p,q,u,v;if((b?b.ownerDocument||b:t)!==l&&k(b),b=b||l,d=d||[],!a||"string"!=typeof a)return d;if(1!==(i=b.nodeType)&&9!==i)return[];if(n&&!e){if(f=Z.exec(a))if(h=f[1]){if(9===i){if(g=b.getElementById(h),!g||!g.parentNode)return d;if(g.id===h)return d.push(g),d}else if(b.ownerDocument&&(g=b.ownerDocument.getElementById(h))&&r(b,g)&&g.id===h)return d.push(g),d}else{if(f[2])return G.apply(d,b.getElementsByTagName(a)),d;if((h=f[3])&&c.getElementsByClassName&&b.getElementsByClassName)return G.apply(d,b.getElementsByClassName(h)),d}if(c.qsa&&(!o||!o.test(a))){if(q=p=s,u=b,v=9===i&&a,1===i&&"object"!==b.nodeName.toLowerCase()){m=ob(a),(p=b.getAttribute("id"))?q=p.replace(_,"\\$&"):b.setAttribute("id",q),q="[id='"+q+"'] ",j=m.length;while(j--)m[j]=q+pb(m[j]);u=$.test(a)&&mb(b.parentNode)||b,v=m.join(",")}if(v)try{return G.apply(d,u.querySelectorAll(v)),d}catch(w){}finally{p||b.removeAttribute("id")}}}return xb(a.replace(P,"$1"),b,d,e)}function eb(){var a=[];function b(c,e){return a.push(c+" ")>d.cacheLength&&delete b[a.shift()],b[c+" "]=e}return b}function fb(a){return a[s]=!0,a}function gb(a){var b=l.createElement("div");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function hb(a,b){var c=a.split("|"),e=a.length;while(e--)d.attrHandle[c[e]]=b}function ib(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||B)-(~a.sourceIndex||B);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function jb(a){return function(b){var c=b.nodeName.toLowerCase();return"input"===c&&b.type===a}}function kb(a){return function(b){var c=b.nodeName.toLowerCase();return("input"===c||"button"===c)&&b.type===a}}function lb(a){return fb(function(b){return b=+b,fb(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function mb(a){return a&&typeof a.getElementsByTagName!==A&&a}c=db.support={},f=db.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?"HTML"!==b.nodeName:!1},k=db.setDocument=function(a){var b,e=a?a.ownerDocument||a:t,g=e.defaultView;return e!==l&&9===e.nodeType&&e.documentElement?(l=e,m=e.documentElement,n=!f(e),g&&g!==g.top&&(g.addEventListener?g.addEventListener("unload",function(){k()},!1):g.attachEvent&&g.attachEvent("onunload",function(){k()})),c.attributes=gb(function(a){return a.className="i",!a.getAttribute("className")}),c.getElementsByTagName=gb(function(a){return a.appendChild(e.createComment("")),!a.getElementsByTagName("*").length}),c.getElementsByClassName=Y.test(e.getElementsByClassName)&&gb(function(a){return a.innerHTML="<div class='a'></div><div class='a i'></div>",a.firstChild.className="i",2===a.getElementsByClassName("i").length}),c.getById=gb(function(a){return m.appendChild(a).id=s,!e.getElementsByName||!e.getElementsByName(s).length}),c.getById?(d.find.ID=function(a,b){if(typeof b.getElementById!==A&&n){var c=b.getElementById(a);return c&&c.parentNode?[c]:[]}},d.filter.ID=function(a){var b=a.replace(ab,bb);return function(a){return a.getAttribute("id")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(ab,bb);return function(a){var c=typeof a.getAttributeNode!==A&&a.getAttributeNode("id");return c&&c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return typeof b.getElementsByTagName!==A?b.getElementsByTagName(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if("*"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){return typeof b.getElementsByClassName!==A&&n?b.getElementsByClassName(a):void 0},p=[],o=[],(c.qsa=Y.test(e.querySelectorAll))&&(gb(function(a){a.innerHTML="<select t=''><option selected=''></option></select>",a.querySelectorAll("[t^='']").length&&o.push("[*^$]="+K+"*(?:''|\"\")"),a.querySelectorAll("[selected]").length||o.push("\\["+K+"*(?:value|"+J+")"),a.querySelectorAll(":checked").length||o.push(":checked")}),gb(function(a){var b=e.createElement("input");b.setAttribute("type","hidden"),a.appendChild(b).setAttribute("name","D"),a.querySelectorAll("[name=d]").length&&o.push("name"+K+"*[*^$|!~]?="),a.querySelectorAll(":enabled").length||o.push(":enabled",":disabled"),a.querySelectorAll("*,:x"),o.push(",.*:")})),(c.matchesSelector=Y.test(q=m.webkitMatchesSelector||m.mozMatchesSelector||m.oMatchesSelector||m.msMatchesSelector))&&gb(function(a){c.disconnectedMatch=q.call(a,"div"),q.call(a,"[s!='']:x"),p.push("!=",O)}),o=o.length&&new RegExp(o.join("|")),p=p.length&&new RegExp(p.join("|")),b=Y.test(m.compareDocumentPosition),r=b||Y.test(m.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},z=b?function(a,b){if(a===b)return j=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===e||a.ownerDocument===t&&r(t,a)?-1:b===e||b.ownerDocument===t&&r(t,b)?1:i?I.call(i,a)-I.call(i,b):0:4&d?-1:1)}:function(a,b){if(a===b)return j=!0,0;var c,d=0,f=a.parentNode,g=b.parentNode,h=[a],k=[b];if(!f||!g)return a===e?-1:b===e?1:f?-1:g?1:i?I.call(i,a)-I.call(i,b):0;if(f===g)return ib(a,b);c=a;while(c=c.parentNode)h.unshift(c);c=b;while(c=c.parentNode)k.unshift(c);while(h[d]===k[d])d++;return d?ib(h[d],k[d]):h[d]===t?-1:k[d]===t?1:0},e):l},db.matches=function(a,b){return db(a,null,null,b)},db.matchesSelector=function(a,b){if((a.ownerDocument||a)!==l&&k(a),b=b.replace(S,"='$1']"),!(!c.matchesSelector||!n||p&&p.test(b)||o&&o.test(b)))try{var d=q.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return db(b,l,null,[a]).length>0},db.contains=function(a,b){return(a.ownerDocument||a)!==l&&k(a),r(a,b)},db.attr=function(a,b){(a.ownerDocument||a)!==l&&k(a);var e=d.attrHandle[b.toLowerCase()],f=e&&C.call(d.attrHandle,b.toLowerCase())?e(a,b,!n):void 0;return void 0!==f?f:c.attributes||!n?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},db.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)},db.uniqueSort=function(a){var b,d=[],e=0,f=0;if(j=!c.detectDuplicates,i=!c.sortStable&&a.slice(0),a.sort(z),j){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return i=null,a},e=db.getText=function(a){var b,c="",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if("string"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=db.selectors={cacheLength:50,createPseudo:fb,match:V,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(ab,bb),a[3]=(a[4]||a[5]||"").replace(ab,bb),"~="===a[2]&&(a[3]=" "+a[3]+" "),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),"nth"===a[1].slice(0,3)?(a[3]||db.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*("even"===a[3]||"odd"===a[3])),a[5]=+(a[7]+a[8]||"odd"===a[3])):a[3]&&db.error(a[0]),a},PSEUDO:function(a){var b,c=!a[5]&&a[2];return V.CHILD.test(a[0])?null:(a[3]&&void 0!==a[4]?a[2]=a[4]:c&&T.test(c)&&(b=ob(c,!0))&&(b=c.indexOf(")",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(ab,bb).toLowerCase();return"*"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=w[a+" "];return b||(b=new RegExp("(^|"+K+")"+a+"("+K+"|$)"))&&w(a,function(a){return b.test("string"==typeof a.className&&a.className||typeof a.getAttribute!==A&&a.getAttribute("class")||"")})},ATTR:function(a,b,c){return function(d){var e=db.attr(d,a);return null==e?"!="===b:b?(e+="","="===b?e===c:"!="===b?e!==c:"^="===b?c&&0===e.indexOf(c):"*="===b?c&&e.indexOf(c)>-1:"$="===b?c&&e.slice(-c.length)===c:"~="===b?(" "+e+" ").indexOf(c)>-1:"|="===b?e===c||e.slice(0,c.length+1)===c+"-":!1):!0}},CHILD:function(a,b,c,d,e){var f="nth"!==a.slice(0,3),g="last"!==a.slice(-4),h="of-type"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?"nextSibling":"previousSibling",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),t=!i&&!h;if(q){if(f){while(p){l=b;while(l=l[p])if(h?l.nodeName.toLowerCase()===r:1===l.nodeType)return!1;o=p="only"===a&&!o&&"nextSibling"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&t){k=q[s]||(q[s]={}),j=k[a]||[],n=j[0]===u&&j[1],m=j[0]===u&&j[2],l=n&&q.childNodes[n];while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if(1===l.nodeType&&++m&&l===b){k[a]=[u,n,m];break}}else if(t&&(j=(b[s]||(b[s]={}))[a])&&j[0]===u)m=j[1];else while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if((h?l.nodeName.toLowerCase()===r:1===l.nodeType)&&++m&&(t&&((l[s]||(l[s]={}))[a]=[u,m]),l===b))break;return m-=e,m===d||m%d===0&&m/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||db.error("unsupported pseudo: "+a);return e[s]?e(b):e.length>1?(c=[a,a,"",b],d.setFilters.hasOwnProperty(a.toLowerCase())?fb(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=I.call(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:fb(function(a){var b=[],c=[],d=g(a.replace(P,"$1"));return d[s]?fb(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),!c.pop()}}),has:fb(function(a){return function(b){return db(a,b).length>0}}),contains:fb(function(a){return function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:fb(function(a){return U.test(a||"")||db.error("unsupported lang: "+a),a=a.replace(ab,bb).toLowerCase(),function(b){var c;do if(c=n?b.lang:b.getAttribute("xml:lang")||b.getAttribute("lang"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+"-");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===m},focus:function(a){return a===l.activeElement&&(!l.hasFocus||l.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&!!a.checked||"option"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return X.test(a.nodeName)},input:function(a){return W.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&"button"===a.type||"button"===b},text:function(a){var b;return"input"===a.nodeName.toLowerCase()&&"text"===a.type&&(null==(b=a.getAttribute("type"))||"text"===b.toLowerCase())},first:lb(function(){return[0]}),last:lb(function(a,b){return[b-1]}),eq:lb(function(a,b,c){return[0>c?c+b:c]}),even:lb(function(a,b){for(var c=0;b>c;c+=2)a.push(c);return a}),odd:lb(function(a,b){for(var c=1;b>c;c+=2)a.push(c);return a}),lt:lb(function(a,b,c){for(var d=0>c?c+b:c;--d>=0;)a.push(d);return a}),gt:lb(function(a,b,c){for(var d=0>c?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=jb(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=kb(b);function nb(){}nb.prototype=d.filters=d.pseudos,d.setFilters=new nb;function ob(a,b){var c,e,f,g,h,i,j,k=x[a+" "];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){(!c||(e=Q.exec(h)))&&(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=R.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(P," ")}),h=h.slice(c.length));for(g in d.filter)!(e=V[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?db.error(a):x(a,i).slice(0)}function pb(a){for(var b=0,c=a.length,d="";c>b;b++)d+=a[b].value;return d}function qb(a,b,c){var d=b.dir,e=c&&"parentNode"===d,f=v++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j=[u,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(i=b[s]||(b[s]={}),(h=i[d])&&h[0]===u&&h[1]===f)return j[2]=h[2];if(i[d]=j,j[2]=a(b,c,g))return!0}}}function rb(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function sb(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(!c||c(f,d,e))&&(g.push(f),j&&b.push(h));return g}function tb(a,b,c,d,e,f){return d&&!d[s]&&(d=tb(d)),e&&!e[s]&&(e=tb(e,f)),fb(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||wb(b||"*",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:sb(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=sb(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?I.call(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=sb(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):G.apply(g,r)})}function ub(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],i=g||d.relative[" "],j=g?1:0,k=qb(function(a){return a===b},i,!0),l=qb(function(a){return I.call(b,a)>-1},i,!0),m=[function(a,c,d){return!g&&(d||c!==h)||((b=c).nodeType?k(a,c,d):l(a,c,d))}];f>j;j++)if(c=d.relative[a[j].type])m=[qb(rb(m),c)];else{if(c=d.filter[a[j].type].apply(null,a[j].matches),c[s]){for(e=++j;f>e;e++)if(d.relative[a[e].type])break;return tb(j>1&&rb(m),j>1&&pb(a.slice(0,j-1).concat({value:" "===a[j-2].type?"*":""})).replace(P,"$1"),c,e>j&&ub(a.slice(j,e)),f>e&&ub(a=a.slice(e)),f>e&&pb(a))}m.push(c)}return rb(m)}function vb(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,i,j,k){var m,n,o,p=0,q="0",r=f&&[],s=[],t=h,v=f||e&&d.find.TAG("*",k),w=u+=null==t?1:Math.random()||.1,x=v.length;for(k&&(h=g!==l&&g);q!==x&&null!=(m=v[q]);q++){if(e&&m){n=0;while(o=a[n++])if(o(m,g,i)){j.push(m);break}k&&(u=w)}c&&((m=!o&&m)&&p--,f&&r.push(m))}if(p+=q,c&&q!==p){n=0;while(o=b[n++])o(r,s,g,i);if(f){if(p>0)while(q--)r[q]||s[q]||(s[q]=E.call(j));s=sb(s)}G.apply(j,s),k&&!f&&s.length>0&&p+b.length>1&&db.uniqueSort(j)}return k&&(u=w,h=t),r};return c?fb(f):f}g=db.compile=function(a,b){var c,d=[],e=[],f=y[a+" "];if(!f){b||(b=ob(a)),c=b.length;while(c--)f=ub(b[c]),f[s]?d.push(f):e.push(f);f=y(a,vb(e,d))}return f};function wb(a,b,c){for(var d=0,e=b.length;e>d;d++)db(a,b[d],c);return c}function xb(a,b,e,f){var h,i,j,k,l,m=ob(a);if(!f&&1===m.length){if(i=m[0]=m[0].slice(0),i.length>2&&"ID"===(j=i[0]).type&&c.getById&&9===b.nodeType&&n&&d.relative[i[1].type]){if(b=(d.find.ID(j.matches[0].replace(ab,bb),b)||[])[0],!b)return e;a=a.slice(i.shift().value.length)}h=V.needsContext.test(a)?0:i.length;while(h--){if(j=i[h],d.relative[k=j.type])break;if((l=d.find[k])&&(f=l(j.matches[0].replace(ab,bb),$.test(i[0].type)&&mb(b.parentNode)||b))){if(i.splice(h,1),a=f.length&&pb(i),!a)return G.apply(e,f),e;break}}}return g(a,m)(f,b,!n,e,$.test(a)&&mb(b.parentNode)||b),e}return c.sortStable=s.split("").sort(z).join("")===s,c.detectDuplicates=!!j,k(),c.sortDetached=gb(function(a){return 1&a.compareDocumentPosition(l.createElement("div"))}),gb(function(a){return a.innerHTML="<a href='#'></a>","#"===a.firstChild.getAttribute("href")})||hb("type|href|height|width",function(a,b,c){return c?void 0:a.getAttribute(b,"type"===b.toLowerCase()?1:2)}),c.attributes&&gb(function(a){return a.innerHTML="<input/>",a.firstChild.setAttribute("value",""),""===a.firstChild.getAttribute("value")})||hb("value",function(a,b,c){return c||"input"!==a.nodeName.toLowerCase()?void 0:a.defaultValue}),gb(function(a){return null==a.getAttribute("disabled")})||hb(J,function(a,b,c){var d;return c?void 0:a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),db}(a);n.find=t,n.expr=t.selectors,n.expr[":"]=n.expr.pseudos,n.unique=t.uniqueSort,n.text=t.getText,n.isXMLDoc=t.isXML,n.contains=t.contains;var u=n.expr.match.needsContext,v=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,w=/^.[^:#\[\.,]*$/;function x(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if("string"==typeof b){if(w.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return n.inArray(a,b)>=0!==c})}n.filter=function(a,b,c){var d=b[0];return c&&(a=":not("+a+")"),1===b.length&&1===d.nodeType?n.find.matchesSelector(d,a)?[d]:[]:n.find.matches(a,n.grep(b,function(a){return 1===a.nodeType}))},n.fn.extend({find:function(a){var b,c=[],d=this,e=d.length;if("string"!=typeof a)return this.pushStack(n(a).filter(function(){for(b=0;e>b;b++)if(n.contains(d[b],this))return!0}));for(b=0;e>b;b++)n.find(a,d[b],c);return c=this.pushStack(e>1?n.unique(c):c),c.selector=this.selector?this.selector+" "+a:a,c},filter:function(a){return this.pushStack(x(this,a||[],!1))},not:function(a){return this.pushStack(x(this,a||[],!0))},is:function(a){return!!x(this,"string"==typeof a&&u.test(a)?n(a):a||[],!1).length}});var y,z=a.document,A=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,B=n.fn.init=function(a,b){var c,d;if(!a)return this;if("string"==typeof a){if(c="<"===a.charAt(0)&&">"===a.charAt(a.length-1)&&a.length>=3?[null,a,null]:A.exec(a),!c||!c[1]&&b)return!b||b.jquery?(b||y).find(a):this.constructor(b).find(a);if(c[1]){if(b=b instanceof n?b[0]:b,n.merge(this,n.parseHTML(c[1],b&&b.nodeType?b.ownerDocument||b:z,!0)),v.test(c[1])&&n.isPlainObject(b))for(c in b)n.isFunction(this[c])?this[c](b[c]):this.attr(c,b[c]);return this}if(d=z.getElementById(c[2]),d&&d.parentNode){if(d.id!==c[2])return y.find(a);this.length=1,this[0]=d}return this.context=z,this.selector=a,this}return a.nodeType?(this.context=this[0]=a,this.length=1,this):n.isFunction(a)?"undefined"!=typeof y.ready?y.ready(a):a(n):(void 0!==a.selector&&(this.selector=a.selector,this.context=a.context),n.makeArray(a,this))};B.prototype=n.fn,y=n(z);var C=/^(?:parents|prev(?:Until|All))/,D={children:!0,contents:!0,next:!0,prev:!0};n.extend({dir:function(a,b,c){var d=[],e=a[b];while(e&&9!==e.nodeType&&(void 0===c||1!==e.nodeType||!n(e).is(c)))1===e.nodeType&&d.push(e),e=e[b];return d},sibling:function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}}),n.fn.extend({has:function(a){var b,c=n(a,this),d=c.length;return this.filter(function(){for(b=0;d>b;b++)if(n.contains(this,c[b]))return!0})},closest:function(a,b){for(var c,d=0,e=this.length,f=[],g=u.test(a)||"string"!=typeof a?n(a,b||this.context):0;e>d;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&n.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?n.unique(f):f)},index:function(a){return a?"string"==typeof a?n.inArray(this[0],n(a)):n.inArray(a.jquery?a[0]:a,this):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(n.unique(n.merge(this.get(),n(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function E(a,b){do a=a[b];while(a&&1!==a.nodeType);return a}n.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return n.dir(a,"parentNode")},parentsUntil:function(a,b,c){return n.dir(a,"parentNode",c)},next:function(a){return E(a,"nextSibling")},prev:function(a){return E(a,"previousSibling")},nextAll:function(a){return n.dir(a,"nextSibling")},prevAll:function(a){return n.dir(a,"previousSibling")},nextUntil:function(a,b,c){return n.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return n.dir(a,"previousSibling",c)},siblings:function(a){return n.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return n.sibling(a.firstChild)},contents:function(a){return n.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:n.merge([],a.childNodes)}},function(a,b){n.fn[a]=function(c,d){var e=n.map(this,b,c);return"Until"!==a.slice(-5)&&(d=c),d&&"string"==typeof d&&(e=n.filter(d,e)),this.length>1&&(D[a]||(e=n.unique(e)),C.test(a)&&(e=e.reverse())),this.pushStack(e)}});var F=/\S+/g,G={};function H(a){var b=G[a]={};return n.each(a.match(F)||[],function(a,c){b[c]=!0}),b}n.Callbacks=function(a){a="string"==typeof a?G[a]||H(a):n.extend({},a);var b,c,d,e,f,g,h=[],i=!a.once&&[],j=function(l){for(c=a.memory&&l,d=!0,f=g||0,g=0,e=h.length,b=!0;h&&e>f;f++)if(h[f].apply(l[0],l[1])===!1&&a.stopOnFalse){c=!1;break}b=!1,h&&(i?i.length&&j(i.shift()):c?h=[]:k.disable())},k={add:function(){if(h){var d=h.length;!function f(b){n.each(b,function(b,c){var d=n.type(c);"function"===d?a.unique&&k.has(c)||h.push(c):c&&c.length&&"string"!==d&&f(c)})}(arguments),b?e=h.length:c&&(g=d,j(c))}return this},remove:function(){return h&&n.each(arguments,function(a,c){var d;while((d=n.inArray(c,h,d))>-1)h.splice(d,1),b&&(e>=d&&e--,f>=d&&f--)}),this},has:function(a){return a?n.inArray(a,h)>-1:!(!h||!h.length)},empty:function(){return h=[],e=0,this},disable:function(){return h=i=c=void 0,this},disabled:function(){return!h},lock:function(){return i=void 0,c||k.disable(),this},locked:function(){return!i},fireWith:function(a,c){return!h||d&&!i||(c=c||[],c=[a,c.slice?c.slice():c],b?i.push(c):j(c)),this},fire:function(){return k.fireWith(this,arguments),this},fired:function(){return!!d}};return k},n.extend({Deferred:function(a){var b=[["resolve","done",n.Callbacks("once memory"),"resolved"],["reject","fail",n.Callbacks("once memory"),"rejected"],["notify","progress",n.Callbacks("memory")]],c="pending",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return n.Deferred(function(c){n.each(b,function(b,f){var g=n.isFunction(a[b])&&a[b];e[f[1]](function(){var a=g&&g.apply(this,arguments);a&&n.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f[0]+"With"](this===d?c.promise():this,g?[a]:arguments)})}),a=null}).promise()},promise:function(a){return null!=a?n.extend(a,d):d}},e={};return d.pipe=d.then,n.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[1^a][2].disable,b[2][2].lock),e[f[0]]=function(){return e[f[0]+"With"](this===e?d:this,arguments),this},e[f[0]+"With"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=d.call(arguments),e=c.length,f=1!==e||a&&n.isFunction(a.promise)?e:0,g=1===f?a:n.Deferred(),h=function(a,b,c){return function(e){b[a]=this,c[a]=arguments.length>1?d.call(arguments):e,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,k;if(e>1)for(i=new Array(e),j=new Array(e),k=new Array(e);e>b;b++)c[b]&&n.isFunction(c[b].promise)?c[b].promise().done(h(b,k,c)).fail(g.reject).progress(h(b,j,i)):--f;return f||g.resolveWith(k,c),g.promise()}});var I;n.fn.ready=function(a){return n.ready.promise().done(a),this},n.extend({isReady:!1,readyWait:1,holdReady:function(a){a?n.readyWait++:n.ready(!0)},ready:function(a){if(a===!0?!--n.readyWait:!n.isReady){if(!z.body)return setTimeout(n.ready);n.isReady=!0,a!==!0&&--n.readyWait>0||(I.resolveWith(z,[n]),n.fn.trigger&&n(z).trigger("ready").off("ready"))}}});function J(){z.addEventListener?(z.removeEventListener("DOMContentLoaded",K,!1),a.removeEventListener("load",K,!1)):(z.detachEvent("onreadystatechange",K),a.detachEvent("onload",K))}function K(){(z.addEventListener||"load"===event.type||"complete"===z.readyState)&&(J(),n.ready())}n.ready.promise=function(b){if(!I)if(I=n.Deferred(),"complete"===z.readyState)setTimeout(n.ready);else if(z.addEventListener)z.addEventListener("DOMContentLoaded",K,!1),a.addEventListener("load",K,!1);else{z.attachEvent("onreadystatechange",K),a.attachEvent("onload",K);var c=!1;try{c=null==a.frameElement&&z.documentElement}catch(d){}c&&c.doScroll&&!function e(){if(!n.isReady){try{c.doScroll("left")}catch(a){return setTimeout(e,50)}J(),n.ready()}}()}return I.promise(b)};var L="undefined",M;for(M in n(l))break;l.ownLast="0"!==M,l.inlineBlockNeedsLayout=!1,n(function(){var a,b,c=z.getElementsByTagName("body")[0];c&&(a=z.createElement("div"),a.style.cssText="border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px",b=z.createElement("div"),c.appendChild(a).appendChild(b),typeof b.style.zoom!==L&&(b.style.cssText="border:0;margin:0;width:1px;padding:1px;display:inline;zoom:1",(l.inlineBlockNeedsLayout=3===b.offsetWidth)&&(c.style.zoom=1)),c.removeChild(a),a=b=null)}),function(){var a=z.createElement("div");if(null==l.deleteExpando){l.deleteExpando=!0;try{delete a.test}catch(b){l.deleteExpando=!1}}a=null}(),n.acceptData=function(a){var b=n.noData[(a.nodeName+" ").toLowerCase()],c=+a.nodeType||1;return 1!==c&&9!==c?!1:!b||b!==!0&&a.getAttribute("classid")===b};var N=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,O=/([A-Z])/g;function P(a,b,c){if(void 0===c&&1===a.nodeType){var d="data-"+b.replace(O,"-$1").toLowerCase();if(c=a.getAttribute(d),"string"==typeof c){try{c="true"===c?!0:"false"===c?!1:"null"===c?null:+c+""===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}n.data(a,b,c)}else c=void 0}return c}function Q(a){var b;for(b in a)if(("data"!==b||!n.isEmptyObject(a[b]))&&"toJSON"!==b)return!1;return!0}function R(a,b,d,e){if(n.acceptData(a)){var f,g,h=n.expando,i=a.nodeType,j=i?n.cache:a,k=i?a[h]:a[h]&&h;if(k&&j[k]&&(e||j[k].data)||void 0!==d||"string"!=typeof b)return k||(k=i?a[h]=c.pop()||n.guid++:h),j[k]||(j[k]=i?{}:{toJSON:n.noop}),("object"==typeof b||"function"==typeof b)&&(e?j[k]=n.extend(j[k],b):j[k].data=n.extend(j[k].data,b)),g=j[k],e||(g.data||(g.data={}),g=g.data),void 0!==d&&(g[n.camelCase(b)]=d),"string"==typeof b?(f=g[b],null==f&&(f=g[n.camelCase(b)])):f=g,f
}}function S(a,b,c){if(n.acceptData(a)){var d,e,f=a.nodeType,g=f?n.cache:a,h=f?a[n.expando]:n.expando;if(g[h]){if(b&&(d=c?g[h]:g[h].data)){n.isArray(b)?b=b.concat(n.map(b,n.camelCase)):b in d?b=[b]:(b=n.camelCase(b),b=b in d?[b]:b.split(" ")),e=b.length;while(e--)delete d[b[e]];if(c?!Q(d):!n.isEmptyObject(d))return}(c||(delete g[h].data,Q(g[h])))&&(f?n.cleanData([a],!0):l.deleteExpando||g!=g.window?delete g[h]:g[h]=null)}}}n.extend({cache:{},noData:{"applet ":!0,"embed ":!0,"object ":"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"},hasData:function(a){return a=a.nodeType?n.cache[a[n.expando]]:a[n.expando],!!a&&!Q(a)},data:function(a,b,c){return R(a,b,c)},removeData:function(a,b){return S(a,b)},_data:function(a,b,c){return R(a,b,c,!0)},_removeData:function(a,b){return S(a,b,!0)}}),n.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=n.data(f),1===f.nodeType&&!n._data(f,"parsedAttrs"))){c=g.length;while(c--)d=g[c].name,0===d.indexOf("data-")&&(d=n.camelCase(d.slice(5)),P(f,d,e[d]));n._data(f,"parsedAttrs",!0)}return e}return"object"==typeof a?this.each(function(){n.data(this,a)}):arguments.length>1?this.each(function(){n.data(this,a,b)}):f?P(f,a,n.data(f,a)):void 0},removeData:function(a){return this.each(function(){n.removeData(this,a)})}}),n.extend({queue:function(a,b,c){var d;return a?(b=(b||"fx")+"queue",d=n._data(a,b),c&&(!d||n.isArray(c)?d=n._data(a,b,n.makeArray(c)):d.push(c)),d||[]):void 0},dequeue:function(a,b){b=b||"fx";var c=n.queue(a,b),d=c.length,e=c.shift(),f=n._queueHooks(a,b),g=function(){n.dequeue(a,b)};"inprogress"===e&&(e=c.shift(),d--),e&&("fx"===b&&c.unshift("inprogress"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+"queueHooks";return n._data(a,c)||n._data(a,c,{empty:n.Callbacks("once memory").add(function(){n._removeData(a,b+"queue"),n._removeData(a,c)})})}}),n.fn.extend({queue:function(a,b){var c=2;return"string"!=typeof a&&(b=a,a="fx",c--),arguments.length<c?n.queue(this[0],a):void 0===b?this:this.each(function(){var c=n.queue(this,a,b);n._queueHooks(this,a),"fx"===a&&"inprogress"!==c[0]&&n.dequeue(this,a)})},dequeue:function(a){return this.each(function(){n.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,b){var c,d=1,e=n.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};"string"!=typeof a&&(b=a,a=void 0),a=a||"fx";while(g--)c=n._data(f[g],a+"queueHooks"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var T=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,U=["Top","Right","Bottom","Left"],V=function(a,b){return a=b||a,"none"===n.css(a,"display")||!n.contains(a.ownerDocument,a)},W=n.access=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if("object"===n.type(c)){e=!0;for(h in c)n.access(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f},X=/^(?:checkbox|radio)$/i;!function(){var a=z.createDocumentFragment(),b=z.createElement("div"),c=z.createElement("input");if(b.setAttribute("className","t"),b.innerHTML="  <link/><table></table><a href='/a'>a</a>",l.leadingWhitespace=3===b.firstChild.nodeType,l.tbody=!b.getElementsByTagName("tbody").length,l.htmlSerialize=!!b.getElementsByTagName("link").length,l.html5Clone="<:nav></:nav>"!==z.createElement("nav").cloneNode(!0).outerHTML,c.type="checkbox",c.checked=!0,a.appendChild(c),l.appendChecked=c.checked,b.innerHTML="<textarea>x</textarea>",l.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue,a.appendChild(b),b.innerHTML="<input type='radio' checked='checked' name='t'/>",l.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,l.noCloneEvent=!0,b.attachEvent&&(b.attachEvent("onclick",function(){l.noCloneEvent=!1}),b.cloneNode(!0).click()),null==l.deleteExpando){l.deleteExpando=!0;try{delete b.test}catch(d){l.deleteExpando=!1}}a=b=c=null}(),function(){var b,c,d=z.createElement("div");for(b in{submit:!0,change:!0,focusin:!0})c="on"+b,(l[b+"Bubbles"]=c in a)||(d.setAttribute(c,"t"),l[b+"Bubbles"]=d.attributes[c].expando===!1);d=null}();var Y=/^(?:input|select|textarea)$/i,Z=/^key/,$=/^(?:mouse|contextmenu)|click/,_=/^(?:focusinfocus|focusoutblur)$/,ab=/^([^.]*)(?:\.(.+)|)$/;function bb(){return!0}function cb(){return!1}function db(){try{return z.activeElement}catch(a){}}n.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=n._data(a);if(r){c.handler&&(i=c,c=i.handler,e=i.selector),c.guid||(c.guid=n.guid++),(g=r.events)||(g=r.events={}),(k=r.handle)||(k=r.handle=function(a){return typeof n===L||a&&n.event.triggered===a.type?void 0:n.event.dispatch.apply(k.elem,arguments)},k.elem=a),b=(b||"").match(F)||[""],h=b.length;while(h--)f=ab.exec(b[h])||[],o=q=f[1],p=(f[2]||"").split(".").sort(),o&&(j=n.event.special[o]||{},o=(e?j.delegateType:j.bindType)||o,j=n.event.special[o]||{},l=n.extend({type:o,origType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&n.expr.match.needsContext.test(e),namespace:p.join(".")},i),(m=g[o])||(m=g[o]=[],m.delegateCount=0,j.setup&&j.setup.call(a,d,p,k)!==!1||(a.addEventListener?a.addEventListener(o,k,!1):a.attachEvent&&a.attachEvent("on"+o,k))),j.add&&(j.add.call(a,l),l.handler.guid||(l.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,l):m.push(l),n.event.global[o]=!0);a=null}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=n.hasData(a)&&n._data(a);if(r&&(k=r.events)){b=(b||"").match(F)||[""],j=b.length;while(j--)if(h=ab.exec(b[j])||[],o=q=h[1],p=(h[2]||"").split(".").sort(),o){l=n.event.special[o]||{},o=(d?l.delegateType:l.bindType)||o,m=k[o]||[],h=h[2]&&new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),i=f=m.length;while(f--)g=m[f],!e&&q!==g.origType||c&&c.guid!==g.guid||h&&!h.test(g.namespace)||d&&d!==g.selector&&("**"!==d||!g.selector)||(m.splice(f,1),g.selector&&m.delegateCount--,l.remove&&l.remove.call(a,g));i&&!m.length&&(l.teardown&&l.teardown.call(a,p,r.handle)!==!1||n.removeEvent(a,o,r.handle),delete k[o])}else for(o in k)n.event.remove(a,o+b[j],c,d,!0);n.isEmptyObject(k)&&(delete r.handle,n._removeData(a,"events"))}},trigger:function(b,c,d,e){var f,g,h,i,k,l,m,o=[d||z],p=j.call(b,"type")?b.type:b,q=j.call(b,"namespace")?b.namespace.split("."):[];if(h=l=d=d||z,3!==d.nodeType&&8!==d.nodeType&&!_.test(p+n.event.triggered)&&(p.indexOf(".")>=0&&(q=p.split("."),p=q.shift(),q.sort()),g=p.indexOf(":")<0&&"on"+p,b=b[n.expando]?b:new n.Event(p,"object"==typeof b&&b),b.isTrigger=e?2:3,b.namespace=q.join("."),b.namespace_re=b.namespace?new RegExp("(^|\\.)"+q.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,b.result=void 0,b.target||(b.target=d),c=null==c?[b]:n.makeArray(c,[b]),k=n.event.special[p]||{},e||!k.trigger||k.trigger.apply(d,c)!==!1)){if(!e&&!k.noBubble&&!n.isWindow(d)){for(i=k.delegateType||p,_.test(i+p)||(h=h.parentNode);h;h=h.parentNode)o.push(h),l=h;l===(d.ownerDocument||z)&&o.push(l.defaultView||l.parentWindow||a)}m=0;while((h=o[m++])&&!b.isPropagationStopped())b.type=m>1?i:k.bindType||p,f=(n._data(h,"events")||{})[b.type]&&n._data(h,"handle"),f&&f.apply(h,c),f=g&&h[g],f&&f.apply&&n.acceptData(h)&&(b.result=f.apply(h,c),b.result===!1&&b.preventDefault());if(b.type=p,!e&&!b.isDefaultPrevented()&&(!k._default||k._default.apply(o.pop(),c)===!1)&&n.acceptData(d)&&g&&d[p]&&!n.isWindow(d)){l=d[g],l&&(d[g]=null),n.event.triggered=p;try{d[p]()}catch(r){}n.event.triggered=void 0,l&&(d[g]=l)}return b.result}},dispatch:function(a){a=n.event.fix(a);var b,c,e,f,g,h=[],i=d.call(arguments),j=(n._data(this,"events")||{})[a.type]||[],k=n.event.special[a.type]||{};if(i[0]=a,a.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,a)!==!1){h=n.event.handlers.call(this,a,j),b=0;while((f=h[b++])&&!a.isPropagationStopped()){a.currentTarget=f.elem,g=0;while((e=f.handlers[g++])&&!a.isImmediatePropagationStopped())(!a.namespace_re||a.namespace_re.test(e.namespace))&&(a.handleObj=e,a.data=e.data,c=((n.event.special[e.origType]||{}).handle||e.handler).apply(f.elem,i),void 0!==c&&(a.result=c)===!1&&(a.preventDefault(),a.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,a),a.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&&i.nodeType&&(!a.button||"click"!==a.type))for(;i!=this;i=i.parentNode||this)if(1===i.nodeType&&(i.disabled!==!0||"click"!==a.type)){for(e=[],f=0;h>f;f++)d=b[f],c=d.selector+" ",void 0===e[c]&&(e[c]=d.needsContext?n(c,this).index(i)>=0:n.find(c,this,null,[i]).length),e[c]&&e.push(d);e.length&&g.push({elem:i,handlers:e})}return h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},fix:function(a){if(a[n.expando])return a;var b,c,d,e=a.type,f=a,g=this.fixHooks[e];g||(this.fixHooks[e]=g=$.test(e)?this.mouseHooks:Z.test(e)?this.keyHooks:{}),d=g.props?this.props.concat(g.props):this.props,a=new n.Event(f),b=d.length;while(b--)c=d[b],a[c]=f[c];return a.target||(a.target=f.srcElement||z),3===a.target.nodeType&&(a.target=a.target.parentNode),a.metaKey=!!a.metaKey,g.filter?g.filter(a,f):a},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){return null==a.which&&(a.which=null!=b.charCode?b.charCode:b.keyCode),a}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,b){var c,d,e,f=b.button,g=b.fromElement;return null==a.pageX&&null!=b.clientX&&(d=a.target.ownerDocument||z,e=d.documentElement,c=d.body,a.pageX=b.clientX+(e&&e.scrollLeft||c&&c.scrollLeft||0)-(e&&e.clientLeft||c&&c.clientLeft||0),a.pageY=b.clientY+(e&&e.scrollTop||c&&c.scrollTop||0)-(e&&e.clientTop||c&&c.clientTop||0)),!a.relatedTarget&&g&&(a.relatedTarget=g===a.target?b.toElement:g),a.which||void 0===f||(a.which=1&f?1:2&f?3:4&f?2:0),a}},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==db()&&this.focus)try{return this.focus(),!1}catch(a){}},delegateType:"focusin"},blur:{trigger:function(){return this===db()&&this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return n.nodeName(this,"input")&&"checkbox"===this.type&&this.click?(this.click(),!1):void 0},_default:function(a){return n.nodeName(a.target,"a")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&(a.originalEvent.returnValue=a.result)}}},simulate:function(a,b,c,d){var e=n.extend(new n.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?n.event.trigger(e,null,b):n.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},n.removeEvent=z.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)}:function(a,b,c){var d="on"+b;a.detachEvent&&(typeof a[d]===L&&(a[d]=null),a.detachEvent(d,c))},n.Event=function(a,b){return this instanceof n.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&(a.returnValue===!1||a.getPreventDefault&&a.getPreventDefault())?bb:cb):this.type=a,b&&n.extend(this,b),this.timeStamp=a&&a.timeStamp||n.now(),void(this[n.expando]=!0)):new n.Event(a,b)},n.Event.prototype={isDefaultPrevented:cb,isPropagationStopped:cb,isImmediatePropagationStopped:cb,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=bb,a&&(a.preventDefault?a.preventDefault():a.returnValue=!1)},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=bb,a&&(a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0)},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=bb,this.stopPropagation()}},n.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){n.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return(!e||e!==d&&!n.contains(d,e))&&(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),l.submitBubbles||(n.event.special.submit={setup:function(){return n.nodeName(this,"form")?!1:void n.event.add(this,"click._submit keypress._submit",function(a){var b=a.target,c=n.nodeName(b,"input")||n.nodeName(b,"button")?b.form:void 0;c&&!n._data(c,"submitBubbles")&&(n.event.add(c,"submit._submit",function(a){a._submit_bubble=!0}),n._data(c,"submitBubbles",!0))})},postDispatch:function(a){a._submit_bubble&&(delete a._submit_bubble,this.parentNode&&!a.isTrigger&&n.event.simulate("submit",this.parentNode,a,!0))},teardown:function(){return n.nodeName(this,"form")?!1:void n.event.remove(this,"._submit")}}),l.changeBubbles||(n.event.special.change={setup:function(){return Y.test(this.nodeName)?(("checkbox"===this.type||"radio"===this.type)&&(n.event.add(this,"propertychange._change",function(a){"checked"===a.originalEvent.propertyName&&(this._just_changed=!0)}),n.event.add(this,"click._change",function(a){this._just_changed&&!a.isTrigger&&(this._just_changed=!1),n.event.simulate("change",this,a,!0)})),!1):void n.event.add(this,"beforeactivate._change",function(a){var b=a.target;Y.test(b.nodeName)&&!n._data(b,"changeBubbles")&&(n.event.add(b,"change._change",function(a){!this.parentNode||a.isSimulated||a.isTrigger||n.event.simulate("change",this.parentNode,a,!0)}),n._data(b,"changeBubbles",!0))})},handle:function(a){var b=a.target;return this!==b||a.isSimulated||a.isTrigger||"radio"!==b.type&&"checkbox"!==b.type?a.handleObj.handler.apply(this,arguments):void 0},teardown:function(){return n.event.remove(this,"._change"),!Y.test(this.nodeName)}}),l.focusinBubbles||n.each({focus:"focusin",blur:"focusout"},function(a,b){var c=function(a){n.event.simulate(b,a.target,n.event.fix(a),!0)};n.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=n._data(d,b);e||d.addEventListener(a,c,!0),n._data(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=n._data(d,b)-1;e?n._data(d,b,e):(d.removeEventListener(a,c,!0),n._removeData(d,b))}}}),n.fn.extend({on:function(a,b,c,d,e){var f,g;if("object"==typeof a){"string"!=typeof b&&(c=c||b,b=void 0);for(f in a)this.on(f,b,c,a[f],e);return this}if(null==c&&null==d?(d=b,c=b=void 0):null==d&&("string"==typeof b?(d=c,c=void 0):(d=c,c=b,b=void 0)),d===!1)d=cb;else if(!d)return this;return 1===e&&(g=d,d=function(a){return n().off(a),g.apply(this,arguments)},d.guid=g.guid||(g.guid=n.guid++)),this.each(function(){n.event.add(this,a,d,c,b)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,n(a.delegateTarget).off(d.namespace?d.origType+"."+d.namespace:d.origType,d.selector,d.handler),this;if("object"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return(b===!1||"function"==typeof b)&&(c=b,b=void 0),c===!1&&(c=cb),this.each(function(){n.event.remove(this,a,c,b)})},trigger:function(a,b){return this.each(function(){n.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];return c?n.event.trigger(a,b,c,!0):void 0}});function eb(a){var b=fb.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}var fb="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",gb=/ jQuery\d+="(?:null|\d+)"/g,hb=new RegExp("<(?:"+fb+")[\\s/>]","i"),ib=/^\s+/,jb=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,kb=/<([\w:]+)/,lb=/<tbody/i,mb=/<|&#?\w+;/,nb=/<(?:script|style|link)/i,ob=/checked\s*(?:[^=]|=\s*.checked.)/i,pb=/^$|\/(?:java|ecma)script/i,qb=/^true\/(.*)/,rb=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,sb={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],area:[1,"<map>","</map>"],param:[1,"<object>","</object>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:l.htmlSerialize?[0,"",""]:[1,"X<div>","</div>"]},tb=eb(z),ub=tb.appendChild(z.createElement("div"));sb.optgroup=sb.option,sb.tbody=sb.tfoot=sb.colgroup=sb.caption=sb.thead,sb.th=sb.td;function vb(a,b){var c,d,e=0,f=typeof a.getElementsByTagName!==L?a.getElementsByTagName(b||"*"):typeof a.querySelectorAll!==L?a.querySelectorAll(b||"*"):void 0;if(!f)for(f=[],c=a.childNodes||a;null!=(d=c[e]);e++)!b||n.nodeName(d,b)?f.push(d):n.merge(f,vb(d,b));return void 0===b||b&&n.nodeName(a,b)?n.merge([a],f):f}function wb(a){X.test(a.type)&&(a.defaultChecked=a.checked)}function xb(a,b){return n.nodeName(a,"table")&&n.nodeName(11!==b.nodeType?b:b.firstChild,"tr")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function yb(a){return a.type=(null!==n.find.attr(a,"type"))+"/"+a.type,a}function zb(a){var b=qb.exec(a.type);return b?a.type=b[1]:a.removeAttribute("type"),a}function Ab(a,b){for(var c,d=0;null!=(c=a[d]);d++)n._data(c,"globalEval",!b||n._data(b[d],"globalEval"))}function Bb(a,b){if(1===b.nodeType&&n.hasData(a)){var c,d,e,f=n._data(a),g=n._data(b,f),h=f.events;if(h){delete g.handle,g.events={};for(c in h)for(d=0,e=h[c].length;e>d;d++)n.event.add(b,c,h[c][d])}g.data&&(g.data=n.extend({},g.data))}}function Cb(a,b){var c,d,e;if(1===b.nodeType){if(c=b.nodeName.toLowerCase(),!l.noCloneEvent&&b[n.expando]){e=n._data(b);for(d in e.events)n.removeEvent(b,d,e.handle);b.removeAttribute(n.expando)}"script"===c&&b.text!==a.text?(yb(b).text=a.text,zb(b)):"object"===c?(b.parentNode&&(b.outerHTML=a.outerHTML),l.html5Clone&&a.innerHTML&&!n.trim(b.innerHTML)&&(b.innerHTML=a.innerHTML)):"input"===c&&X.test(a.type)?(b.defaultChecked=b.checked=a.checked,b.value!==a.value&&(b.value=a.value)):"option"===c?b.defaultSelected=b.selected=a.defaultSelected:("input"===c||"textarea"===c)&&(b.defaultValue=a.defaultValue)}}n.extend({clone:function(a,b,c){var d,e,f,g,h,i=n.contains(a.ownerDocument,a);if(l.html5Clone||n.isXMLDoc(a)||!hb.test("<"+a.nodeName+">")?f=a.cloneNode(!0):(ub.innerHTML=a.outerHTML,ub.removeChild(f=ub.firstChild)),!(l.noCloneEvent&&l.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||n.isXMLDoc(a)))for(d=vb(f),h=vb(a),g=0;null!=(e=h[g]);++g)d[g]&&Cb(e,d[g]);if(b)if(c)for(h=h||vb(a),d=d||vb(f),g=0;null!=(e=h[g]);g++)Bb(e,d[g]);else Bb(a,f);return d=vb(f,"script"),d.length>0&&Ab(d,!i&&vb(a,"script")),d=h=e=null,f},buildFragment:function(a,b,c,d){for(var e,f,g,h,i,j,k,m=a.length,o=eb(b),p=[],q=0;m>q;q++)if(f=a[q],f||0===f)if("object"===n.type(f))n.merge(p,f.nodeType?[f]:f);else if(mb.test(f)){h=h||o.appendChild(b.createElement("div")),i=(kb.exec(f)||["",""])[1].toLowerCase(),k=sb[i]||sb._default,h.innerHTML=k[1]+f.replace(jb,"<$1></$2>")+k[2],e=k[0];while(e--)h=h.lastChild;if(!l.leadingWhitespace&&ib.test(f)&&p.push(b.createTextNode(ib.exec(f)[0])),!l.tbody){f="table"!==i||lb.test(f)?"<table>"!==k[1]||lb.test(f)?0:h:h.firstChild,e=f&&f.childNodes.length;while(e--)n.nodeName(j=f.childNodes[e],"tbody")&&!j.childNodes.length&&f.removeChild(j)}n.merge(p,h.childNodes),h.textContent="";while(h.firstChild)h.removeChild(h.firstChild);h=o.lastChild}else p.push(b.createTextNode(f));h&&o.removeChild(h),l.appendChecked||n.grep(vb(p,"input"),wb),q=0;while(f=p[q++])if((!d||-1===n.inArray(f,d))&&(g=n.contains(f.ownerDocument,f),h=vb(o.appendChild(f),"script"),g&&Ab(h),c)){e=0;while(f=h[e++])pb.test(f.type||"")&&c.push(f)}return h=null,o},cleanData:function(a,b){for(var d,e,f,g,h=0,i=n.expando,j=n.cache,k=l.deleteExpando,m=n.event.special;null!=(d=a[h]);h++)if((b||n.acceptData(d))&&(f=d[i],g=f&&j[f])){if(g.events)for(e in g.events)m[e]?n.event.remove(d,e):n.removeEvent(d,e,g.handle);j[f]&&(delete j[f],k?delete d[i]:typeof d.removeAttribute!==L?d.removeAttribute(i):d[i]=null,c.push(f))}}}),n.fn.extend({text:function(a){return W(this,function(a){return void 0===a?n.text(this):this.empty().append((this[0]&&this[0].ownerDocument||z).createTextNode(a))},null,a,arguments.length)},append:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=xb(this,a);b.appendChild(a)}})},prepend:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=xb(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},remove:function(a,b){for(var c,d=a?n.filter(a,this):this,e=0;null!=(c=d[e]);e++)b||1!==c.nodeType||n.cleanData(vb(c)),c.parentNode&&(b&&n.contains(c.ownerDocument,c)&&Ab(vb(c,"script")),c.parentNode.removeChild(c));return this},empty:function(){for(var a,b=0;null!=(a=this[b]);b++){1===a.nodeType&&n.cleanData(vb(a,!1));while(a.firstChild)a.removeChild(a.firstChild);a.options&&n.nodeName(a,"select")&&(a.options.length=0)}return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return n.clone(this,a,b)})},html:function(a){return W(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a)return 1===b.nodeType?b.innerHTML.replace(gb,""):void 0;if(!("string"!=typeof a||nb.test(a)||!l.htmlSerialize&&hb.test(a)||!l.leadingWhitespace&&ib.test(a)||sb[(kb.exec(a)||["",""])[1].toLowerCase()])){a=a.replace(jb,"<$1></$2>");try{for(;d>c;c++)b=this[c]||{},1===b.nodeType&&(n.cleanData(vb(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=arguments[0];return this.domManip(arguments,function(b){a=this.parentNode,n.cleanData(vb(this)),a&&a.replaceChild(b,this)}),a&&(a.length||a.nodeType)?this:this.remove()},detach:function(a){return this.remove(a,!0)},domManip:function(a,b){a=e.apply([],a);var c,d,f,g,h,i,j=0,k=this.length,m=this,o=k-1,p=a[0],q=n.isFunction(p);if(q||k>1&&"string"==typeof p&&!l.checkClone&&ob.test(p))return this.each(function(c){var d=m.eq(c);q&&(a[0]=p.call(this,c,d.html())),d.domManip(a,b)});if(k&&(i=n.buildFragment(a,this[0].ownerDocument,!1,this),c=i.firstChild,1===i.childNodes.length&&(i=c),c)){for(g=n.map(vb(i,"script"),yb),f=g.length;k>j;j++)d=i,j!==o&&(d=n.clone(d,!0,!0),f&&n.merge(g,vb(d,"script"))),b.call(this[j],d,j);if(f)for(h=g[g.length-1].ownerDocument,n.map(g,zb),j=0;f>j;j++)d=g[j],pb.test(d.type||"")&&!n._data(d,"globalEval")&&n.contains(h,d)&&(d.src?n._evalUrl&&n._evalUrl(d.src):n.globalEval((d.text||d.textContent||d.innerHTML||"").replace(rb,"")));i=c=null}return this}}),n.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){n.fn[a]=function(a){for(var c,d=0,e=[],g=n(a),h=g.length-1;h>=d;d++)c=d===h?this:this.clone(!0),n(g[d])[b](c),f.apply(e,c.get());return this.pushStack(e)}});var Db,Eb={};function Fb(b,c){var d=n(c.createElement(b)).appendTo(c.body),e=a.getDefaultComputedStyle?a.getDefaultComputedStyle(d[0]).display:n.css(d[0],"display");return d.detach(),e}function Gb(a){var b=z,c=Eb[a];return c||(c=Fb(a,b),"none"!==c&&c||(Db=(Db||n("<iframe frameborder='0' width='0' height='0'/>")).appendTo(b.documentElement),b=(Db[0].contentWindow||Db[0].contentDocument).document,b.write(),b.close(),c=Fb(a,b),Db.detach()),Eb[a]=c),c}!function(){var a,b,c=z.createElement("div"),d="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;padding:0;margin:0;border:0";c.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",a=c.getElementsByTagName("a")[0],a.style.cssText="float:left;opacity:.5",l.opacity=/^0.5/.test(a.style.opacity),l.cssFloat=!!a.style.cssFloat,c.style.backgroundClip="content-box",c.cloneNode(!0).style.backgroundClip="",l.clearCloneStyle="content-box"===c.style.backgroundClip,a=c=null,l.shrinkWrapBlocks=function(){var a,c,e,f;if(null==b){if(a=z.getElementsByTagName("body")[0],!a)return;f="border:0;width:0;height:0;position:absolute;top:0;left:-9999px",c=z.createElement("div"),e=z.createElement("div"),a.appendChild(c).appendChild(e),b=!1,typeof e.style.zoom!==L&&(e.style.cssText=d+";width:1px;padding:1px;zoom:1",e.innerHTML="<div></div>",e.firstChild.style.width="5px",b=3!==e.offsetWidth),a.removeChild(c),a=c=e=null}return b}}();var Hb=/^margin/,Ib=new RegExp("^("+T+")(?!px)[a-z%]+$","i"),Jb,Kb,Lb=/^(top|right|bottom|left)$/;a.getComputedStyle?(Jb=function(a){return a.ownerDocument.defaultView.getComputedStyle(a,null)},Kb=function(a,b,c){var d,e,f,g,h=a.style;return c=c||Jb(a),g=c?c.getPropertyValue(b)||c[b]:void 0,c&&(""!==g||n.contains(a.ownerDocument,a)||(g=n.style(a,b)),Ib.test(g)&&Hb.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0===g?g:g+""}):z.documentElement.currentStyle&&(Jb=function(a){return a.currentStyle},Kb=function(a,b,c){var d,e,f,g,h=a.style;return c=c||Jb(a),g=c?c[b]:void 0,null==g&&h&&h[b]&&(g=h[b]),Ib.test(g)&&!Lb.test(b)&&(d=h.left,e=a.runtimeStyle,f=e&&e.left,f&&(e.left=a.currentStyle.left),h.left="fontSize"===b?"1em":g,g=h.pixelLeft+"px",h.left=d,f&&(e.left=f)),void 0===g?g:g+""||"auto"});function Mb(a,b){return{get:function(){var c=a();if(null!=c)return c?void delete this.get:(this.get=b).apply(this,arguments)}}}!function(){var b,c,d,e,f,g,h=z.createElement("div"),i="border:0;width:0;height:0;position:absolute;top:0;left:-9999px",j="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;padding:0;margin:0;border:0";h.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",b=h.getElementsByTagName("a")[0],b.style.cssText="float:left;opacity:.5",l.opacity=/^0.5/.test(b.style.opacity),l.cssFloat=!!b.style.cssFloat,h.style.backgroundClip="content-box",h.cloneNode(!0).style.backgroundClip="",l.clearCloneStyle="content-box"===h.style.backgroundClip,b=h=null,n.extend(l,{reliableHiddenOffsets:function(){if(null!=c)return c;var a,b,d,e=z.createElement("div"),f=z.getElementsByTagName("body")[0];if(f)return e.setAttribute("className","t"),e.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",a=z.createElement("div"),a.style.cssText=i,f.appendChild(a).appendChild(e),e.innerHTML="<table><tr><td></td><td>t</td></tr></table>",b=e.getElementsByTagName("td"),b[0].style.cssText="padding:0;margin:0;border:0;display:none",d=0===b[0].offsetHeight,b[0].style.display="",b[1].style.display="none",c=d&&0===b[0].offsetHeight,f.removeChild(a),e=f=null,c},boxSizing:function(){return null==d&&k(),d},boxSizingReliable:function(){return null==e&&k(),e},pixelPosition:function(){return null==f&&k(),f},reliableMarginRight:function(){var b,c,d,e;if(null==g&&a.getComputedStyle){if(b=z.getElementsByTagName("body")[0],!b)return;c=z.createElement("div"),d=z.createElement("div"),c.style.cssText=i,b.appendChild(c).appendChild(d),e=d.appendChild(z.createElement("div")),e.style.cssText=d.style.cssText=j,e.style.marginRight=e.style.width="0",d.style.width="1px",g=!parseFloat((a.getComputedStyle(e,null)||{}).marginRight),b.removeChild(c)}return g}});function k(){var b,c,h=z.getElementsByTagName("body")[0];h&&(b=z.createElement("div"),c=z.createElement("div"),b.style.cssText=i,h.appendChild(b).appendChild(c),c.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:absolute;display:block;padding:1px;border:1px;width:4px;margin-top:1%;top:1%",n.swap(h,null!=h.style.zoom?{zoom:1}:{},function(){d=4===c.offsetWidth}),e=!0,f=!1,g=!0,a.getComputedStyle&&(f="1%"!==(a.getComputedStyle(c,null)||{}).top,e="4px"===(a.getComputedStyle(c,null)||{width:"4px"}).width),h.removeChild(b),c=h=null)}}(),n.swap=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};var Nb=/alpha\([^)]*\)/i,Ob=/opacity\s*=\s*([^)]*)/,Pb=/^(none|table(?!-c[ea]).+)/,Qb=new RegExp("^("+T+")(.*)$","i"),Rb=new RegExp("^([+-])=("+T+")","i"),Sb={position:"absolute",visibility:"hidden",display:"block"},Tb={letterSpacing:0,fontWeight:400},Ub=["Webkit","O","Moz","ms"];function Vb(a,b){if(b in a)return b;var c=b.charAt(0).toUpperCase()+b.slice(1),d=b,e=Ub.length;while(e--)if(b=Ub[e]+c,b in a)return b;return d}function Wb(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=n._data(d,"olddisplay"),c=d.style.display,b?(f[g]||"none"!==c||(d.style.display=""),""===d.style.display&&V(d)&&(f[g]=n._data(d,"olddisplay",Gb(d.nodeName)))):f[g]||(e=V(d),(c&&"none"!==c||!e)&&n._data(d,"olddisplay",e?c:n.css(d,"display"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&"none"!==d.style.display&&""!==d.style.display||(d.style.display=b?f[g]||"":"none"));return a}function Xb(a,b,c){var d=Qb.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||"px"):b}function Yb(a,b,c,d,e){for(var f=c===(d?"border":"content")?4:"width"===b?1:0,g=0;4>f;f+=2)"margin"===c&&(g+=n.css(a,c+U[f],!0,e)),d?("content"===c&&(g-=n.css(a,"padding"+U[f],!0,e)),"margin"!==c&&(g-=n.css(a,"border"+U[f]+"Width",!0,e))):(g+=n.css(a,"padding"+U[f],!0,e),"padding"!==c&&(g+=n.css(a,"border"+U[f]+"Width",!0,e)));return g}function Zb(a,b,c){var d=!0,e="width"===b?a.offsetWidth:a.offsetHeight,f=Jb(a),g=l.boxSizing()&&"border-box"===n.css(a,"boxSizing",!1,f);if(0>=e||null==e){if(e=Kb(a,b,f),(0>e||null==e)&&(e=a.style[b]),Ib.test(e))return e;d=g&&(l.boxSizingReliable()||e===a.style[b]),e=parseFloat(e)||0}return e+Yb(a,b,c||(g?"border":"content"),d,f)+"px"}n.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=Kb(a,"opacity");return""===c?"1":c}}}},cssNumber:{columnCount:!0,fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":l.cssFloat?"cssFloat":"styleFloat"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=n.camelCase(b),i=a.style;if(b=n.cssProps[h]||(n.cssProps[h]=Vb(i,h)),g=n.cssHooks[b]||n.cssHooks[h],void 0===c)return g&&"get"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b];if(f=typeof c,"string"===f&&(e=Rb.exec(c))&&(c=(e[1]+1)*e[2]+parseFloat(n.css(a,b)),f="number"),null!=c&&c===c&&("number"!==f||n.cssNumber[h]||(c+="px"),l.clearCloneStyle||""!==c||0!==b.indexOf("background")||(i[b]="inherit"),!(g&&"set"in g&&void 0===(c=g.set(a,c,d)))))try{i[b]="",i[b]=c}catch(j){}}},css:function(a,b,c,d){var e,f,g,h=n.camelCase(b);return b=n.cssProps[h]||(n.cssProps[h]=Vb(a.style,h)),g=n.cssHooks[b]||n.cssHooks[h],g&&"get"in g&&(f=g.get(a,!0,c)),void 0===f&&(f=Kb(a,b,d)),"normal"===f&&b in Tb&&(f=Tb[b]),""===c||c?(e=parseFloat(f),c===!0||n.isNumeric(e)?e||0:f):f}}),n.each(["height","width"],function(a,b){n.cssHooks[b]={get:function(a,c,d){return c?0===a.offsetWidth&&Pb.test(n.css(a,"display"))?n.swap(a,Sb,function(){return Zb(a,b,d)}):Zb(a,b,d):void 0},set:function(a,c,d){var e=d&&Jb(a);return Xb(a,c,d?Yb(a,b,d,l.boxSizing()&&"border-box"===n.css(a,"boxSizing",!1,e),e):0)}}}),l.opacity||(n.cssHooks.opacity={get:function(a,b){return Ob.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?.01*parseFloat(RegExp.$1)+"":b?"1":""},set:function(a,b){var c=a.style,d=a.currentStyle,e=n.isNumeric(b)?"alpha(opacity="+100*b+")":"",f=d&&d.filter||c.filter||"";c.zoom=1,(b>=1||""===b)&&""===n.trim(f.replace(Nb,""))&&c.removeAttribute&&(c.removeAttribute("filter"),""===b||d&&!d.filter)||(c.filter=Nb.test(f)?f.replace(Nb,e):f+" "+e)}}),n.cssHooks.marginRight=Mb(l.reliableMarginRight,function(a,b){return b?n.swap(a,{display:"inline-block"},Kb,[a,"marginRight"]):void 0}),n.each({margin:"",padding:"",border:"Width"},function(a,b){n.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f="string"==typeof c?c.split(" "):[c];4>d;d++)e[a+U[d]+b]=f[d]||f[d-2]||f[0];return e}},Hb.test(a)||(n.cssHooks[a+b].set=Xb)}),n.fn.extend({css:function(a,b){return W(this,function(a,b,c){var d,e,f={},g=0;if(n.isArray(b)){for(d=Jb(a),e=b.length;e>g;g++)f[b[g]]=n.css(a,b[g],!1,d);return f}return void 0!==c?n.style(a,b,c):n.css(a,b)
},a,b,arguments.length>1)},show:function(){return Wb(this,!0)},hide:function(){return Wb(this)},toggle:function(a){return"boolean"==typeof a?a?this.show():this.hide():this.each(function(){V(this)?n(this).show():n(this).hide()})}});function $b(a,b,c,d,e){return new $b.prototype.init(a,b,c,d,e)}n.Tween=$b,$b.prototype={constructor:$b,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||"swing",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(n.cssNumber[c]?"":"px")},cur:function(){var a=$b.propHooks[this.prop];return a&&a.get?a.get(this):$b.propHooks._default.get(this)},run:function(a){var b,c=$b.propHooks[this.prop];return this.pos=b=this.options.duration?n.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):$b.propHooks._default.set(this),this}},$b.prototype.init.prototype=$b.prototype,$b.propHooks={_default:{get:function(a){var b;return null==a.elem[a.prop]||a.elem.style&&null!=a.elem.style[a.prop]?(b=n.css(a.elem,a.prop,""),b&&"auto"!==b?b:0):a.elem[a.prop]},set:function(a){n.fx.step[a.prop]?n.fx.step[a.prop](a):a.elem.style&&(null!=a.elem.style[n.cssProps[a.prop]]||n.cssHooks[a.prop])?n.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},$b.propHooks.scrollTop=$b.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},n.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},n.fx=$b.prototype.init,n.fx.step={};var _b,ac,bc=/^(?:toggle|show|hide)$/,cc=new RegExp("^(?:([+-])=|)("+T+")([a-z%]*)$","i"),dc=/queueHooks$/,ec=[jc],fc={"*":[function(a,b){var c=this.createTween(a,b),d=c.cur(),e=cc.exec(b),f=e&&e[3]||(n.cssNumber[a]?"":"px"),g=(n.cssNumber[a]||"px"!==f&&+d)&&cc.exec(n.css(c.elem,a)),h=1,i=20;if(g&&g[3]!==f){f=f||g[3],e=e||[],g=+d||1;do h=h||".5",g/=h,n.style(c.elem,a,g+f);while(h!==(h=c.cur()/d)&&1!==h&&--i)}return e&&(g=c.start=+g||+d||0,c.unit=f,c.end=e[1]?g+(e[1]+1)*e[2]:+e[2]),c}]};function gc(){return setTimeout(function(){_b=void 0}),_b=n.now()}function hc(a,b){var c,d={height:a},e=0;for(b=b?1:0;4>e;e+=2-b)c=U[e],d["margin"+c]=d["padding"+c]=a;return b&&(d.opacity=d.width=a),d}function ic(a,b,c){for(var d,e=(fc[b]||[]).concat(fc["*"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}function jc(a,b,c){var d,e,f,g,h,i,j,k,m=this,o={},p=a.style,q=a.nodeType&&V(a),r=n._data(a,"fxshow");c.queue||(h=n._queueHooks(a,"fx"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,m.always(function(){m.always(function(){h.unqueued--,n.queue(a,"fx").length||h.empty.fire()})})),1===a.nodeType&&("height"in b||"width"in b)&&(c.overflow=[p.overflow,p.overflowX,p.overflowY],j=n.css(a,"display"),k=Gb(a.nodeName),"none"===j&&(j=k),"inline"===j&&"none"===n.css(a,"float")&&(l.inlineBlockNeedsLayout&&"inline"!==k?p.zoom=1:p.display="inline-block")),c.overflow&&(p.overflow="hidden",l.shrinkWrapBlocks()||m.always(function(){p.overflow=c.overflow[0],p.overflowX=c.overflow[1],p.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],bc.exec(e)){if(delete b[d],f=f||"toggle"===e,e===(q?"hide":"show")){if("show"!==e||!r||void 0===r[d])continue;q=!0}o[d]=r&&r[d]||n.style(a,d)}if(!n.isEmptyObject(o)){r?"hidden"in r&&(q=r.hidden):r=n._data(a,"fxshow",{}),f&&(r.hidden=!q),q?n(a).show():m.done(function(){n(a).hide()}),m.done(function(){var b;n._removeData(a,"fxshow");for(b in o)n.style(a,b,o[b])});for(d in o)g=ic(q?r[d]:0,d,m),d in r||(r[d]=g.start,q&&(g.end=g.start,g.start="width"===d||"height"===d?1:0))}}function kc(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&"expand"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function lc(a,b,c){var d,e,f=0,g=ec.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=_b||gc(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:_b||gc(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;for(kc(k,j.opts.specialEasing);g>f;f++)if(d=ec[f].call(j,a,k,j.opts))return d;return n.map(k,ic,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}n.Animation=n.extend(lc,{tweener:function(a,b){n.isFunction(a)?(b=a,a=["*"]):a=a.split(" ");for(var c,d=0,e=a.length;e>d;d++)c=a[d],fc[c]=fc[c]||[],fc[c].unshift(b)},prefilter:function(a,b){b?ec.unshift(a):ec.push(a)}}),n.speed=function(a,b,c){var d=a&&"object"==typeof a?n.extend({},a):{complete:c||!c&&b||n.isFunction(a)&&a,duration:a,easing:c&&b||b&&!n.isFunction(b)&&b};return d.duration=n.fx.off?0:"number"==typeof d.duration?d.duration:d.duration in n.fx.speeds?n.fx.speeds[d.duration]:n.fx.speeds._default,(null==d.queue||d.queue===!0)&&(d.queue="fx"),d.old=d.complete,d.complete=function(){n.isFunction(d.old)&&d.old.call(this),d.queue&&n.dequeue(this,d.queue)},d},n.fn.extend({fadeTo:function(a,b,c,d){return this.filter(V).css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=n.isEmptyObject(a),f=n.speed(b,c,d),g=function(){var b=lc(this,n.extend({},a),f);(e||n._data(this,"finish"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return"string"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||"fx",[]),this.each(function(){var b=!0,e=null!=a&&a+"queueHooks",f=n.timers,g=n._data(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&dc.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));(b||!c)&&n.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||"fx"),this.each(function(){var b,c=n._data(this),d=c[a+"queue"],e=c[a+"queueHooks"],f=n.timers,g=d?d.length:0;for(c.finish=!0,n.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;g>b;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),n.each(["toggle","show","hide"],function(a,b){var c=n.fn[b];n.fn[b]=function(a,d,e){return null==a||"boolean"==typeof a?c.apply(this,arguments):this.animate(hc(b,!0),a,d,e)}}),n.each({slideDown:hc("show"),slideUp:hc("hide"),slideToggle:hc("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){n.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),n.timers=[],n.fx.tick=function(){var a,b=n.timers,c=0;for(_b=n.now();c<b.length;c++)a=b[c],a()||b[c]!==a||b.splice(c--,1);b.length||n.fx.stop(),_b=void 0},n.fx.timer=function(a){n.timers.push(a),a()?n.fx.start():n.timers.pop()},n.fx.interval=13,n.fx.start=function(){ac||(ac=setInterval(n.fx.tick,n.fx.interval))},n.fx.stop=function(){clearInterval(ac),ac=null},n.fx.speeds={slow:600,fast:200,_default:400},n.fn.delay=function(a,b){return a=n.fx?n.fx.speeds[a]||a:a,b=b||"fx",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},function(){var a,b,c,d,e=z.createElement("div");e.setAttribute("className","t"),e.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",a=e.getElementsByTagName("a")[0],c=z.createElement("select"),d=c.appendChild(z.createElement("option")),b=e.getElementsByTagName("input")[0],a.style.cssText="top:1px",l.getSetAttribute="t"!==e.className,l.style=/top/.test(a.getAttribute("style")),l.hrefNormalized="/a"===a.getAttribute("href"),l.checkOn=!!b.value,l.optSelected=d.selected,l.enctype=!!z.createElement("form").enctype,c.disabled=!0,l.optDisabled=!d.disabled,b=z.createElement("input"),b.setAttribute("value",""),l.input=""===b.getAttribute("value"),b.value="t",b.setAttribute("type","radio"),l.radioValue="t"===b.value,a=b=c=d=e=null}();var mc=/\r/g;n.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=n.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,n(this).val()):a,null==e?e="":"number"==typeof e?e+="":n.isArray(e)&&(e=n.map(e,function(a){return null==a?"":a+""})),b=n.valHooks[this.type]||n.valHooks[this.nodeName.toLowerCase()],b&&"set"in b&&void 0!==b.set(this,e,"value")||(this.value=e))});if(e)return b=n.valHooks[e.type]||n.valHooks[e.nodeName.toLowerCase()],b&&"get"in b&&void 0!==(c=b.get(e,"value"))?c:(c=e.value,"string"==typeof c?c.replace(mc,""):null==c?"":c)}}}),n.extend({valHooks:{option:{get:function(a){var b=n.find.attr(a,"value");return null!=b?b:n.text(a)}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f="select-one"===a.type||0>e,g=f?null:[],h=f?e+1:d.length,i=0>e?h:f?e:0;h>i;i++)if(c=d[i],!(!c.selected&&i!==e||(l.optDisabled?c.disabled:null!==c.getAttribute("disabled"))||c.parentNode.disabled&&n.nodeName(c.parentNode,"optgroup"))){if(b=n(c).val(),f)return b;g.push(b)}return g},set:function(a,b){var c,d,e=a.options,f=n.makeArray(b),g=e.length;while(g--)if(d=e[g],n.inArray(n.valHooks.option.get(d),f)>=0)try{d.selected=c=!0}catch(h){d.scrollHeight}else d.selected=!1;return c||(a.selectedIndex=-1),e}}}}),n.each(["radio","checkbox"],function(){n.valHooks[this]={set:function(a,b){return n.isArray(b)?a.checked=n.inArray(n(a).val(),b)>=0:void 0}},l.checkOn||(n.valHooks[this].get=function(a){return null===a.getAttribute("value")?"on":a.value})});var nc,oc,pc=n.expr.attrHandle,qc=/^(?:checked|selected)$/i,rc=l.getSetAttribute,sc=l.input;n.fn.extend({attr:function(a,b){return W(this,n.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){n.removeAttr(this,a)})}}),n.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(a&&3!==f&&8!==f&&2!==f)return typeof a.getAttribute===L?n.prop(a,b,c):(1===f&&n.isXMLDoc(a)||(b=b.toLowerCase(),d=n.attrHooks[b]||(n.expr.match.bool.test(b)?oc:nc)),void 0===c?d&&"get"in d&&null!==(e=d.get(a,b))?e:(e=n.find.attr(a,b),null==e?void 0:e):null!==c?d&&"set"in d&&void 0!==(e=d.set(a,c,b))?e:(a.setAttribute(b,c+""),c):void n.removeAttr(a,b))},removeAttr:function(a,b){var c,d,e=0,f=b&&b.match(F);if(f&&1===a.nodeType)while(c=f[e++])d=n.propFix[c]||c,n.expr.match.bool.test(c)?sc&&rc||!qc.test(c)?a[d]=!1:a[n.camelCase("default-"+c)]=a[d]=!1:n.attr(a,c,""),a.removeAttribute(rc?c:d)},attrHooks:{type:{set:function(a,b){if(!l.radioValue&&"radio"===b&&n.nodeName(a,"input")){var c=a.value;return a.setAttribute("type",b),c&&(a.value=c),b}}}}}),oc={set:function(a,b,c){return b===!1?n.removeAttr(a,c):sc&&rc||!qc.test(c)?a.setAttribute(!rc&&n.propFix[c]||c,c):a[n.camelCase("default-"+c)]=a[c]=!0,c}},n.each(n.expr.match.bool.source.match(/\w+/g),function(a,b){var c=pc[b]||n.find.attr;pc[b]=sc&&rc||!qc.test(b)?function(a,b,d){var e,f;return d||(f=pc[b],pc[b]=e,e=null!=c(a,b,d)?b.toLowerCase():null,pc[b]=f),e}:function(a,b,c){return c?void 0:a[n.camelCase("default-"+b)]?b.toLowerCase():null}}),sc&&rc||(n.attrHooks.value={set:function(a,b,c){return n.nodeName(a,"input")?void(a.defaultValue=b):nc&&nc.set(a,b,c)}}),rc||(nc={set:function(a,b,c){var d=a.getAttributeNode(c);return d||a.setAttributeNode(d=a.ownerDocument.createAttribute(c)),d.value=b+="","value"===c||b===a.getAttribute(c)?b:void 0}},pc.id=pc.name=pc.coords=function(a,b,c){var d;return c?void 0:(d=a.getAttributeNode(b))&&""!==d.value?d.value:null},n.valHooks.button={get:function(a,b){var c=a.getAttributeNode(b);return c&&c.specified?c.value:void 0},set:nc.set},n.attrHooks.contenteditable={set:function(a,b,c){nc.set(a,""===b?!1:b,c)}},n.each(["width","height"],function(a,b){n.attrHooks[b]={set:function(a,c){return""===c?(a.setAttribute(b,"auto"),c):void 0}}})),l.style||(n.attrHooks.style={get:function(a){return a.style.cssText||void 0},set:function(a,b){return a.style.cssText=b+""}});var tc=/^(?:input|select|textarea|button|object)$/i,uc=/^(?:a|area)$/i;n.fn.extend({prop:function(a,b){return W(this,n.prop,a,b,arguments.length>1)},removeProp:function(a){return a=n.propFix[a]||a,this.each(function(){try{this[a]=void 0,delete this[a]}catch(b){}})}}),n.extend({propFix:{"for":"htmlFor","class":"className"},prop:function(a,b,c){var d,e,f,g=a.nodeType;if(a&&3!==g&&8!==g&&2!==g)return f=1!==g||!n.isXMLDoc(a),f&&(b=n.propFix[b]||b,e=n.propHooks[b]),void 0!==c?e&&"set"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&"get"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){var b=n.find.attr(a,"tabindex");return b?parseInt(b,10):tc.test(a.nodeName)||uc.test(a.nodeName)&&a.href?0:-1}}}}),l.hrefNormalized||n.each(["href","src"],function(a,b){n.propHooks[b]={get:function(a){return a.getAttribute(b,4)}}}),l.optSelected||(n.propHooks.selected={get:function(a){var b=a.parentNode;return b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex),null}}),n.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){n.propFix[this.toLowerCase()]=this}),l.enctype||(n.propFix.enctype="encoding");var vc=/[\t\r\n\f]/g;n.fn.extend({addClass:function(a){var b,c,d,e,f,g,h=0,i=this.length,j="string"==typeof a&&a;if(n.isFunction(a))return this.each(function(b){n(this).addClass(a.call(this,b,this.className))});if(j)for(b=(a||"").match(F)||[];i>h;h++)if(c=this[h],d=1===c.nodeType&&(c.className?(" "+c.className+" ").replace(vc," "):" ")){f=0;while(e=b[f++])d.indexOf(" "+e+" ")<0&&(d+=e+" ");g=n.trim(d),c.className!==g&&(c.className=g)}return this},removeClass:function(a){var b,c,d,e,f,g,h=0,i=this.length,j=0===arguments.length||"string"==typeof a&&a;if(n.isFunction(a))return this.each(function(b){n(this).removeClass(a.call(this,b,this.className))});if(j)for(b=(a||"").match(F)||[];i>h;h++)if(c=this[h],d=1===c.nodeType&&(c.className?(" "+c.className+" ").replace(vc," "):"")){f=0;while(e=b[f++])while(d.indexOf(" "+e+" ")>=0)d=d.replace(" "+e+" "," ");g=a?n.trim(d):"",c.className!==g&&(c.className=g)}return this},toggleClass:function(a,b){var c=typeof a;return"boolean"==typeof b&&"string"===c?b?this.addClass(a):this.removeClass(a):this.each(n.isFunction(a)?function(c){n(this).toggleClass(a.call(this,c,this.className,b),b)}:function(){if("string"===c){var b,d=0,e=n(this),f=a.match(F)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else(c===L||"boolean"===c)&&(this.className&&n._data(this,"__className__",this.className),this.className=this.className||a===!1?"":n._data(this,"__className__")||"")})},hasClass:function(a){for(var b=" "+a+" ",c=0,d=this.length;d>c;c++)if(1===this[c].nodeType&&(" "+this[c].className+" ").replace(vc," ").indexOf(b)>=0)return!0;return!1}}),n.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(a,b){n.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),n.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,"**"):this.off(b,a||"**",c)}});var wc=n.now(),xc=/\?/,yc=/(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;n.parseJSON=function(b){if(a.JSON&&a.JSON.parse)return a.JSON.parse(b+"");var c,d=null,e=n.trim(b+"");return e&&!n.trim(e.replace(yc,function(a,b,e,f){return c&&b&&(d=0),0===d?a:(c=e||b,d+=!f-!e,"")}))?Function("return "+e)():n.error("Invalid JSON: "+b)},n.parseXML=function(b){var c,d;if(!b||"string"!=typeof b)return null;try{a.DOMParser?(d=new DOMParser,c=d.parseFromString(b,"text/xml")):(c=new ActiveXObject("Microsoft.XMLDOM"),c.async="false",c.loadXML(b))}catch(e){c=void 0}return c&&c.documentElement&&!c.getElementsByTagName("parsererror").length||n.error("Invalid XML: "+b),c};var zc,Ac,Bc=/#.*$/,Cc=/([?&])_=[^&]*/,Dc=/^(.*?):[ \t]*([^\r\n]*)\r?$/gm,Ec=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Fc=/^(?:GET|HEAD)$/,Gc=/^\/\//,Hc=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,Ic={},Jc={},Kc="*/".concat("*");try{Ac=location.href}catch(Lc){Ac=z.createElement("a"),Ac.href="",Ac=Ac.href}zc=Hc.exec(Ac.toLowerCase())||[];function Mc(a){return function(b,c){"string"!=typeof b&&(c=b,b="*");var d,e=0,f=b.toLowerCase().match(F)||[];if(n.isFunction(c))while(d=f[e++])"+"===d.charAt(0)?(d=d.slice(1)||"*",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function Nc(a,b,c,d){var e={},f=a===Jc;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return"string"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e["*"]&&g("*")}function Oc(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(d in b)void 0!==b[d]&&((e[d]?a:c||(c={}))[d]=b[d]);return c&&n.extend(!0,a,c),a}function Pc(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while("*"===i[0])i.shift(),void 0===e&&(e=a.mimeType||b.getResponseHeader("Content-Type"));if(e)for(g in h)if(h[g]&&h[g].test(e)){i.unshift(g);break}if(i[0]in c)f=i[0];else{for(g in c){if(!i[0]||a.converters[g+" "+i[0]]){f=g;break}d||(d=g)}f=f||d}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}function Qc(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if("*"===f)f=i;else if("*"!==i&&i!==f){if(g=j[i+" "+f]||j["* "+f],!g)for(e in j)if(h=e.split(" "),h[1]===f&&(g=j[i+" "+h[0]]||j["* "+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a["throws"])b=g(b);else try{b=g(b)}catch(l){return{state:"parsererror",error:g?l:"No conversion from "+i+" to "+f}}}return{state:"success",data:b}}n.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Ac,type:"GET",isLocal:Ec.test(zc[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Kc,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":n.parseJSON,"text xml":n.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?Oc(Oc(a,n.ajaxSettings),b):Oc(n.ajaxSettings,a)},ajaxPrefilter:Mc(Ic),ajaxTransport:Mc(Jc),ajax:function(a,b){"object"==typeof a&&(b=a,a=void 0),b=b||{};var c,d,e,f,g,h,i,j,k=n.ajaxSetup({},b),l=k.context||k,m=k.context&&(l.nodeType||l.jquery)?n(l):n.event,o=n.Deferred(),p=n.Callbacks("once memory"),q=k.statusCode||{},r={},s={},t=0,u="canceled",v={readyState:0,getResponseHeader:function(a){var b;if(2===t){if(!j){j={};while(b=Dc.exec(f))j[b[1].toLowerCase()]=b[2]}b=j[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return 2===t?f:null},setRequestHeader:function(a,b){var c=a.toLowerCase();return t||(a=s[c]=s[c]||a,r[a]=b),this},overrideMimeType:function(a){return t||(k.mimeType=a),this},statusCode:function(a){var b;if(a)if(2>t)for(b in a)q[b]=[q[b],a[b]];else v.always(a[v.status]);return this},abort:function(a){var b=a||u;return i&&i.abort(b),x(0,b),this}};if(o.promise(v).complete=p.add,v.success=v.done,v.error=v.fail,k.url=((a||k.url||Ac)+"").replace(Bc,"").replace(Gc,zc[1]+"//"),k.type=b.method||b.type||k.method||k.type,k.dataTypes=n.trim(k.dataType||"*").toLowerCase().match(F)||[""],null==k.crossDomain&&(c=Hc.exec(k.url.toLowerCase()),k.crossDomain=!(!c||c[1]===zc[1]&&c[2]===zc[2]&&(c[3]||("http:"===c[1]?"80":"443"))===(zc[3]||("http:"===zc[1]?"80":"443")))),k.data&&k.processData&&"string"!=typeof k.data&&(k.data=n.param(k.data,k.traditional)),Nc(Ic,k,b,v),2===t)return v;h=k.global,h&&0===n.active++&&n.event.trigger("ajaxStart"),k.type=k.type.toUpperCase(),k.hasContent=!Fc.test(k.type),e=k.url,k.hasContent||(k.data&&(e=k.url+=(xc.test(e)?"&":"?")+k.data,delete k.data),k.cache===!1&&(k.url=Cc.test(e)?e.replace(Cc,"$1_="+wc++):e+(xc.test(e)?"&":"?")+"_="+wc++)),k.ifModified&&(n.lastModified[e]&&v.setRequestHeader("If-Modified-Since",n.lastModified[e]),n.etag[e]&&v.setRequestHeader("If-None-Match",n.etag[e])),(k.data&&k.hasContent&&k.contentType!==!1||b.contentType)&&v.setRequestHeader("Content-Type",k.contentType),v.setRequestHeader("Accept",k.dataTypes[0]&&k.accepts[k.dataTypes[0]]?k.accepts[k.dataTypes[0]]+("*"!==k.dataTypes[0]?", "+Kc+"; q=0.01":""):k.accepts["*"]);for(d in k.headers)v.setRequestHeader(d,k.headers[d]);if(k.beforeSend&&(k.beforeSend.call(l,v,k)===!1||2===t))return v.abort();u="abort";for(d in{success:1,error:1,complete:1})v[d](k[d]);if(i=Nc(Jc,k,b,v)){v.readyState=1,h&&m.trigger("ajaxSend",[v,k]),k.async&&k.timeout>0&&(g=setTimeout(function(){v.abort("timeout")},k.timeout));try{t=1,i.send(r,x)}catch(w){if(!(2>t))throw w;x(-1,w)}}else x(-1,"No Transport");function x(a,b,c,d){var j,r,s,u,w,x=b;2!==t&&(t=2,g&&clearTimeout(g),i=void 0,f=d||"",v.readyState=a>0?4:0,j=a>=200&&300>a||304===a,c&&(u=Pc(k,v,c)),u=Qc(k,u,v,j),j?(k.ifModified&&(w=v.getResponseHeader("Last-Modified"),w&&(n.lastModified[e]=w),w=v.getResponseHeader("etag"),w&&(n.etag[e]=w)),204===a||"HEAD"===k.type?x="nocontent":304===a?x="notmodified":(x=u.state,r=u.data,s=u.error,j=!s)):(s=x,(a||!x)&&(x="error",0>a&&(a=0))),v.status=a,v.statusText=(b||x)+"",j?o.resolveWith(l,[r,x,v]):o.rejectWith(l,[v,x,s]),v.statusCode(q),q=void 0,h&&m.trigger(j?"ajaxSuccess":"ajaxError",[v,k,j?r:s]),p.fireWith(l,[v,x]),h&&(m.trigger("ajaxComplete",[v,k]),--n.active||n.event.trigger("ajaxStop")))}return v},getJSON:function(a,b,c){return n.get(a,b,c,"json")},getScript:function(a,b){return n.get(a,void 0,b,"script")}}),n.each(["get","post"],function(a,b){n[b]=function(a,c,d,e){return n.isFunction(c)&&(e=e||d,d=c,c=void 0),n.ajax({url:a,type:b,dataType:e,data:c,success:d})}}),n.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(a,b){n.fn[b]=function(a){return this.on(b,a)}}),n._evalUrl=function(a){return n.ajax({url:a,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0})},n.fn.extend({wrapAll:function(a){if(n.isFunction(a))return this.each(function(b){n(this).wrapAll(a.call(this,b))});if(this[0]){var b=n(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&&1===a.firstChild.nodeType)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){return this.each(n.isFunction(a)?function(b){n(this).wrapInner(a.call(this,b))}:function(){var b=n(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=n.isFunction(a);return this.each(function(c){n(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){n.nodeName(this,"body")||n(this).replaceWith(this.childNodes)}).end()}}),n.expr.filters.hidden=function(a){return a.offsetWidth<=0&&a.offsetHeight<=0||!l.reliableHiddenOffsets()&&"none"===(a.style&&a.style.display||n.css(a,"display"))},n.expr.filters.visible=function(a){return!n.expr.filters.hidden(a)};var Rc=/%20/g,Sc=/\[\]$/,Tc=/\r?\n/g,Uc=/^(?:submit|button|image|reset|file)$/i,Vc=/^(?:input|select|textarea|keygen)/i;function Wc(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||Sc.test(a)?d(a,e):Wc(a+"["+("object"==typeof e?b:"")+"]",e,c,d)});else if(c||"object"!==n.type(b))d(a,b);else for(e in b)Wc(a+"["+e+"]",b[e],c,d)}n.param=function(a,b){var c,d=[],e=function(a,b){b=n.isFunction(b)?b():null==b?"":b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};if(void 0===b&&(b=n.ajaxSettings&&n.ajaxSettings.traditional),n.isArray(a)||a.jquery&&!n.isPlainObject(a))n.each(a,function(){e(this.name,this.value)});else for(c in a)Wc(c,a[c],b,e);return d.join("&").replace(Rc,"+")},n.fn.extend({serialize:function(){return n.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=n.prop(this,"elements");return a?n.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!n(this).is(":disabled")&&Vc.test(this.nodeName)&&!Uc.test(a)&&(this.checked||!X.test(a))}).map(function(a,b){var c=n(this).val();return null==c?null:n.isArray(c)?n.map(c,function(a){return{name:b.name,value:a.replace(Tc,"\r\n")}}):{name:b.name,value:c.replace(Tc,"\r\n")}}).get()}}),n.ajaxSettings.xhr=void 0!==a.ActiveXObject?function(){return!this.isLocal&&/^(get|post|head|put|delete|options)$/i.test(this.type)&&$c()||_c()}:$c;var Xc=0,Yc={},Zc=n.ajaxSettings.xhr();a.ActiveXObject&&n(a).on("unload",function(){for(var a in Yc)Yc[a](void 0,!0)}),l.cors=!!Zc&&"withCredentials"in Zc,Zc=l.ajax=!!Zc,Zc&&n.ajaxTransport(function(a){if(!a.crossDomain||l.cors){var b;return{send:function(c,d){var e,f=a.xhr(),g=++Xc;if(f.open(a.type,a.url,a.async,a.username,a.password),a.xhrFields)for(e in a.xhrFields)f[e]=a.xhrFields[e];a.mimeType&&f.overrideMimeType&&f.overrideMimeType(a.mimeType),a.crossDomain||c["X-Requested-With"]||(c["X-Requested-With"]="XMLHttpRequest");for(e in c)void 0!==c[e]&&f.setRequestHeader(e,c[e]+"");f.send(a.hasContent&&a.data||null),b=function(c,e){var h,i,j;if(b&&(e||4===f.readyState))if(delete Yc[g],b=void 0,f.onreadystatechange=n.noop,e)4!==f.readyState&&f.abort();else{j={},h=f.status,"string"==typeof f.responseText&&(j.text=f.responseText);try{i=f.statusText}catch(k){i=""}h||!a.isLocal||a.crossDomain?1223===h&&(h=204):h=j.text?200:404}j&&d(h,i,j,f.getAllResponseHeaders())},a.async?4===f.readyState?setTimeout(b):f.onreadystatechange=Yc[g]=b:b()},abort:function(){b&&b(void 0,!0)}}}});function $c(){try{return new a.XMLHttpRequest}catch(b){}}function _c(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}n.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},converters:{"text script":function(a){return n.globalEval(a),a}}}),n.ajaxPrefilter("script",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type="GET",a.global=!1)}),n.ajaxTransport("script",function(a){if(a.crossDomain){var b,c=z.head||n("head")[0]||z.documentElement;return{send:function(d,e){b=z.createElement("script"),b.async=!0,a.scriptCharset&&(b.charset=a.scriptCharset),b.src=a.url,b.onload=b.onreadystatechange=function(a,c){(c||!b.readyState||/loaded|complete/.test(b.readyState))&&(b.onload=b.onreadystatechange=null,b.parentNode&&b.parentNode.removeChild(b),b=null,c||e(200,"success"))},c.insertBefore(b,c.firstChild)},abort:function(){b&&b.onload(void 0,!0)}}}});var ad=[],bd=/(=)\?(?=&|$)|\?\?/;n.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var a=ad.pop()||n.expando+"_"+wc++;return this[a]=!0,a}}),n.ajaxPrefilter("json jsonp",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(bd.test(b.url)?"url":"string"==typeof b.data&&!(b.contentType||"").indexOf("application/x-www-form-urlencoded")&&bd.test(b.data)&&"data");return h||"jsonp"===b.dataTypes[0]?(e=b.jsonpCallback=n.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(bd,"$1"+e):b.jsonp!==!1&&(b.url+=(xc.test(b.url)?"&":"?")+b.jsonp+"="+e),b.converters["script json"]=function(){return g||n.error(e+" was not called"),g[0]},b.dataTypes[0]="json",f=a[e],a[e]=function(){g=arguments},d.always(function(){a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,ad.push(e)),g&&n.isFunction(f)&&f(g[0]),g=f=void 0}),"script"):void 0}),n.parseHTML=function(a,b,c){if(!a||"string"!=typeof a)return null;"boolean"==typeof b&&(c=b,b=!1),b=b||z;var d=v.exec(a),e=!c&&[];return d?[b.createElement(d[1])]:(d=n.buildFragment([a],b,e),e&&e.length&&n(e).remove(),n.merge([],d.childNodes))};var cd=n.fn.load;n.fn.load=function(a,b,c){if("string"!=typeof a&&cd)return cd.apply(this,arguments);var d,e,f,g=this,h=a.indexOf(" ");return h>=0&&(d=a.slice(h,a.length),a=a.slice(0,h)),n.isFunction(b)?(c=b,b=void 0):b&&"object"==typeof b&&(f="POST"),g.length>0&&n.ajax({url:a,type:f,dataType:"html",data:b}).done(function(a){e=arguments,g.html(d?n("<div>").append(n.parseHTML(a)).find(d):a)}).complete(c&&function(a,b){g.each(c,e||[a.responseText,b,a])}),this},n.expr.filters.animated=function(a){return n.grep(n.timers,function(b){return a===b.elem}).length};var dd=a.document.documentElement;function ed(a){return n.isWindow(a)?a:9===a.nodeType?a.defaultView||a.parentWindow:!1}n.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=n.css(a,"position"),l=n(a),m={};"static"===k&&(a.style.position="relative"),h=l.offset(),f=n.css(a,"top"),i=n.css(a,"left"),j=("absolute"===k||"fixed"===k)&&n.inArray("auto",[f,i])>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),n.isFunction(b)&&(b=b.call(a,c,h)),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),"using"in b?b.using.call(a,m):l.css(m)}},n.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){n.offset.setOffset(this,a,b)});var b,c,d={top:0,left:0},e=this[0],f=e&&e.ownerDocument;if(f)return b=f.documentElement,n.contains(b,e)?(typeof e.getBoundingClientRect!==L&&(d=e.getBoundingClientRect()),c=ed(f),{top:d.top+(c.pageYOffset||b.scrollTop)-(b.clientTop||0),left:d.left+(c.pageXOffset||b.scrollLeft)-(b.clientLeft||0)}):d},position:function(){if(this[0]){var a,b,c={top:0,left:0},d=this[0];return"fixed"===n.css(d,"position")?b=d.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),n.nodeName(a[0],"html")||(c=a.offset()),c.top+=n.css(a[0],"borderTopWidth",!0),c.left+=n.css(a[0],"borderLeftWidth",!0)),{top:b.top-c.top-n.css(d,"marginTop",!0),left:b.left-c.left-n.css(d,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||dd;while(a&&!n.nodeName(a,"html")&&"static"===n.css(a,"position"))a=a.offsetParent;return a||dd})}}),n.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(a,b){var c=/Y/.test(b);n.fn[a]=function(d){return W(this,function(a,d,e){var f=ed(a);return void 0===e?f?b in f?f[b]:f.document.documentElement[d]:a[d]:void(f?f.scrollTo(c?n(f).scrollLeft():e,c?e:n(f).scrollTop()):a[d]=e)},a,d,arguments.length,null)}}),n.each(["top","left"],function(a,b){n.cssHooks[b]=Mb(l.pixelPosition,function(a,c){return c?(c=Kb(a,b),Ib.test(c)?n(a).position()[b]+"px":c):void 0})}),n.each({Height:"height",Width:"width"},function(a,b){n.each({padding:"inner"+a,content:b,"":"outer"+a},function(c,d){n.fn[d]=function(d,e){var f=arguments.length&&(c||"boolean"!=typeof d),g=c||(d===!0||e===!0?"margin":"border");return W(this,function(b,c,d){var e;return n.isWindow(b)?b.document.documentElement["client"+a]:9===b.nodeType?(e=b.documentElement,Math.max(b.body["scroll"+a],e["scroll"+a],b.body["offset"+a],e["offset"+a],e["client"+a])):void 0===d?n.css(b,c,g):n.style(b,c,d,g)},b,f?d:void 0,f,null)}})}),n.fn.size=function(){return this.length},n.fn.andSelf=n.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return n});var fd=a.jQuery,gd=a.$;return n.noConflict=function(b){return a.$===n&&(a.$=gd),b&&a.jQuery===n&&(a.jQuery=fd),n},typeof b===L&&(a.jQuery=a.$=n),n});
//# sourceMappingURL=jquery.min.map
//! moment.js
//! version : 2.10.6
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com
!function(a,b){"object"==typeof exports&&"undefined"!=typeof module?module.exports=b():"function"==typeof define&&define.amd?define(b):a.moment=b()}(this,function(){"use strict";function a(){return Hc.apply(null,arguments)}function b(a){Hc=a}function c(a){return"[object Array]"===Object.prototype.toString.call(a)}function d(a){return a instanceof Date||"[object Date]"===Object.prototype.toString.call(a)}function e(a,b){var c,d=[];for(c=0;c<a.length;++c)d.push(b(a[c],c));return d}function f(a,b){return Object.prototype.hasOwnProperty.call(a,b)}function g(a,b){for(var c in b)f(b,c)&&(a[c]=b[c]);return f(b,"toString")&&(a.toString=b.toString),f(b,"valueOf")&&(a.valueOf=b.valueOf),a}function h(a,b,c,d){return Ca(a,b,c,d,!0).utc()}function i(){return{empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1}}function j(a){return null==a._pf&&(a._pf=i()),a._pf}function k(a){if(null==a._isValid){var b=j(a);a._isValid=!(isNaN(a._d.getTime())||!(b.overflow<0)||b.empty||b.invalidMonth||b.invalidWeekday||b.nullInput||b.invalidFormat||b.userInvalidated),a._strict&&(a._isValid=a._isValid&&0===b.charsLeftOver&&0===b.unusedTokens.length&&void 0===b.bigHour)}return a._isValid}function l(a){var b=h(NaN);return null!=a?g(j(b),a):j(b).userInvalidated=!0,b}function m(a,b){var c,d,e;if("undefined"!=typeof b._isAMomentObject&&(a._isAMomentObject=b._isAMomentObject),"undefined"!=typeof b._i&&(a._i=b._i),"undefined"!=typeof b._f&&(a._f=b._f),"undefined"!=typeof b._l&&(a._l=b._l),"undefined"!=typeof b._strict&&(a._strict=b._strict),"undefined"!=typeof b._tzm&&(a._tzm=b._tzm),"undefined"!=typeof b._isUTC&&(a._isUTC=b._isUTC),"undefined"!=typeof b._offset&&(a._offset=b._offset),"undefined"!=typeof b._pf&&(a._pf=j(b)),"undefined"!=typeof b._locale&&(a._locale=b._locale),Jc.length>0)for(c in Jc)d=Jc[c],e=b[d],"undefined"!=typeof e&&(a[d]=e);return a}function n(b){m(this,b),this._d=new Date(null!=b._d?b._d.getTime():NaN),Kc===!1&&(Kc=!0,a.updateOffset(this),Kc=!1)}function o(a){return a instanceof n||null!=a&&null!=a._isAMomentObject}function p(a){return 0>a?Math.ceil(a):Math.floor(a)}function q(a){var b=+a,c=0;return 0!==b&&isFinite(b)&&(c=p(b)),c}function r(a,b,c){var d,e=Math.min(a.length,b.length),f=Math.abs(a.length-b.length),g=0;for(d=0;e>d;d++)(c&&a[d]!==b[d]||!c&&q(a[d])!==q(b[d]))&&g++;return g+f}function s(){}function t(a){return a?a.toLowerCase().replace("_","-"):a}function u(a){for(var b,c,d,e,f=0;f<a.length;){for(e=t(a[f]).split("-"),b=e.length,c=t(a[f+1]),c=c?c.split("-"):null;b>0;){if(d=v(e.slice(0,b).join("-")))return d;if(c&&c.length>=b&&r(e,c,!0)>=b-1)break;b--}f++}return null}function v(a){var b=null;if(!Lc[a]&&"undefined"!=typeof module&&module&&module.exports)try{b=Ic._abbr,require("./locale/"+a),w(b)}catch(c){}return Lc[a]}function w(a,b){var c;return a&&(c="undefined"==typeof b?y(a):x(a,b),c&&(Ic=c)),Ic._abbr}function x(a,b){return null!==b?(b.abbr=a,Lc[a]=Lc[a]||new s,Lc[a].set(b),w(a),Lc[a]):(delete Lc[a],null)}function y(a){var b;if(a&&a._locale&&a._locale._abbr&&(a=a._locale._abbr),!a)return Ic;if(!c(a)){if(b=v(a))return b;a=[a]}return u(a)}function z(a,b){var c=a.toLowerCase();Mc[c]=Mc[c+"s"]=Mc[b]=a}function A(a){return"string"==typeof a?Mc[a]||Mc[a.toLowerCase()]:void 0}function B(a){var b,c,d={};for(c in a)f(a,c)&&(b=A(c),b&&(d[b]=a[c]));return d}function C(b,c){return function(d){return null!=d?(E(this,b,d),a.updateOffset(this,c),this):D(this,b)}}function D(a,b){return a._d["get"+(a._isUTC?"UTC":"")+b]()}function E(a,b,c){return a._d["set"+(a._isUTC?"UTC":"")+b](c)}function F(a,b){var c;if("object"==typeof a)for(c in a)this.set(c,a[c]);else if(a=A(a),"function"==typeof this[a])return this[a](b);return this}function G(a,b,c){var d=""+Math.abs(a),e=b-d.length,f=a>=0;return(f?c?"+":"":"-")+Math.pow(10,Math.max(0,e)).toString().substr(1)+d}function H(a,b,c,d){var e=d;"string"==typeof d&&(e=function(){return this[d]()}),a&&(Qc[a]=e),b&&(Qc[b[0]]=function(){return G(e.apply(this,arguments),b[1],b[2])}),c&&(Qc[c]=function(){return this.localeData().ordinal(e.apply(this,arguments),a)})}function I(a){return a.match(/\[[\s\S]/)?a.replace(/^\[|\]$/g,""):a.replace(/\\/g,"")}function J(a){var b,c,d=a.match(Nc);for(b=0,c=d.length;c>b;b++)Qc[d[b]]?d[b]=Qc[d[b]]:d[b]=I(d[b]);return function(e){var f="";for(b=0;c>b;b++)f+=d[b]instanceof Function?d[b].call(e,a):d[b];return f}}function K(a,b){return a.isValid()?(b=L(b,a.localeData()),Pc[b]=Pc[b]||J(b),Pc[b](a)):a.localeData().invalidDate()}function L(a,b){function c(a){return b.longDateFormat(a)||a}var d=5;for(Oc.lastIndex=0;d>=0&&Oc.test(a);)a=a.replace(Oc,c),Oc.lastIndex=0,d-=1;return a}function M(a){return"function"==typeof a&&"[object Function]"===Object.prototype.toString.call(a)}function N(a,b,c){dd[a]=M(b)?b:function(a){return a&&c?c:b}}function O(a,b){return f(dd,a)?dd[a](b._strict,b._locale):new RegExp(P(a))}function P(a){return a.replace("\\","").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(a,b,c,d,e){return b||c||d||e}).replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}function Q(a,b){var c,d=b;for("string"==typeof a&&(a=[a]),"number"==typeof b&&(d=function(a,c){c[b]=q(a)}),c=0;c<a.length;c++)ed[a[c]]=d}function R(a,b){Q(a,function(a,c,d,e){d._w=d._w||{},b(a,d._w,d,e)})}function S(a,b,c){null!=b&&f(ed,a)&&ed[a](b,c._a,c,a)}function T(a,b){return new Date(Date.UTC(a,b+1,0)).getUTCDate()}function U(a){return this._months[a.month()]}function V(a){return this._monthsShort[a.month()]}function W(a,b,c){var d,e,f;for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),d=0;12>d;d++){if(e=h([2e3,d]),c&&!this._longMonthsParse[d]&&(this._longMonthsParse[d]=new RegExp("^"+this.months(e,"").replace(".","")+"$","i"),this._shortMonthsParse[d]=new RegExp("^"+this.monthsShort(e,"").replace(".","")+"$","i")),c||this._monthsParse[d]||(f="^"+this.months(e,"")+"|^"+this.monthsShort(e,""),this._monthsParse[d]=new RegExp(f.replace(".",""),"i")),c&&"MMMM"===b&&this._longMonthsParse[d].test(a))return d;if(c&&"MMM"===b&&this._shortMonthsParse[d].test(a))return d;if(!c&&this._monthsParse[d].test(a))return d}}function X(a,b){var c;return"string"==typeof b&&(b=a.localeData().monthsParse(b),"number"!=typeof b)?a:(c=Math.min(a.date(),T(a.year(),b)),a._d["set"+(a._isUTC?"UTC":"")+"Month"](b,c),a)}function Y(b){return null!=b?(X(this,b),a.updateOffset(this,!0),this):D(this,"Month")}function Z(){return T(this.year(),this.month())}function $(a){var b,c=a._a;return c&&-2===j(a).overflow&&(b=c[gd]<0||c[gd]>11?gd:c[hd]<1||c[hd]>T(c[fd],c[gd])?hd:c[id]<0||c[id]>24||24===c[id]&&(0!==c[jd]||0!==c[kd]||0!==c[ld])?id:c[jd]<0||c[jd]>59?jd:c[kd]<0||c[kd]>59?kd:c[ld]<0||c[ld]>999?ld:-1,j(a)._overflowDayOfYear&&(fd>b||b>hd)&&(b=hd),j(a).overflow=b),a}function _(b){a.suppressDeprecationWarnings===!1&&"undefined"!=typeof console&&console.warn&&console.warn("Deprecation warning: "+b)}function aa(a,b){var c=!0;return g(function(){return c&&(_(a+"\n"+(new Error).stack),c=!1),b.apply(this,arguments)},b)}function ba(a,b){od[a]||(_(b),od[a]=!0)}function ca(a){var b,c,d=a._i,e=pd.exec(d);if(e){for(j(a).iso=!0,b=0,c=qd.length;c>b;b++)if(qd[b][1].exec(d)){a._f=qd[b][0];break}for(b=0,c=rd.length;c>b;b++)if(rd[b][1].exec(d)){a._f+=(e[6]||" ")+rd[b][0];break}d.match(ad)&&(a._f+="Z"),va(a)}else a._isValid=!1}function da(b){var c=sd.exec(b._i);return null!==c?void(b._d=new Date(+c[1])):(ca(b),void(b._isValid===!1&&(delete b._isValid,a.createFromInputFallback(b))))}function ea(a,b,c,d,e,f,g){var h=new Date(a,b,c,d,e,f,g);return 1970>a&&h.setFullYear(a),h}function fa(a){var b=new Date(Date.UTC.apply(null,arguments));return 1970>a&&b.setUTCFullYear(a),b}function ga(a){return ha(a)?366:365}function ha(a){return a%4===0&&a%100!==0||a%400===0}function ia(){return ha(this.year())}function ja(a,b,c){var d,e=c-b,f=c-a.day();return f>e&&(f-=7),e-7>f&&(f+=7),d=Da(a).add(f,"d"),{week:Math.ceil(d.dayOfYear()/7),year:d.year()}}function ka(a){return ja(a,this._week.dow,this._week.doy).week}function la(){return this._week.dow}function ma(){return this._week.doy}function na(a){var b=this.localeData().week(this);return null==a?b:this.add(7*(a-b),"d")}function oa(a){var b=ja(this,1,4).week;return null==a?b:this.add(7*(a-b),"d")}function pa(a,b,c,d,e){var f,g=6+e-d,h=fa(a,0,1+g),i=h.getUTCDay();return e>i&&(i+=7),c=null!=c?1*c:e,f=1+g+7*(b-1)-i+c,{year:f>0?a:a-1,dayOfYear:f>0?f:ga(a-1)+f}}function qa(a){var b=Math.round((this.clone().startOf("day")-this.clone().startOf("year"))/864e5)+1;return null==a?b:this.add(a-b,"d")}function ra(a,b,c){return null!=a?a:null!=b?b:c}function sa(a){var b=new Date;return a._useUTC?[b.getUTCFullYear(),b.getUTCMonth(),b.getUTCDate()]:[b.getFullYear(),b.getMonth(),b.getDate()]}function ta(a){var b,c,d,e,f=[];if(!a._d){for(d=sa(a),a._w&&null==a._a[hd]&&null==a._a[gd]&&ua(a),a._dayOfYear&&(e=ra(a._a[fd],d[fd]),a._dayOfYear>ga(e)&&(j(a)._overflowDayOfYear=!0),c=fa(e,0,a._dayOfYear),a._a[gd]=c.getUTCMonth(),a._a[hd]=c.getUTCDate()),b=0;3>b&&null==a._a[b];++b)a._a[b]=f[b]=d[b];for(;7>b;b++)a._a[b]=f[b]=null==a._a[b]?2===b?1:0:a._a[b];24===a._a[id]&&0===a._a[jd]&&0===a._a[kd]&&0===a._a[ld]&&(a._nextDay=!0,a._a[id]=0),a._d=(a._useUTC?fa:ea).apply(null,f),null!=a._tzm&&a._d.setUTCMinutes(a._d.getUTCMinutes()-a._tzm),a._nextDay&&(a._a[id]=24)}}function ua(a){var b,c,d,e,f,g,h;b=a._w,null!=b.GG||null!=b.W||null!=b.E?(f=1,g=4,c=ra(b.GG,a._a[fd],ja(Da(),1,4).year),d=ra(b.W,1),e=ra(b.E,1)):(f=a._locale._week.dow,g=a._locale._week.doy,c=ra(b.gg,a._a[fd],ja(Da(),f,g).year),d=ra(b.w,1),null!=b.d?(e=b.d,f>e&&++d):e=null!=b.e?b.e+f:f),h=pa(c,d,e,g,f),a._a[fd]=h.year,a._dayOfYear=h.dayOfYear}function va(b){if(b._f===a.ISO_8601)return void ca(b);b._a=[],j(b).empty=!0;var c,d,e,f,g,h=""+b._i,i=h.length,k=0;for(e=L(b._f,b._locale).match(Nc)||[],c=0;c<e.length;c++)f=e[c],d=(h.match(O(f,b))||[])[0],d&&(g=h.substr(0,h.indexOf(d)),g.length>0&&j(b).unusedInput.push(g),h=h.slice(h.indexOf(d)+d.length),k+=d.length),Qc[f]?(d?j(b).empty=!1:j(b).unusedTokens.push(f),S(f,d,b)):b._strict&&!d&&j(b).unusedTokens.push(f);j(b).charsLeftOver=i-k,h.length>0&&j(b).unusedInput.push(h),j(b).bigHour===!0&&b._a[id]<=12&&b._a[id]>0&&(j(b).bigHour=void 0),b._a[id]=wa(b._locale,b._a[id],b._meridiem),ta(b),$(b)}function wa(a,b,c){var d;return null==c?b:null!=a.meridiemHour?a.meridiemHour(b,c):null!=a.isPM?(d=a.isPM(c),d&&12>b&&(b+=12),d||12!==b||(b=0),b):b}function xa(a){var b,c,d,e,f;if(0===a._f.length)return j(a).invalidFormat=!0,void(a._d=new Date(NaN));for(e=0;e<a._f.length;e++)f=0,b=m({},a),null!=a._useUTC&&(b._useUTC=a._useUTC),b._f=a._f[e],va(b),k(b)&&(f+=j(b).charsLeftOver,f+=10*j(b).unusedTokens.length,j(b).score=f,(null==d||d>f)&&(d=f,c=b));g(a,c||b)}function ya(a){if(!a._d){var b=B(a._i);a._a=[b.year,b.month,b.day||b.date,b.hour,b.minute,b.second,b.millisecond],ta(a)}}function za(a){var b=new n($(Aa(a)));return b._nextDay&&(b.add(1,"d"),b._nextDay=void 0),b}function Aa(a){var b=a._i,e=a._f;return a._locale=a._locale||y(a._l),null===b||void 0===e&&""===b?l({nullInput:!0}):("string"==typeof b&&(a._i=b=a._locale.preparse(b)),o(b)?new n($(b)):(c(e)?xa(a):e?va(a):d(b)?a._d=b:Ba(a),a))}function Ba(b){var f=b._i;void 0===f?b._d=new Date:d(f)?b._d=new Date(+f):"string"==typeof f?da(b):c(f)?(b._a=e(f.slice(0),function(a){return parseInt(a,10)}),ta(b)):"object"==typeof f?ya(b):"number"==typeof f?b._d=new Date(f):a.createFromInputFallback(b)}function Ca(a,b,c,d,e){var f={};return"boolean"==typeof c&&(d=c,c=void 0),f._isAMomentObject=!0,f._useUTC=f._isUTC=e,f._l=c,f._i=a,f._f=b,f._strict=d,za(f)}function Da(a,b,c,d){return Ca(a,b,c,d,!1)}function Ea(a,b){var d,e;if(1===b.length&&c(b[0])&&(b=b[0]),!b.length)return Da();for(d=b[0],e=1;e<b.length;++e)(!b[e].isValid()||b[e][a](d))&&(d=b[e]);return d}function Fa(){var a=[].slice.call(arguments,0);return Ea("isBefore",a)}function Ga(){var a=[].slice.call(arguments,0);return Ea("isAfter",a)}function Ha(a){var b=B(a),c=b.year||0,d=b.quarter||0,e=b.month||0,f=b.week||0,g=b.day||0,h=b.hour||0,i=b.minute||0,j=b.second||0,k=b.millisecond||0;this._milliseconds=+k+1e3*j+6e4*i+36e5*h,this._days=+g+7*f,this._months=+e+3*d+12*c,this._data={},this._locale=y(),this._bubble()}function Ia(a){return a instanceof Ha}function Ja(a,b){H(a,0,0,function(){var a=this.utcOffset(),c="+";return 0>a&&(a=-a,c="-"),c+G(~~(a/60),2)+b+G(~~a%60,2)})}function Ka(a){var b=(a||"").match(ad)||[],c=b[b.length-1]||[],d=(c+"").match(xd)||["-",0,0],e=+(60*d[1])+q(d[2]);return"+"===d[0]?e:-e}function La(b,c){var e,f;return c._isUTC?(e=c.clone(),f=(o(b)||d(b)?+b:+Da(b))-+e,e._d.setTime(+e._d+f),a.updateOffset(e,!1),e):Da(b).local()}function Ma(a){return 15*-Math.round(a._d.getTimezoneOffset()/15)}function Na(b,c){var d,e=this._offset||0;return null!=b?("string"==typeof b&&(b=Ka(b)),Math.abs(b)<16&&(b=60*b),!this._isUTC&&c&&(d=Ma(this)),this._offset=b,this._isUTC=!0,null!=d&&this.add(d,"m"),e!==b&&(!c||this._changeInProgress?bb(this,Ya(b-e,"m"),1,!1):this._changeInProgress||(this._changeInProgress=!0,a.updateOffset(this,!0),this._changeInProgress=null)),this):this._isUTC?e:Ma(this)}function Oa(a,b){return null!=a?("string"!=typeof a&&(a=-a),this.utcOffset(a,b),this):-this.utcOffset()}function Pa(a){return this.utcOffset(0,a)}function Qa(a){return this._isUTC&&(this.utcOffset(0,a),this._isUTC=!1,a&&this.subtract(Ma(this),"m")),this}function Ra(){return this._tzm?this.utcOffset(this._tzm):"string"==typeof this._i&&this.utcOffset(Ka(this._i)),this}function Sa(a){return a=a?Da(a).utcOffset():0,(this.utcOffset()-a)%60===0}function Ta(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset()}function Ua(){if("undefined"!=typeof this._isDSTShifted)return this._isDSTShifted;var a={};if(m(a,this),a=Aa(a),a._a){var b=a._isUTC?h(a._a):Da(a._a);this._isDSTShifted=this.isValid()&&r(a._a,b.toArray())>0}else this._isDSTShifted=!1;return this._isDSTShifted}function Va(){return!this._isUTC}function Wa(){return this._isUTC}function Xa(){return this._isUTC&&0===this._offset}function Ya(a,b){var c,d,e,g=a,h=null;return Ia(a)?g={ms:a._milliseconds,d:a._days,M:a._months}:"number"==typeof a?(g={},b?g[b]=a:g.milliseconds=a):(h=yd.exec(a))?(c="-"===h[1]?-1:1,g={y:0,d:q(h[hd])*c,h:q(h[id])*c,m:q(h[jd])*c,s:q(h[kd])*c,ms:q(h[ld])*c}):(h=zd.exec(a))?(c="-"===h[1]?-1:1,g={y:Za(h[2],c),M:Za(h[3],c),d:Za(h[4],c),h:Za(h[5],c),m:Za(h[6],c),s:Za(h[7],c),w:Za(h[8],c)}):null==g?g={}:"object"==typeof g&&("from"in g||"to"in g)&&(e=_a(Da(g.from),Da(g.to)),g={},g.ms=e.milliseconds,g.M=e.months),d=new Ha(g),Ia(a)&&f(a,"_locale")&&(d._locale=a._locale),d}function Za(a,b){var c=a&&parseFloat(a.replace(",","."));return(isNaN(c)?0:c)*b}function $a(a,b){var c={milliseconds:0,months:0};return c.months=b.month()-a.month()+12*(b.year()-a.year()),a.clone().add(c.months,"M").isAfter(b)&&--c.months,c.milliseconds=+b-+a.clone().add(c.months,"M"),c}function _a(a,b){var c;return b=La(b,a),a.isBefore(b)?c=$a(a,b):(c=$a(b,a),c.milliseconds=-c.milliseconds,c.months=-c.months),c}function ab(a,b){return function(c,d){var e,f;return null===d||isNaN(+d)||(ba(b,"moment()."+b+"(period, number) is deprecated. Please use moment()."+b+"(number, period)."),f=c,c=d,d=f),c="string"==typeof c?+c:c,e=Ya(c,d),bb(this,e,a),this}}function bb(b,c,d,e){var f=c._milliseconds,g=c._days,h=c._months;e=null==e?!0:e,f&&b._d.setTime(+b._d+f*d),g&&E(b,"Date",D(b,"Date")+g*d),h&&X(b,D(b,"Month")+h*d),e&&a.updateOffset(b,g||h)}function cb(a,b){var c=a||Da(),d=La(c,this).startOf("day"),e=this.diff(d,"days",!0),f=-6>e?"sameElse":-1>e?"lastWeek":0>e?"lastDay":1>e?"sameDay":2>e?"nextDay":7>e?"nextWeek":"sameElse";return this.format(b&&b[f]||this.localeData().calendar(f,this,Da(c)))}function db(){return new n(this)}function eb(a,b){var c;return b=A("undefined"!=typeof b?b:"millisecond"),"millisecond"===b?(a=o(a)?a:Da(a),+this>+a):(c=o(a)?+a:+Da(a),c<+this.clone().startOf(b))}function fb(a,b){var c;return b=A("undefined"!=typeof b?b:"millisecond"),"millisecond"===b?(a=o(a)?a:Da(a),+a>+this):(c=o(a)?+a:+Da(a),+this.clone().endOf(b)<c)}function gb(a,b,c){return this.isAfter(a,c)&&this.isBefore(b,c)}function hb(a,b){var c;return b=A(b||"millisecond"),"millisecond"===b?(a=o(a)?a:Da(a),+this===+a):(c=+Da(a),+this.clone().startOf(b)<=c&&c<=+this.clone().endOf(b))}function ib(a,b,c){var d,e,f=La(a,this),g=6e4*(f.utcOffset()-this.utcOffset());return b=A(b),"year"===b||"month"===b||"quarter"===b?(e=jb(this,f),"quarter"===b?e/=3:"year"===b&&(e/=12)):(d=this-f,e="second"===b?d/1e3:"minute"===b?d/6e4:"hour"===b?d/36e5:"day"===b?(d-g)/864e5:"week"===b?(d-g)/6048e5:d),c?e:p(e)}function jb(a,b){var c,d,e=12*(b.year()-a.year())+(b.month()-a.month()),f=a.clone().add(e,"months");return 0>b-f?(c=a.clone().add(e-1,"months"),d=(b-f)/(f-c)):(c=a.clone().add(e+1,"months"),d=(b-f)/(c-f)),-(e+d)}function kb(){return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")}function lb(){var a=this.clone().utc();return 0<a.year()&&a.year()<=9999?"function"==typeof Date.prototype.toISOString?this.toDate().toISOString():K(a,"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]"):K(a,"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]")}function mb(b){var c=K(this,b||a.defaultFormat);return this.localeData().postformat(c)}function nb(a,b){return this.isValid()?Ya({to:this,from:a}).locale(this.locale()).humanize(!b):this.localeData().invalidDate()}function ob(a){return this.from(Da(),a)}function pb(a,b){return this.isValid()?Ya({from:this,to:a}).locale(this.locale()).humanize(!b):this.localeData().invalidDate()}function qb(a){return this.to(Da(),a)}function rb(a){var b;return void 0===a?this._locale._abbr:(b=y(a),null!=b&&(this._locale=b),this)}function sb(){return this._locale}function tb(a){switch(a=A(a)){case"year":this.month(0);case"quarter":case"month":this.date(1);case"week":case"isoWeek":case"day":this.hours(0);case"hour":this.minutes(0);case"minute":this.seconds(0);case"second":this.milliseconds(0)}return"week"===a&&this.weekday(0),"isoWeek"===a&&this.isoWeekday(1),"quarter"===a&&this.month(3*Math.floor(this.month()/3)),this}function ub(a){return a=A(a),void 0===a||"millisecond"===a?this:this.startOf(a).add(1,"isoWeek"===a?"week":a).subtract(1,"ms")}function vb(){return+this._d-6e4*(this._offset||0)}function wb(){return Math.floor(+this/1e3)}function xb(){return this._offset?new Date(+this):this._d}function yb(){var a=this;return[a.year(),a.month(),a.date(),a.hour(),a.minute(),a.second(),a.millisecond()]}function zb(){var a=this;return{years:a.year(),months:a.month(),date:a.date(),hours:a.hours(),minutes:a.minutes(),seconds:a.seconds(),milliseconds:a.milliseconds()}}function Ab(){return k(this)}function Bb(){return g({},j(this))}function Cb(){return j(this).overflow}function Db(a,b){H(0,[a,a.length],0,b)}function Eb(a,b,c){return ja(Da([a,11,31+b-c]),b,c).week}function Fb(a){var b=ja(this,this.localeData()._week.dow,this.localeData()._week.doy).year;return null==a?b:this.add(a-b,"y")}function Gb(a){var b=ja(this,1,4).year;return null==a?b:this.add(a-b,"y")}function Hb(){return Eb(this.year(),1,4)}function Ib(){var a=this.localeData()._week;return Eb(this.year(),a.dow,a.doy)}function Jb(a){return null==a?Math.ceil((this.month()+1)/3):this.month(3*(a-1)+this.month()%3)}function Kb(a,b){return"string"!=typeof a?a:isNaN(a)?(a=b.weekdaysParse(a),"number"==typeof a?a:null):parseInt(a,10)}function Lb(a){return this._weekdays[a.day()]}function Mb(a){return this._weekdaysShort[a.day()]}function Nb(a){return this._weekdaysMin[a.day()]}function Ob(a){var b,c,d;for(this._weekdaysParse=this._weekdaysParse||[],b=0;7>b;b++)if(this._weekdaysParse[b]||(c=Da([2e3,1]).day(b),d="^"+this.weekdays(c,"")+"|^"+this.weekdaysShort(c,"")+"|^"+this.weekdaysMin(c,""),this._weekdaysParse[b]=new RegExp(d.replace(".",""),"i")),this._weekdaysParse[b].test(a))return b}function Pb(a){var b=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=a?(a=Kb(a,this.localeData()),this.add(a-b,"d")):b}function Qb(a){var b=(this.day()+7-this.localeData()._week.dow)%7;return null==a?b:this.add(a-b,"d")}function Rb(a){return null==a?this.day()||7:this.day(this.day()%7?a:a-7)}function Sb(a,b){H(a,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),b)})}function Tb(a,b){return b._meridiemParse}function Ub(a){return"p"===(a+"").toLowerCase().charAt(0)}function Vb(a,b,c){return a>11?c?"pm":"PM":c?"am":"AM"}function Wb(a,b){b[ld]=q(1e3*("0."+a))}function Xb(){return this._isUTC?"UTC":""}function Yb(){return this._isUTC?"Coordinated Universal Time":""}function Zb(a){return Da(1e3*a)}function $b(){return Da.apply(null,arguments).parseZone()}function _b(a,b,c){var d=this._calendar[a];return"function"==typeof d?d.call(b,c):d}function ac(a){var b=this._longDateFormat[a],c=this._longDateFormat[a.toUpperCase()];return b||!c?b:(this._longDateFormat[a]=c.replace(/MMMM|MM|DD|dddd/g,function(a){return a.slice(1)}),this._longDateFormat[a])}function bc(){return this._invalidDate}function cc(a){return this._ordinal.replace("%d",a)}function dc(a){return a}function ec(a,b,c,d){var e=this._relativeTime[c];return"function"==typeof e?e(a,b,c,d):e.replace(/%d/i,a)}function fc(a,b){var c=this._relativeTime[a>0?"future":"past"];return"function"==typeof c?c(b):c.replace(/%s/i,b)}function gc(a){var b,c;for(c in a)b=a[c],"function"==typeof b?this[c]=b:this["_"+c]=b;this._ordinalParseLenient=new RegExp(this._ordinalParse.source+"|"+/\d{1,2}/.source)}function hc(a,b,c,d){var e=y(),f=h().set(d,b);return e[c](f,a)}function ic(a,b,c,d,e){if("number"==typeof a&&(b=a,a=void 0),a=a||"",null!=b)return hc(a,b,c,e);var f,g=[];for(f=0;d>f;f++)g[f]=hc(a,f,c,e);return g}function jc(a,b){return ic(a,b,"months",12,"month")}function kc(a,b){return ic(a,b,"monthsShort",12,"month")}function lc(a,b){return ic(a,b,"weekdays",7,"day")}function mc(a,b){return ic(a,b,"weekdaysShort",7,"day")}function nc(a,b){return ic(a,b,"weekdaysMin",7,"day")}function oc(){var a=this._data;return this._milliseconds=Wd(this._milliseconds),this._days=Wd(this._days),this._months=Wd(this._months),a.milliseconds=Wd(a.milliseconds),a.seconds=Wd(a.seconds),a.minutes=Wd(a.minutes),a.hours=Wd(a.hours),a.months=Wd(a.months),a.years=Wd(a.years),this}function pc(a,b,c,d){var e=Ya(b,c);return a._milliseconds+=d*e._milliseconds,a._days+=d*e._days,a._months+=d*e._months,a._bubble()}function qc(a,b){return pc(this,a,b,1)}function rc(a,b){return pc(this,a,b,-1)}function sc(a){return 0>a?Math.floor(a):Math.ceil(a)}function tc(){var a,b,c,d,e,f=this._milliseconds,g=this._days,h=this._months,i=this._data;return f>=0&&g>=0&&h>=0||0>=f&&0>=g&&0>=h||(f+=864e5*sc(vc(h)+g),g=0,h=0),i.milliseconds=f%1e3,a=p(f/1e3),i.seconds=a%60,b=p(a/60),i.minutes=b%60,c=p(b/60),i.hours=c%24,g+=p(c/24),e=p(uc(g)),h+=e,g-=sc(vc(e)),d=p(h/12),h%=12,i.days=g,i.months=h,i.years=d,this}function uc(a){return 4800*a/146097}function vc(a){return 146097*a/4800}function wc(a){var b,c,d=this._milliseconds;if(a=A(a),"month"===a||"year"===a)return b=this._days+d/864e5,c=this._months+uc(b),"month"===a?c:c/12;switch(b=this._days+Math.round(vc(this._months)),a){case"week":return b/7+d/6048e5;case"day":return b+d/864e5;case"hour":return 24*b+d/36e5;case"minute":return 1440*b+d/6e4;case"second":return 86400*b+d/1e3;case"millisecond":return Math.floor(864e5*b)+d;default:throw new Error("Unknown unit "+a)}}function xc(){return this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*q(this._months/12)}function yc(a){return function(){return this.as(a)}}function zc(a){return a=A(a),this[a+"s"]()}function Ac(a){return function(){return this._data[a]}}function Bc(){return p(this.days()/7)}function Cc(a,b,c,d,e){return e.relativeTime(b||1,!!c,a,d)}function Dc(a,b,c){var d=Ya(a).abs(),e=ke(d.as("s")),f=ke(d.as("m")),g=ke(d.as("h")),h=ke(d.as("d")),i=ke(d.as("M")),j=ke(d.as("y")),k=e<le.s&&["s",e]||1===f&&["m"]||f<le.m&&["mm",f]||1===g&&["h"]||g<le.h&&["hh",g]||1===h&&["d"]||h<le.d&&["dd",h]||1===i&&["M"]||i<le.M&&["MM",i]||1===j&&["y"]||["yy",j];return k[2]=b,k[3]=+a>0,k[4]=c,Cc.apply(null,k)}function Ec(a,b){return void 0===le[a]?!1:void 0===b?le[a]:(le[a]=b,!0)}function Fc(a){var b=this.localeData(),c=Dc(this,!a,b);return a&&(c=b.pastFuture(+this,c)),b.postformat(c)}function Gc(){var a,b,c,d=me(this._milliseconds)/1e3,e=me(this._days),f=me(this._months);a=p(d/60),b=p(a/60),d%=60,a%=60,c=p(f/12),f%=12;var g=c,h=f,i=e,j=b,k=a,l=d,m=this.asSeconds();return m?(0>m?"-":"")+"P"+(g?g+"Y":"")+(h?h+"M":"")+(i?i+"D":"")+(j||k||l?"T":"")+(j?j+"H":"")+(k?k+"M":"")+(l?l+"S":""):"P0D"}var Hc,Ic,Jc=a.momentProperties=[],Kc=!1,Lc={},Mc={},Nc=/(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,Oc=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,Pc={},Qc={},Rc=/\d/,Sc=/\d\d/,Tc=/\d{3}/,Uc=/\d{4}/,Vc=/[+-]?\d{6}/,Wc=/\d\d?/,Xc=/\d{1,3}/,Yc=/\d{1,4}/,Zc=/[+-]?\d{1,6}/,$c=/\d+/,_c=/[+-]?\d+/,ad=/Z|[+-]\d\d:?\d\d/gi,bd=/[+-]?\d+(\.\d{1,3})?/,cd=/[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i,dd={},ed={},fd=0,gd=1,hd=2,id=3,jd=4,kd=5,ld=6;H("M",["MM",2],"Mo",function(){return this.month()+1}),H("MMM",0,0,function(a){return this.localeData().monthsShort(this,a)}),H("MMMM",0,0,function(a){return this.localeData().months(this,a)}),z("month","M"),N("M",Wc),N("MM",Wc,Sc),N("MMM",cd),N("MMMM",cd),Q(["M","MM"],function(a,b){b[gd]=q(a)-1}),Q(["MMM","MMMM"],function(a,b,c,d){var e=c._locale.monthsParse(a,d,c._strict);null!=e?b[gd]=e:j(c).invalidMonth=a});var md="January_February_March_April_May_June_July_August_September_October_November_December".split("_"),nd="Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),od={};a.suppressDeprecationWarnings=!1;var pd=/^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,qd=[["YYYYYY-MM-DD",/[+-]\d{6}-\d{2}-\d{2}/],["YYYY-MM-DD",/\d{4}-\d{2}-\d{2}/],["GGGG-[W]WW-E",/\d{4}-W\d{2}-\d/],["GGGG-[W]WW",/\d{4}-W\d{2}/],["YYYY-DDD",/\d{4}-\d{3}/]],rd=[["HH:mm:ss.SSSS",/(T| )\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss",/(T| )\d\d:\d\d:\d\d/],["HH:mm",/(T| )\d\d:\d\d/],["HH",/(T| )\d\d/]],sd=/^\/?Date\((\-?\d+)/i;a.createFromInputFallback=aa("moment construction falls back to js Date. This is discouraged and will be removed in upcoming major release. Please refer to https://github.com/moment/moment/issues/1407 for more info.",function(a){a._d=new Date(a._i+(a._useUTC?" UTC":""))}),H(0,["YY",2],0,function(){return this.year()%100}),H(0,["YYYY",4],0,"year"),H(0,["YYYYY",5],0,"year"),H(0,["YYYYYY",6,!0],0,"year"),z("year","y"),N("Y",_c),N("YY",Wc,Sc),N("YYYY",Yc,Uc),N("YYYYY",Zc,Vc),N("YYYYYY",Zc,Vc),Q(["YYYYY","YYYYYY"],fd),Q("YYYY",function(b,c){c[fd]=2===b.length?a.parseTwoDigitYear(b):q(b)}),Q("YY",function(b,c){c[fd]=a.parseTwoDigitYear(b)}),a.parseTwoDigitYear=function(a){return q(a)+(q(a)>68?1900:2e3)};var td=C("FullYear",!1);H("w",["ww",2],"wo","week"),H("W",["WW",2],"Wo","isoWeek"),z("week","w"),z("isoWeek","W"),N("w",Wc),N("ww",Wc,Sc),N("W",Wc),N("WW",Wc,Sc),R(["w","ww","W","WW"],function(a,b,c,d){b[d.substr(0,1)]=q(a)});var ud={dow:0,doy:6};H("DDD",["DDDD",3],"DDDo","dayOfYear"),z("dayOfYear","DDD"),N("DDD",Xc),N("DDDD",Tc),Q(["DDD","DDDD"],function(a,b,c){c._dayOfYear=q(a)}),a.ISO_8601=function(){};var vd=aa("moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548",function(){var a=Da.apply(null,arguments);return this>a?this:a}),wd=aa("moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548",function(){var a=Da.apply(null,arguments);return a>this?this:a});Ja("Z",":"),Ja("ZZ",""),N("Z",ad),N("ZZ",ad),Q(["Z","ZZ"],function(a,b,c){c._useUTC=!0,c._tzm=Ka(a)});var xd=/([\+\-]|\d\d)/gi;a.updateOffset=function(){};var yd=/(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/,zd=/^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/;Ya.fn=Ha.prototype;var Ad=ab(1,"add"),Bd=ab(-1,"subtract");a.defaultFormat="YYYY-MM-DDTHH:mm:ssZ";var Cd=aa("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",function(a){return void 0===a?this.localeData():this.locale(a)});H(0,["gg",2],0,function(){return this.weekYear()%100}),H(0,["GG",2],0,function(){return this.isoWeekYear()%100}),Db("gggg","weekYear"),Db("ggggg","weekYear"),Db("GGGG","isoWeekYear"),Db("GGGGG","isoWeekYear"),z("weekYear","gg"),z("isoWeekYear","GG"),N("G",_c),N("g",_c),N("GG",Wc,Sc),N("gg",Wc,Sc),N("GGGG",Yc,Uc),N("gggg",Yc,Uc),N("GGGGG",Zc,Vc),N("ggggg",Zc,Vc),R(["gggg","ggggg","GGGG","GGGGG"],function(a,b,c,d){b[d.substr(0,2)]=q(a)}),R(["gg","GG"],function(b,c,d,e){c[e]=a.parseTwoDigitYear(b)}),H("Q",0,0,"quarter"),z("quarter","Q"),N("Q",Rc),Q("Q",function(a,b){b[gd]=3*(q(a)-1)}),H("D",["DD",2],"Do","date"),z("date","D"),N("D",Wc),N("DD",Wc,Sc),N("Do",function(a,b){return a?b._ordinalParse:b._ordinalParseLenient}),Q(["D","DD"],hd),Q("Do",function(a,b){b[hd]=q(a.match(Wc)[0],10)});var Dd=C("Date",!0);H("d",0,"do","day"),H("dd",0,0,function(a){return this.localeData().weekdaysMin(this,a)}),H("ddd",0,0,function(a){return this.localeData().weekdaysShort(this,a)}),H("dddd",0,0,function(a){return this.localeData().weekdays(this,a)}),H("e",0,0,"weekday"),H("E",0,0,"isoWeekday"),z("day","d"),z("weekday","e"),z("isoWeekday","E"),N("d",Wc),N("e",Wc),N("E",Wc),N("dd",cd),N("ddd",cd),N("dddd",cd),R(["dd","ddd","dddd"],function(a,b,c){var d=c._locale.weekdaysParse(a);null!=d?b.d=d:j(c).invalidWeekday=a}),R(["d","e","E"],function(a,b,c,d){b[d]=q(a)});var Ed="Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),Fd="Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),Gd="Su_Mo_Tu_We_Th_Fr_Sa".split("_");H("H",["HH",2],0,"hour"),H("h",["hh",2],0,function(){return this.hours()%12||12}),Sb("a",!0),Sb("A",!1),z("hour","h"),N("a",Tb),N("A",Tb),N("H",Wc),N("h",Wc),N("HH",Wc,Sc),N("hh",Wc,Sc),Q(["H","HH"],id),Q(["a","A"],function(a,b,c){c._isPm=c._locale.isPM(a),c._meridiem=a}),Q(["h","hh"],function(a,b,c){b[id]=q(a),j(c).bigHour=!0});var Hd=/[ap]\.?m?\.?/i,Id=C("Hours",!0);H("m",["mm",2],0,"minute"),z("minute","m"),N("m",Wc),N("mm",Wc,Sc),Q(["m","mm"],jd);var Jd=C("Minutes",!1);H("s",["ss",2],0,"second"),z("second","s"),N("s",Wc),N("ss",Wc,Sc),Q(["s","ss"],kd);var Kd=C("Seconds",!1);H("S",0,0,function(){return~~(this.millisecond()/100)}),H(0,["SS",2],0,function(){return~~(this.millisecond()/10)}),H(0,["SSS",3],0,"millisecond"),H(0,["SSSS",4],0,function(){return 10*this.millisecond()}),H(0,["SSSSS",5],0,function(){return 100*this.millisecond()}),H(0,["SSSSSS",6],0,function(){return 1e3*this.millisecond()}),H(0,["SSSSSSS",7],0,function(){return 1e4*this.millisecond()}),H(0,["SSSSSSSS",8],0,function(){return 1e5*this.millisecond()}),H(0,["SSSSSSSSS",9],0,function(){return 1e6*this.millisecond()}),z("millisecond","ms"),N("S",Xc,Rc),N("SS",Xc,Sc),N("SSS",Xc,Tc);var Ld;for(Ld="SSSS";Ld.length<=9;Ld+="S")N(Ld,$c);for(Ld="S";Ld.length<=9;Ld+="S")Q(Ld,Wb);var Md=C("Milliseconds",!1);H("z",0,0,"zoneAbbr"),H("zz",0,0,"zoneName");var Nd=n.prototype;Nd.add=Ad,Nd.calendar=cb,Nd.clone=db,Nd.diff=ib,Nd.endOf=ub,Nd.format=mb,Nd.from=nb,Nd.fromNow=ob,Nd.to=pb,Nd.toNow=qb,Nd.get=F,Nd.invalidAt=Cb,Nd.isAfter=eb,Nd.isBefore=fb,Nd.isBetween=gb,Nd.isSame=hb,Nd.isValid=Ab,Nd.lang=Cd,Nd.locale=rb,Nd.localeData=sb,Nd.max=wd,Nd.min=vd,Nd.parsingFlags=Bb,Nd.set=F,Nd.startOf=tb,Nd.subtract=Bd,Nd.toArray=yb,Nd.toObject=zb,Nd.toDate=xb,Nd.toISOString=lb,Nd.toJSON=lb,Nd.toString=kb,Nd.unix=wb,Nd.valueOf=vb,Nd.year=td,Nd.isLeapYear=ia,Nd.weekYear=Fb,Nd.isoWeekYear=Gb,Nd.quarter=Nd.quarters=Jb,Nd.month=Y,Nd.daysInMonth=Z,Nd.week=Nd.weeks=na,Nd.isoWeek=Nd.isoWeeks=oa,Nd.weeksInYear=Ib,Nd.isoWeeksInYear=Hb,Nd.date=Dd,Nd.day=Nd.days=Pb,Nd.weekday=Qb,Nd.isoWeekday=Rb,Nd.dayOfYear=qa,Nd.hour=Nd.hours=Id,Nd.minute=Nd.minutes=Jd,Nd.second=Nd.seconds=Kd,
Nd.millisecond=Nd.milliseconds=Md,Nd.utcOffset=Na,Nd.utc=Pa,Nd.local=Qa,Nd.parseZone=Ra,Nd.hasAlignedHourOffset=Sa,Nd.isDST=Ta,Nd.isDSTShifted=Ua,Nd.isLocal=Va,Nd.isUtcOffset=Wa,Nd.isUtc=Xa,Nd.isUTC=Xa,Nd.zoneAbbr=Xb,Nd.zoneName=Yb,Nd.dates=aa("dates accessor is deprecated. Use date instead.",Dd),Nd.months=aa("months accessor is deprecated. Use month instead",Y),Nd.years=aa("years accessor is deprecated. Use year instead",td),Nd.zone=aa("moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779",Oa);var Od=Nd,Pd={sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},Qd={LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"},Rd="Invalid date",Sd="%d",Td=/\d{1,2}/,Ud={future:"in %s",past:"%s ago",s:"a few seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},Vd=s.prototype;Vd._calendar=Pd,Vd.calendar=_b,Vd._longDateFormat=Qd,Vd.longDateFormat=ac,Vd._invalidDate=Rd,Vd.invalidDate=bc,Vd._ordinal=Sd,Vd.ordinal=cc,Vd._ordinalParse=Td,Vd.preparse=dc,Vd.postformat=dc,Vd._relativeTime=Ud,Vd.relativeTime=ec,Vd.pastFuture=fc,Vd.set=gc,Vd.months=U,Vd._months=md,Vd.monthsShort=V,Vd._monthsShort=nd,Vd.monthsParse=W,Vd.week=ka,Vd._week=ud,Vd.firstDayOfYear=ma,Vd.firstDayOfWeek=la,Vd.weekdays=Lb,Vd._weekdays=Ed,Vd.weekdaysMin=Nb,Vd._weekdaysMin=Gd,Vd.weekdaysShort=Mb,Vd._weekdaysShort=Fd,Vd.weekdaysParse=Ob,Vd.isPM=Ub,Vd._meridiemParse=Hd,Vd.meridiem=Vb,w("en",{ordinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(a){var b=a%10,c=1===q(a%100/10)?"th":1===b?"st":2===b?"nd":3===b?"rd":"th";return a+c}}),a.lang=aa("moment.lang is deprecated. Use moment.locale instead.",w),a.langData=aa("moment.langData is deprecated. Use moment.localeData instead.",y);var Wd=Math.abs,Xd=yc("ms"),Yd=yc("s"),Zd=yc("m"),$d=yc("h"),_d=yc("d"),ae=yc("w"),be=yc("M"),ce=yc("y"),de=Ac("milliseconds"),ee=Ac("seconds"),fe=Ac("minutes"),ge=Ac("hours"),he=Ac("days"),ie=Ac("months"),je=Ac("years"),ke=Math.round,le={s:45,m:45,h:22,d:26,M:11},me=Math.abs,ne=Ha.prototype;ne.abs=oc,ne.add=qc,ne.subtract=rc,ne.as=wc,ne.asMilliseconds=Xd,ne.asSeconds=Yd,ne.asMinutes=Zd,ne.asHours=$d,ne.asDays=_d,ne.asWeeks=ae,ne.asMonths=be,ne.asYears=ce,ne.valueOf=xc,ne._bubble=tc,ne.get=zc,ne.milliseconds=de,ne.seconds=ee,ne.minutes=fe,ne.hours=ge,ne.days=he,ne.weeks=Bc,ne.months=ie,ne.years=je,ne.humanize=Fc,ne.toISOString=Gc,ne.toString=Gc,ne.toJSON=Gc,ne.locale=rb,ne.localeData=sb,ne.toIsoString=aa("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",Gc),ne.lang=Cd,H("X",0,0,"unix"),H("x",0,0,"valueOf"),N("x",_c),N("X",bd),Q("X",function(a,b,c){c._d=new Date(1e3*parseFloat(a,10))}),Q("x",function(a,b,c){c._d=new Date(q(a))}),a.version="2.10.6",b(Da),a.fn=Od,a.min=Fa,a.max=Ga,a.utc=h,a.unix=Zb,a.months=jc,a.isDate=d,a.locale=w,a.invalid=l,a.duration=Ya,a.isMoment=o,a.weekdays=lc,a.parseZone=$b,a.localeData=y,a.isDuration=Ia,a.monthsShort=kc,a.weekdaysMin=nc,a.defineLocale=x,a.weekdaysShort=mc,a.normalizeUnits=A,a.relativeTimeThreshold=Ec;var oe=a;return oe});
// Generated by CoffeeScript 1.10.0
(function() {
  var hasModule, isArray, makeTwix,
    slice = [].slice;

  hasModule = (typeof module !== "undefined" && module !== null) && (module.exports != null);

  isArray = function(input) {
    return Object.prototype.toString.call(input) === '[object Array]';
  };

  makeTwix = function(moment) {
    var Twix;
    if (moment == null) {
      throw new Error("Can't find moment");
    }
    Twix = (function() {
      function Twix(start, end, parseFormat, options) {
        var ref;
        if (options == null) {
          options = {};
        }
        if (typeof parseFormat !== 'string') {
          options = parseFormat != null ? parseFormat : {};
          parseFormat = null;
        }
        if (typeof options === 'boolean') {
          options = {
            allDay: options
          };
        }
        this._oStart = moment(start, parseFormat, options.parseStrict);
        this._oEnd = moment(end, parseFormat, options.parseStrict);
        this.allDay = (ref = options.allDay) != null ? ref : false;
        this._mutated();
      }

      Twix._extend = function() {
        var attr, first, j, len, other, others;
        first = arguments[0], others = 2 <= arguments.length ? slice.call(arguments, 1) : [];
        for (j = 0, len = others.length; j < len; j++) {
          other = others[j];
          for (attr in other) {
            if (typeof other[attr] !== 'undefined') {
              first[attr] = other[attr];
            }
          }
        }
        return first;
      };

      Twix.prototype.start = function() {
        return this._start.clone();
      };

      Twix.prototype.end = function() {
        return this._end.clone();
      };

      Twix.prototype.isSame = function(period) {
        return this._start.isSame(this._end, period);
      };

      Twix.prototype.length = function(period) {
        return this._displayEnd.diff(this._start, period);
      };

      Twix.prototype.count = function(period) {
        var end, start;
        start = this.start().startOf(period);
        end = this.end().startOf(period);
        return end.diff(start, period) + 1;
      };

      Twix.prototype.countInner = function(period) {
        var end, ref, start;
        ref = this._inner(period), start = ref[0], end = ref[1];
        if (start >= end) {
          return 0;
        }
        return end.diff(start, period);
      };

      Twix.prototype.iterate = function(intervalAmount, period, minHours) {
        var end, hasNext, ref, start;
        ref = this._prepIterateInputs(intervalAmount, period, minHours), intervalAmount = ref[0], period = ref[1], minHours = ref[2];
        start = this.start().startOf(period);
        end = this.end().startOf(period);
        if (this.allDay) {
          end = end.add(1, 'd');
        }
        hasNext = (function(_this) {
          return function() {
            return (!_this.allDay && start <= end && (!minHours || !start.isSame(end) || _this._end.hours() > minHours)) || (_this.allDay && start < end);
          };
        })(this);
        return this._iterateHelper(period, start, hasNext, intervalAmount);
      };

      Twix.prototype.iterateInner = function(intervalAmount, period) {
        var end, hasNext, ref, ref1, start;
        ref = this._prepIterateInputs(intervalAmount, period), intervalAmount = ref[0], period = ref[1];
        ref1 = this._inner(period, intervalAmount), start = ref1[0], end = ref1[1];
        hasNext = function() {
          return start < end;
        };
        return this._iterateHelper(period, start, hasNext, intervalAmount);
      };

      Twix.prototype.humanizeLength = function() {
        if (this.allDay) {
          if (this.isSame('d')) {
            return 'all day';
          } else {
            return this._start.from(this.end().add(1, 'd'), true);
          }
        } else {
          return this._start.from(this._end, true);
        }
      };

      Twix.prototype.asDuration = function(units) {
        var diff;
        diff = this._end.diff(this._start);
        return moment.duration(diff);
      };

      Twix.prototype.isPast = function() {
        return this._lastMilli < moment();
      };

      Twix.prototype.isFuture = function() {
        return this._start > moment();
      };

      Twix.prototype.isCurrent = function() {
        return !this.isPast() && !this.isFuture();
      };

      Twix.prototype.contains = function(mom) {
        if (!moment.isMoment(mom)) {
          mom = moment(mom);
        }
        return this._start <= mom && this._lastMilli >= mom;
      };

      Twix.prototype.isEmpty = function() {
        return this._start.isSame(this._displayEnd);
      };

      Twix.prototype.overlaps = function(other) {
        return this._displayEnd.isAfter(other._start) && this._start.isBefore(other._displayEnd);
      };

      Twix.prototype.engulfs = function(other) {
        return this._start <= other._start && this._displayEnd >= other._displayEnd;
      };

      Twix.prototype.union = function(other) {
        var allDay, newEnd, newStart;
        allDay = this.allDay && other.allDay;
        newStart = this._start < other._start ? this._start : other._start;
        newEnd = this._lastMilli > other._lastMilli ? (allDay ? this._end : this._displayEnd) : (allDay ? other._end : other._displayEnd);
        return new Twix(newStart, newEnd, allDay);
      };

      Twix.prototype.intersection = function(other) {
        var allDay, newEnd, newStart;
        allDay = this.allDay && other.allDay;
        newStart = this._start > other._start ? this._start : other._start;
        newEnd = this._lastMilli < other._lastMilli ? (allDay ? this._end : this._displayEnd) : (allDay ? other._end : other._displayEnd);
        return new Twix(newStart, newEnd, allDay);
      };

      Twix.prototype.xor = function() {
        var allDay, arr, endTime, i, item, j, k, last, len, len1, o, open, other, others, ref, results, start, t;
        others = 1 <= arguments.length ? slice.call(arguments, 0) : [];
        open = 0;
        start = null;
        results = [];
        allDay = ((function() {
          var j, len, results1;
          results1 = [];
          for (j = 0, len = others.length; j < len; j++) {
            o = others[j];
            if (o.allDay) {
              results1.push(o);
            }
          }
          return results1;
        })()).length === others.length;
        arr = [];
        ref = [this].concat(others);
        for (i = j = 0, len = ref.length; j < len; i = ++j) {
          item = ref[i];
          arr.push({
            time: item._start,
            i: i,
            type: 0
          });
          arr.push({
            time: item._displayEnd,
            i: i,
            type: 1
          });
        }
        arr = arr.sort(function(a, b) {
          return a.time - b.time;
        });
        for (k = 0, len1 = arr.length; k < len1; k++) {
          other = arr[k];
          if (other.type === 1) {
            open -= 1;
          }
          if (open === other.type) {
            start = other.time;
          }
          if (open === (other.type + 1) % 2) {
            if (start) {
              last = results[results.length - 1];
              if (last && last._end.isSame(start)) {
                last._oEnd = other.time;
                last._mutated();
              } else {
                endTime = allDay ? other.time.clone().subtract(1, 'd') : other.time;
                t = new Twix(start, endTime, allDay);
                if (!t.isEmpty()) {
                  results.push(t);
                }
              }
            }
            start = null;
          }
          if (other.type === 0) {
            open += 1;
          }
        }
        return results;
      };

      Twix.prototype.difference = function() {
        var j, len, others, ref, results1, t;
        others = 1 <= arguments.length ? slice.call(arguments, 0) : [];
        ref = this.xor.apply(this, others).map((function(_this) {
          return function(i) {
            return _this.intersection(i);
          };
        })(this));
        results1 = [];
        for (j = 0, len = ref.length; j < len; j++) {
          t = ref[j];
          if (!t.isEmpty() && t.isValid()) {
            results1.push(t);
          }
        }
        return results1;
      };

      Twix.prototype.split = function() {
        var args, dur, end, final, i, mom, start, time, times, vals;
        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
        end = start = this.start();
        if (moment.isDuration(args[0])) {
          dur = args[0];
        } else if ((!moment.isMoment(args[0]) && !isArray(args[0]) && typeof args[0] === 'object') || (typeof args[0] === 'number' && typeof args[1] === 'string')) {
          dur = moment.duration(args[0], args[1]);
        } else if (isArray(args[0])) {
          times = args[0];
        } else {
          times = args;
        }
        if (times) {
          times = (function() {
            var j, len, results1;
            results1 = [];
            for (j = 0, len = times.length; j < len; j++) {
              time = times[j];
              results1.push(moment(time));
            }
            return results1;
          })();
          times = ((function() {
            var j, len, results1;
            results1 = [];
            for (j = 0, len = times.length; j < len; j++) {
              mom = times[j];
              if (mom.isValid() && mom >= start) {
                results1.push(mom);
              }
            }
            return results1;
          })()).sort();
        }
        if ((dur && dur.asMilliseconds() === 0) || (times && times.length === 0)) {
          return [this];
        }
        vals = [];
        i = 0;
        final = this._displayEnd;
        while (start < final && ((times == null) || times[i])) {
          end = dur ? start.clone().add(dur) : times[i].clone();
          end = moment.min(final, end);
          if (!start.isSame(end)) {
            vals.push(moment.twix(start, end));
          }
          start = end;
          i += 1;
        }
        if (!end.isSame(this._displayEnd) && times) {
          vals.push(moment.twix(end, this._displayEnd));
        }
        return vals;
      };

      Twix.prototype.isValid = function() {
        return this._start.isValid() && this._end.isValid() && this._start <= this._displayEnd;
      };

      Twix.prototype.equals = function(other) {
        return (other instanceof Twix) && this.allDay === other.allDay && this._start.valueOf() === other._start.valueOf() && this._end.valueOf() === other._end.valueOf();
      };

      Twix.prototype.toString = function() {
        return "{start: " + (this._start.format()) + ", end: " + (this._end.format()) + ", allDay: " + (this.allDay ? 'true' : 'false') + "}";
      };

      Twix.prototype.simpleFormat = function(momentOpts, inopts) {
        var options, s;
        options = {
          allDay: '(all day)',
          template: Twix.formatTemplate
        };
        Twix._extend(options, inopts || {});
        s = options.template(this._start.format(momentOpts), this._end.format(momentOpts));
        if (this.allDay && options.allDay) {
          s += " " + options.allDay;
        }
        return s;
      };

      Twix.prototype.format = function(inopts) {
        var common_bucket, end_bucket, fold, format, fs, global_first, goesIntoTheMorning, j, len, momentHourFormat, needDate, needsMeridiem, options, process, start_bucket, together;
        if (this.isEmpty()) {
          return '';
        }
        momentHourFormat = this._start.localeData()._longDateFormat['LT'][0];
        options = {
          groupMeridiems: true,
          spaceBeforeMeridiem: true,
          showDate: true,
          showDayOfWeek: false,
          implicitMinutes: true,
          implicitYear: true,
          yearFormat: 'YYYY',
          monthFormat: 'MMM',
          weekdayFormat: 'ddd',
          dayFormat: 'D',
          meridiemFormat: 'A',
          hourFormat: momentHourFormat,
          minuteFormat: 'mm',
          allDay: 'all day',
          explicitAllDay: false,
          lastNightEndsAt: 0,
          template: Twix.formatTemplate
        };
        Twix._extend(options, inopts || {});
        fs = [];
        if (inopts && (inopts.twentyFourHour != null)) {
          options.hourFormat = inopts.twentyFourHour ? options.hourFormat.replace('h', 'H') : options.hourFormat.replace('H', 'h');
        }
        needsMeridiem = options.hourFormat && options.hourFormat[0] === 'h';
        goesIntoTheMorning = options.lastNightEndsAt > 0 && !this.allDay && this.end().startOf('d').valueOf() === this.start().add(1, 'd').startOf('d').valueOf() && this._start.hours() > 12 && this._end.hours() < options.lastNightEndsAt;
        needDate = options.showDate || (!this.isSame('d') && !goesIntoTheMorning);
        if (this.allDay && this.isSame('d') && (!options.showDate || options.explicitAllDay)) {
          fs.push({
            name: 'all day simple',
            fn: function() {
              return options.allDay;
            },
            pre: ' ',
            slot: 0
          });
        }
        if (needDate && (!options.implicitYear || this._start.year() !== moment().year() || !this.isSame('y'))) {
          fs.push({
            name: 'year',
            fn: function(date) {
              return date.format(options.yearFormat);
            },
            pre: ', ',
            slot: 4
          });
        }
        if (!this.allDay && needDate) {
          fs.push({
            name: 'all day month',
            fn: function(date) {
              return date.format(options.monthFormat + " " + options.dayFormat);
            },
            ignoreEnd: function() {
              return goesIntoTheMorning;
            },
            pre: ' ',
            slot: 2
          });
        }
        if (this.allDay && needDate) {
          fs.push({
            name: 'month',
            fn: function(date) {
              return date.format(options.monthFormat);
            },
            pre: ' ',
            slot: 2
          });
        }
        if (this.allDay && needDate) {
          fs.push({
            name: 'date',
            fn: function(date) {
              return date.format(options.dayFormat);
            },
            pre: ' ',
            slot: 3
          });
        }
        if (needDate && options.showDayOfWeek) {
          fs.push({
            name: 'day of week',
            fn: function(date) {
              return date.format(options.weekdayFormat);
            },
            pre: ' ',
            slot: 1
          });
        }
        if (options.groupMeridiems && needsMeridiem && !this.allDay) {
          fs.push({
            name: 'meridiem',
            fn: function(t) {
              return t.format(options.meridiemFormat);
            },
            slot: 6,
            pre: options.spaceBeforeMeridiem ? ' ' : ''
          });
        }
        if (!this.allDay) {
          fs.push({
            name: 'time',
            fn: function(date) {
              var str;
              str = date.minutes() === 0 && options.implicitMinutes && needsMeridiem ? date.format(options.hourFormat) : date.format(options.hourFormat + ":" + options.minuteFormat);
              if (!options.groupMeridiems && needsMeridiem) {
                if (options.spaceBeforeMeridiem) {
                  str += ' ';
                }
                str += date.format(options.meridiemFormat);
              }
              return str;
            },
            slot: 5,
            pre: ', '
          });
        }
        start_bucket = [];
        end_bucket = [];
        common_bucket = [];
        together = true;
        process = (function(_this) {
          return function(format) {
            var end_str, start_group, start_str;
            start_str = format.fn(_this._start);
            end_str = format.ignoreEnd && format.ignoreEnd() ? start_str : format.fn(_this._end);
            start_group = {
              format: format,
              value: function() {
                return start_str;
              }
            };
            if (end_str === start_str && together) {
              return common_bucket.push(start_group);
            } else {
              if (together) {
                together = false;
                common_bucket.push({
                  format: {
                    slot: format.slot,
                    pre: ''
                  },
                  value: function() {
                    return options.template(fold(start_bucket), fold(end_bucket, true).trim());
                  }
                });
              }
              start_bucket.push(start_group);
              return end_bucket.push({
                format: format,
                value: function() {
                  return end_str;
                }
              });
            }
          };
        })(this);
        for (j = 0, len = fs.length; j < len; j++) {
          format = fs[j];
          process(format);
        }
        global_first = true;
        fold = function(array, skip_pre) {
          var k, len1, local_first, ref, section, str;
          local_first = true;
          str = '';
          ref = array.sort(function(a, b) {
            return a.format.slot - b.format.slot;
          });
          for (k = 0, len1 = ref.length; k < len1; k++) {
            section = ref[k];
            if (!global_first) {
              if (local_first && skip_pre) {
                str += ' ';
              } else {
                str += section.format.pre;
              }
            }
            str += section.value();
            global_first = false;
            local_first = false;
          }
          return str;
        };
        return fold(common_bucket);
      };

      Twix.prototype._iterateHelper = function(period, iter, hasNext, intervalAmount) {
        return {
          next: function() {
            var val;
            if (!hasNext()) {
              return null;
            } else {
              val = iter.clone();
              iter.add(intervalAmount, period);
              return val;
            }
          },
          hasNext: hasNext
        };
      };

      Twix.prototype._prepIterateInputs = function() {
        var inputs, intervalAmount, minHours, period, ref, ref1;
        inputs = 1 <= arguments.length ? slice.call(arguments, 0) : [];
        if (typeof inputs[0] === 'number') {
          return inputs;
        }
        if (typeof inputs[0] === 'string') {
          period = inputs.shift();
          intervalAmount = (ref = inputs.pop()) != null ? ref : 1;
          if (inputs.length) {
            minHours = (ref1 = inputs[0]) != null ? ref1 : false;
          }
        }
        if (moment.isDuration(inputs[0])) {
          period = 'ms';
          intervalAmount = inputs[0].as(period);
        }
        return [intervalAmount, period, minHours];
      };

      Twix.prototype._inner = function(period, intervalAmount) {
        var durationCount, durationPeriod, end, modulus, start;
        if (period == null) {
          period = 'ms';
        }
        if (intervalAmount == null) {
          intervalAmount = 1;
        }
        start = this.start();
        end = this._displayEnd.clone();
        if (start > start.clone().startOf(period)) {
          start.startOf(period).add(intervalAmount, period);
        }
        if (end < end.clone().endOf(period)) {
          end.startOf(period);
        }
        durationPeriod = start.twix(end).asDuration(period);
        durationCount = durationPeriod.get(period);
        modulus = durationCount % intervalAmount;
        end.subtract(modulus, period);
        return [start, end];
      };

      Twix.prototype._mutated = function() {
        this._start = this.allDay ? this._oStart.clone().startOf('d') : this._oStart;
        this._lastMilli = this.allDay ? this._oEnd.clone().endOf('d') : this._oEnd;
        this._end = this.allDay ? this._oEnd.clone().startOf('d') : this._oEnd;
        return this._displayEnd = this.allDay ? this._end.clone().add(1, 'd') : this._end;
      };

      return Twix;

    })();
    Twix._extend(moment.locale(), {
      _twix: Twix.defaults
    });
    Twix.formatTemplate = function(leftSide, rightSide) {
      return leftSide + " - " + rightSide;
    };
    moment.twix = function() {
      return (function(func, args, ctor) {
        ctor.prototype = func.prototype;
        var child = new ctor, result = func.apply(child, args);
        return Object(result) === result ? result : child;
      })(Twix, arguments, function(){});
    };
    moment.fn.twix = function() {
      return (function(func, args, ctor) {
        ctor.prototype = func.prototype;
        var child = new ctor, result = func.apply(child, args);
        return Object(result) === result ? result : child;
      })(Twix, [this].concat(slice.call(arguments)), function(){});
    };
    moment.fn.forDuration = function(duration, allDay) {
      return new Twix(this, this.clone().add(duration), allDay);
    };
    if (moment.duration.fn) {
      moment.duration.fn.afterMoment = function(startingTime, allDay) {
        return new Twix(startingTime, moment(startingTime).clone().add(this), allDay);
      };
      moment.duration.fn.beforeMoment = function(startingTime, allDay) {
        return new Twix(moment(startingTime).clone().subtract(this), startingTime, allDay);
      };
    }
    moment.twixClass = Twix;
    return Twix;
  };

  if (hasModule) {
    return module.exports = makeTwix(require('moment'));
  }

  if (typeof define === 'function') {
    define('twix', ['moment'], function(moment) {
      return makeTwix(moment);
    });
  }

  if (this.moment) {
    this.Twix = makeTwix(this.moment);
  } else if (typeof moment !== "undefined" && moment !== null) {
    this.Twix = makeTwix(moment);
  }

}).call(this);

// Query.js
//
// Iterates through a given, or current query string and
// caches the results from both the parser and the decoder.
//
// Examples:
// 
//     // Build Query String
//     // ?name=Query.js&tags=query&tags=string&tags=encode&tags=builder
//     query.build({ name: 'Query.js', tags: [ 'query', 'string', 'encode', 'builder' ]});
//
//     // Parse the current query string, returns entire object.
//     query.parse();
//
//     // Parses query string and fetch specific parameter assumes query.parse was never ran.
//     query.get('param');
//     query.get('anotherParam'); // This will be cached result.
//
//     // After it has been ran and you wish to rebuild the cache?
//     // Good for when the url may have changed or custom query.
//     query.parse({ rebuild: true });
//     query.get('param', true);
//
//     // Custom Query String?
//     query.parse({ rebuild: true, query: 'param=not+again&timestamp=250826092386' });
//     query.get('param');
//
//     // Return param, with rebuilding of cache, and custom query all in one go?
//     query.parse({ name: 'param', rebuild: true, query: 'param=not+again&timestamp=250826092386' });
//
// @version 0.0.2
// @author Nijiko Yonskai
// @copyright 2013 Nijiko Yonskai
(function (name, definition, context) {
  if (typeof context['module'] !== 'undefined' && context['module']['exports']) context['module']['exports'] = definition();
  else if (typeof context['define'] !== 'undefined' && context['define'] === 'function' && context['define']['amd']) define(name, definition);
  else context[name] = definition();
})('query', function () {
  var $self = {};
  $self.store = {};
  $self.decodeStore = {};
  $self.built = false;
  $self.queryString = undefined;
  $self.re = /([^&=]+)=?([^&]*)/g;
  $self.m = null;

  $self.build = function (data, parent) {
    if (Object.prototype.toString.call(data) !== "[object Object]") 
      return "";

    parent = parent || "";

    var query = parent ? "" : "?"
      , okey
      , value
      , i = 0;

    for (var key in data) {
      okey = parent ? parent + "[" + $self.encode(key) + "]" : $self.encode(key);

      if (value = data[key]) {
        if (Object.prototype.toString.call(value) === "[object Array]") {
          for (i = 0, l = value.length; i < l; ++i) {
            if (typeof value[i] === "object") query += $self.build(value[i], okey + "[" + i + "]");
            else query += okey + "=" + $self.encode(value[i]) + "&";
          }
        } else if (Object.prototype.toString.call(value) === "[object Object]") {
          for (i in value) {
            if (typeof value[i] === "object") query += $self.build(value[i], okey + "[" + i + "]");
            else query += okey + "[" + i + "]=" + $self.encode(value[i]) + "&";
          }
        } else {
          query += okey + "=" + $self.encode(value.toString()) + "&";
        }
      } else {
        query += okey + "&";
      }
    }

    return query.substring(0, query.length - 1);
  };

  $self.getQueryString = function () {
    var search = window.location.search.substring(1);
    var hash = window.location.hash.split("?"); hash.shift();
    return (search && search !== "") ? search : (hash.length > 0) ? hash.join("?") : undefined;
  };

  $self.encode = function (str) {
    return encodeURIComponent(str.toString());
  };

  $self.decode = function (str) {
    if (!$self.decodeStore[str])
      $self.decodeStore[str] = decodeURIComponent(str.replace(/\+/g, ' '));

    return $self.decodeStore[str];
  };

  $self.get = function (name, rebuild) {
    name = String(name).replace(/[.*+?|()\[\]{}\\]/g, '\\$&');
    return $self.parse({ name: name, rebuild: rebuild });
  };

  $self.parse = function (opts) {
    opts = opts || {};

    if (!$self.built || opts.rebuild) {
      $self.queryString = typeof opts.query === 'string' ? opts.query : $self.getQueryString();

      if (typeof $self.queryString === 'string' && $self.queryString.length > 0) {
        var index, aname, pname, $key, $value, $decodeKey, $decodeValue;

        if ($self.queryString[0] === "?")
          $self.queryString = $self.queryString.substring(1);

        $self.store = {};
        $self.decodeStore = {};

        while ($self.m = $self.re.exec($self.queryString)) {
          $key = $self.m[1]; $value = $self.m[2];
          $decodeKey = $self.decode($key); $decodeValue = $self.decode($value);

          if ($self.m[1].indexOf("[") === -1)
            if (!($decodeKey in $self.store))
              $self.store[$decodeKey] = $decodeValue;
            else if (typeof $self.store[$decodeKey] !== 'object')
              $self.store[$decodeKey] = [ $self.store[$decodeKey], $decodeValue ];
            else
              Array.prototype.push.call($self.store[$decodeKey], $decodeValue);
          else {
            index = $key.indexOf("[");
            aname = $self.decode($key.slice(index + 1, $key.indexOf("]", index)));
            pname = $self.decode($key.slice(0, index));

            if (typeof $self.store[pname] !== "object") {
              $self.store[pname] = {};
              $self.store[pname].length = 0;
            }

            if (aname) $self.store[pname][aname] = $decodeValue;
            else Array.prototype.push.call($self.store[pname], $decodeValue);
          }
        }
      } else return undefined;

      $self.built = true;
    }

    return opts.name ? ((opts.name in $self.store) ? $self.store[opts.name] : undefined) : $self.store;
  };

  return $self;
}, this);
/*
 AngularJS v1.5.8
 (c) 2010-2016 Google, Inc. http://angularjs.org
 License: MIT
*/
(function(C){'use strict';function N(a){return function(){var b=arguments[0],d;d="["+(a?a+":":"")+b+"] http://errors.angularjs.org/1.5.8/"+(a?a+"/":"")+b;for(b=1;b<arguments.length;b++){d=d+(1==b?"?":"&")+"p"+(b-1)+"=";var c=encodeURIComponent,e;e=arguments[b];e="function"==typeof e?e.toString().replace(/ \{[\s\S]*$/,""):"undefined"==typeof e?"undefined":"string"!=typeof e?JSON.stringify(e):e;d+=c(e)}return Error(d)}}function ta(a){if(null==a||Va(a))return!1;if(L(a)||G(a)||F&&a instanceof F)return!0;
var b="length"in Object(a)&&a.length;return T(b)&&(0<=b&&(b-1 in a||a instanceof Array)||"function"==typeof a.item)}function q(a,b,d){var c,e;if(a)if(z(a))for(c in a)"prototype"==c||"length"==c||"name"==c||a.hasOwnProperty&&!a.hasOwnProperty(c)||b.call(d,a[c],c,a);else if(L(a)||ta(a)){var f="object"!==typeof a;c=0;for(e=a.length;c<e;c++)(f||c in a)&&b.call(d,a[c],c,a)}else if(a.forEach&&a.forEach!==q)a.forEach(b,d,a);else if(sc(a))for(c in a)b.call(d,a[c],c,a);else if("function"===typeof a.hasOwnProperty)for(c in a)a.hasOwnProperty(c)&&
b.call(d,a[c],c,a);else for(c in a)ua.call(a,c)&&b.call(d,a[c],c,a);return a}function tc(a,b,d){for(var c=Object.keys(a).sort(),e=0;e<c.length;e++)b.call(d,a[c[e]],c[e]);return c}function uc(a){return function(b,d){a(d,b)}}function Yd(){return++pb}function Pb(a,b,d){for(var c=a.$$hashKey,e=0,f=b.length;e<f;++e){var g=b[e];if(D(g)||z(g))for(var h=Object.keys(g),k=0,l=h.length;k<l;k++){var m=h[k],n=g[m];d&&D(n)?da(n)?a[m]=new Date(n.valueOf()):Wa(n)?a[m]=new RegExp(n):n.nodeName?a[m]=n.cloneNode(!0):
Qb(n)?a[m]=n.clone():(D(a[m])||(a[m]=L(n)?[]:{}),Pb(a[m],[n],!0)):a[m]=n}}c?a.$$hashKey=c:delete a.$$hashKey;return a}function S(a){return Pb(a,va.call(arguments,1),!1)}function Zd(a){return Pb(a,va.call(arguments,1),!0)}function Z(a){return parseInt(a,10)}function Rb(a,b){return S(Object.create(a),b)}function A(){}function Xa(a){return a}function ha(a){return function(){return a}}function vc(a){return z(a.toString)&&a.toString!==ma}function y(a){return"undefined"===typeof a}function w(a){return"undefined"!==
typeof a}function D(a){return null!==a&&"object"===typeof a}function sc(a){return null!==a&&"object"===typeof a&&!wc(a)}function G(a){return"string"===typeof a}function T(a){return"number"===typeof a}function da(a){return"[object Date]"===ma.call(a)}function z(a){return"function"===typeof a}function Wa(a){return"[object RegExp]"===ma.call(a)}function Va(a){return a&&a.window===a}function Ya(a){return a&&a.$evalAsync&&a.$watch}function Ga(a){return"boolean"===typeof a}function $d(a){return a&&T(a.length)&&
ae.test(ma.call(a))}function Qb(a){return!(!a||!(a.nodeName||a.prop&&a.attr&&a.find))}function be(a){var b={};a=a.split(",");var d;for(d=0;d<a.length;d++)b[a[d]]=!0;return b}function wa(a){return Q(a.nodeName||a[0]&&a[0].nodeName)}function Za(a,b){var d=a.indexOf(b);0<=d&&a.splice(d,1);return d}function pa(a,b){function d(a,b){var d=b.$$hashKey,e;if(L(a)){e=0;for(var f=a.length;e<f;e++)b.push(c(a[e]))}else if(sc(a))for(e in a)b[e]=c(a[e]);else if(a&&"function"===typeof a.hasOwnProperty)for(e in a)a.hasOwnProperty(e)&&
(b[e]=c(a[e]));else for(e in a)ua.call(a,e)&&(b[e]=c(a[e]));d?b.$$hashKey=d:delete b.$$hashKey;return b}function c(a){if(!D(a))return a;var b=f.indexOf(a);if(-1!==b)return g[b];if(Va(a)||Ya(a))throw xa("cpws");var b=!1,c=e(a);void 0===c&&(c=L(a)?[]:Object.create(wc(a)),b=!0);f.push(a);g.push(c);return b?d(a,c):c}function e(a){switch(ma.call(a)){case "[object Int8Array]":case "[object Int16Array]":case "[object Int32Array]":case "[object Float32Array]":case "[object Float64Array]":case "[object Uint8Array]":case "[object Uint8ClampedArray]":case "[object Uint16Array]":case "[object Uint32Array]":return new a.constructor(c(a.buffer),
a.byteOffset,a.length);case "[object ArrayBuffer]":if(!a.slice){var b=new ArrayBuffer(a.byteLength);(new Uint8Array(b)).set(new Uint8Array(a));return b}return a.slice(0);case "[object Boolean]":case "[object Number]":case "[object String]":case "[object Date]":return new a.constructor(a.valueOf());case "[object RegExp]":return b=new RegExp(a.source,a.toString().match(/[^\/]*$/)[0]),b.lastIndex=a.lastIndex,b;case "[object Blob]":return new a.constructor([a],{type:a.type})}if(z(a.cloneNode))return a.cloneNode(!0)}
var f=[],g=[];if(b){if($d(b)||"[object ArrayBuffer]"===ma.call(b))throw xa("cpta");if(a===b)throw xa("cpi");L(b)?b.length=0:q(b,function(a,d){"$$hashKey"!==d&&delete b[d]});f.push(a);g.push(b);return d(a,b)}return c(a)}function na(a,b){if(a===b)return!0;if(null===a||null===b)return!1;if(a!==a&&b!==b)return!0;var d=typeof a,c;if(d==typeof b&&"object"==d)if(L(a)){if(!L(b))return!1;if((d=a.length)==b.length){for(c=0;c<d;c++)if(!na(a[c],b[c]))return!1;return!0}}else{if(da(a))return da(b)?na(a.getTime(),
b.getTime()):!1;if(Wa(a))return Wa(b)?a.toString()==b.toString():!1;if(Ya(a)||Ya(b)||Va(a)||Va(b)||L(b)||da(b)||Wa(b))return!1;d=U();for(c in a)if("$"!==c.charAt(0)&&!z(a[c])){if(!na(a[c],b[c]))return!1;d[c]=!0}for(c in b)if(!(c in d)&&"$"!==c.charAt(0)&&w(b[c])&&!z(b[c]))return!1;return!0}return!1}function $a(a,b,d){return a.concat(va.call(b,d))}function ab(a,b){var d=2<arguments.length?va.call(arguments,2):[];return!z(b)||b instanceof RegExp?b:d.length?function(){return arguments.length?b.apply(a,
$a(d,arguments,0)):b.apply(a,d)}:function(){return arguments.length?b.apply(a,arguments):b.call(a)}}function ce(a,b){var d=b;"string"===typeof a&&"$"===a.charAt(0)&&"$"===a.charAt(1)?d=void 0:Va(b)?d="$WINDOW":b&&C.document===b?d="$DOCUMENT":Ya(b)&&(d="$SCOPE");return d}function bb(a,b){if(!y(a))return T(b)||(b=b?2:null),JSON.stringify(a,ce,b)}function xc(a){return G(a)?JSON.parse(a):a}function yc(a,b){a=a.replace(de,"");var d=Date.parse("Jan 01, 1970 00:00:00 "+a)/6E4;return isNaN(d)?b:d}function Sb(a,
b,d){d=d?-1:1;var c=a.getTimezoneOffset();b=yc(b,c);d*=b-c;a=new Date(a.getTime());a.setMinutes(a.getMinutes()+d);return a}function ya(a){a=F(a).clone();try{a.empty()}catch(b){}var d=F("<div>").append(a).html();try{return a[0].nodeType===Ma?Q(d):d.match(/^(<[^>]+>)/)[1].replace(/^<([\w\-]+)/,function(a,b){return"<"+Q(b)})}catch(c){return Q(d)}}function zc(a){try{return decodeURIComponent(a)}catch(b){}}function Ac(a){var b={};q((a||"").split("&"),function(a){var c,e,f;a&&(e=a=a.replace(/\+/g,"%20"),
c=a.indexOf("="),-1!==c&&(e=a.substring(0,c),f=a.substring(c+1)),e=zc(e),w(e)&&(f=w(f)?zc(f):!0,ua.call(b,e)?L(b[e])?b[e].push(f):b[e]=[b[e],f]:b[e]=f))});return b}function Tb(a){var b=[];q(a,function(a,c){L(a)?q(a,function(a){b.push(ea(c,!0)+(!0===a?"":"="+ea(a,!0)))}):b.push(ea(c,!0)+(!0===a?"":"="+ea(a,!0)))});return b.length?b.join("&"):""}function qb(a){return ea(a,!0).replace(/%26/gi,"&").replace(/%3D/gi,"=").replace(/%2B/gi,"+")}function ea(a,b){return encodeURIComponent(a).replace(/%40/gi,
"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%3B/gi,";").replace(/%20/g,b?"%20":"+")}function ee(a,b){var d,c,e=Na.length;for(c=0;c<e;++c)if(d=Na[c]+b,G(d=a.getAttribute(d)))return d;return null}function fe(a,b){var d,c,e={};q(Na,function(b){b+="app";!d&&a.hasAttribute&&a.hasAttribute(b)&&(d=a,c=a.getAttribute(b))});q(Na,function(b){b+="app";var e;!d&&(e=a.querySelector("["+b.replace(":","\\:")+"]"))&&(d=e,c=e.getAttribute(b))});d&&(e.strictDi=null!==ee(d,"strict-di"),
b(d,c?[c]:[],e))}function Bc(a,b,d){D(d)||(d={});d=S({strictDi:!1},d);var c=function(){a=F(a);if(a.injector()){var c=a[0]===C.document?"document":ya(a);throw xa("btstrpd",c.replace(/</,"&lt;").replace(/>/,"&gt;"));}b=b||[];b.unshift(["$provide",function(b){b.value("$rootElement",a)}]);d.debugInfoEnabled&&b.push(["$compileProvider",function(a){a.debugInfoEnabled(!0)}]);b.unshift("ng");c=cb(b,d.strictDi);c.invoke(["$rootScope","$rootElement","$compile","$injector",function(a,b,c,d){a.$apply(function(){b.data("$injector",
d);c(b)(a)})}]);return c},e=/^NG_ENABLE_DEBUG_INFO!/,f=/^NG_DEFER_BOOTSTRAP!/;C&&e.test(C.name)&&(d.debugInfoEnabled=!0,C.name=C.name.replace(e,""));if(C&&!f.test(C.name))return c();C.name=C.name.replace(f,"");ca.resumeBootstrap=function(a){q(a,function(a){b.push(a)});return c()};z(ca.resumeDeferredBootstrap)&&ca.resumeDeferredBootstrap()}function ge(){C.name="NG_ENABLE_DEBUG_INFO!"+C.name;C.location.reload()}function he(a){a=ca.element(a).injector();if(!a)throw xa("test");return a.get("$$testability")}
function Cc(a,b){b=b||"_";return a.replace(ie,function(a,c){return(c?b:"")+a.toLowerCase()})}function je(){var a;if(!Dc){var b=rb();(qa=y(b)?C.jQuery:b?C[b]:void 0)&&qa.fn.on?(F=qa,S(qa.fn,{scope:Oa.scope,isolateScope:Oa.isolateScope,controller:Oa.controller,injector:Oa.injector,inheritedData:Oa.inheritedData}),a=qa.cleanData,qa.cleanData=function(b){for(var c,e=0,f;null!=(f=b[e]);e++)(c=qa._data(f,"events"))&&c.$destroy&&qa(f).triggerHandler("$destroy");a(b)}):F=O;ca.element=F;Dc=!0}}function sb(a,
b,d){if(!a)throw xa("areq",b||"?",d||"required");return a}function Pa(a,b,d){d&&L(a)&&(a=a[a.length-1]);sb(z(a),b,"not a function, got "+(a&&"object"===typeof a?a.constructor.name||"Object":typeof a));return a}function Qa(a,b){if("hasOwnProperty"===a)throw xa("badname",b);}function Ec(a,b,d){if(!b)return a;b=b.split(".");for(var c,e=a,f=b.length,g=0;g<f;g++)c=b[g],a&&(a=(e=a)[c]);return!d&&z(a)?ab(e,a):a}function tb(a){for(var b=a[0],d=a[a.length-1],c,e=1;b!==d&&(b=b.nextSibling);e++)if(c||a[e]!==
b)c||(c=F(va.call(a,0,e))),c.push(b);return c||a}function U(){return Object.create(null)}function ke(a){function b(a,b,c){return a[b]||(a[b]=c())}var d=N("$injector"),c=N("ng");a=b(a,"angular",Object);a.$$minErr=a.$$minErr||N;return b(a,"module",function(){var a={};return function(f,g,h){if("hasOwnProperty"===f)throw c("badname","module");g&&a.hasOwnProperty(f)&&(a[f]=null);return b(a,f,function(){function a(b,d,e,f){f||(f=c);return function(){f[e||"push"]([b,d,arguments]);return R}}function b(a,
d){return function(b,e){e&&z(e)&&(e.$$moduleName=f);c.push([a,d,arguments]);return R}}if(!g)throw d("nomod",f);var c=[],e=[],p=[],u=a("$injector","invoke","push",e),R={_invokeQueue:c,_configBlocks:e,_runBlocks:p,requires:g,name:f,provider:b("$provide","provider"),factory:b("$provide","factory"),service:b("$provide","service"),value:a("$provide","value"),constant:a("$provide","constant","unshift"),decorator:b("$provide","decorator"),animation:b("$animateProvider","register"),filter:b("$filterProvider",
"register"),controller:b("$controllerProvider","register"),directive:b("$compileProvider","directive"),component:b("$compileProvider","component"),config:u,run:function(a){p.push(a);return this}};h&&u(h);return R})}})}function ia(a,b){if(L(a)){b=b||[];for(var d=0,c=a.length;d<c;d++)b[d]=a[d]}else if(D(a))for(d in b=b||{},a)if("$"!==d.charAt(0)||"$"!==d.charAt(1))b[d]=a[d];return b||a}function le(a){S(a,{bootstrap:Bc,copy:pa,extend:S,merge:Zd,equals:na,element:F,forEach:q,injector:cb,noop:A,bind:ab,
toJson:bb,fromJson:xc,identity:Xa,isUndefined:y,isDefined:w,isString:G,isFunction:z,isObject:D,isNumber:T,isElement:Qb,isArray:L,version:me,isDate:da,lowercase:Q,uppercase:ub,callbacks:{$$counter:0},getTestability:he,$$minErr:N,$$csp:Ba,reloadWithDebugInfo:ge});Ub=ke(C);Ub("ng",["ngLocale"],["$provide",function(a){a.provider({$$sanitizeUri:ne});a.provider("$compile",Fc).directive({a:oe,input:Gc,textarea:Gc,form:pe,script:qe,select:re,style:se,option:te,ngBind:ue,ngBindHtml:ve,ngBindTemplate:we,ngClass:xe,
ngClassEven:ye,ngClassOdd:ze,ngCloak:Ae,ngController:Be,ngForm:Ce,ngHide:De,ngIf:Ee,ngInclude:Fe,ngInit:Ge,ngNonBindable:He,ngPluralize:Ie,ngRepeat:Je,ngShow:Ke,ngStyle:Le,ngSwitch:Me,ngSwitchWhen:Ne,ngSwitchDefault:Oe,ngOptions:Pe,ngTransclude:Qe,ngModel:Re,ngList:Se,ngChange:Te,pattern:Hc,ngPattern:Hc,required:Ic,ngRequired:Ic,minlength:Jc,ngMinlength:Jc,maxlength:Kc,ngMaxlength:Kc,ngValue:Ue,ngModelOptions:Ve}).directive({ngInclude:We}).directive(vb).directive(Lc);a.provider({$anchorScroll:Xe,
$animate:Ye,$animateCss:Ze,$$animateJs:$e,$$animateQueue:af,$$AnimateRunner:bf,$$animateAsyncRun:cf,$browser:df,$cacheFactory:ef,$controller:ff,$document:gf,$exceptionHandler:hf,$filter:Mc,$$forceReflow:jf,$interpolate:kf,$interval:lf,$http:mf,$httpParamSerializer:nf,$httpParamSerializerJQLike:of,$httpBackend:pf,$xhrFactory:qf,$jsonpCallbacks:rf,$location:sf,$log:tf,$parse:uf,$rootScope:vf,$q:wf,$$q:xf,$sce:yf,$sceDelegate:zf,$sniffer:Af,$templateCache:Bf,$templateRequest:Cf,$$testability:Df,$timeout:Ef,
$window:Ff,$$rAF:Gf,$$jqLite:Hf,$$HashMap:If,$$cookieReader:Jf})}])}function db(a){return a.replace(Kf,function(a,d,c,e){return e?c.toUpperCase():c}).replace(Lf,"Moz$1")}function Nc(a){a=a.nodeType;return 1===a||!a||9===a}function Oc(a,b){var d,c,e=b.createDocumentFragment(),f=[];if(Vb.test(a)){d=e.appendChild(b.createElement("div"));c=(Mf.exec(a)||["",""])[1].toLowerCase();c=ja[c]||ja._default;d.innerHTML=c[1]+a.replace(Nf,"<$1></$2>")+c[2];for(c=c[0];c--;)d=d.lastChild;f=$a(f,d.childNodes);d=e.firstChild;
d.textContent=""}else f.push(b.createTextNode(a));e.textContent="";e.innerHTML="";q(f,function(a){e.appendChild(a)});return e}function Pc(a,b){var d=a.parentNode;d&&d.replaceChild(b,a);b.appendChild(a)}function O(a){if(a instanceof O)return a;var b;G(a)&&(a=W(a),b=!0);if(!(this instanceof O)){if(b&&"<"!=a.charAt(0))throw Wb("nosel");return new O(a)}if(b){b=C.document;var d;a=(d=Of.exec(a))?[b.createElement(d[1])]:(d=Oc(a,b))?d.childNodes:[]}Qc(this,a)}function Xb(a){return a.cloneNode(!0)}function wb(a,
b){b||eb(a);if(a.querySelectorAll)for(var d=a.querySelectorAll("*"),c=0,e=d.length;c<e;c++)eb(d[c])}function Rc(a,b,d,c){if(w(c))throw Wb("offargs");var e=(c=xb(a))&&c.events,f=c&&c.handle;if(f)if(b){var g=function(b){var c=e[b];w(d)&&Za(c||[],d);w(d)&&c&&0<c.length||(a.removeEventListener(b,f,!1),delete e[b])};q(b.split(" "),function(a){g(a);yb[a]&&g(yb[a])})}else for(b in e)"$destroy"!==b&&a.removeEventListener(b,f,!1),delete e[b]}function eb(a,b){var d=a.ng339,c=d&&fb[d];c&&(b?delete c.data[b]:
(c.handle&&(c.events.$destroy&&c.handle({},"$destroy"),Rc(a)),delete fb[d],a.ng339=void 0))}function xb(a,b){var d=a.ng339,d=d&&fb[d];b&&!d&&(a.ng339=d=++Pf,d=fb[d]={events:{},data:{},handle:void 0});return d}function Yb(a,b,d){if(Nc(a)){var c=w(d),e=!c&&b&&!D(b),f=!b;a=(a=xb(a,!e))&&a.data;if(c)a[b]=d;else{if(f)return a;if(e)return a&&a[b];S(a,b)}}}function zb(a,b){return a.getAttribute?-1<(" "+(a.getAttribute("class")||"")+" ").replace(/[\n\t]/g," ").indexOf(" "+b+" "):!1}function Ab(a,b){b&&a.setAttribute&&
q(b.split(" "),function(b){a.setAttribute("class",W((" "+(a.getAttribute("class")||"")+" ").replace(/[\n\t]/g," ").replace(" "+W(b)+" "," ")))})}function Bb(a,b){if(b&&a.setAttribute){var d=(" "+(a.getAttribute("class")||"")+" ").replace(/[\n\t]/g," ");q(b.split(" "),function(a){a=W(a);-1===d.indexOf(" "+a+" ")&&(d+=a+" ")});a.setAttribute("class",W(d))}}function Qc(a,b){if(b)if(b.nodeType)a[a.length++]=b;else{var d=b.length;if("number"===typeof d&&b.window!==b){if(d)for(var c=0;c<d;c++)a[a.length++]=
b[c]}else a[a.length++]=b}}function Sc(a,b){return Cb(a,"$"+(b||"ngController")+"Controller")}function Cb(a,b,d){9==a.nodeType&&(a=a.documentElement);for(b=L(b)?b:[b];a;){for(var c=0,e=b.length;c<e;c++)if(w(d=F.data(a,b[c])))return d;a=a.parentNode||11===a.nodeType&&a.host}}function Tc(a){for(wb(a,!0);a.firstChild;)a.removeChild(a.firstChild)}function Db(a,b){b||wb(a);var d=a.parentNode;d&&d.removeChild(a)}function Qf(a,b){b=b||C;if("complete"===b.document.readyState)b.setTimeout(a);else F(b).on("load",
a)}function Uc(a,b){var d=Eb[b.toLowerCase()];return d&&Vc[wa(a)]&&d}function Rf(a,b){var d=function(c,d){c.isDefaultPrevented=function(){return c.defaultPrevented};var f=b[d||c.type],g=f?f.length:0;if(g){if(y(c.immediatePropagationStopped)){var h=c.stopImmediatePropagation;c.stopImmediatePropagation=function(){c.immediatePropagationStopped=!0;c.stopPropagation&&c.stopPropagation();h&&h.call(c)}}c.isImmediatePropagationStopped=function(){return!0===c.immediatePropagationStopped};var k=f.specialHandlerWrapper||
Sf;1<g&&(f=ia(f));for(var l=0;l<g;l++)c.isImmediatePropagationStopped()||k(a,c,f[l])}};d.elem=a;return d}function Sf(a,b,d){d.call(a,b)}function Tf(a,b,d){var c=b.relatedTarget;c&&(c===a||Uf.call(a,c))||d.call(a,b)}function Hf(){this.$get=function(){return S(O,{hasClass:function(a,b){a.attr&&(a=a[0]);return zb(a,b)},addClass:function(a,b){a.attr&&(a=a[0]);return Bb(a,b)},removeClass:function(a,b){a.attr&&(a=a[0]);return Ab(a,b)}})}}function Ca(a,b){var d=a&&a.$$hashKey;if(d)return"function"===typeof d&&
(d=a.$$hashKey()),d;d=typeof a;return d="function"==d||"object"==d&&null!==a?a.$$hashKey=d+":"+(b||Yd)():d+":"+a}function Ra(a,b){if(b){var d=0;this.nextUid=function(){return++d}}q(a,this.put,this)}function Wc(a){a=(Function.prototype.toString.call(a)+" ").replace(Vf,"");return a.match(Wf)||a.match(Xf)}function Yf(a){return(a=Wc(a))?"function("+(a[1]||"").replace(/[\s\r\n]+/," ")+")":"fn"}function cb(a,b){function d(a){return function(b,c){if(D(b))q(b,uc(a));else return a(b,c)}}function c(a,b){Qa(a,
"service");if(z(b)||L(b))b=p.instantiate(b);if(!b.$get)throw Ha("pget",a);return n[a+"Provider"]=b}function e(a,b){return function(){var c=B.invoke(b,this);if(y(c))throw Ha("undef",a);return c}}function f(a,b,d){return c(a,{$get:!1!==d?e(a,b):b})}function g(a){sb(y(a)||L(a),"modulesToLoad","not an array");var b=[],c;q(a,function(a){function d(a){var b,c;b=0;for(c=a.length;b<c;b++){var e=a[b],f=p.get(e[0]);f[e[1]].apply(f,e[2])}}if(!m.get(a)){m.put(a,!0);try{G(a)?(c=Ub(a),b=b.concat(g(c.requires)).concat(c._runBlocks),
d(c._invokeQueue),d(c._configBlocks)):z(a)?b.push(p.invoke(a)):L(a)?b.push(p.invoke(a)):Pa(a,"module")}catch(e){throw L(a)&&(a=a[a.length-1]),e.message&&e.stack&&-1==e.stack.indexOf(e.message)&&(e=e.message+"\n"+e.stack),Ha("modulerr",a,e.stack||e.message||e);}}});return b}function h(a,c){function d(b,e){if(a.hasOwnProperty(b)){if(a[b]===k)throw Ha("cdep",b+" <- "+l.join(" <- "));return a[b]}try{return l.unshift(b),a[b]=k,a[b]=c(b,e)}catch(f){throw a[b]===k&&delete a[b],f;}finally{l.shift()}}function e(a,
c,f){var g=[];a=cb.$$annotate(a,b,f);for(var h=0,k=a.length;h<k;h++){var l=a[h];if("string"!==typeof l)throw Ha("itkn",l);g.push(c&&c.hasOwnProperty(l)?c[l]:d(l,f))}return g}return{invoke:function(a,b,c,d){"string"===typeof c&&(d=c,c=null);c=e(a,c,d);L(a)&&(a=a[a.length-1]);d=11>=Ea?!1:"function"===typeof a&&/^(?:class\b|constructor\()/.test(Function.prototype.toString.call(a)+" ");return d?(c.unshift(null),new (Function.prototype.bind.apply(a,c))):a.apply(b,c)},instantiate:function(a,b,c){var d=
L(a)?a[a.length-1]:a;a=e(a,b,c);a.unshift(null);return new (Function.prototype.bind.apply(d,a))},get:d,annotate:cb.$$annotate,has:function(b){return n.hasOwnProperty(b+"Provider")||a.hasOwnProperty(b)}}}b=!0===b;var k={},l=[],m=new Ra([],!0),n={$provide:{provider:d(c),factory:d(f),service:d(function(a,b){return f(a,["$injector",function(a){return a.instantiate(b)}])}),value:d(function(a,b){return f(a,ha(b),!1)}),constant:d(function(a,b){Qa(a,"constant");n[a]=b;u[a]=b}),decorator:function(a,b){var c=
p.get(a+"Provider"),d=c.$get;c.$get=function(){var a=B.invoke(d,c);return B.invoke(b,null,{$delegate:a})}}}},p=n.$injector=h(n,function(a,b){ca.isString(b)&&l.push(b);throw Ha("unpr",l.join(" <- "));}),u={},R=h(u,function(a,b){var c=p.get(a+"Provider",b);return B.invoke(c.$get,c,void 0,a)}),B=R;n.$injectorProvider={$get:ha(R)};var r=g(a),B=R.get("$injector");B.strictDi=b;q(r,function(a){a&&B.invoke(a)});return B}function Xe(){var a=!0;this.disableAutoScrolling=function(){a=!1};this.$get=["$window",
"$location","$rootScope",function(b,d,c){function e(a){var b=null;Array.prototype.some.call(a,function(a){if("a"===wa(a))return b=a,!0});return b}function f(a){if(a){a.scrollIntoView();var c;c=g.yOffset;z(c)?c=c():Qb(c)?(c=c[0],c="fixed"!==b.getComputedStyle(c).position?0:c.getBoundingClientRect().bottom):T(c)||(c=0);c&&(a=a.getBoundingClientRect().top,b.scrollBy(0,a-c))}else b.scrollTo(0,0)}function g(a){a=G(a)?a:d.hash();var b;a?(b=h.getElementById(a))?f(b):(b=e(h.getElementsByName(a)))?f(b):"top"===
a&&f(null):f(null)}var h=b.document;a&&c.$watch(function(){return d.hash()},function(a,b){a===b&&""===a||Qf(function(){c.$evalAsync(g)})});return g}]}function gb(a,b){if(!a&&!b)return"";if(!a)return b;if(!b)return a;L(a)&&(a=a.join(" "));L(b)&&(b=b.join(" "));return a+" "+b}function Zf(a){G(a)&&(a=a.split(" "));var b=U();q(a,function(a){a.length&&(b[a]=!0)});return b}function Ia(a){return D(a)?a:{}}function $f(a,b,d,c){function e(a){try{a.apply(null,va.call(arguments,1))}finally{if(R--,0===R)for(;B.length;)try{B.pop()()}catch(b){d.error(b)}}}
function f(){t=null;g();h()}function g(){r=K();r=y(r)?null:r;na(r,E)&&(r=E);E=r}function h(){if(v!==k.url()||J!==r)v=k.url(),J=r,q(M,function(a){a(k.url(),r)})}var k=this,l=a.location,m=a.history,n=a.setTimeout,p=a.clearTimeout,u={};k.isMock=!1;var R=0,B=[];k.$$completeOutstandingRequest=e;k.$$incOutstandingRequestCount=function(){R++};k.notifyWhenNoOutstandingRequests=function(a){0===R?a():B.push(a)};var r,J,v=l.href,fa=b.find("base"),t=null,K=c.history?function(){try{return m.state}catch(a){}}:
A;g();J=r;k.url=function(b,d,e){y(e)&&(e=null);l!==a.location&&(l=a.location);m!==a.history&&(m=a.history);if(b){var f=J===e;if(v===b&&(!c.history||f))return k;var h=v&&Ja(v)===Ja(b);v=b;J=e;!c.history||h&&f?(h||(t=b),d?l.replace(b):h?(d=l,e=b.indexOf("#"),e=-1===e?"":b.substr(e),d.hash=e):l.href=b,l.href!==b&&(t=b)):(m[d?"replaceState":"pushState"](e,"",b),g(),J=r);t&&(t=b);return k}return t||l.href.replace(/%27/g,"'")};k.state=function(){return r};var M=[],H=!1,E=null;k.onUrlChange=function(b){if(!H){if(c.history)F(a).on("popstate",
f);F(a).on("hashchange",f);H=!0}M.push(b);return b};k.$$applicationDestroyed=function(){F(a).off("hashchange popstate",f)};k.$$checkUrlChange=h;k.baseHref=function(){var a=fa.attr("href");return a?a.replace(/^(https?\:)?\/\/[^\/]*/,""):""};k.defer=function(a,b){var c;R++;c=n(function(){delete u[c];e(a)},b||0);u[c]=!0;return c};k.defer.cancel=function(a){return u[a]?(delete u[a],p(a),e(A),!0):!1}}function df(){this.$get=["$window","$log","$sniffer","$document",function(a,b,d,c){return new $f(a,c,b,
d)}]}function ef(){this.$get=function(){function a(a,c){function e(a){a!=n&&(p?p==a&&(p=a.n):p=a,f(a.n,a.p),f(a,n),n=a,n.n=null)}function f(a,b){a!=b&&(a&&(a.p=b),b&&(b.n=a))}if(a in b)throw N("$cacheFactory")("iid",a);var g=0,h=S({},c,{id:a}),k=U(),l=c&&c.capacity||Number.MAX_VALUE,m=U(),n=null,p=null;return b[a]={put:function(a,b){if(!y(b)){if(l<Number.MAX_VALUE){var c=m[a]||(m[a]={key:a});e(c)}a in k||g++;k[a]=b;g>l&&this.remove(p.key);return b}},get:function(a){if(l<Number.MAX_VALUE){var b=m[a];
if(!b)return;e(b)}return k[a]},remove:function(a){if(l<Number.MAX_VALUE){var b=m[a];if(!b)return;b==n&&(n=b.p);b==p&&(p=b.n);f(b.n,b.p);delete m[a]}a in k&&(delete k[a],g--)},removeAll:function(){k=U();g=0;m=U();n=p=null},destroy:function(){m=h=k=null;delete b[a]},info:function(){return S({},h,{size:g})}}}var b={};a.info=function(){var a={};q(b,function(b,e){a[e]=b.info()});return a};a.get=function(a){return b[a]};return a}}function Bf(){this.$get=["$cacheFactory",function(a){return a("templates")}]}
function Fc(a,b){function d(a,b,c){var d=/^\s*([@&<]|=(\*?))(\??)\s*(\w*)\s*$/,e=U();q(a,function(a,f){if(a in n)e[f]=n[a];else{var g=a.match(d);if(!g)throw ga("iscp",b,f,a,c?"controller bindings definition":"isolate scope definition");e[f]={mode:g[1][0],collection:"*"===g[2],optional:"?"===g[3],attrName:g[4]||f};g[4]&&(n[a]=e[f])}});return e}function c(a){var b=a.charAt(0);if(!b||b!==Q(b))throw ga("baddir",a);if(a!==a.trim())throw ga("baddir",a);}function e(a){var b=a.require||a.controller&&a.name;
!L(b)&&D(b)&&q(b,function(a,c){var d=a.match(l);a.substring(d[0].length)||(b[c]=d[0]+c)});return b}var f={},g=/^\s*directive\:\s*([\w\-]+)\s+(.*)$/,h=/(([\w\-]+)(?:\:([^;]+))?;?)/,k=be("ngSrc,ngSrcset,src,srcset"),l=/^(?:(\^\^?)?(\?)?(\^\^?)?)?/,m=/^(on[a-z]+|formaction)$/,n=U();this.directive=function B(b,d){Qa(b,"directive");G(b)?(c(b),sb(d,"directiveFactory"),f.hasOwnProperty(b)||(f[b]=[],a.factory(b+"Directive",["$injector","$exceptionHandler",function(a,c){var d=[];q(f[b],function(f,g){try{var h=
a.invoke(f);z(h)?h={compile:ha(h)}:!h.compile&&h.link&&(h.compile=ha(h.link));h.priority=h.priority||0;h.index=g;h.name=h.name||b;h.require=e(h);h.restrict=h.restrict||"EA";h.$$moduleName=f.$$moduleName;d.push(h)}catch(k){c(k)}});return d}])),f[b].push(d)):q(b,uc(B));return this};this.component=function(a,b){function c(a){function e(b){return z(b)||L(b)?function(c,d){return a.invoke(b,this,{$element:c,$attrs:d})}:b}var f=b.template||b.templateUrl?b.template:"",g={controller:d,controllerAs:Xc(b.controller)||
b.controllerAs||"$ctrl",template:e(f),templateUrl:e(b.templateUrl),transclude:b.transclude,scope:{},bindToController:b.bindings||{},restrict:"E",require:b.require};q(b,function(a,b){"$"===b.charAt(0)&&(g[b]=a)});return g}var d=b.controller||function(){};q(b,function(a,b){"$"===b.charAt(0)&&(c[b]=a,z(d)&&(d[b]=a))});c.$inject=["$injector"];return this.directive(a,c)};this.aHrefSanitizationWhitelist=function(a){return w(a)?(b.aHrefSanitizationWhitelist(a),this):b.aHrefSanitizationWhitelist()};this.imgSrcSanitizationWhitelist=
function(a){return w(a)?(b.imgSrcSanitizationWhitelist(a),this):b.imgSrcSanitizationWhitelist()};var p=!0;this.debugInfoEnabled=function(a){return w(a)?(p=a,this):p};var u=10;this.onChangesTtl=function(a){return arguments.length?(u=a,this):u};this.$get=["$injector","$interpolate","$exceptionHandler","$templateRequest","$parse","$controller","$rootScope","$sce","$animate","$$sanitizeUri",function(a,b,c,e,n,t,K,M,H,E){function I(){try{if(!--qa)throw Y=void 0,ga("infchng",u);K.$apply(function(){for(var a=
[],b=0,c=Y.length;b<c;++b)try{Y[b]()}catch(d){a.push(d)}Y=void 0;if(a.length)throw a;})}finally{qa++}}function Da(a,b){if(b){var c=Object.keys(b),d,e,f;d=0;for(e=c.length;d<e;d++)f=c[d],this[f]=b[f]}else this.$attr={};this.$$element=a}function P(a,b,c){pa.innerHTML="<span "+b+">";b=pa.firstChild.attributes;var d=b[0];b.removeNamedItem(d.name);d.value=c;a.attributes.setNamedItem(d)}function x(a,b){try{a.addClass(b)}catch(c){}}function aa(a,b,c,d,e){a instanceof F||(a=F(a));for(var f=/\S+/,g=0,h=a.length;g<
h;g++){var k=a[g];k.nodeType===Ma&&k.nodeValue.match(f)&&Pc(k,a[g]=C.document.createElement("span"))}var l=s(a,b,a,c,d,e);aa.$$addScopeClass(a);var m=null;return function(b,c,d){sb(b,"scope");e&&e.needsNewScope&&(b=b.$parent.$new());d=d||{};var f=d.parentBoundTranscludeFn,g=d.transcludeControllers;d=d.futureParentElement;f&&f.$$boundTransclude&&(f=f.$$boundTransclude);m||(m=(d=d&&d[0])?"foreignobject"!==wa(d)&&ma.call(d).match(/SVG/)?"svg":"html":"html");d="html"!==m?F(da(m,F("<div>").append(a).html())):
c?Oa.clone.call(a):a;if(g)for(var h in g)d.data("$"+h+"Controller",g[h].instance);aa.$$addScopeInfo(d,b);c&&c(d,b);l&&l(b,d,d,f);return d}}function s(a,b,c,d,e,f){function g(a,c,d,e){var f,k,l,m,p,r,v;if(n)for(v=Array(c.length),m=0;m<h.length;m+=3)f=h[m],v[f]=c[f];else v=c;m=0;for(p=h.length;m<p;)k=v[h[m++]],c=h[m++],f=h[m++],c?(c.scope?(l=a.$new(),aa.$$addScopeInfo(F(k),l)):l=a,r=c.transcludeOnThisElement?za(a,c.transclude,e):!c.templateOnThisElement&&e?e:!e&&b?za(a,b):null,c(f,l,k,d,r)):f&&f(a,
k.childNodes,void 0,e)}for(var h=[],k,l,m,p,n,r=0;r<a.length;r++){k=new Da;l=$b(a[r],[],k,0===r?d:void 0,e);(f=l.length?oa(l,a[r],k,b,c,null,[],[],f):null)&&f.scope&&aa.$$addScopeClass(k.$$element);k=f&&f.terminal||!(m=a[r].childNodes)||!m.length?null:s(m,f?(f.transcludeOnThisElement||!f.templateOnThisElement)&&f.transclude:b);if(f||k)h.push(r,f,k),p=!0,n=n||f;f=null}return p?g:null}function za(a,b,c){function d(e,f,g,h,k){e||(e=a.$new(!1,k),e.$$transcluded=!0);return b(e,f,{parentBoundTranscludeFn:c,
transcludeControllers:g,futureParentElement:h})}var e=d.$$slots=U(),f;for(f in b.$$slots)e[f]=b.$$slots[f]?za(a,b.$$slots[f],c):null;return d}function $b(a,b,c,d,e){var f=c.$attr;switch(a.nodeType){case 1:O(b,Aa(wa(a)),"E",d,e);for(var g,k,l,m,p=a.attributes,n=0,r=p&&p.length;n<r;n++){var v=!1,u=!1;g=p[n];k=g.name;l=W(g.value);g=Aa(k);if(m=Ba.test(g))k=k.replace(Yc,"").substr(8).replace(/_(.)/g,function(a,b){return b.toUpperCase()});(g=g.match(Ca))&&V(g[1])&&(v=k,u=k.substr(0,k.length-5)+"end",k=
k.substr(0,k.length-6));g=Aa(k.toLowerCase());f[g]=k;if(m||!c.hasOwnProperty(g))c[g]=l,Uc(a,g)&&(c[g]=!0);ia(a,b,l,g,m);O(b,g,"A",d,e,v,u)}f=a.className;D(f)&&(f=f.animVal);if(G(f)&&""!==f)for(;a=h.exec(f);)g=Aa(a[2]),O(b,g,"C",d,e)&&(c[g]=W(a[3])),f=f.substr(a.index+a[0].length);break;case Ma:if(11===Ea)for(;a.parentNode&&a.nextSibling&&a.nextSibling.nodeType===Ma;)a.nodeValue+=a.nextSibling.nodeValue,a.parentNode.removeChild(a.nextSibling);ca(b,a.nodeValue);break;case 8:hb(a,b,c,d,e)}b.sort(Z);
return b}function hb(a,b,c,d,e){try{var f=g.exec(a.nodeValue);if(f){var h=Aa(f[1]);O(b,h,"M",d,e)&&(c[h]=W(f[2]))}}catch(k){}}function N(a,b,c){var d=[],e=0;if(b&&a.hasAttribute&&a.hasAttribute(b)){do{if(!a)throw ga("uterdir",b,c);1==a.nodeType&&(a.hasAttribute(b)&&e++,a.hasAttribute(c)&&e--);d.push(a);a=a.nextSibling}while(0<e)}else d.push(a);return F(d)}function Zc(a,b,c){return function(d,e,f,g,h){e=N(e[0],b,c);return a(d,e,f,g,h)}}function ac(a,b,c,d,e,f){var g;return a?aa(b,c,d,e,f):function(){g||
(g=aa(b,c,d,e,f),b=c=f=null);return g.apply(this,arguments)}}function oa(a,b,d,e,f,g,h,k,l){function m(a,b,c,d){if(a){c&&(a=Zc(a,c,d));a.require=x.require;a.directiveName=I;if(u===x||x.$$isolateScope)a=ja(a,{isolateScope:!0});h.push(a)}if(b){c&&(b=Zc(b,c,d));b.require=x.require;b.directiveName=I;if(u===x||x.$$isolateScope)b=ja(b,{isolateScope:!0});k.push(b)}}function p(a,e,f,g,l){function m(a,b,c,d){var e;Ya(a)||(d=c,c=b,b=a,a=void 0);fa&&(e=t);c||(c=fa?I.parent():I);if(d){var f=l.$$slots[d];if(f)return f(a,
b,e,c,s);if(y(f))throw ga("noslot",d,ya(I));}else return l(a,b,e,c,s)}var n,E,x,M,B,t,P,I;b===f?(g=d,I=d.$$element):(I=F(f),g=new Da(I,d));B=e;u?M=e.$new(!0):r&&(B=e.$parent);l&&(P=m,P.$$boundTransclude=l,P.isSlotFilled=function(a){return!!l.$$slots[a]});v&&(t=ag(I,g,P,v,M,e,u));u&&(aa.$$addScopeInfo(I,M,!0,!(H&&(H===u||H===u.$$originalDirective))),aa.$$addScopeClass(I,!0),M.$$isolateBindings=u.$$isolateBindings,E=ka(e,g,M,M.$$isolateBindings,u),E.removeWatches&&M.$on("$destroy",E.removeWatches));
for(n in t){E=v[n];x=t[n];var Zb=E.$$bindings.bindToController;x.bindingInfo=x.identifier&&Zb?ka(B,g,x.instance,Zb,E):{};var K=x();K!==x.instance&&(x.instance=K,I.data("$"+E.name+"Controller",K),x.bindingInfo.removeWatches&&x.bindingInfo.removeWatches(),x.bindingInfo=ka(B,g,x.instance,Zb,E))}q(v,function(a,b){var c=a.require;a.bindToController&&!L(c)&&D(c)&&S(t[b].instance,ib(b,c,I,t))});q(t,function(a){var b=a.instance;if(z(b.$onChanges))try{b.$onChanges(a.bindingInfo.initialChanges)}catch(d){c(d)}if(z(b.$onInit))try{b.$onInit()}catch(e){c(e)}z(b.$doCheck)&&
(B.$watch(function(){b.$doCheck()}),b.$doCheck());z(b.$onDestroy)&&B.$on("$destroy",function(){b.$onDestroy()})});n=0;for(E=h.length;n<E;n++)x=h[n],la(x,x.isolateScope?M:e,I,g,x.require&&ib(x.directiveName,x.require,I,t),P);var s=e;u&&(u.template||null===u.templateUrl)&&(s=M);a&&a(s,f.childNodes,void 0,l);for(n=k.length-1;0<=n;n--)x=k[n],la(x,x.isolateScope?M:e,I,g,x.require&&ib(x.directiveName,x.require,I,t),P);q(t,function(a){a=a.instance;z(a.$postLink)&&a.$postLink()})}l=l||{};for(var n=-Number.MAX_VALUE,
r=l.newScopeDirective,v=l.controllerDirectives,u=l.newIsolateScopeDirective,H=l.templateDirective,E=l.nonTlbTranscludeDirective,M=!1,B=!1,fa=l.hasElementTranscludeDirective,t=d.$$element=F(b),x,I,P,K=e,s,Fa=!1,za=!1,w,A=0,C=a.length;A<C;A++){x=a[A];var G=x.$$start,hb=x.$$end;G&&(t=N(b,G,hb));P=void 0;if(n>x.priority)break;if(w=x.scope)x.templateUrl||(D(w)?(X("new/isolated scope",u||r,x,t),u=x):X("new/isolated scope",u,x,t)),r=r||x;I=x.name;if(!Fa&&(x.replace&&(x.templateUrl||x.template)||x.transclude&&
!x.$$tlb)){for(w=A+1;Fa=a[w++];)if(Fa.transclude&&!Fa.$$tlb||Fa.replace&&(Fa.templateUrl||Fa.template)){za=!0;break}Fa=!0}!x.templateUrl&&x.controller&&(w=x.controller,v=v||U(),X("'"+I+"' controller",v[I],x,t),v[I]=x);if(w=x.transclude)if(M=!0,x.$$tlb||(X("transclusion",E,x,t),E=x),"element"==w)fa=!0,n=x.priority,P=t,t=d.$$element=F(aa.$$createComment(I,d[I])),b=t[0],ea(f,va.call(P,0),b),P[0].$$parentNode=P[0].parentNode,K=ac(za,P,e,n,g&&g.name,{nonTlbTranscludeDirective:E});else{var oa=U();P=F(Xb(b)).contents();
if(D(w)){P=[];var Q=U(),O=U();q(w,function(a,b){var c="?"===a.charAt(0);a=c?a.substring(1):a;Q[a]=b;oa[b]=null;O[b]=c});q(t.contents(),function(a){var b=Q[Aa(wa(a))];b?(O[b]=!0,oa[b]=oa[b]||[],oa[b].push(a)):P.push(a)});q(O,function(a,b){if(!a)throw ga("reqslot",b);});for(var V in oa)oa[V]&&(oa[V]=ac(za,oa[V],e))}t.empty();K=ac(za,P,e,void 0,void 0,{needsNewScope:x.$$isolateScope||x.$$newScope});K.$$slots=oa}if(x.template)if(B=!0,X("template",H,x,t),H=x,w=z(x.template)?x.template(t,d):x.template,
w=xa(w),x.replace){g=x;P=Vb.test(w)?$c(da(x.templateNamespace,W(w))):[];b=P[0];if(1!=P.length||1!==b.nodeType)throw ga("tplrt",I,"");ea(f,t,b);C={$attr:{}};w=$b(b,[],C);var Z=a.splice(A+1,a.length-(A+1));(u||r)&&T(w,u,r);a=a.concat(w).concat(Z);$(d,C);C=a.length}else t.html(w);if(x.templateUrl)B=!0,X("template",H,x,t),H=x,x.replace&&(g=x),p=ba(a.splice(A,a.length-A),t,d,f,M&&K,h,k,{controllerDirectives:v,newScopeDirective:r!==x&&r,newIsolateScopeDirective:u,templateDirective:H,nonTlbTranscludeDirective:E}),
C=a.length;else if(x.compile)try{s=x.compile(t,d,K);var Y=x.$$originalDirective||x;z(s)?m(null,ab(Y,s),G,hb):s&&m(ab(Y,s.pre),ab(Y,s.post),G,hb)}catch(ca){c(ca,ya(t))}x.terminal&&(p.terminal=!0,n=Math.max(n,x.priority))}p.scope=r&&!0===r.scope;p.transcludeOnThisElement=M;p.templateOnThisElement=B;p.transclude=K;l.hasElementTranscludeDirective=fa;return p}function ib(a,b,c,d){var e;if(G(b)){var f=b.match(l);b=b.substring(f[0].length);var g=f[1]||f[3],f="?"===f[2];"^^"===g?c=c.parent():e=(e=d&&d[b])&&
e.instance;if(!e){var h="$"+b+"Controller";e=g?c.inheritedData(h):c.data(h)}if(!e&&!f)throw ga("ctreq",b,a);}else if(L(b))for(e=[],g=0,f=b.length;g<f;g++)e[g]=ib(a,b[g],c,d);else D(b)&&(e={},q(b,function(b,f){e[f]=ib(a,b,c,d)}));return e||null}function ag(a,b,c,d,e,f,g){var h=U(),k;for(k in d){var l=d[k],m={$scope:l===g||l.$$isolateScope?e:f,$element:a,$attrs:b,$transclude:c},p=l.controller;"@"==p&&(p=b[l.name]);m=t(p,m,!0,l.controllerAs);h[l.name]=m;a.data("$"+l.name+"Controller",m.instance)}return h}
function T(a,b,c){for(var d=0,e=a.length;d<e;d++)a[d]=Rb(a[d],{$$isolateScope:b,$$newScope:c})}function O(b,e,g,h,k,l,m){if(e===k)return null;k=null;if(f.hasOwnProperty(e)){var p;e=a.get(e+"Directive");for(var n=0,r=e.length;n<r;n++)try{if(p=e[n],(y(h)||h>p.priority)&&-1!=p.restrict.indexOf(g)){l&&(p=Rb(p,{$$start:l,$$end:m}));if(!p.$$bindings){var u=p,v=p,x=p.name,H={isolateScope:null,bindToController:null};D(v.scope)&&(!0===v.bindToController?(H.bindToController=d(v.scope,x,!0),H.isolateScope={}):
H.isolateScope=d(v.scope,x,!1));D(v.bindToController)&&(H.bindToController=d(v.bindToController,x,!0));if(D(H.bindToController)){var E=v.controller,M=v.controllerAs;if(!E)throw ga("noctrl",x);if(!Xc(E,M))throw ga("noident",x);}var t=u.$$bindings=H;D(t.isolateScope)&&(p.$$isolateBindings=t.isolateScope)}b.push(p);k=p}}catch(I){c(I)}}return k}function V(b){if(f.hasOwnProperty(b))for(var c=a.get(b+"Directive"),d=0,e=c.length;d<e;d++)if(b=c[d],b.multiElement)return!0;return!1}function $(a,b){var c=b.$attr,
d=a.$attr;q(a,function(d,e){"$"!=e.charAt(0)&&(b[e]&&b[e]!==d&&(d+=("style"===e?";":" ")+b[e]),a.$set(e,d,!0,c[e]))});q(b,function(b,e){a.hasOwnProperty(e)||"$"===e.charAt(0)||(a[e]=b,"class"!==e&&"style"!==e&&(d[e]=c[e]))})}function ba(a,b,c,d,f,g,h,k){var l=[],m,p,n=b[0],r=a.shift(),u=Rb(r,{templateUrl:null,transclude:null,replace:null,$$originalDirective:r}),H=z(r.templateUrl)?r.templateUrl(b,c):r.templateUrl,E=r.templateNamespace;b.empty();e(H).then(function(e){var v,M;e=xa(e);if(r.replace){e=
Vb.test(e)?$c(da(E,W(e))):[];v=e[0];if(1!=e.length||1!==v.nodeType)throw ga("tplrt",r.name,H);e={$attr:{}};ea(d,b,v);var B=$b(v,[],e);D(r.scope)&&T(B,!0);a=B.concat(a);$(c,e)}else v=n,b.html(e);a.unshift(u);m=oa(a,v,c,f,b,r,g,h,k);q(d,function(a,c){a==v&&(d[c]=b[0])});for(p=s(b[0].childNodes,f);l.length;){e=l.shift();M=l.shift();var t=l.shift(),I=l.shift(),B=b[0];if(!e.$$destroyed){if(M!==n){var P=M.className;k.hasElementTranscludeDirective&&r.replace||(B=Xb(v));ea(t,F(M),B);x(F(B),P)}M=m.transcludeOnThisElement?
za(e,m.transclude,I):I;m(p,e,B,d,M)}}l=null});return function(a,b,c,d,e){a=e;b.$$destroyed||(l?l.push(b,c,d,a):(m.transcludeOnThisElement&&(a=za(b,m.transclude,e)),m(p,b,c,d,a)))}}function Z(a,b){var c=b.priority-a.priority;return 0!==c?c:a.name!==b.name?a.name<b.name?-1:1:a.index-b.index}function X(a,b,c,d){function e(a){return a?" (module: "+a+")":""}if(b)throw ga("multidir",b.name,e(b.$$moduleName),c.name,e(c.$$moduleName),a,ya(d));}function ca(a,c){var d=b(c,!0);d&&a.push({priority:0,compile:function(a){a=
a.parent();var b=!!a.length;b&&aa.$$addBindingClass(a);return function(a,c){var e=c.parent();b||aa.$$addBindingClass(e);aa.$$addBindingInfo(e,d.expressions);a.$watch(d,function(a){c[0].nodeValue=a})}}})}function da(a,b){a=Q(a||"html");switch(a){case "svg":case "math":var c=C.document.createElement("div");c.innerHTML="<"+a+">"+b+"</"+a+">";return c.childNodes[0].childNodes;default:return b}}function ha(a,b){if("srcdoc"==b)return M.HTML;var c=wa(a);if("xlinkHref"==b||"form"==c&&"action"==b||"img"!=
c&&("src"==b||"ngSrc"==b))return M.RESOURCE_URL}function ia(a,c,d,e,f){var g=ha(a,e);f=k[e]||f;var h=b(d,!0,g,f);if(h){if("multiple"===e&&"select"===wa(a))throw ga("selmulti",ya(a));c.push({priority:100,compile:function(){return{pre:function(a,c,k){c=k.$$observers||(k.$$observers=U());if(m.test(e))throw ga("nodomevents");var l=k[e];l!==d&&(h=l&&b(l,!0,g,f),d=l);h&&(k[e]=h(a),(c[e]||(c[e]=[])).$$inter=!0,(k.$$observers&&k.$$observers[e].$$scope||a).$watch(h,function(a,b){"class"===e&&a!=b?k.$updateClass(a,
b):k.$set(e,a)}))}}}})}}function ea(a,b,c){var d=b[0],e=b.length,f=d.parentNode,g,h;if(a)for(g=0,h=a.length;g<h;g++)if(a[g]==d){a[g++]=c;h=g+e-1;for(var k=a.length;g<k;g++,h++)h<k?a[g]=a[h]:delete a[g];a.length-=e-1;a.context===d&&(a.context=c);break}f&&f.replaceChild(c,d);a=C.document.createDocumentFragment();for(g=0;g<e;g++)a.appendChild(b[g]);F.hasData(d)&&(F.data(c,F.data(d)),F(d).off("$destroy"));F.cleanData(a.querySelectorAll("*"));for(g=1;g<e;g++)delete b[g];b[0]=c;b.length=1}function ja(a,
b){return S(function(){return a.apply(null,arguments)},a,b)}function la(a,b,d,e,f,g){try{a(b,d,e,f,g)}catch(h){c(h,ya(d))}}function ka(a,c,d,e,f){function g(b,c,e){z(d.$onChanges)&&c!==e&&(Y||(a.$$postDigest(I),Y=[]),m||(m={},Y.push(h)),m[b]&&(e=m[b].previousValue),m[b]=new Fb(e,c))}function h(){d.$onChanges(m);m=void 0}var k=[],l={},m;q(e,function(e,h){var m=e.attrName,p=e.optional,v,u,x,H;switch(e.mode){case "@":p||ua.call(c,m)||(d[h]=c[m]=void 0);c.$observe(m,function(a){if(G(a)||Ga(a))g(h,a,d[h]),
d[h]=a});c.$$observers[m].$$scope=a;v=c[m];G(v)?d[h]=b(v)(a):Ga(v)&&(d[h]=v);l[h]=new Fb(bc,d[h]);break;case "=":if(!ua.call(c,m)){if(p)break;c[m]=void 0}if(p&&!c[m])break;u=n(c[m]);H=u.literal?na:function(a,b){return a===b||a!==a&&b!==b};x=u.assign||function(){v=d[h]=u(a);throw ga("nonassign",c[m],m,f.name);};v=d[h]=u(a);p=function(b){H(b,d[h])||(H(b,v)?x(a,b=d[h]):d[h]=b);return v=b};p.$stateful=!0;p=e.collection?a.$watchCollection(c[m],p):a.$watch(n(c[m],p),null,u.literal);k.push(p);break;case "<":if(!ua.call(c,
m)){if(p)break;c[m]=void 0}if(p&&!c[m])break;u=n(c[m]);var E=d[h]=u(a);l[h]=new Fb(bc,d[h]);p=a.$watch(u,function(a,b){if(b===a){if(b===E)return;b=E}g(h,a,b);d[h]=a},u.literal);k.push(p);break;case "&":u=c.hasOwnProperty(m)?n(c[m]):A;if(u===A&&p)break;d[h]=function(b){return u(a,b)}}});return{initialChanges:l,removeWatches:k.length&&function(){for(var a=0,b=k.length;a<b;++a)k[a]()}}}var ta=/^\w/,pa=C.document.createElement("div"),qa=u,Y;Da.prototype={$normalize:Aa,$addClass:function(a){a&&0<a.length&&
H.addClass(this.$$element,a)},$removeClass:function(a){a&&0<a.length&&H.removeClass(this.$$element,a)},$updateClass:function(a,b){var c=ad(a,b);c&&c.length&&H.addClass(this.$$element,c);(c=ad(b,a))&&c.length&&H.removeClass(this.$$element,c)},$set:function(a,b,d,e){var f=Uc(this.$$element[0],a),g=bd[a],h=a;f?(this.$$element.prop(a,b),e=f):g&&(this[g]=b,h=g);this[a]=b;e?this.$attr[a]=e:(e=this.$attr[a])||(this.$attr[a]=e=Cc(a,"-"));f=wa(this.$$element);if("a"===f&&("href"===a||"xlinkHref"===a)||"img"===
f&&"src"===a)this[a]=b=E(b,"src"===a);else if("img"===f&&"srcset"===a&&w(b)){for(var f="",g=W(b),k=/(\s+\d+x\s*,|\s+\d+w\s*,|\s+,|,\s+)/,k=/\s/.test(g)?k:/(,)/,g=g.split(k),k=Math.floor(g.length/2),l=0;l<k;l++)var m=2*l,f=f+E(W(g[m]),!0),f=f+(" "+W(g[m+1]));g=W(g[2*l]).split(/\s/);f+=E(W(g[0]),!0);2===g.length&&(f+=" "+W(g[1]));this[a]=b=f}!1!==d&&(null===b||y(b)?this.$$element.removeAttr(e):ta.test(e)?this.$$element.attr(e,b):P(this.$$element[0],e,b));(a=this.$$observers)&&q(a[h],function(a){try{a(b)}catch(d){c(d)}})},
$observe:function(a,b){var c=this,d=c.$$observers||(c.$$observers=U()),e=d[a]||(d[a]=[]);e.push(b);K.$evalAsync(function(){e.$$inter||!c.hasOwnProperty(a)||y(c[a])||b(c[a])});return function(){Za(e,b)}}};var ra=b.startSymbol(),sa=b.endSymbol(),xa="{{"==ra&&"}}"==sa?Xa:function(a){return a.replace(/\{\{/g,ra).replace(/}}/g,sa)},Ba=/^ngAttr[A-Z]/,Ca=/^(.+)Start$/;aa.$$addBindingInfo=p?function(a,b){var c=a.data("$binding")||[];L(b)?c=c.concat(b):c.push(b);a.data("$binding",c)}:A;aa.$$addBindingClass=
p?function(a){x(a,"ng-binding")}:A;aa.$$addScopeInfo=p?function(a,b,c,d){a.data(c?d?"$isolateScopeNoTemplate":"$isolateScope":"$scope",b)}:A;aa.$$addScopeClass=p?function(a,b){x(a,b?"ng-isolate-scope":"ng-scope")}:A;aa.$$createComment=function(a,b){var c="";p&&(c=" "+(a||"")+": ",b&&(c+=b+" "));return C.document.createComment(c)};return aa}]}function Fb(a,b){this.previousValue=a;this.currentValue=b}function Aa(a){return db(a.replace(Yc,""))}function ad(a,b){var d="",c=a.split(/\s+/),e=b.split(/\s+/),
f=0;a:for(;f<c.length;f++){for(var g=c[f],h=0;h<e.length;h++)if(g==e[h])continue a;d+=(0<d.length?" ":"")+g}return d}function $c(a){a=F(a);var b=a.length;if(1>=b)return a;for(;b--;)8===a[b].nodeType&&bg.call(a,b,1);return a}function Xc(a,b){if(b&&G(b))return b;if(G(a)){var d=cd.exec(a);if(d)return d[3]}}function ff(){var a={},b=!1;this.has=function(b){return a.hasOwnProperty(b)};this.register=function(b,c){Qa(b,"controller");D(b)?S(a,b):a[b]=c};this.allowGlobals=function(){b=!0};this.$get=["$injector",
"$window",function(d,c){function e(a,b,c,d){if(!a||!D(a.$scope))throw N("$controller")("noscp",d,b);a.$scope[b]=c}return function(f,g,h,k){var l,m,n;h=!0===h;k&&G(k)&&(n=k);if(G(f)){k=f.match(cd);if(!k)throw cg("ctrlfmt",f);m=k[1];n=n||k[3];f=a.hasOwnProperty(m)?a[m]:Ec(g.$scope,m,!0)||(b?Ec(c,m,!0):void 0);Pa(f,m,!0)}if(h)return h=(L(f)?f[f.length-1]:f).prototype,l=Object.create(h||null),n&&e(g,n,l,m||f.name),S(function(){var a=d.invoke(f,l,g,m);a!==l&&(D(a)||z(a))&&(l=a,n&&e(g,n,l,m||f.name));return l},
{instance:l,identifier:n});l=d.instantiate(f,g,m);n&&e(g,n,l,m||f.name);return l}}]}function gf(){this.$get=["$window",function(a){return F(a.document)}]}function hf(){this.$get=["$log",function(a){return function(b,d){a.error.apply(a,arguments)}}]}function cc(a){return D(a)?da(a)?a.toISOString():bb(a):a}function nf(){this.$get=function(){return function(a){if(!a)return"";var b=[];tc(a,function(a,c){null===a||y(a)||(L(a)?q(a,function(a){b.push(ea(c)+"="+ea(cc(a)))}):b.push(ea(c)+"="+ea(cc(a))))});
return b.join("&")}}}function of(){this.$get=function(){return function(a){function b(a,e,f){null===a||y(a)||(L(a)?q(a,function(a,c){b(a,e+"["+(D(a)?c:"")+"]")}):D(a)&&!da(a)?tc(a,function(a,c){b(a,e+(f?"":"[")+c+(f?"":"]"))}):d.push(ea(e)+"="+ea(cc(a))))}if(!a)return"";var d=[];b(a,"",!0);return d.join("&")}}}function dc(a,b){if(G(a)){var d=a.replace(dg,"").trim();if(d){var c=b("Content-Type");(c=c&&0===c.indexOf(dd))||(c=(c=d.match(eg))&&fg[c[0]].test(d));c&&(a=xc(d))}}return a}function ed(a){var b=
U(),d;G(a)?q(a.split("\n"),function(a){d=a.indexOf(":");var e=Q(W(a.substr(0,d)));a=W(a.substr(d+1));e&&(b[e]=b[e]?b[e]+", "+a:a)}):D(a)&&q(a,function(a,d){var f=Q(d),g=W(a);f&&(b[f]=b[f]?b[f]+", "+g:g)});return b}function fd(a){var b;return function(d){b||(b=ed(a));return d?(d=b[Q(d)],void 0===d&&(d=null),d):b}}function gd(a,b,d,c){if(z(c))return c(a,b,d);q(c,function(c){a=c(a,b,d)});return a}function mf(){var a=this.defaults={transformResponse:[dc],transformRequest:[function(a){return D(a)&&"[object File]"!==
ma.call(a)&&"[object Blob]"!==ma.call(a)&&"[object FormData]"!==ma.call(a)?bb(a):a}],headers:{common:{Accept:"application/json, text/plain, */*"},post:ia(ec),put:ia(ec),patch:ia(ec)},xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",paramSerializer:"$httpParamSerializer"},b=!1;this.useApplyAsync=function(a){return w(a)?(b=!!a,this):b};var d=!0;this.useLegacyPromiseExtensions=function(a){return w(a)?(d=!!a,this):d};var c=this.interceptors=[];this.$get=["$httpBackend","$$cookieReader","$cacheFactory",
"$rootScope","$q","$injector",function(e,f,g,h,k,l){function m(b){function c(a,b){for(var d=0,e=b.length;d<e;){var f=b[d++],g=b[d++];a=a.then(f,g)}b.length=0;return a}function e(a,b){var c,d={};q(a,function(a,e){z(a)?(c=a(b),null!=c&&(d[e]=c)):d[e]=a});return d}function f(a){var b=S({},a);b.data=gd(a.data,a.headers,a.status,g.transformResponse);a=a.status;return 200<=a&&300>a?b:k.reject(b)}if(!D(b))throw N("$http")("badreq",b);if(!G(b.url))throw N("$http")("badreq",b.url);var g=S({method:"get",transformRequest:a.transformRequest,
transformResponse:a.transformResponse,paramSerializer:a.paramSerializer},b);g.headers=function(b){var c=a.headers,d=S({},b.headers),f,g,h,c=S({},c.common,c[Q(b.method)]);a:for(f in c){g=Q(f);for(h in d)if(Q(h)===g)continue a;d[f]=c[f]}return e(d,ia(b))}(b);g.method=ub(g.method);g.paramSerializer=G(g.paramSerializer)?l.get(g.paramSerializer):g.paramSerializer;var h=[],m=[],p=k.when(g);q(R,function(a){(a.request||a.requestError)&&h.unshift(a.request,a.requestError);(a.response||a.responseError)&&m.push(a.response,
a.responseError)});p=c(p,h);p=p.then(function(b){var c=b.headers,d=gd(b.data,fd(c),void 0,b.transformRequest);y(d)&&q(c,function(a,b){"content-type"===Q(b)&&delete c[b]});y(b.withCredentials)&&!y(a.withCredentials)&&(b.withCredentials=a.withCredentials);return n(b,d).then(f,f)});p=c(p,m);d?(p.success=function(a){Pa(a,"fn");p.then(function(b){a(b.data,b.status,b.headers,g)});return p},p.error=function(a){Pa(a,"fn");p.then(null,function(b){a(b.data,b.status,b.headers,g)});return p}):(p.success=hd("success"),
p.error=hd("error"));return p}function n(c,d){function g(a){if(a){var c={};q(a,function(a,d){c[d]=function(c){function d(){a(c)}b?h.$applyAsync(d):h.$$phase?d():h.$apply(d)}});return c}}function l(a,c,d,e){function f(){n(c,a,d,e)}E&&(200<=a&&300>a?E.put(P,[a,c,ed(d),e]):E.remove(P));b?h.$applyAsync(f):(f(),h.$$phase||h.$apply())}function n(a,b,d,e){b=-1<=b?b:0;(200<=b&&300>b?M.resolve:M.reject)({data:a,status:b,headers:fd(d),config:c,statusText:e})}function t(a){n(a.data,a.status,ia(a.headers()),
a.statusText)}function R(){var a=m.pendingRequests.indexOf(c);-1!==a&&m.pendingRequests.splice(a,1)}var M=k.defer(),H=M.promise,E,I,Da=c.headers,P=p(c.url,c.paramSerializer(c.params));m.pendingRequests.push(c);H.then(R,R);!c.cache&&!a.cache||!1===c.cache||"GET"!==c.method&&"JSONP"!==c.method||(E=D(c.cache)?c.cache:D(a.cache)?a.cache:u);E&&(I=E.get(P),w(I)?I&&z(I.then)?I.then(t,t):L(I)?n(I[1],I[0],ia(I[2]),I[3]):n(I,200,{},"OK"):E.put(P,H));y(I)&&((I=id(c.url)?f()[c.xsrfCookieName||a.xsrfCookieName]:
void 0)&&(Da[c.xsrfHeaderName||a.xsrfHeaderName]=I),e(c.method,P,d,l,Da,c.timeout,c.withCredentials,c.responseType,g(c.eventHandlers),g(c.uploadEventHandlers)));return H}function p(a,b){0<b.length&&(a+=(-1==a.indexOf("?")?"?":"&")+b);return a}var u=g("$http");a.paramSerializer=G(a.paramSerializer)?l.get(a.paramSerializer):a.paramSerializer;var R=[];q(c,function(a){R.unshift(G(a)?l.get(a):l.invoke(a))});m.pendingRequests=[];(function(a){q(arguments,function(a){m[a]=function(b,c){return m(S({},c||{},
{method:a,url:b}))}})})("get","delete","head","jsonp");(function(a){q(arguments,function(a){m[a]=function(b,c,d){return m(S({},d||{},{method:a,url:b,data:c}))}})})("post","put","patch");m.defaults=a;return m}]}function qf(){this.$get=function(){return function(){return new C.XMLHttpRequest}}}function pf(){this.$get=["$browser","$jsonpCallbacks","$document","$xhrFactory",function(a,b,d,c){return gg(a,c,a.defer,b,d[0])}]}function gg(a,b,d,c,e){function f(a,b,d){a=a.replace("JSON_CALLBACK",b);var f=
e.createElement("script"),m=null;f.type="text/javascript";f.src=a;f.async=!0;m=function(a){f.removeEventListener("load",m,!1);f.removeEventListener("error",m,!1);e.body.removeChild(f);f=null;var g=-1,u="unknown";a&&("load"!==a.type||c.wasCalled(b)||(a={type:"error"}),u=a.type,g="error"===a.type?404:200);d&&d(g,u)};f.addEventListener("load",m,!1);f.addEventListener("error",m,!1);e.body.appendChild(f);return m}return function(e,h,k,l,m,n,p,u,R,B){function r(){fa&&fa();t&&t.abort()}function J(b,c,e,
f,g){w(M)&&d.cancel(M);fa=t=null;b(c,e,f,g);a.$$completeOutstandingRequest(A)}a.$$incOutstandingRequestCount();h=h||a.url();if("jsonp"===Q(e))var v=c.createCallback(h),fa=f(h,v,function(a,b){var d=200===a&&c.getResponse(v);J(l,a,d,"",b);c.removeCallback(v)});else{var t=b(e,h);t.open(e,h,!0);q(m,function(a,b){w(a)&&t.setRequestHeader(b,a)});t.onload=function(){var a=t.statusText||"",b="response"in t?t.response:t.responseText,c=1223===t.status?204:t.status;0===c&&(c=b?200:"file"==Y(h).protocol?404:
0);J(l,c,b,t.getAllResponseHeaders(),a)};e=function(){J(l,-1,null,null,"")};t.onerror=e;t.onabort=e;q(R,function(a,b){t.addEventListener(b,a)});q(B,function(a,b){t.upload.addEventListener(b,a)});p&&(t.withCredentials=!0);if(u)try{t.responseType=u}catch(K){if("json"!==u)throw K;}t.send(y(k)?null:k)}if(0<n)var M=d(r,n);else n&&z(n.then)&&n.then(r)}}function kf(){var a="{{",b="}}";this.startSymbol=function(b){return b?(a=b,this):a};this.endSymbol=function(a){return a?(b=a,this):b};this.$get=["$parse",
"$exceptionHandler","$sce",function(d,c,e){function f(a){return"\\\\\\"+a}function g(c){return c.replace(n,a).replace(p,b)}function h(a,b,c,d){var e;return e=a.$watch(function(a){e();return d(a)},b,c)}function k(f,k,p,n){function J(a){try{var b=a;a=p?e.getTrusted(p,b):e.valueOf(b);var d;if(n&&!w(a))d=a;else if(null==a)d="";else{switch(typeof a){case "string":break;case "number":a=""+a;break;default:a=bb(a)}d=a}return d}catch(g){c(Ka.interr(f,g))}}if(!f.length||-1===f.indexOf(a)){var v;k||(k=g(f),
v=ha(k),v.exp=f,v.expressions=[],v.$$watchDelegate=h);return v}n=!!n;var q,t,K=0,M=[],H=[];v=f.length;for(var E=[],I=[];K<v;)if(-1!=(q=f.indexOf(a,K))&&-1!=(t=f.indexOf(b,q+l)))K!==q&&E.push(g(f.substring(K,q))),K=f.substring(q+l,t),M.push(K),H.push(d(K,J)),K=t+m,I.push(E.length),E.push("");else{K!==v&&E.push(g(f.substring(K)));break}p&&1<E.length&&Ka.throwNoconcat(f);if(!k||M.length){var Da=function(a){for(var b=0,c=M.length;b<c;b++){if(n&&y(a[b]))return;E[I[b]]=a[b]}return E.join("")};return S(function(a){var b=
0,d=M.length,e=Array(d);try{for(;b<d;b++)e[b]=H[b](a);return Da(e)}catch(g){c(Ka.interr(f,g))}},{exp:f,expressions:M,$$watchDelegate:function(a,b){var c;return a.$watchGroup(H,function(d,e){var f=Da(d);z(b)&&b.call(this,f,d!==e?c:f,a);c=f})}})}}var l=a.length,m=b.length,n=new RegExp(a.replace(/./g,f),"g"),p=new RegExp(b.replace(/./g,f),"g");k.startSymbol=function(){return a};k.endSymbol=function(){return b};return k}]}function lf(){this.$get=["$rootScope","$window","$q","$$q","$browser",function(a,
b,d,c,e){function f(f,k,l,m){function n(){p?f.apply(null,u):f(r)}var p=4<arguments.length,u=p?va.call(arguments,4):[],R=b.setInterval,q=b.clearInterval,r=0,J=w(m)&&!m,v=(J?c:d).defer(),fa=v.promise;l=w(l)?l:0;fa.$$intervalId=R(function(){J?e.defer(n):a.$evalAsync(n);v.notify(r++);0<l&&r>=l&&(v.resolve(r),q(fa.$$intervalId),delete g[fa.$$intervalId]);J||a.$apply()},k);g[fa.$$intervalId]=v;return fa}var g={};f.cancel=function(a){return a&&a.$$intervalId in g?(g[a.$$intervalId].reject("canceled"),b.clearInterval(a.$$intervalId),
delete g[a.$$intervalId],!0):!1};return f}]}function fc(a){a=a.split("/");for(var b=a.length;b--;)a[b]=qb(a[b]);return a.join("/")}function jd(a,b){var d=Y(a);b.$$protocol=d.protocol;b.$$host=d.hostname;b.$$port=Z(d.port)||hg[d.protocol]||null}function kd(a,b){var d="/"!==a.charAt(0);d&&(a="/"+a);var c=Y(a);b.$$path=decodeURIComponent(d&&"/"===c.pathname.charAt(0)?c.pathname.substring(1):c.pathname);b.$$search=Ac(c.search);b.$$hash=decodeURIComponent(c.hash);b.$$path&&"/"!=b.$$path.charAt(0)&&(b.$$path=
"/"+b.$$path)}function ka(a,b){if(0===b.lastIndexOf(a,0))return b.substr(a.length)}function Ja(a){var b=a.indexOf("#");return-1==b?a:a.substr(0,b)}function jb(a){return a.replace(/(#.+)|#$/,"$1")}function gc(a,b,d){this.$$html5=!0;d=d||"";jd(a,this);this.$$parse=function(a){var d=ka(b,a);if(!G(d))throw Gb("ipthprfx",a,b);kd(d,this);this.$$path||(this.$$path="/");this.$$compose()};this.$$compose=function(){var a=Tb(this.$$search),d=this.$$hash?"#"+qb(this.$$hash):"";this.$$url=fc(this.$$path)+(a?"?"+
a:"")+d;this.$$absUrl=b+this.$$url.substr(1)};this.$$parseLinkUrl=function(c,e){if(e&&"#"===e[0])return this.hash(e.slice(1)),!0;var f,g;w(f=ka(a,c))?(g=f,g=w(f=ka(d,f))?b+(ka("/",f)||f):a+g):w(f=ka(b,c))?g=b+f:b==c+"/"&&(g=b);g&&this.$$parse(g);return!!g}}function hc(a,b,d){jd(a,this);this.$$parse=function(c){var e=ka(a,c)||ka(b,c),f;y(e)||"#"!==e.charAt(0)?this.$$html5?f=e:(f="",y(e)&&(a=c,this.replace())):(f=ka(d,e),y(f)&&(f=e));kd(f,this);c=this.$$path;var e=a,g=/^\/[A-Z]:(\/.*)/;0===f.lastIndexOf(e,
0)&&(f=f.replace(e,""));g.exec(f)||(c=(f=g.exec(c))?f[1]:c);this.$$path=c;this.$$compose()};this.$$compose=function(){var b=Tb(this.$$search),e=this.$$hash?"#"+qb(this.$$hash):"";this.$$url=fc(this.$$path)+(b?"?"+b:"")+e;this.$$absUrl=a+(this.$$url?d+this.$$url:"")};this.$$parseLinkUrl=function(b,d){return Ja(a)==Ja(b)?(this.$$parse(b),!0):!1}}function ld(a,b,d){this.$$html5=!0;hc.apply(this,arguments);this.$$parseLinkUrl=function(c,e){if(e&&"#"===e[0])return this.hash(e.slice(1)),!0;var f,g;a==Ja(c)?
f=c:(g=ka(b,c))?f=a+d+g:b===c+"/"&&(f=b);f&&this.$$parse(f);return!!f};this.$$compose=function(){var b=Tb(this.$$search),e=this.$$hash?"#"+qb(this.$$hash):"";this.$$url=fc(this.$$path)+(b?"?"+b:"")+e;this.$$absUrl=a+d+this.$$url}}function Hb(a){return function(){return this[a]}}function md(a,b){return function(d){if(y(d))return this[a];this[a]=b(d);this.$$compose();return this}}function sf(){var a="",b={enabled:!1,requireBase:!0,rewriteLinks:!0};this.hashPrefix=function(b){return w(b)?(a=b,this):
a};this.html5Mode=function(a){return Ga(a)?(b.enabled=a,this):D(a)?(Ga(a.enabled)&&(b.enabled=a.enabled),Ga(a.requireBase)&&(b.requireBase=a.requireBase),Ga(a.rewriteLinks)&&(b.rewriteLinks=a.rewriteLinks),this):b};this.$get=["$rootScope","$browser","$sniffer","$rootElement","$window",function(d,c,e,f,g){function h(a,b,d){var e=l.url(),f=l.$$state;try{c.url(a,b,d),l.$$state=c.state()}catch(g){throw l.url(e),l.$$state=f,g;}}function k(a,b){d.$broadcast("$locationChangeSuccess",l.absUrl(),a,l.$$state,
b)}var l,m;m=c.baseHref();var n=c.url(),p;if(b.enabled){if(!m&&b.requireBase)throw Gb("nobase");p=n.substring(0,n.indexOf("/",n.indexOf("//")+2))+(m||"/");m=e.history?gc:ld}else p=Ja(n),m=hc;var u=p.substr(0,Ja(p).lastIndexOf("/")+1);l=new m(p,u,"#"+a);l.$$parseLinkUrl(n,n);l.$$state=c.state();var R=/^\s*(javascript|mailto):/i;f.on("click",function(a){if(b.rewriteLinks&&!a.ctrlKey&&!a.metaKey&&!a.shiftKey&&2!=a.which&&2!=a.button){for(var e=F(a.target);"a"!==wa(e[0]);)if(e[0]===f[0]||!(e=e.parent())[0])return;
var h=e.prop("href"),k=e.attr("href")||e.attr("xlink:href");D(h)&&"[object SVGAnimatedString]"===h.toString()&&(h=Y(h.animVal).href);R.test(h)||!h||e.attr("target")||a.isDefaultPrevented()||!l.$$parseLinkUrl(h,k)||(a.preventDefault(),l.absUrl()!=c.url()&&(d.$apply(),g.angular["ff-684208-preventDefault"]=!0))}});jb(l.absUrl())!=jb(n)&&c.url(l.absUrl(),!0);var q=!0;c.onUrlChange(function(a,b){y(ka(u,a))?g.location.href=a:(d.$evalAsync(function(){var c=l.absUrl(),e=l.$$state,f;a=jb(a);l.$$parse(a);l.$$state=
b;f=d.$broadcast("$locationChangeStart",a,c,b,e).defaultPrevented;l.absUrl()===a&&(f?(l.$$parse(c),l.$$state=e,h(c,!1,e)):(q=!1,k(c,e)))}),d.$$phase||d.$digest())});d.$watch(function(){var a=jb(c.url()),b=jb(l.absUrl()),f=c.state(),g=l.$$replace,m=a!==b||l.$$html5&&e.history&&f!==l.$$state;if(q||m)q=!1,d.$evalAsync(function(){var b=l.absUrl(),c=d.$broadcast("$locationChangeStart",b,a,l.$$state,f).defaultPrevented;l.absUrl()===b&&(c?(l.$$parse(a),l.$$state=f):(m&&h(b,g,f===l.$$state?null:l.$$state),
k(a,f)))});l.$$replace=!1});return l}]}function tf(){var a=!0,b=this;this.debugEnabled=function(b){return w(b)?(a=b,this):a};this.$get=["$window",function(d){function c(a){a instanceof Error&&(a.stack?a=a.message&&-1===a.stack.indexOf(a.message)?"Error: "+a.message+"\n"+a.stack:a.stack:a.sourceURL&&(a=a.message+"\n"+a.sourceURL+":"+a.line));return a}function e(a){var b=d.console||{},e=b[a]||b.log||A;a=!1;try{a=!!e.apply}catch(k){}return a?function(){var a=[];q(arguments,function(b){a.push(c(b))});
return e.apply(b,a)}:function(a,b){e(a,null==b?"":b)}}return{log:e("log"),info:e("info"),warn:e("warn"),error:e("error"),debug:function(){var c=e("debug");return function(){a&&c.apply(b,arguments)}}()}}]}function Sa(a,b){if("__defineGetter__"===a||"__defineSetter__"===a||"__lookupGetter__"===a||"__lookupSetter__"===a||"__proto__"===a)throw X("isecfld",b);return a}function ig(a){return a+""}function ra(a,b){if(a){if(a.constructor===a)throw X("isecfn",b);if(a.window===a)throw X("isecwindow",b);if(a.children&&
(a.nodeName||a.prop&&a.attr&&a.find))throw X("isecdom",b);if(a===Object)throw X("isecobj",b);}return a}function nd(a,b){if(a){if(a.constructor===a)throw X("isecfn",b);if(a===jg||a===kg||a===lg)throw X("isecff",b);}}function Ib(a,b){if(a&&(a===(0).constructor||a===(!1).constructor||a==="".constructor||a==={}.constructor||a===[].constructor||a===Function.constructor))throw X("isecaf",b);}function mg(a,b){return"undefined"!==typeof a?a:b}function od(a,b){return"undefined"===typeof a?b:"undefined"===
typeof b?a:a+b}function V(a,b){var d,c;switch(a.type){case s.Program:d=!0;q(a.body,function(a){V(a.expression,b);d=d&&a.expression.constant});a.constant=d;break;case s.Literal:a.constant=!0;a.toWatch=[];break;case s.UnaryExpression:V(a.argument,b);a.constant=a.argument.constant;a.toWatch=a.argument.toWatch;break;case s.BinaryExpression:V(a.left,b);V(a.right,b);a.constant=a.left.constant&&a.right.constant;a.toWatch=a.left.toWatch.concat(a.right.toWatch);break;case s.LogicalExpression:V(a.left,b);V(a.right,
b);a.constant=a.left.constant&&a.right.constant;a.toWatch=a.constant?[]:[a];break;case s.ConditionalExpression:V(a.test,b);V(a.alternate,b);V(a.consequent,b);a.constant=a.test.constant&&a.alternate.constant&&a.consequent.constant;a.toWatch=a.constant?[]:[a];break;case s.Identifier:a.constant=!1;a.toWatch=[a];break;case s.MemberExpression:V(a.object,b);a.computed&&V(a.property,b);a.constant=a.object.constant&&(!a.computed||a.property.constant);a.toWatch=[a];break;case s.CallExpression:d=a.filter?!b(a.callee.name).$stateful:
!1;c=[];q(a.arguments,function(a){V(a,b);d=d&&a.constant;a.constant||c.push.apply(c,a.toWatch)});a.constant=d;a.toWatch=a.filter&&!b(a.callee.name).$stateful?c:[a];break;case s.AssignmentExpression:V(a.left,b);V(a.right,b);a.constant=a.left.constant&&a.right.constant;a.toWatch=[a];break;case s.ArrayExpression:d=!0;c=[];q(a.elements,function(a){V(a,b);d=d&&a.constant;a.constant||c.push.apply(c,a.toWatch)});a.constant=d;a.toWatch=c;break;case s.ObjectExpression:d=!0;c=[];q(a.properties,function(a){V(a.value,
b);d=d&&a.value.constant&&!a.computed;a.value.constant||c.push.apply(c,a.value.toWatch)});a.constant=d;a.toWatch=c;break;case s.ThisExpression:a.constant=!1;a.toWatch=[];break;case s.LocalsExpression:a.constant=!1,a.toWatch=[]}}function pd(a){if(1==a.length){a=a[0].expression;var b=a.toWatch;return 1!==b.length?b:b[0]!==a?b:void 0}}function qd(a){return a.type===s.Identifier||a.type===s.MemberExpression}function rd(a){if(1===a.body.length&&qd(a.body[0].expression))return{type:s.AssignmentExpression,
left:a.body[0].expression,right:{type:s.NGValueParameter},operator:"="}}function sd(a){return 0===a.body.length||1===a.body.length&&(a.body[0].expression.type===s.Literal||a.body[0].expression.type===s.ArrayExpression||a.body[0].expression.type===s.ObjectExpression)}function td(a,b){this.astBuilder=a;this.$filter=b}function ud(a,b){this.astBuilder=a;this.$filter=b}function Jb(a){return"constructor"==a}function ic(a){return z(a.valueOf)?a.valueOf():ng.call(a)}function uf(){var a=U(),b=U(),d={"true":!0,
"false":!1,"null":null,undefined:void 0},c,e;this.addLiteral=function(a,b){d[a]=b};this.setIdentifierFns=function(a,b){c=a;e=b;return this};this.$get=["$filter",function(f){function g(c,d,e){var g,k,H;e=e||J;switch(typeof c){case "string":H=c=c.trim();var E=e?b:a;g=E[H];if(!g){":"===c.charAt(0)&&":"===c.charAt(1)&&(k=!0,c=c.substring(2));g=e?r:B;var q=new jc(g);g=(new kc(q,f,g)).parse(c);g.constant?g.$$watchDelegate=p:k?g.$$watchDelegate=g.literal?n:m:g.inputs&&(g.$$watchDelegate=l);e&&(g=h(g));E[H]=
g}return u(g,d);case "function":return u(c,d);default:return u(A,d)}}function h(a){function b(c,d,e,f){var g=J;J=!0;try{return a(c,d,e,f)}finally{J=g}}if(!a)return a;b.$$watchDelegate=a.$$watchDelegate;b.assign=h(a.assign);b.constant=a.constant;b.literal=a.literal;for(var c=0;a.inputs&&c<a.inputs.length;++c)a.inputs[c]=h(a.inputs[c]);b.inputs=a.inputs;return b}function k(a,b){return null==a||null==b?a===b:"object"===typeof a&&(a=ic(a),"object"===typeof a)?!1:a===b||a!==a&&b!==b}function l(a,b,c,d,
e){var f=d.inputs,g;if(1===f.length){var h=k,f=f[0];return a.$watch(function(a){var b=f(a);k(b,h)||(g=d(a,void 0,void 0,[b]),h=b&&ic(b));return g},b,c,e)}for(var l=[],m=[],p=0,n=f.length;p<n;p++)l[p]=k,m[p]=null;return a.$watch(function(a){for(var b=!1,c=0,e=f.length;c<e;c++){var h=f[c](a);if(b||(b=!k(h,l[c])))m[c]=h,l[c]=h&&ic(h)}b&&(g=d(a,void 0,void 0,m));return g},b,c,e)}function m(a,b,c,d){var e,f;return e=a.$watch(function(a){return d(a)},function(a,c,d){f=a;z(b)&&b.apply(this,arguments);w(a)&&
d.$$postDigest(function(){w(f)&&e()})},c)}function n(a,b,c,d){function e(a){var b=!0;q(a,function(a){w(a)||(b=!1)});return b}var f,g;return f=a.$watch(function(a){return d(a)},function(a,c,d){g=a;z(b)&&b.call(this,a,c,d);e(a)&&d.$$postDigest(function(){e(g)&&f()})},c)}function p(a,b,c,d){var e;return e=a.$watch(function(a){e();return d(a)},b,c)}function u(a,b){if(!b)return a;var c=a.$$watchDelegate,d=!1,c=c!==n&&c!==m?function(c,e,f,g){f=d&&g?g[0]:a(c,e,f,g);return b(f,c,e)}:function(c,d,e,f){e=a(c,
d,e,f);c=b(e,c,d);return w(e)?c:e};a.$$watchDelegate&&a.$$watchDelegate!==l?c.$$watchDelegate=a.$$watchDelegate:b.$stateful||(c.$$watchDelegate=l,d=!a.inputs,c.inputs=a.inputs?a.inputs:[a]);return c}var R=Ba().noUnsafeEval,B={csp:R,expensiveChecks:!1,literals:pa(d),isIdentifierStart:z(c)&&c,isIdentifierContinue:z(e)&&e},r={csp:R,expensiveChecks:!0,literals:pa(d),isIdentifierStart:z(c)&&c,isIdentifierContinue:z(e)&&e},J=!1;g.$$runningExpensiveChecks=function(){return J};return g}]}function wf(){this.$get=
["$rootScope","$exceptionHandler",function(a,b){return vd(function(b){a.$evalAsync(b)},b)}]}function xf(){this.$get=["$browser","$exceptionHandler",function(a,b){return vd(function(b){a.defer(b)},b)}]}function vd(a,b){function d(){this.$$state={status:0}}function c(a,b){return function(c){b.call(a,c)}}function e(c){!c.processScheduled&&c.pending&&(c.processScheduled=!0,a(function(){var a,d,e;e=c.pending;c.processScheduled=!1;c.pending=void 0;for(var f=0,g=e.length;f<g;++f){d=e[f][0];a=e[f][c.status];
try{z(a)?d.resolve(a(c.value)):1===c.status?d.resolve(c.value):d.reject(c.value)}catch(h){d.reject(h),b(h)}}}))}function f(){this.promise=new d}var g=N("$q",TypeError),h=function(){var a=new f;a.resolve=c(a,a.resolve);a.reject=c(a,a.reject);a.notify=c(a,a.notify);return a};S(d.prototype,{then:function(a,b,c){if(y(a)&&y(b)&&y(c))return this;var d=new f;this.$$state.pending=this.$$state.pending||[];this.$$state.pending.push([d,a,b,c]);0<this.$$state.status&&e(this.$$state);return d.promise},"catch":function(a){return this.then(null,
a)},"finally":function(a,b){return this.then(function(b){return l(b,!0,a)},function(b){return l(b,!1,a)},b)}});S(f.prototype,{resolve:function(a){this.promise.$$state.status||(a===this.promise?this.$$reject(g("qcycle",a)):this.$$resolve(a))},$$resolve:function(a){function d(a){k||(k=!0,h.$$resolve(a))}function f(a){k||(k=!0,h.$$reject(a))}var g,h=this,k=!1;try{if(D(a)||z(a))g=a&&a.then;z(g)?(this.promise.$$state.status=-1,g.call(a,d,f,c(this,this.notify))):(this.promise.$$state.value=a,this.promise.$$state.status=
1,e(this.promise.$$state))}catch(l){f(l),b(l)}},reject:function(a){this.promise.$$state.status||this.$$reject(a)},$$reject:function(a){this.promise.$$state.value=a;this.promise.$$state.status=2;e(this.promise.$$state)},notify:function(c){var d=this.promise.$$state.pending;0>=this.promise.$$state.status&&d&&d.length&&a(function(){for(var a,e,f=0,g=d.length;f<g;f++){e=d[f][0];a=d[f][3];try{e.notify(z(a)?a(c):c)}catch(h){b(h)}}})}});var k=function(a,b){var c=new f;b?c.resolve(a):c.reject(a);return c.promise},
l=function(a,b,c){var d=null;try{z(c)&&(d=c())}catch(e){return k(e,!1)}return d&&z(d.then)?d.then(function(){return k(a,b)},function(a){return k(a,!1)}):k(a,b)},m=function(a,b,c,d){var e=new f;e.resolve(a);return e.promise.then(b,c,d)},n=function(a){if(!z(a))throw g("norslvr",a);var b=new f;a(function(a){b.resolve(a)},function(a){b.reject(a)});return b.promise};n.prototype=d.prototype;n.defer=h;n.reject=function(a){var b=new f;b.reject(a);return b.promise};n.when=m;n.resolve=m;n.all=function(a){var b=
new f,c=0,d=L(a)?[]:{};q(a,function(a,e){c++;m(a).then(function(a){d.hasOwnProperty(e)||(d[e]=a,--c||b.resolve(d))},function(a){d.hasOwnProperty(e)||b.reject(a)})});0===c&&b.resolve(d);return b.promise};n.race=function(a){var b=h();q(a,function(a){m(a).then(b.resolve,b.reject)});return b.promise};return n}function Gf(){this.$get=["$window","$timeout",function(a,b){var d=a.requestAnimationFrame||a.webkitRequestAnimationFrame,c=a.cancelAnimationFrame||a.webkitCancelAnimationFrame||a.webkitCancelRequestAnimationFrame,
e=!!d,f=e?function(a){var b=d(a);return function(){c(b)}}:function(a){var c=b(a,16.66,!1);return function(){b.cancel(c)}};f.supported=e;return f}]}function vf(){function a(a){function b(){this.$$watchers=this.$$nextSibling=this.$$childHead=this.$$childTail=null;this.$$listeners={};this.$$listenerCount={};this.$$watchersCount=0;this.$id=++pb;this.$$ChildScope=null}b.prototype=a;return b}var b=10,d=N("$rootScope"),c=null,e=null;this.digestTtl=function(a){arguments.length&&(b=a);return b};this.$get=
["$exceptionHandler","$parse","$browser",function(f,g,h){function k(a){a.currentScope.$$destroyed=!0}function l(a){9===Ea&&(a.$$childHead&&l(a.$$childHead),a.$$nextSibling&&l(a.$$nextSibling));a.$parent=a.$$nextSibling=a.$$prevSibling=a.$$childHead=a.$$childTail=a.$root=a.$$watchers=null}function m(){this.$id=++pb;this.$$phase=this.$parent=this.$$watchers=this.$$nextSibling=this.$$prevSibling=this.$$childHead=this.$$childTail=null;this.$root=this;this.$$destroyed=!1;this.$$listeners={};this.$$listenerCount=
{};this.$$watchersCount=0;this.$$isolateBindings=null}function n(a){if(J.$$phase)throw d("inprog",J.$$phase);J.$$phase=a}function p(a,b){do a.$$watchersCount+=b;while(a=a.$parent)}function u(a,b,c){do a.$$listenerCount[c]-=b,0===a.$$listenerCount[c]&&delete a.$$listenerCount[c];while(a=a.$parent)}function s(){}function B(){for(;t.length;)try{t.shift()()}catch(a){f(a)}e=null}function r(){null===e&&(e=h.defer(function(){J.$apply(B)}))}m.prototype={constructor:m,$new:function(b,c){var d;c=c||this;b?
(d=new m,d.$root=this.$root):(this.$$ChildScope||(this.$$ChildScope=a(this)),d=new this.$$ChildScope);d.$parent=c;d.$$prevSibling=c.$$childTail;c.$$childHead?(c.$$childTail.$$nextSibling=d,c.$$childTail=d):c.$$childHead=c.$$childTail=d;(b||c!=this)&&d.$on("$destroy",k);return d},$watch:function(a,b,d,e){var f=g(a);if(f.$$watchDelegate)return f.$$watchDelegate(this,b,d,f,a);var h=this,k=h.$$watchers,l={fn:b,last:s,get:f,exp:e||a,eq:!!d};c=null;z(b)||(l.fn=A);k||(k=h.$$watchers=[]);k.unshift(l);p(this,
1);return function(){0<=Za(k,l)&&p(h,-1);c=null}},$watchGroup:function(a,b){function c(){h=!1;k?(k=!1,b(e,e,g)):b(e,d,g)}var d=Array(a.length),e=Array(a.length),f=[],g=this,h=!1,k=!0;if(!a.length){var l=!0;g.$evalAsync(function(){l&&b(e,e,g)});return function(){l=!1}}if(1===a.length)return this.$watch(a[0],function(a,c,f){e[0]=a;d[0]=c;b(e,a===c?e:d,f)});q(a,function(a,b){var k=g.$watch(a,function(a,f){e[b]=a;d[b]=f;h||(h=!0,g.$evalAsync(c))});f.push(k)});return function(){for(;f.length;)f.shift()()}},
$watchCollection:function(a,b){function c(a){e=a;var b,d,g,h;if(!y(e)){if(D(e))if(ta(e))for(f!==n&&(f=n,u=f.length=0,l++),a=e.length,u!==a&&(l++,f.length=u=a),b=0;b<a;b++)h=f[b],g=e[b],d=h!==h&&g!==g,d||h===g||(l++,f[b]=g);else{f!==p&&(f=p={},u=0,l++);a=0;for(b in e)ua.call(e,b)&&(a++,g=e[b],h=f[b],b in f?(d=h!==h&&g!==g,d||h===g||(l++,f[b]=g)):(u++,f[b]=g,l++));if(u>a)for(b in l++,f)ua.call(e,b)||(u--,delete f[b])}else f!==e&&(f=e,l++);return l}}c.$stateful=!0;var d=this,e,f,h,k=1<b.length,l=0,m=
g(a,c),n=[],p={},r=!0,u=0;return this.$watch(m,function(){r?(r=!1,b(e,e,d)):b(e,h,d);if(k)if(D(e))if(ta(e)){h=Array(e.length);for(var a=0;a<e.length;a++)h[a]=e[a]}else for(a in h={},e)ua.call(e,a)&&(h[a]=e[a]);else h=e})},$digest:function(){var a,g,k,l,m,p,u,r,q=b,t,y=[],A,C;n("$digest");h.$$checkUrlChange();this===J&&null!==e&&(h.defer.cancel(e),B());c=null;do{r=!1;t=this;for(p=0;p<v.length;p++){try{C=v[p],C.scope.$eval(C.expression,C.locals)}catch(F){f(F)}c=null}v.length=0;a:do{if(p=t.$$watchers)for(u=
p.length;u--;)try{if(a=p[u])if(m=a.get,(g=m(t))!==(k=a.last)&&!(a.eq?na(g,k):"number"===typeof g&&"number"===typeof k&&isNaN(g)&&isNaN(k)))r=!0,c=a,a.last=a.eq?pa(g,null):g,l=a.fn,l(g,k===s?g:k,t),5>q&&(A=4-q,y[A]||(y[A]=[]),y[A].push({msg:z(a.exp)?"fn: "+(a.exp.name||a.exp.toString()):a.exp,newVal:g,oldVal:k}));else if(a===c){r=!1;break a}}catch(G){f(G)}if(!(p=t.$$watchersCount&&t.$$childHead||t!==this&&t.$$nextSibling))for(;t!==this&&!(p=t.$$nextSibling);)t=t.$parent}while(t=p);if((r||v.length)&&
!q--)throw J.$$phase=null,d("infdig",b,y);}while(r||v.length);for(J.$$phase=null;K<w.length;)try{w[K++]()}catch(D){f(D)}w.length=K=0},$destroy:function(){if(!this.$$destroyed){var a=this.$parent;this.$broadcast("$destroy");this.$$destroyed=!0;this===J&&h.$$applicationDestroyed();p(this,-this.$$watchersCount);for(var b in this.$$listenerCount)u(this,this.$$listenerCount[b],b);a&&a.$$childHead==this&&(a.$$childHead=this.$$nextSibling);a&&a.$$childTail==this&&(a.$$childTail=this.$$prevSibling);this.$$prevSibling&&
(this.$$prevSibling.$$nextSibling=this.$$nextSibling);this.$$nextSibling&&(this.$$nextSibling.$$prevSibling=this.$$prevSibling);this.$destroy=this.$digest=this.$apply=this.$evalAsync=this.$applyAsync=A;this.$on=this.$watch=this.$watchGroup=function(){return A};this.$$listeners={};this.$$nextSibling=null;l(this)}},$eval:function(a,b){return g(a)(this,b)},$evalAsync:function(a,b){J.$$phase||v.length||h.defer(function(){v.length&&J.$digest()});v.push({scope:this,expression:g(a),locals:b})},$$postDigest:function(a){w.push(a)},
$apply:function(a){try{n("$apply");try{return this.$eval(a)}finally{J.$$phase=null}}catch(b){f(b)}finally{try{J.$digest()}catch(c){throw f(c),c;}}},$applyAsync:function(a){function b(){c.$eval(a)}var c=this;a&&t.push(b);a=g(a);r()},$on:function(a,b){var c=this.$$listeners[a];c||(this.$$listeners[a]=c=[]);c.push(b);var d=this;do d.$$listenerCount[a]||(d.$$listenerCount[a]=0),d.$$listenerCount[a]++;while(d=d.$parent);var e=this;return function(){var d=c.indexOf(b);-1!==d&&(c[d]=null,u(e,1,a))}},$emit:function(a,
b){var c=[],d,e=this,g=!1,h={name:a,targetScope:e,stopPropagation:function(){g=!0},preventDefault:function(){h.defaultPrevented=!0},defaultPrevented:!1},k=$a([h],arguments,1),l,m;do{d=e.$$listeners[a]||c;h.currentScope=e;l=0;for(m=d.length;l<m;l++)if(d[l])try{d[l].apply(null,k)}catch(n){f(n)}else d.splice(l,1),l--,m--;if(g)return h.currentScope=null,h;e=e.$parent}while(e);h.currentScope=null;return h},$broadcast:function(a,b){var c=this,d=this,e={name:a,targetScope:this,preventDefault:function(){e.defaultPrevented=
!0},defaultPrevented:!1};if(!this.$$listenerCount[a])return e;for(var g=$a([e],arguments,1),h,k;c=d;){e.currentScope=c;d=c.$$listeners[a]||[];h=0;for(k=d.length;h<k;h++)if(d[h])try{d[h].apply(null,g)}catch(l){f(l)}else d.splice(h,1),h--,k--;if(!(d=c.$$listenerCount[a]&&c.$$childHead||c!==this&&c.$$nextSibling))for(;c!==this&&!(d=c.$$nextSibling);)c=c.$parent}e.currentScope=null;return e}};var J=new m,v=J.$$asyncQueue=[],w=J.$$postDigestQueue=[],t=J.$$applyAsyncQueue=[],K=0;return J}]}function ne(){var a=
/^\s*(https?|ftp|mailto|tel|file):/,b=/^\s*((https?|ftp|file|blob):|data:image\/)/;this.aHrefSanitizationWhitelist=function(b){return w(b)?(a=b,this):a};this.imgSrcSanitizationWhitelist=function(a){return w(a)?(b=a,this):b};this.$get=function(){return function(d,c){var e=c?b:a,f;f=Y(d).href;return""===f||f.match(e)?d:"unsafe:"+f}}}function og(a){if("self"===a)return a;if(G(a)){if(-1<a.indexOf("***"))throw sa("iwcard",a);a=wd(a).replace("\\*\\*",".*").replace("\\*","[^:/.?&;]*");return new RegExp("^"+
a+"$")}if(Wa(a))return new RegExp("^"+a.source+"$");throw sa("imatcher");}function xd(a){var b=[];w(a)&&q(a,function(a){b.push(og(a))});return b}function zf(){this.SCE_CONTEXTS=la;var a=["self"],b=[];this.resourceUrlWhitelist=function(b){arguments.length&&(a=xd(b));return a};this.resourceUrlBlacklist=function(a){arguments.length&&(b=xd(a));return b};this.$get=["$injector",function(d){function c(a,b){return"self"===a?id(b):!!a.exec(b.href)}function e(a){var b=function(a){this.$$unwrapTrustedValue=
function(){return a}};a&&(b.prototype=new a);b.prototype.valueOf=function(){return this.$$unwrapTrustedValue()};b.prototype.toString=function(){return this.$$unwrapTrustedValue().toString()};return b}var f=function(a){throw sa("unsafe");};d.has("$sanitize")&&(f=d.get("$sanitize"));var g=e(),h={};h[la.HTML]=e(g);h[la.CSS]=e(g);h[la.URL]=e(g);h[la.JS]=e(g);h[la.RESOURCE_URL]=e(h[la.URL]);return{trustAs:function(a,b){var c=h.hasOwnProperty(a)?h[a]:null;if(!c)throw sa("icontext",a,b);if(null===b||y(b)||
""===b)return b;if("string"!==typeof b)throw sa("itype",a);return new c(b)},getTrusted:function(d,e){if(null===e||y(e)||""===e)return e;var g=h.hasOwnProperty(d)?h[d]:null;if(g&&e instanceof g)return e.$$unwrapTrustedValue();if(d===la.RESOURCE_URL){var g=Y(e.toString()),n,p,u=!1;n=0;for(p=a.length;n<p;n++)if(c(a[n],g)){u=!0;break}if(u)for(n=0,p=b.length;n<p;n++)if(c(b[n],g)){u=!1;break}if(u)return e;throw sa("insecurl",e.toString());}if(d===la.HTML)return f(e);throw sa("unsafe");},valueOf:function(a){return a instanceof
g?a.$$unwrapTrustedValue():a}}}]}function yf(){var a=!0;this.enabled=function(b){arguments.length&&(a=!!b);return a};this.$get=["$parse","$sceDelegate",function(b,d){if(a&&8>Ea)throw sa("iequirks");var c=ia(la);c.isEnabled=function(){return a};c.trustAs=d.trustAs;c.getTrusted=d.getTrusted;c.valueOf=d.valueOf;a||(c.trustAs=c.getTrusted=function(a,b){return b},c.valueOf=Xa);c.parseAs=function(a,d){var e=b(d);return e.literal&&e.constant?e:b(d,function(b){return c.getTrusted(a,b)})};var e=c.parseAs,
f=c.getTrusted,g=c.trustAs;q(la,function(a,b){var d=Q(b);c[db("parse_as_"+d)]=function(b){return e(a,b)};c[db("get_trusted_"+d)]=function(b){return f(a,b)};c[db("trust_as_"+d)]=function(b){return g(a,b)}});return c}]}function Af(){this.$get=["$window","$document",function(a,b){var d={},c=!(a.chrome&&a.chrome.app&&a.chrome.app.runtime)&&a.history&&a.history.pushState,e=Z((/android (\d+)/.exec(Q((a.navigator||{}).userAgent))||[])[1]),f=/Boxee/i.test((a.navigator||{}).userAgent),g=b[0]||{},h,k=/^(Moz|webkit|ms)(?=[A-Z])/,
l=g.body&&g.body.style,m=!1,n=!1;if(l){for(var p in l)if(m=k.exec(p)){h=m[0];h=h[0].toUpperCase()+h.substr(1);break}h||(h="WebkitOpacity"in l&&"webkit");m=!!("transition"in l||h+"Transition"in l);n=!!("animation"in l||h+"Animation"in l);!e||m&&n||(m=G(l.webkitTransition),n=G(l.webkitAnimation))}return{history:!(!c||4>e||f),hasEvent:function(a){if("input"===a&&11>=Ea)return!1;if(y(d[a])){var b=g.createElement("div");d[a]="on"+a in b}return d[a]},csp:Ba(),vendorPrefix:h,transitions:m,animations:n,android:e}}]}
function Cf(){var a;this.httpOptions=function(b){return b?(a=b,this):a};this.$get=["$templateCache","$http","$q","$sce",function(b,d,c,e){function f(g,h){f.totalPendingRequests++;if(!G(g)||y(b.get(g)))g=e.getTrustedResourceUrl(g);var k=d.defaults&&d.defaults.transformResponse;L(k)?k=k.filter(function(a){return a!==dc}):k===dc&&(k=null);return d.get(g,S({cache:b,transformResponse:k},a))["finally"](function(){f.totalPendingRequests--}).then(function(a){b.put(g,a.data);return a.data},function(a){if(!h)throw pg("tpload",
g,a.status,a.statusText);return c.reject(a)})}f.totalPendingRequests=0;return f}]}function Df(){this.$get=["$rootScope","$browser","$location",function(a,b,d){return{findBindings:function(a,b,d){a=a.getElementsByClassName("ng-binding");var g=[];q(a,function(a){var c=ca.element(a).data("$binding");c&&q(c,function(c){d?(new RegExp("(^|\\s)"+wd(b)+"(\\s|\\||$)")).test(c)&&g.push(a):-1!=c.indexOf(b)&&g.push(a)})});return g},findModels:function(a,b,d){for(var g=["ng-","data-ng-","ng\\:"],h=0;h<g.length;++h){var k=
a.querySelectorAll("["+g[h]+"model"+(d?"=":"*=")+'"'+b+'"]');if(k.length)return k}},getLocation:function(){return d.url()},setLocation:function(b){b!==d.url()&&(d.url(b),a.$digest())},whenStable:function(a){b.notifyWhenNoOutstandingRequests(a)}}}]}function Ef(){this.$get=["$rootScope","$browser","$q","$$q","$exceptionHandler",function(a,b,d,c,e){function f(f,k,l){z(f)||(l=k,k=f,f=A);var m=va.call(arguments,3),n=w(l)&&!l,p=(n?c:d).defer(),u=p.promise,q;q=b.defer(function(){try{p.resolve(f.apply(null,
m))}catch(b){p.reject(b),e(b)}finally{delete g[u.$$timeoutId]}n||a.$apply()},k);u.$$timeoutId=q;g[q]=p;return u}var g={};f.cancel=function(a){return a&&a.$$timeoutId in g?(g[a.$$timeoutId].reject("canceled"),delete g[a.$$timeoutId],b.defer.cancel(a.$$timeoutId)):!1};return f}]}function Y(a){Ea&&($.setAttribute("href",a),a=$.href);$.setAttribute("href",a);return{href:$.href,protocol:$.protocol?$.protocol.replace(/:$/,""):"",host:$.host,search:$.search?$.search.replace(/^\?/,""):"",hash:$.hash?$.hash.replace(/^#/,
""):"",hostname:$.hostname,port:$.port,pathname:"/"===$.pathname.charAt(0)?$.pathname:"/"+$.pathname}}function id(a){a=G(a)?Y(a):a;return a.protocol===yd.protocol&&a.host===yd.host}function Ff(){this.$get=ha(C)}function zd(a){function b(a){try{return decodeURIComponent(a)}catch(b){return a}}var d=a[0]||{},c={},e="";return function(){var a,g,h,k,l;a=d.cookie||"";if(a!==e)for(e=a,a=e.split("; "),c={},h=0;h<a.length;h++)g=a[h],k=g.indexOf("="),0<k&&(l=b(g.substring(0,k)),y(c[l])&&(c[l]=b(g.substring(k+
1))));return c}}function Jf(){this.$get=zd}function Mc(a){function b(d,c){if(D(d)){var e={};q(d,function(a,c){e[c]=b(c,a)});return e}return a.factory(d+"Filter",c)}this.register=b;this.$get=["$injector",function(a){return function(b){return a.get(b+"Filter")}}];b("currency",Ad);b("date",Bd);b("filter",qg);b("json",rg);b("limitTo",sg);b("lowercase",tg);b("number",Cd);b("orderBy",Dd);b("uppercase",ug)}function qg(){return function(a,b,d,c){if(!ta(a)){if(null==a)return a;throw N("filter")("notarray",
a);}c=c||"$";var e;switch(lc(b)){case "function":break;case "boolean":case "null":case "number":case "string":e=!0;case "object":b=vg(b,d,c,e);break;default:return a}return Array.prototype.filter.call(a,b)}}function vg(a,b,d,c){var e=D(a)&&d in a;!0===b?b=na:z(b)||(b=function(a,b){if(y(a))return!1;if(null===a||null===b)return a===b;if(D(b)||D(a)&&!vc(a))return!1;a=Q(""+a);b=Q(""+b);return-1!==a.indexOf(b)});return function(f){return e&&!D(f)?La(f,a[d],b,d,!1):La(f,a,b,d,c)}}function La(a,b,d,c,e,
f){var g=lc(a),h=lc(b);if("string"===h&&"!"===b.charAt(0))return!La(a,b.substring(1),d,c,e);if(L(a))return a.some(function(a){return La(a,b,d,c,e)});switch(g){case "object":var k;if(e){for(k in a)if("$"!==k.charAt(0)&&La(a[k],b,d,c,!0))return!0;return f?!1:La(a,b,d,c,!1)}if("object"===h){for(k in b)if(f=b[k],!z(f)&&!y(f)&&(g=k===c,!La(g?a:a[k],f,d,c,g,g)))return!1;return!0}return d(a,b);case "function":return!1;default:return d(a,b)}}function lc(a){return null===a?"null":typeof a}function Ad(a){var b=
a.NUMBER_FORMATS;return function(a,c,e){y(c)&&(c=b.CURRENCY_SYM);y(e)&&(e=b.PATTERNS[1].maxFrac);return null==a?a:Ed(a,b.PATTERNS[1],b.GROUP_SEP,b.DECIMAL_SEP,e).replace(/\u00A4/g,c)}}function Cd(a){var b=a.NUMBER_FORMATS;return function(a,c){return null==a?a:Ed(a,b.PATTERNS[0],b.GROUP_SEP,b.DECIMAL_SEP,c)}}function wg(a){var b=0,d,c,e,f,g;-1<(c=a.indexOf(Fd))&&(a=a.replace(Fd,""));0<(e=a.search(/e/i))?(0>c&&(c=e),c+=+a.slice(e+1),a=a.substring(0,e)):0>c&&(c=a.length);for(e=0;a.charAt(e)==mc;e++);
if(e==(g=a.length))d=[0],c=1;else{for(g--;a.charAt(g)==mc;)g--;c-=e;d=[];for(f=0;e<=g;e++,f++)d[f]=+a.charAt(e)}c>Gd&&(d=d.splice(0,Gd-1),b=c-1,c=1);return{d:d,e:b,i:c}}function xg(a,b,d,c){var e=a.d,f=e.length-a.i;b=y(b)?Math.min(Math.max(d,f),c):+b;d=b+a.i;c=e[d];if(0<d){e.splice(Math.max(a.i,d));for(var g=d;g<e.length;g++)e[g]=0}else for(f=Math.max(0,f),a.i=1,e.length=Math.max(1,d=b+1),e[0]=0,g=1;g<d;g++)e[g]=0;if(5<=c)if(0>d-1){for(c=0;c>d;c--)e.unshift(0),a.i++;e.unshift(1);a.i++}else e[d-1]++;
for(;f<Math.max(0,b);f++)e.push(0);if(b=e.reduceRight(function(a,b,c,d){b+=a;d[c]=b%10;return Math.floor(b/10)},0))e.unshift(b),a.i++}function Ed(a,b,d,c,e){if(!G(a)&&!T(a)||isNaN(a))return"";var f=!isFinite(a),g=!1,h=Math.abs(a)+"",k="";if(f)k="\u221e";else{g=wg(h);xg(g,e,b.minFrac,b.maxFrac);k=g.d;h=g.i;e=g.e;f=[];for(g=k.reduce(function(a,b){return a&&!b},!0);0>h;)k.unshift(0),h++;0<h?f=k.splice(h,k.length):(f=k,k=[0]);h=[];for(k.length>=b.lgSize&&h.unshift(k.splice(-b.lgSize,k.length).join(""));k.length>
b.gSize;)h.unshift(k.splice(-b.gSize,k.length).join(""));k.length&&h.unshift(k.join(""));k=h.join(d);f.length&&(k+=c+f.join(""));e&&(k+="e+"+e)}return 0>a&&!g?b.negPre+k+b.negSuf:b.posPre+k+b.posSuf}function Kb(a,b,d,c){var e="";if(0>a||c&&0>=a)c?a=-a+1:(a=-a,e="-");for(a=""+a;a.length<b;)a=mc+a;d&&(a=a.substr(a.length-b));return e+a}function ba(a,b,d,c,e){d=d||0;return function(f){f=f["get"+a]();if(0<d||f>-d)f+=d;0===f&&-12==d&&(f=12);return Kb(f,b,c,e)}}function kb(a,b,d){return function(c,e){var f=
c["get"+a](),g=ub((d?"STANDALONE":"")+(b?"SHORT":"")+a);return e[g][f]}}function Hd(a){var b=(new Date(a,0,1)).getDay();return new Date(a,0,(4>=b?5:12)-b)}function Id(a){return function(b){var d=Hd(b.getFullYear());b=+new Date(b.getFullYear(),b.getMonth(),b.getDate()+(4-b.getDay()))-+d;b=1+Math.round(b/6048E5);return Kb(b,a)}}function nc(a,b){return 0>=a.getFullYear()?b.ERAS[0]:b.ERAS[1]}function Bd(a){function b(a){var b;if(b=a.match(d)){a=new Date(0);var f=0,g=0,h=b[8]?a.setUTCFullYear:a.setFullYear,
k=b[8]?a.setUTCHours:a.setHours;b[9]&&(f=Z(b[9]+b[10]),g=Z(b[9]+b[11]));h.call(a,Z(b[1]),Z(b[2])-1,Z(b[3]));f=Z(b[4]||0)-f;g=Z(b[5]||0)-g;h=Z(b[6]||0);b=Math.round(1E3*parseFloat("0."+(b[7]||0)));k.call(a,f,g,h,b)}return a}var d=/^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/;return function(c,d,f){var g="",h=[],k,l;d=d||"mediumDate";d=a.DATETIME_FORMATS[d]||d;G(c)&&(c=yg.test(c)?Z(c):b(c));T(c)&&(c=new Date(c));if(!da(c)||!isFinite(c.getTime()))return c;
for(;d;)(l=zg.exec(d))?(h=$a(h,l,1),d=h.pop()):(h.push(d),d=null);var m=c.getTimezoneOffset();f&&(m=yc(f,m),c=Sb(c,f,!0));q(h,function(b){k=Ag[b];g+=k?k(c,a.DATETIME_FORMATS,m):"''"===b?"'":b.replace(/(^'|'$)/g,"").replace(/''/g,"'")});return g}}function rg(){return function(a,b){y(b)&&(b=2);return bb(a,b)}}function sg(){return function(a,b,d){b=Infinity===Math.abs(Number(b))?Number(b):Z(b);if(isNaN(b))return a;T(a)&&(a=a.toString());if(!ta(a))return a;d=!d||isNaN(d)?0:Z(d);d=0>d?Math.max(0,a.length+
d):d;return 0<=b?oc(a,d,d+b):0===d?oc(a,b,a.length):oc(a,Math.max(0,d+b),d)}}function oc(a,b,d){return G(a)?a.slice(b,d):va.call(a,b,d)}function Dd(a){function b(b){return b.map(function(b){var c=1,d=Xa;if(z(b))d=b;else if(G(b)){if("+"==b.charAt(0)||"-"==b.charAt(0))c="-"==b.charAt(0)?-1:1,b=b.substring(1);if(""!==b&&(d=a(b),d.constant))var e=d(),d=function(a){return a[e]}}return{get:d,descending:c}})}function d(a){switch(typeof a){case "number":case "boolean":case "string":return!0;default:return!1}}
function c(a,b){var c=0,d=a.type,k=b.type;if(d===k){var k=a.value,l=b.value;"string"===d?(k=k.toLowerCase(),l=l.toLowerCase()):"object"===d&&(D(k)&&(k=a.index),D(l)&&(l=b.index));k!==l&&(c=k<l?-1:1)}else c=d<k?-1:1;return c}return function(a,f,g,h){if(null==a)return a;if(!ta(a))throw N("orderBy")("notarray",a);L(f)||(f=[f]);0===f.length&&(f=["+"]);var k=b(f),l=g?-1:1,m=z(h)?h:c;a=Array.prototype.map.call(a,function(a,b){return{value:a,tieBreaker:{value:b,type:"number",index:b},predicateValues:k.map(function(c){var e=
c.get(a);c=typeof e;if(null===e)c="string",e="null";else if("object"===c)a:{if(z(e.valueOf)&&(e=e.valueOf(),d(e)))break a;vc(e)&&(e=e.toString(),d(e))}return{value:e,type:c,index:b}})}});a.sort(function(a,b){for(var c=0,d=k.length;c<d;c++){var e=m(a.predicateValues[c],b.predicateValues[c]);if(e)return e*k[c].descending*l}return m(a.tieBreaker,b.tieBreaker)*l});return a=a.map(function(a){return a.value})}}function Ta(a){z(a)&&(a={link:a});a.restrict=a.restrict||"AC";return ha(a)}function Jd(a,b,d,
c,e){var f=this,g=[];f.$error={};f.$$success={};f.$pending=void 0;f.$name=e(b.name||b.ngForm||"")(d);f.$dirty=!1;f.$pristine=!0;f.$valid=!0;f.$invalid=!1;f.$submitted=!1;f.$$parentForm=Lb;f.$rollbackViewValue=function(){q(g,function(a){a.$rollbackViewValue()})};f.$commitViewValue=function(){q(g,function(a){a.$commitViewValue()})};f.$addControl=function(a){Qa(a.$name,"input");g.push(a);a.$name&&(f[a.$name]=a);a.$$parentForm=f};f.$$renameControl=function(a,b){var c=a.$name;f[c]===a&&delete f[c];f[b]=
a;a.$name=b};f.$removeControl=function(a){a.$name&&f[a.$name]===a&&delete f[a.$name];q(f.$pending,function(b,c){f.$setValidity(c,null,a)});q(f.$error,function(b,c){f.$setValidity(c,null,a)});q(f.$$success,function(b,c){f.$setValidity(c,null,a)});Za(g,a);a.$$parentForm=Lb};Kd({ctrl:this,$element:a,set:function(a,b,c){var d=a[b];d?-1===d.indexOf(c)&&d.push(c):a[b]=[c]},unset:function(a,b,c){var d=a[b];d&&(Za(d,c),0===d.length&&delete a[b])},$animate:c});f.$setDirty=function(){c.removeClass(a,Ua);c.addClass(a,
Mb);f.$dirty=!0;f.$pristine=!1;f.$$parentForm.$setDirty()};f.$setPristine=function(){c.setClass(a,Ua,Mb+" ng-submitted");f.$dirty=!1;f.$pristine=!0;f.$submitted=!1;q(g,function(a){a.$setPristine()})};f.$setUntouched=function(){q(g,function(a){a.$setUntouched()})};f.$setSubmitted=function(){c.addClass(a,"ng-submitted");f.$submitted=!0;f.$$parentForm.$setSubmitted()}}function pc(a){a.$formatters.push(function(b){return a.$isEmpty(b)?b:b.toString()})}function lb(a,b,d,c,e,f){var g=Q(b[0].type);if(!e.android){var h=
!1;b.on("compositionstart",function(){h=!0});b.on("compositionend",function(){h=!1;l()})}var k,l=function(a){k&&(f.defer.cancel(k),k=null);if(!h){var e=b.val();a=a&&a.type;"password"===g||d.ngTrim&&"false"===d.ngTrim||(e=W(e));(c.$viewValue!==e||""===e&&c.$$hasNativeValidators)&&c.$setViewValue(e,a)}};if(e.hasEvent("input"))b.on("input",l);else{var m=function(a,b,c){k||(k=f.defer(function(){k=null;b&&b.value===c||l(a)}))};b.on("keydown",function(a){var b=a.keyCode;91===b||15<b&&19>b||37<=b&&40>=b||
m(a,this,this.value)});if(e.hasEvent("paste"))b.on("paste cut",m)}b.on("change",l);if(Ld[g]&&c.$$hasNativeValidators&&g===d.type)b.on("keydown wheel mousedown",function(a){if(!k){var b=this.validity,c=b.badInput,d=b.typeMismatch;k=f.defer(function(){k=null;b.badInput===c&&b.typeMismatch===d||l(a)})}});c.$render=function(){var a=c.$isEmpty(c.$viewValue)?"":c.$viewValue;b.val()!==a&&b.val(a)}}function Nb(a,b){return function(d,c){var e,f;if(da(d))return d;if(G(d)){'"'==d.charAt(0)&&'"'==d.charAt(d.length-
1)&&(d=d.substring(1,d.length-1));if(Bg.test(d))return new Date(d);a.lastIndex=0;if(e=a.exec(d))return e.shift(),f=c?{yyyy:c.getFullYear(),MM:c.getMonth()+1,dd:c.getDate(),HH:c.getHours(),mm:c.getMinutes(),ss:c.getSeconds(),sss:c.getMilliseconds()/1E3}:{yyyy:1970,MM:1,dd:1,HH:0,mm:0,ss:0,sss:0},q(e,function(a,c){c<b.length&&(f[b[c]]=+a)}),new Date(f.yyyy,f.MM-1,f.dd,f.HH,f.mm,f.ss||0,1E3*f.sss||0)}return NaN}}function mb(a,b,d,c){return function(e,f,g,h,k,l,m){function n(a){return a&&!(a.getTime&&
a.getTime()!==a.getTime())}function p(a){return w(a)&&!da(a)?d(a)||void 0:a}Md(e,f,g,h);lb(e,f,g,h,k,l);var u=h&&h.$options&&h.$options.timezone,q;h.$$parserName=a;h.$parsers.push(function(a){if(h.$isEmpty(a))return null;if(b.test(a))return a=d(a,q),u&&(a=Sb(a,u)),a});h.$formatters.push(function(a){if(a&&!da(a))throw nb("datefmt",a);if(n(a))return(q=a)&&u&&(q=Sb(q,u,!0)),m("date")(a,c,u);q=null;return""});if(w(g.min)||g.ngMin){var s;h.$validators.min=function(a){return!n(a)||y(s)||d(a)>=s};g.$observe("min",
function(a){s=p(a);h.$validate()})}if(w(g.max)||g.ngMax){var r;h.$validators.max=function(a){return!n(a)||y(r)||d(a)<=r};g.$observe("max",function(a){r=p(a);h.$validate()})}}}function Md(a,b,d,c){(c.$$hasNativeValidators=D(b[0].validity))&&c.$parsers.push(function(a){var c=b.prop("validity")||{};return c.badInput||c.typeMismatch?void 0:a})}function Nd(a,b,d,c,e){if(w(c)){a=a(c);if(!a.constant)throw nb("constexpr",d,c);return a(b)}return e}function qc(a,b){a="ngClass"+a;return["$animate",function(d){function c(a,
b){var c=[],d=0;a:for(;d<a.length;d++){for(var e=a[d],m=0;m<b.length;m++)if(e==b[m])continue a;c.push(e)}return c}function e(a){var b=[];return L(a)?(q(a,function(a){b=b.concat(e(a))}),b):G(a)?a.split(" "):D(a)?(q(a,function(a,c){a&&(b=b.concat(c.split(" ")))}),b):a}return{restrict:"AC",link:function(f,g,h){function k(a){a=l(a,1);h.$addClass(a)}function l(a,b){var c=g.data("$classCounts")||U(),d=[];q(a,function(a){if(0<b||c[a])c[a]=(c[a]||0)+b,c[a]===+(0<b)&&d.push(a)});g.data("$classCounts",c);return d.join(" ")}
function m(a,b){var e=c(b,a),f=c(a,b),e=l(e,1),f=l(f,-1);e&&e.length&&d.addClass(g,e);f&&f.length&&d.removeClass(g,f)}function n(a){if(!0===b||(f.$index&1)===b){var c=e(a||[]);if(!p)k(c);else if(!na(a,p)){var d=e(p);m(d,c)}}p=L(a)?a.map(function(a){return ia(a)}):ia(a)}var p;f.$watch(h[a],n,!0);h.$observe("class",function(b){n(f.$eval(h[a]))});"ngClass"!==a&&f.$watch("$index",function(c,d){var g=c&1;if(g!==(d&1)){var m=e(f.$eval(h[a]));g===b?k(m):(g=l(m,-1),h.$removeClass(g))}})}}}]}function Kd(a){function b(a,
b){b&&!f[a]?(k.addClass(e,a),f[a]=!0):!b&&f[a]&&(k.removeClass(e,a),f[a]=!1)}function d(a,c){a=a?"-"+Cc(a,"-"):"";b(ob+a,!0===c);b(Od+a,!1===c)}var c=a.ctrl,e=a.$element,f={},g=a.set,h=a.unset,k=a.$animate;f[Od]=!(f[ob]=e.hasClass(ob));c.$setValidity=function(a,e,f){y(e)?(c.$pending||(c.$pending={}),g(c.$pending,a,f)):(c.$pending&&h(c.$pending,a,f),Pd(c.$pending)&&(c.$pending=void 0));Ga(e)?e?(h(c.$error,a,f),g(c.$$success,a,f)):(g(c.$error,a,f),h(c.$$success,a,f)):(h(c.$error,a,f),h(c.$$success,
a,f));c.$pending?(b(Qd,!0),c.$valid=c.$invalid=void 0,d("",null)):(b(Qd,!1),c.$valid=Pd(c.$error),c.$invalid=!c.$valid,d("",c.$valid));e=c.$pending&&c.$pending[a]?void 0:c.$error[a]?!1:c.$$success[a]?!0:null;d(a,e);c.$$parentForm.$setValidity(a,e,c)}}function Pd(a){if(a)for(var b in a)if(a.hasOwnProperty(b))return!1;return!0}var Cg=/^\/(.+)\/([a-z]*)$/,ua=Object.prototype.hasOwnProperty,Q=function(a){return G(a)?a.toLowerCase():a},ub=function(a){return G(a)?a.toUpperCase():a},Ea,F,qa,va=[].slice,
bg=[].splice,Dg=[].push,ma=Object.prototype.toString,wc=Object.getPrototypeOf,xa=N("ng"),ca=C.angular||(C.angular={}),Ub,pb=0;Ea=C.document.documentMode;A.$inject=[];Xa.$inject=[];var L=Array.isArray,ae=/^\[object (?:Uint8|Uint8Clamped|Uint16|Uint32|Int8|Int16|Int32|Float32|Float64)Array\]$/,W=function(a){return G(a)?a.trim():a},wd=function(a){return a.replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g,"\\$1").replace(/\x08/g,"\\x08")},Ba=function(){if(!w(Ba.rules)){var a=C.document.querySelector("[ng-csp]")||
C.document.querySelector("[data-ng-csp]");if(a){var b=a.getAttribute("ng-csp")||a.getAttribute("data-ng-csp");Ba.rules={noUnsafeEval:!b||-1!==b.indexOf("no-unsafe-eval"),noInlineStyle:!b||-1!==b.indexOf("no-inline-style")}}else{a=Ba;try{new Function(""),b=!1}catch(d){b=!0}a.rules={noUnsafeEval:b,noInlineStyle:!1}}}return Ba.rules},rb=function(){if(w(rb.name_))return rb.name_;var a,b,d=Na.length,c,e;for(b=0;b<d;++b)if(c=Na[b],a=C.document.querySelector("["+c.replace(":","\\:")+"jq]")){e=a.getAttribute(c+
"jq");break}return rb.name_=e},de=/:/g,Na=["ng-","data-ng-","ng:","x-ng-"],ie=/[A-Z]/g,Dc=!1,Ma=3,me={full:"1.5.8",major:1,minor:5,dot:8,codeName:"arbitrary-fallbacks"};O.expando="ng339";var fb=O.cache={},Pf=1;O._data=function(a){return this.cache[a[this.expando]]||{}};var Kf=/([\:\-\_]+(.))/g,Lf=/^moz([A-Z])/,yb={mouseleave:"mouseout",mouseenter:"mouseover"},Wb=N("jqLite"),Of=/^<([\w-]+)\s*\/?>(?:<\/\1>|)$/,Vb=/<|&#?\w+;/,Mf=/<([\w:-]+)/,Nf=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,
ja={option:[1,'<select multiple="multiple">',"</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};ja.optgroup=ja.option;ja.tbody=ja.tfoot=ja.colgroup=ja.caption=ja.thead;ja.th=ja.td;var Uf=C.Node.prototype.contains||function(a){return!!(this.compareDocumentPosition(a)&16)},Oa=O.prototype={ready:function(a){function b(){d||(d=!0,a())}var d=!1;"complete"===
C.document.readyState?C.setTimeout(b):(this.on("DOMContentLoaded",b),O(C).on("load",b))},toString:function(){var a=[];q(this,function(b){a.push(""+b)});return"["+a.join(", ")+"]"},eq:function(a){return 0<=a?F(this[a]):F(this[this.length+a])},length:0,push:Dg,sort:[].sort,splice:[].splice},Eb={};q("multiple selected checked disabled readOnly required open".split(" "),function(a){Eb[Q(a)]=a});var Vc={};q("input select option textarea button form details".split(" "),function(a){Vc[a]=!0});var bd={ngMinlength:"minlength",
ngMaxlength:"maxlength",ngMin:"min",ngMax:"max",ngPattern:"pattern"};q({data:Yb,removeData:eb,hasData:function(a){for(var b in fb[a.ng339])return!0;return!1},cleanData:function(a){for(var b=0,d=a.length;b<d;b++)eb(a[b])}},function(a,b){O[b]=a});q({data:Yb,inheritedData:Cb,scope:function(a){return F.data(a,"$scope")||Cb(a.parentNode||a,["$isolateScope","$scope"])},isolateScope:function(a){return F.data(a,"$isolateScope")||F.data(a,"$isolateScopeNoTemplate")},controller:Sc,injector:function(a){return Cb(a,
"$injector")},removeAttr:function(a,b){a.removeAttribute(b)},hasClass:zb,css:function(a,b,d){b=db(b);if(w(d))a.style[b]=d;else return a.style[b]},attr:function(a,b,d){var c=a.nodeType;if(c!==Ma&&2!==c&&8!==c)if(c=Q(b),Eb[c])if(w(d))d?(a[b]=!0,a.setAttribute(b,c)):(a[b]=!1,a.removeAttribute(c));else return a[b]||(a.attributes.getNamedItem(b)||A).specified?c:void 0;else if(w(d))a.setAttribute(b,d);else if(a.getAttribute)return a=a.getAttribute(b,2),null===a?void 0:a},prop:function(a,b,d){if(w(d))a[b]=
d;else return a[b]},text:function(){function a(a,d){if(y(d)){var c=a.nodeType;return 1===c||c===Ma?a.textContent:""}a.textContent=d}a.$dv="";return a}(),val:function(a,b){if(y(b)){if(a.multiple&&"select"===wa(a)){var d=[];q(a.options,function(a){a.selected&&d.push(a.value||a.text)});return 0===d.length?null:d}return a.value}a.value=b},html:function(a,b){if(y(b))return a.innerHTML;wb(a,!0);a.innerHTML=b},empty:Tc},function(a,b){O.prototype[b]=function(b,c){var e,f,g=this.length;if(a!==Tc&&y(2==a.length&&
a!==zb&&a!==Sc?b:c)){if(D(b)){for(e=0;e<g;e++)if(a===Yb)a(this[e],b);else for(f in b)a(this[e],f,b[f]);return this}e=a.$dv;g=y(e)?Math.min(g,1):g;for(f=0;f<g;f++){var h=a(this[f],b,c);e=e?e+h:h}return e}for(e=0;e<g;e++)a(this[e],b,c);return this}});q({removeData:eb,on:function(a,b,d,c){if(w(c))throw Wb("onargs");if(Nc(a)){c=xb(a,!0);var e=c.events,f=c.handle;f||(f=c.handle=Rf(a,e));c=0<=b.indexOf(" ")?b.split(" "):[b];for(var g=c.length,h=function(b,c,g){var h=e[b];h||(h=e[b]=[],h.specialHandlerWrapper=
c,"$destroy"===b||g||a.addEventListener(b,f,!1));h.push(d)};g--;)b=c[g],yb[b]?(h(yb[b],Tf),h(b,void 0,!0)):h(b)}},off:Rc,one:function(a,b,d){a=F(a);a.on(b,function e(){a.off(b,d);a.off(b,e)});a.on(b,d)},replaceWith:function(a,b){var d,c=a.parentNode;wb(a);q(new O(b),function(b){d?c.insertBefore(b,d.nextSibling):c.replaceChild(b,a);d=b})},children:function(a){var b=[];q(a.childNodes,function(a){1===a.nodeType&&b.push(a)});return b},contents:function(a){return a.contentDocument||a.childNodes||[]},append:function(a,
b){var d=a.nodeType;if(1===d||11===d){b=new O(b);for(var d=0,c=b.length;d<c;d++)a.appendChild(b[d])}},prepend:function(a,b){if(1===a.nodeType){var d=a.firstChild;q(new O(b),function(b){a.insertBefore(b,d)})}},wrap:function(a,b){Pc(a,F(b).eq(0).clone()[0])},remove:Db,detach:function(a){Db(a,!0)},after:function(a,b){var d=a,c=a.parentNode;b=new O(b);for(var e=0,f=b.length;e<f;e++){var g=b[e];c.insertBefore(g,d.nextSibling);d=g}},addClass:Bb,removeClass:Ab,toggleClass:function(a,b,d){b&&q(b.split(" "),
function(b){var e=d;y(e)&&(e=!zb(a,b));(e?Bb:Ab)(a,b)})},parent:function(a){return(a=a.parentNode)&&11!==a.nodeType?a:null},next:function(a){return a.nextElementSibling},find:function(a,b){return a.getElementsByTagName?a.getElementsByTagName(b):[]},clone:Xb,triggerHandler:function(a,b,d){var c,e,f=b.type||b,g=xb(a);if(g=(g=g&&g.events)&&g[f])c={preventDefault:function(){this.defaultPrevented=!0},isDefaultPrevented:function(){return!0===this.defaultPrevented},stopImmediatePropagation:function(){this.immediatePropagationStopped=
!0},isImmediatePropagationStopped:function(){return!0===this.immediatePropagationStopped},stopPropagation:A,type:f,target:a},b.type&&(c=S(c,b)),b=ia(g),e=d?[c].concat(d):[c],q(b,function(b){c.isImmediatePropagationStopped()||b.apply(a,e)})}},function(a,b){O.prototype[b]=function(b,c,e){for(var f,g=0,h=this.length;g<h;g++)y(f)?(f=a(this[g],b,c,e),w(f)&&(f=F(f))):Qc(f,a(this[g],b,c,e));return w(f)?f:this};O.prototype.bind=O.prototype.on;O.prototype.unbind=O.prototype.off});Ra.prototype={put:function(a,
b){this[Ca(a,this.nextUid)]=b},get:function(a){return this[Ca(a,this.nextUid)]},remove:function(a){var b=this[a=Ca(a,this.nextUid)];delete this[a];return b}};var If=[function(){this.$get=[function(){return Ra}]}],Wf=/^([^\(]+?)=>/,Xf=/^[^\(]*\(\s*([^\)]*)\)/m,Eg=/,/,Fg=/^\s*(_?)(\S+?)\1\s*$/,Vf=/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/mg,Ha=N("$injector");cb.$$annotate=function(a,b,d){var c;if("function"===typeof a){if(!(c=a.$inject)){c=[];if(a.length){if(b)throw G(d)&&d||(d=a.name||Yf(a)),Ha("strictdi",d);
b=Wc(a);q(b[1].split(Eg),function(a){a.replace(Fg,function(a,b,d){c.push(d)})})}a.$inject=c}}else L(a)?(b=a.length-1,Pa(a[b],"fn"),c=a.slice(0,b)):Pa(a,"fn",!0);return c};var Rd=N("$animate"),$e=function(){this.$get=A},af=function(){var a=new Ra,b=[];this.$get=["$$AnimateRunner","$rootScope",function(d,c){function e(a,b,c){var d=!1;b&&(b=G(b)?b.split(" "):L(b)?b:[],q(b,function(b){b&&(d=!0,a[b]=c)}));return d}function f(){q(b,function(b){var c=a.get(b);if(c){var d=Zf(b.attr("class")),e="",f="";q(c,
function(a,b){a!==!!d[b]&&(a?e+=(e.length?" ":"")+b:f+=(f.length?" ":"")+b)});q(b,function(a){e&&Bb(a,e);f&&Ab(a,f)});a.remove(b)}});b.length=0}return{enabled:A,on:A,off:A,pin:A,push:function(g,h,k,l){l&&l();k=k||{};k.from&&g.css(k.from);k.to&&g.css(k.to);if(k.addClass||k.removeClass)if(h=k.addClass,l=k.removeClass,k=a.get(g)||{},h=e(k,h,!0),l=e(k,l,!1),h||l)a.put(g,k),b.push(g),1===b.length&&c.$$postDigest(f);g=new d;g.complete();return g}}}]},Ye=["$provide",function(a){var b=this;this.$$registeredAnimations=
Object.create(null);this.register=function(d,c){if(d&&"."!==d.charAt(0))throw Rd("notcsel",d);var e=d+"-animation";b.$$registeredAnimations[d.substr(1)]=e;a.factory(e,c)};this.classNameFilter=function(a){if(1===arguments.length&&(this.$$classNameFilter=a instanceof RegExp?a:null)&&/(\s+|\/)ng-animate(\s+|\/)/.test(this.$$classNameFilter.toString()))throw Rd("nongcls","ng-animate");return this.$$classNameFilter};this.$get=["$$animateQueue",function(a){function b(a,c,d){if(d){var h;a:{for(h=0;h<d.length;h++){var k=
d[h];if(1===k.nodeType){h=k;break a}}h=void 0}!h||h.parentNode||h.previousElementSibling||(d=null)}d?d.after(a):c.prepend(a)}return{on:a.on,off:a.off,pin:a.pin,enabled:a.enabled,cancel:function(a){a.end&&a.end()},enter:function(e,f,g,h){f=f&&F(f);g=g&&F(g);f=f||g.parent();b(e,f,g);return a.push(e,"enter",Ia(h))},move:function(e,f,g,h){f=f&&F(f);g=g&&F(g);f=f||g.parent();b(e,f,g);return a.push(e,"move",Ia(h))},leave:function(b,c){return a.push(b,"leave",Ia(c),function(){b.remove()})},addClass:function(b,
c,g){g=Ia(g);g.addClass=gb(g.addclass,c);return a.push(b,"addClass",g)},removeClass:function(b,c,g){g=Ia(g);g.removeClass=gb(g.removeClass,c);return a.push(b,"removeClass",g)},setClass:function(b,c,g,h){h=Ia(h);h.addClass=gb(h.addClass,c);h.removeClass=gb(h.removeClass,g);return a.push(b,"setClass",h)},animate:function(b,c,g,h,k){k=Ia(k);k.from=k.from?S(k.from,c):c;k.to=k.to?S(k.to,g):g;k.tempClasses=gb(k.tempClasses,h||"ng-inline-animate");return a.push(b,"animate",k)}}}]}],cf=function(){this.$get=
["$$rAF",function(a){function b(b){d.push(b);1<d.length||a(function(){for(var a=0;a<d.length;a++)d[a]();d=[]})}var d=[];return function(){var a=!1;b(function(){a=!0});return function(d){a?d():b(d)}}}]},bf=function(){this.$get=["$q","$sniffer","$$animateAsyncRun","$document","$timeout",function(a,b,d,c,e){function f(a){this.setHost(a);var b=d();this._doneCallbacks=[];this._tick=function(a){var d=c[0];d&&d.hidden?e(a,0,!1):b(a)};this._state=0}f.chain=function(a,b){function c(){if(d===a.length)b(!0);
else a[d](function(a){!1===a?b(!1):(d++,c())})}var d=0;c()};f.all=function(a,b){function c(f){e=e&&f;++d===a.length&&b(e)}var d=0,e=!0;q(a,function(a){a.done(c)})};f.prototype={setHost:function(a){this.host=a||{}},done:function(a){2===this._state?a():this._doneCallbacks.push(a)},progress:A,getPromise:function(){if(!this.promise){var b=this;this.promise=a(function(a,c){b.done(function(b){!1===b?c():a()})})}return this.promise},then:function(a,b){return this.getPromise().then(a,b)},"catch":function(a){return this.getPromise()["catch"](a)},
"finally":function(a){return this.getPromise()["finally"](a)},pause:function(){this.host.pause&&this.host.pause()},resume:function(){this.host.resume&&this.host.resume()},end:function(){this.host.end&&this.host.end();this._resolve(!0)},cancel:function(){this.host.cancel&&this.host.cancel();this._resolve(!1)},complete:function(a){var b=this;0===b._state&&(b._state=1,b._tick(function(){b._resolve(a)}))},_resolve:function(a){2!==this._state&&(q(this._doneCallbacks,function(b){b(a)}),this._doneCallbacks.length=
0,this._state=2)}};return f}]},Ze=function(){this.$get=["$$rAF","$q","$$AnimateRunner",function(a,b,d){return function(b,e){function f(){a(function(){g.addClass&&(b.addClass(g.addClass),g.addClass=null);g.removeClass&&(b.removeClass(g.removeClass),g.removeClass=null);g.to&&(b.css(g.to),g.to=null);h||k.complete();h=!0});return k}var g=e||{};g.$$prepared||(g=pa(g));g.cleanupStyles&&(g.from=g.to=null);g.from&&(b.css(g.from),g.from=null);var h,k=new d;return{start:f,end:f}}}]},ga=N("$compile"),bc=new function(){};
Fc.$inject=["$provide","$$sanitizeUriProvider"];Fb.prototype.isFirstChange=function(){return this.previousValue===bc};var Yc=/^((?:x|data)[\:\-_])/i,cg=N("$controller"),cd=/^(\S+)(\s+as\s+([\w$]+))?$/,jf=function(){this.$get=["$document",function(a){return function(b){b?!b.nodeType&&b instanceof F&&(b=b[0]):b=a[0].body;return b.offsetWidth+1}}]},dd="application/json",ec={"Content-Type":dd+";charset=utf-8"},eg=/^\[|^\{(?!\{)/,fg={"[":/]$/,"{":/}$/},dg=/^\)\]\}',?\n/,Gg=N("$http"),hd=function(a){return function(){throw Gg("legacy",
a);}},Ka=ca.$interpolateMinErr=N("$interpolate");Ka.throwNoconcat=function(a){throw Ka("noconcat",a);};Ka.interr=function(a,b){return Ka("interr",a,b.toString())};var rf=function(){this.$get=["$window",function(a){function b(a){var b=function(a){b.data=a;b.called=!0};b.id=a;return b}var d=a.angular.callbacks,c={};return{createCallback:function(a){a="_"+(d.$$counter++).toString(36);var f="angular.callbacks."+a,g=b(a);c[f]=d[a]=g;return f},wasCalled:function(a){return c[a].called},getResponse:function(a){return c[a].data},
removeCallback:function(a){delete d[c[a].id];delete c[a]}}}]},Hg=/^([^\?#]*)(\?([^#]*))?(#(.*))?$/,hg={http:80,https:443,ftp:21},Gb=N("$location"),Ig={$$absUrl:"",$$html5:!1,$$replace:!1,absUrl:Hb("$$absUrl"),url:function(a){if(y(a))return this.$$url;var b=Hg.exec(a);(b[1]||""===a)&&this.path(decodeURIComponent(b[1]));(b[2]||b[1]||""===a)&&this.search(b[3]||"");this.hash(b[5]||"");return this},protocol:Hb("$$protocol"),host:Hb("$$host"),port:Hb("$$port"),path:md("$$path",function(a){a=null!==a?a.toString():
"";return"/"==a.charAt(0)?a:"/"+a}),search:function(a,b){switch(arguments.length){case 0:return this.$$search;case 1:if(G(a)||T(a))a=a.toString(),this.$$search=Ac(a);else if(D(a))a=pa(a,{}),q(a,function(b,c){null==b&&delete a[c]}),this.$$search=a;else throw Gb("isrcharg");break;default:y(b)||null===b?delete this.$$search[a]:this.$$search[a]=b}this.$$compose();return this},hash:md("$$hash",function(a){return null!==a?a.toString():""}),replace:function(){this.$$replace=!0;return this}};q([ld,hc,gc],
function(a){a.prototype=Object.create(Ig);a.prototype.state=function(b){if(!arguments.length)return this.$$state;if(a!==gc||!this.$$html5)throw Gb("nostate");this.$$state=y(b)?null:b;return this}});var X=N("$parse"),jg=Function.prototype.call,kg=Function.prototype.apply,lg=Function.prototype.bind,Ob=U();q("+ - * / % === !== == != < > <= >= && || ! = |".split(" "),function(a){Ob[a]=!0});var Jg={n:"\n",f:"\f",r:"\r",t:"\t",v:"\v","'":"'",'"':'"'},jc=function(a){this.options=a};jc.prototype={constructor:jc,
lex:function(a){this.text=a;this.index=0;for(this.tokens=[];this.index<this.text.length;)if(a=this.text.charAt(this.index),'"'===a||"'"===a)this.readString(a);else if(this.isNumber(a)||"."===a&&this.isNumber(this.peek()))this.readNumber();else if(this.isIdentifierStart(this.peekMultichar()))this.readIdent();else if(this.is(a,"(){}[].,;:?"))this.tokens.push({index:this.index,text:a}),this.index++;else if(this.isWhitespace(a))this.index++;else{var b=a+this.peek(),d=b+this.peek(2),c=Ob[b],e=Ob[d];Ob[a]||
c||e?(a=e?d:c?b:a,this.tokens.push({index:this.index,text:a,operator:!0}),this.index+=a.length):this.throwError("Unexpected next character ",this.index,this.index+1)}return this.tokens},is:function(a,b){return-1!==b.indexOf(a)},peek:function(a){a=a||1;return this.index+a<this.text.length?this.text.charAt(this.index+a):!1},isNumber:function(a){return"0"<=a&&"9">=a&&"string"===typeof a},isWhitespace:function(a){return" "===a||"\r"===a||"\t"===a||"\n"===a||"\v"===a||"\u00a0"===a},isIdentifierStart:function(a){return this.options.isIdentifierStart?
this.options.isIdentifierStart(a,this.codePointAt(a)):this.isValidIdentifierStart(a)},isValidIdentifierStart:function(a){return"a"<=a&&"z">=a||"A"<=a&&"Z">=a||"_"===a||"$"===a},isIdentifierContinue:function(a){return this.options.isIdentifierContinue?this.options.isIdentifierContinue(a,this.codePointAt(a)):this.isValidIdentifierContinue(a)},isValidIdentifierContinue:function(a,b){return this.isValidIdentifierStart(a,b)||this.isNumber(a)},codePointAt:function(a){return 1===a.length?a.charCodeAt(0):
(a.charCodeAt(0)<<10)+a.charCodeAt(1)-56613888},peekMultichar:function(){var a=this.text.charAt(this.index),b=this.peek();if(!b)return a;var d=a.charCodeAt(0),c=b.charCodeAt(0);return 55296<=d&&56319>=d&&56320<=c&&57343>=c?a+b:a},isExpOperator:function(a){return"-"===a||"+"===a||this.isNumber(a)},throwError:function(a,b,d){d=d||this.index;b=w(b)?"s "+b+"-"+this.index+" ["+this.text.substring(b,d)+"]":" "+d;throw X("lexerr",a,b,this.text);},readNumber:function(){for(var a="",b=this.index;this.index<
this.text.length;){var d=Q(this.text.charAt(this.index));if("."==d||this.isNumber(d))a+=d;else{var c=this.peek();if("e"==d&&this.isExpOperator(c))a+=d;else if(this.isExpOperator(d)&&c&&this.isNumber(c)&&"e"==a.charAt(a.length-1))a+=d;else if(!this.isExpOperator(d)||c&&this.isNumber(c)||"e"!=a.charAt(a.length-1))break;else this.throwError("Invalid exponent")}this.index++}this.tokens.push({index:b,text:a,constant:!0,value:Number(a)})},readIdent:function(){var a=this.index;for(this.index+=this.peekMultichar().length;this.index<
this.text.length;){var b=this.peekMultichar();if(!this.isIdentifierContinue(b))break;this.index+=b.length}this.tokens.push({index:a,text:this.text.slice(a,this.index),identifier:!0})},readString:function(a){var b=this.index;this.index++;for(var d="",c=a,e=!1;this.index<this.text.length;){var f=this.text.charAt(this.index),c=c+f;if(e)"u"===f?(e=this.text.substring(this.index+1,this.index+5),e.match(/[\da-f]{4}/i)||this.throwError("Invalid unicode escape [\\u"+e+"]"),this.index+=4,d+=String.fromCharCode(parseInt(e,
16))):d+=Jg[f]||f,e=!1;else if("\\"===f)e=!0;else{if(f===a){this.index++;this.tokens.push({index:b,text:c,constant:!0,value:d});return}d+=f}this.index++}this.throwError("Unterminated quote",b)}};var s=function(a,b){this.lexer=a;this.options=b};s.Program="Program";s.ExpressionStatement="ExpressionStatement";s.AssignmentExpression="AssignmentExpression";s.ConditionalExpression="ConditionalExpression";s.LogicalExpression="LogicalExpression";s.BinaryExpression="BinaryExpression";s.UnaryExpression="UnaryExpression";
s.CallExpression="CallExpression";s.MemberExpression="MemberExpression";s.Identifier="Identifier";s.Literal="Literal";s.ArrayExpression="ArrayExpression";s.Property="Property";s.ObjectExpression="ObjectExpression";s.ThisExpression="ThisExpression";s.LocalsExpression="LocalsExpression";s.NGValueParameter="NGValueParameter";s.prototype={ast:function(a){this.text=a;this.tokens=this.lexer.lex(a);a=this.program();0!==this.tokens.length&&this.throwError("is an unexpected token",this.tokens[0]);return a},
program:function(){for(var a=[];;)if(0<this.tokens.length&&!this.peek("}",")",";","]")&&a.push(this.expressionStatement()),!this.expect(";"))return{type:s.Program,body:a}},expressionStatement:function(){return{type:s.ExpressionStatement,expression:this.filterChain()}},filterChain:function(){for(var a=this.expression();this.expect("|");)a=this.filter(a);return a},expression:function(){return this.assignment()},assignment:function(){var a=this.ternary();this.expect("=")&&(a={type:s.AssignmentExpression,
left:a,right:this.assignment(),operator:"="});return a},ternary:function(){var a=this.logicalOR(),b,d;return this.expect("?")&&(b=this.expression(),this.consume(":"))?(d=this.expression(),{type:s.ConditionalExpression,test:a,alternate:b,consequent:d}):a},logicalOR:function(){for(var a=this.logicalAND();this.expect("||");)a={type:s.LogicalExpression,operator:"||",left:a,right:this.logicalAND()};return a},logicalAND:function(){for(var a=this.equality();this.expect("&&");)a={type:s.LogicalExpression,
operator:"&&",left:a,right:this.equality()};return a},equality:function(){for(var a=this.relational(),b;b=this.expect("==","!=","===","!==");)a={type:s.BinaryExpression,operator:b.text,left:a,right:this.relational()};return a},relational:function(){for(var a=this.additive(),b;b=this.expect("<",">","<=",">=");)a={type:s.BinaryExpression,operator:b.text,left:a,right:this.additive()};return a},additive:function(){for(var a=this.multiplicative(),b;b=this.expect("+","-");)a={type:s.BinaryExpression,operator:b.text,
left:a,right:this.multiplicative()};return a},multiplicative:function(){for(var a=this.unary(),b;b=this.expect("*","/","%");)a={type:s.BinaryExpression,operator:b.text,left:a,right:this.unary()};return a},unary:function(){var a;return(a=this.expect("+","-","!"))?{type:s.UnaryExpression,operator:a.text,prefix:!0,argument:this.unary()}:this.primary()},primary:function(){var a;this.expect("(")?(a=this.filterChain(),this.consume(")")):this.expect("[")?a=this.arrayDeclaration():this.expect("{")?a=this.object():
this.selfReferential.hasOwnProperty(this.peek().text)?a=pa(this.selfReferential[this.consume().text]):this.options.literals.hasOwnProperty(this.peek().text)?a={type:s.Literal,value:this.options.literals[this.consume().text]}:this.peek().identifier?a=this.identifier():this.peek().constant?a=this.constant():this.throwError("not a primary expression",this.peek());for(var b;b=this.expect("(","[",".");)"("===b.text?(a={type:s.CallExpression,callee:a,arguments:this.parseArguments()},this.consume(")")):
"["===b.text?(a={type:s.MemberExpression,object:a,property:this.expression(),computed:!0},this.consume("]")):"."===b.text?a={type:s.MemberExpression,object:a,property:this.identifier(),computed:!1}:this.throwError("IMPOSSIBLE");return a},filter:function(a){a=[a];for(var b={type:s.CallExpression,callee:this.identifier(),arguments:a,filter:!0};this.expect(":");)a.push(this.expression());return b},parseArguments:function(){var a=[];if(")"!==this.peekToken().text){do a.push(this.filterChain());while(this.expect(","))
}return a},identifier:function(){var a=this.consume();a.identifier||this.throwError("is not a valid identifier",a);return{type:s.Identifier,name:a.text}},constant:function(){return{type:s.Literal,value:this.consume().value}},arrayDeclaration:function(){var a=[];if("]"!==this.peekToken().text){do{if(this.peek("]"))break;a.push(this.expression())}while(this.expect(","))}this.consume("]");return{type:s.ArrayExpression,elements:a}},object:function(){var a=[],b;if("}"!==this.peekToken().text){do{if(this.peek("}"))break;
b={type:s.Property,kind:"init"};this.peek().constant?(b.key=this.constant(),b.computed=!1,this.consume(":"),b.value=this.expression()):this.peek().identifier?(b.key=this.identifier(),b.computed=!1,this.peek(":")?(this.consume(":"),b.value=this.expression()):b.value=b.key):this.peek("[")?(this.consume("["),b.key=this.expression(),this.consume("]"),b.computed=!0,this.consume(":"),b.value=this.expression()):this.throwError("invalid key",this.peek());a.push(b)}while(this.expect(","))}this.consume("}");
return{type:s.ObjectExpression,properties:a}},throwError:function(a,b){throw X("syntax",b.text,a,b.index+1,this.text,this.text.substring(b.index));},consume:function(a){if(0===this.tokens.length)throw X("ueoe",this.text);var b=this.expect(a);b||this.throwError("is unexpected, expecting ["+a+"]",this.peek());return b},peekToken:function(){if(0===this.tokens.length)throw X("ueoe",this.text);return this.tokens[0]},peek:function(a,b,d,c){return this.peekAhead(0,a,b,d,c)},peekAhead:function(a,b,d,c,e){if(this.tokens.length>
a){a=this.tokens[a];var f=a.text;if(f===b||f===d||f===c||f===e||!(b||d||c||e))return a}return!1},expect:function(a,b,d,c){return(a=this.peek(a,b,d,c))?(this.tokens.shift(),a):!1},selfReferential:{"this":{type:s.ThisExpression},$locals:{type:s.LocalsExpression}}};td.prototype={compile:function(a,b){var d=this,c=this.astBuilder.ast(a);this.state={nextId:0,filters:{},expensiveChecks:b,fn:{vars:[],body:[],own:{}},assign:{vars:[],body:[],own:{}},inputs:[]};V(c,d.$filter);var e="",f;this.stage="assign";
if(f=rd(c))this.state.computing="assign",e=this.nextId(),this.recurse(f,e),this.return_(e),e="fn.assign="+this.generateFunction("assign","s,v,l");f=pd(c.body);d.stage="inputs";q(f,function(a,b){var c="fn"+b;d.state[c]={vars:[],body:[],own:{}};d.state.computing=c;var e=d.nextId();d.recurse(a,e);d.return_(e);d.state.inputs.push(c);a.watchId=b});this.state.computing="fn";this.stage="main";this.recurse(c);e='"'+this.USE+" "+this.STRICT+'";\n'+this.filterPrefix()+"var fn="+this.generateFunction("fn","s,l,a,i")+
e+this.watchFns()+"return fn;";e=(new Function("$filter","ensureSafeMemberName","ensureSafeObject","ensureSafeFunction","getStringValue","ensureSafeAssignContext","ifDefined","plus","text",e))(this.$filter,Sa,ra,nd,ig,Ib,mg,od,a);this.state=this.stage=void 0;e.literal=sd(c);e.constant=c.constant;return e},USE:"use",STRICT:"strict",watchFns:function(){var a=[],b=this.state.inputs,d=this;q(b,function(b){a.push("var "+b+"="+d.generateFunction(b,"s"))});b.length&&a.push("fn.inputs=["+b.join(",")+"];");
return a.join("")},generateFunction:function(a,b){return"function("+b+"){"+this.varsPrefix(a)+this.body(a)+"};"},filterPrefix:function(){var a=[],b=this;q(this.state.filters,function(d,c){a.push(d+"=$filter("+b.escape(c)+")")});return a.length?"var "+a.join(",")+";":""},varsPrefix:function(a){return this.state[a].vars.length?"var "+this.state[a].vars.join(",")+";":""},body:function(a){return this.state[a].body.join("")},recurse:function(a,b,d,c,e,f){var g,h,k=this,l,m,n;c=c||A;if(!f&&w(a.watchId))b=
b||this.nextId(),this.if_("i",this.lazyAssign(b,this.computedMember("i",a.watchId)),this.lazyRecurse(a,b,d,c,e,!0));else switch(a.type){case s.Program:q(a.body,function(b,c){k.recurse(b.expression,void 0,void 0,function(a){h=a});c!==a.body.length-1?k.current().body.push(h,";"):k.return_(h)});break;case s.Literal:m=this.escape(a.value);this.assign(b,m);c(m);break;case s.UnaryExpression:this.recurse(a.argument,void 0,void 0,function(a){h=a});m=a.operator+"("+this.ifDefined(h,0)+")";this.assign(b,m);
c(m);break;case s.BinaryExpression:this.recurse(a.left,void 0,void 0,function(a){g=a});this.recurse(a.right,void 0,void 0,function(a){h=a});m="+"===a.operator?this.plus(g,h):"-"===a.operator?this.ifDefined(g,0)+a.operator+this.ifDefined(h,0):"("+g+")"+a.operator+"("+h+")";this.assign(b,m);c(m);break;case s.LogicalExpression:b=b||this.nextId();k.recurse(a.left,b);k.if_("&&"===a.operator?b:k.not(b),k.lazyRecurse(a.right,b));c(b);break;case s.ConditionalExpression:b=b||this.nextId();k.recurse(a.test,
b);k.if_(b,k.lazyRecurse(a.alternate,b),k.lazyRecurse(a.consequent,b));c(b);break;case s.Identifier:b=b||this.nextId();d&&(d.context="inputs"===k.stage?"s":this.assign(this.nextId(),this.getHasOwnProperty("l",a.name)+"?l:s"),d.computed=!1,d.name=a.name);Sa(a.name);k.if_("inputs"===k.stage||k.not(k.getHasOwnProperty("l",a.name)),function(){k.if_("inputs"===k.stage||"s",function(){e&&1!==e&&k.if_(k.not(k.nonComputedMember("s",a.name)),k.lazyAssign(k.nonComputedMember("s",a.name),"{}"));k.assign(b,k.nonComputedMember("s",
a.name))})},b&&k.lazyAssign(b,k.nonComputedMember("l",a.name)));(k.state.expensiveChecks||Jb(a.name))&&k.addEnsureSafeObject(b);c(b);break;case s.MemberExpression:g=d&&(d.context=this.nextId())||this.nextId();b=b||this.nextId();k.recurse(a.object,g,void 0,function(){k.if_(k.notNull(g),function(){e&&1!==e&&k.addEnsureSafeAssignContext(g);if(a.computed)h=k.nextId(),k.recurse(a.property,h),k.getStringValue(h),k.addEnsureSafeMemberName(h),e&&1!==e&&k.if_(k.not(k.computedMember(g,h)),k.lazyAssign(k.computedMember(g,
h),"{}")),m=k.ensureSafeObject(k.computedMember(g,h)),k.assign(b,m),d&&(d.computed=!0,d.name=h);else{Sa(a.property.name);e&&1!==e&&k.if_(k.not(k.nonComputedMember(g,a.property.name)),k.lazyAssign(k.nonComputedMember(g,a.property.name),"{}"));m=k.nonComputedMember(g,a.property.name);if(k.state.expensiveChecks||Jb(a.property.name))m=k.ensureSafeObject(m);k.assign(b,m);d&&(d.computed=!1,d.name=a.property.name)}},function(){k.assign(b,"undefined")});c(b)},!!e);break;case s.CallExpression:b=b||this.nextId();
a.filter?(h=k.filter(a.callee.name),l=[],q(a.arguments,function(a){var b=k.nextId();k.recurse(a,b);l.push(b)}),m=h+"("+l.join(",")+")",k.assign(b,m),c(b)):(h=k.nextId(),g={},l=[],k.recurse(a.callee,h,g,function(){k.if_(k.notNull(h),function(){k.addEnsureSafeFunction(h);q(a.arguments,function(a){k.recurse(a,k.nextId(),void 0,function(a){l.push(k.ensureSafeObject(a))})});g.name?(k.state.expensiveChecks||k.addEnsureSafeObject(g.context),m=k.member(g.context,g.name,g.computed)+"("+l.join(",")+")"):m=
h+"("+l.join(",")+")";m=k.ensureSafeObject(m);k.assign(b,m)},function(){k.assign(b,"undefined")});c(b)}));break;case s.AssignmentExpression:h=this.nextId();g={};if(!qd(a.left))throw X("lval");this.recurse(a.left,void 0,g,function(){k.if_(k.notNull(g.context),function(){k.recurse(a.right,h);k.addEnsureSafeObject(k.member(g.context,g.name,g.computed));k.addEnsureSafeAssignContext(g.context);m=k.member(g.context,g.name,g.computed)+a.operator+h;k.assign(b,m);c(b||m)})},1);break;case s.ArrayExpression:l=
[];q(a.elements,function(a){k.recurse(a,k.nextId(),void 0,function(a){l.push(a)})});m="["+l.join(",")+"]";this.assign(b,m);c(m);break;case s.ObjectExpression:l=[];n=!1;q(a.properties,function(a){a.computed&&(n=!0)});n?(b=b||this.nextId(),this.assign(b,"{}"),q(a.properties,function(a){a.computed?(g=k.nextId(),k.recurse(a.key,g)):g=a.key.type===s.Identifier?a.key.name:""+a.key.value;h=k.nextId();k.recurse(a.value,h);k.assign(k.member(b,g,a.computed),h)})):(q(a.properties,function(b){k.recurse(b.value,
a.constant?void 0:k.nextId(),void 0,function(a){l.push(k.escape(b.key.type===s.Identifier?b.key.name:""+b.key.value)+":"+a)})}),m="{"+l.join(",")+"}",this.assign(b,m));c(b||m);break;case s.ThisExpression:this.assign(b,"s");c("s");break;case s.LocalsExpression:this.assign(b,"l");c("l");break;case s.NGValueParameter:this.assign(b,"v"),c("v")}},getHasOwnProperty:function(a,b){var d=a+"."+b,c=this.current().own;c.hasOwnProperty(d)||(c[d]=this.nextId(!1,a+"&&("+this.escape(b)+" in "+a+")"));return c[d]},
assign:function(a,b){if(a)return this.current().body.push(a,"=",b,";"),a},filter:function(a){this.state.filters.hasOwnProperty(a)||(this.state.filters[a]=this.nextId(!0));return this.state.filters[a]},ifDefined:function(a,b){return"ifDefined("+a+","+this.escape(b)+")"},plus:function(a,b){return"plus("+a+","+b+")"},return_:function(a){this.current().body.push("return ",a,";")},if_:function(a,b,d){if(!0===a)b();else{var c=this.current().body;c.push("if(",a,"){");b();c.push("}");d&&(c.push("else{"),
d(),c.push("}"))}},not:function(a){return"!("+a+")"},notNull:function(a){return a+"!=null"},nonComputedMember:function(a,b){var d=/[^$_a-zA-Z0-9]/g;return/[$_a-zA-Z][$_a-zA-Z0-9]*/.test(b)?a+"."+b:a+'["'+b.replace(d,this.stringEscapeFn)+'"]'},computedMember:function(a,b){return a+"["+b+"]"},member:function(a,b,d){return d?this.computedMember(a,b):this.nonComputedMember(a,b)},addEnsureSafeObject:function(a){this.current().body.push(this.ensureSafeObject(a),";")},addEnsureSafeMemberName:function(a){this.current().body.push(this.ensureSafeMemberName(a),
";")},addEnsureSafeFunction:function(a){this.current().body.push(this.ensureSafeFunction(a),";")},addEnsureSafeAssignContext:function(a){this.current().body.push(this.ensureSafeAssignContext(a),";")},ensureSafeObject:function(a){return"ensureSafeObject("+a+",text)"},ensureSafeMemberName:function(a){return"ensureSafeMemberName("+a+",text)"},ensureSafeFunction:function(a){return"ensureSafeFunction("+a+",text)"},getStringValue:function(a){this.assign(a,"getStringValue("+a+")")},ensureSafeAssignContext:function(a){return"ensureSafeAssignContext("+
a+",text)"},lazyRecurse:function(a,b,d,c,e,f){var g=this;return function(){g.recurse(a,b,d,c,e,f)}},lazyAssign:function(a,b){var d=this;return function(){d.assign(a,b)}},stringEscapeRegex:/[^ a-zA-Z0-9]/g,stringEscapeFn:function(a){return"\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4)},escape:function(a){if(G(a))return"'"+a.replace(this.stringEscapeRegex,this.stringEscapeFn)+"'";if(T(a))return a.toString();if(!0===a)return"true";if(!1===a)return"false";if(null===a)return"null";if("undefined"===
typeof a)return"undefined";throw X("esc");},nextId:function(a,b){var d="v"+this.state.nextId++;a||this.current().vars.push(d+(b?"="+b:""));return d},current:function(){return this.state[this.state.computing]}};ud.prototype={compile:function(a,b){var d=this,c=this.astBuilder.ast(a);this.expression=a;this.expensiveChecks=b;V(c,d.$filter);var e,f;if(e=rd(c))f=this.recurse(e);e=pd(c.body);var g;e&&(g=[],q(e,function(a,b){var c=d.recurse(a);a.input=c;g.push(c);a.watchId=b}));var h=[];q(c.body,function(a){h.push(d.recurse(a.expression))});
e=0===c.body.length?A:1===c.body.length?h[0]:function(a,b){var c;q(h,function(d){c=d(a,b)});return c};f&&(e.assign=function(a,b,c){return f(a,c,b)});g&&(e.inputs=g);e.literal=sd(c);e.constant=c.constant;return e},recurse:function(a,b,d){var c,e,f=this,g;if(a.input)return this.inputs(a.input,a.watchId);switch(a.type){case s.Literal:return this.value(a.value,b);case s.UnaryExpression:return e=this.recurse(a.argument),this["unary"+a.operator](e,b);case s.BinaryExpression:return c=this.recurse(a.left),
e=this.recurse(a.right),this["binary"+a.operator](c,e,b);case s.LogicalExpression:return c=this.recurse(a.left),e=this.recurse(a.right),this["binary"+a.operator](c,e,b);case s.ConditionalExpression:return this["ternary?:"](this.recurse(a.test),this.recurse(a.alternate),this.recurse(a.consequent),b);case s.Identifier:return Sa(a.name,f.expression),f.identifier(a.name,f.expensiveChecks||Jb(a.name),b,d,f.expression);case s.MemberExpression:return c=this.recurse(a.object,!1,!!d),a.computed||(Sa(a.property.name,
f.expression),e=a.property.name),a.computed&&(e=this.recurse(a.property)),a.computed?this.computedMember(c,e,b,d,f.expression):this.nonComputedMember(c,e,f.expensiveChecks,b,d,f.expression);case s.CallExpression:return g=[],q(a.arguments,function(a){g.push(f.recurse(a))}),a.filter&&(e=this.$filter(a.callee.name)),a.filter||(e=this.recurse(a.callee,!0)),a.filter?function(a,c,d,f){for(var n=[],p=0;p<g.length;++p)n.push(g[p](a,c,d,f));a=e.apply(void 0,n,f);return b?{context:void 0,name:void 0,value:a}:
a}:function(a,c,d,m){var n=e(a,c,d,m),p;if(null!=n.value){ra(n.context,f.expression);nd(n.value,f.expression);p=[];for(var q=0;q<g.length;++q)p.push(ra(g[q](a,c,d,m),f.expression));p=ra(n.value.apply(n.context,p),f.expression)}return b?{value:p}:p};case s.AssignmentExpression:return c=this.recurse(a.left,!0,1),e=this.recurse(a.right),function(a,d,g,m){var n=c(a,d,g,m);a=e(a,d,g,m);ra(n.value,f.expression);Ib(n.context);n.context[n.name]=a;return b?{value:a}:a};case s.ArrayExpression:return g=[],q(a.elements,
function(a){g.push(f.recurse(a))}),function(a,c,d,e){for(var f=[],p=0;p<g.length;++p)f.push(g[p](a,c,d,e));return b?{value:f}:f};case s.ObjectExpression:return g=[],q(a.properties,function(a){a.computed?g.push({key:f.recurse(a.key),computed:!0,value:f.recurse(a.value)}):g.push({key:a.key.type===s.Identifier?a.key.name:""+a.key.value,computed:!1,value:f.recurse(a.value)})}),function(a,c,d,e){for(var f={},p=0;p<g.length;++p)g[p].computed?f[g[p].key(a,c,d,e)]=g[p].value(a,c,d,e):f[g[p].key]=g[p].value(a,
c,d,e);return b?{value:f}:f};case s.ThisExpression:return function(a){return b?{value:a}:a};case s.LocalsExpression:return function(a,c){return b?{value:c}:c};case s.NGValueParameter:return function(a,c,d){return b?{value:d}:d}}},"unary+":function(a,b){return function(d,c,e,f){d=a(d,c,e,f);d=w(d)?+d:0;return b?{value:d}:d}},"unary-":function(a,b){return function(d,c,e,f){d=a(d,c,e,f);d=w(d)?-d:0;return b?{value:d}:d}},"unary!":function(a,b){return function(d,c,e,f){d=!a(d,c,e,f);return b?{value:d}:
d}},"binary+":function(a,b,d){return function(c,e,f,g){var h=a(c,e,f,g);c=b(c,e,f,g);h=od(h,c);return d?{value:h}:h}},"binary-":function(a,b,d){return function(c,e,f,g){var h=a(c,e,f,g);c=b(c,e,f,g);h=(w(h)?h:0)-(w(c)?c:0);return d?{value:h}:h}},"binary*":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)*b(c,e,f,g);return d?{value:c}:c}},"binary/":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)/b(c,e,f,g);return d?{value:c}:c}},"binary%":function(a,b,d){return function(c,e,f,g){c=a(c,e,
f,g)%b(c,e,f,g);return d?{value:c}:c}},"binary===":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)===b(c,e,f,g);return d?{value:c}:c}},"binary!==":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)!==b(c,e,f,g);return d?{value:c}:c}},"binary==":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)==b(c,e,f,g);return d?{value:c}:c}},"binary!=":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)!=b(c,e,f,g);return d?{value:c}:c}},"binary<":function(a,b,d){return function(c,e,f,g){c=a(c,e,
f,g)<b(c,e,f,g);return d?{value:c}:c}},"binary>":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)>b(c,e,f,g);return d?{value:c}:c}},"binary<=":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)<=b(c,e,f,g);return d?{value:c}:c}},"binary>=":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)>=b(c,e,f,g);return d?{value:c}:c}},"binary&&":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)&&b(c,e,f,g);return d?{value:c}:c}},"binary||":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)||
b(c,e,f,g);return d?{value:c}:c}},"ternary?:":function(a,b,d,c){return function(e,f,g,h){e=a(e,f,g,h)?b(e,f,g,h):d(e,f,g,h);return c?{value:e}:e}},value:function(a,b){return function(){return b?{context:void 0,name:void 0,value:a}:a}},identifier:function(a,b,d,c,e){return function(f,g,h,k){f=g&&a in g?g:f;c&&1!==c&&f&&!f[a]&&(f[a]={});g=f?f[a]:void 0;b&&ra(g,e);return d?{context:f,name:a,value:g}:g}},computedMember:function(a,b,d,c,e){return function(f,g,h,k){var l=a(f,g,h,k),m,n;null!=l&&(m=b(f,
g,h,k),m+="",Sa(m,e),c&&1!==c&&(Ib(l),l&&!l[m]&&(l[m]={})),n=l[m],ra(n,e));return d?{context:l,name:m,value:n}:n}},nonComputedMember:function(a,b,d,c,e,f){return function(g,h,k,l){g=a(g,h,k,l);e&&1!==e&&(Ib(g),g&&!g[b]&&(g[b]={}));h=null!=g?g[b]:void 0;(d||Jb(b))&&ra(h,f);return c?{context:g,name:b,value:h}:h}},inputs:function(a,b){return function(d,c,e,f){return f?f[b]:a(d,c,e)}}};var kc=function(a,b,d){this.lexer=a;this.$filter=b;this.options=d;this.ast=new s(a,d);this.astCompiler=d.csp?new ud(this.ast,
b):new td(this.ast,b)};kc.prototype={constructor:kc,parse:function(a){return this.astCompiler.compile(a,this.options.expensiveChecks)}};var ng=Object.prototype.valueOf,sa=N("$sce"),la={HTML:"html",CSS:"css",URL:"url",RESOURCE_URL:"resourceUrl",JS:"js"},pg=N("$compile"),$=C.document.createElement("a"),yd=Y(C.location.href);zd.$inject=["$document"];Mc.$inject=["$provide"];var Gd=22,Fd=".",mc="0";Ad.$inject=["$locale"];Cd.$inject=["$locale"];var Ag={yyyy:ba("FullYear",4,0,!1,!0),yy:ba("FullYear",2,0,
!0,!0),y:ba("FullYear",1,0,!1,!0),MMMM:kb("Month"),MMM:kb("Month",!0),MM:ba("Month",2,1),M:ba("Month",1,1),LLLL:kb("Month",!1,!0),dd:ba("Date",2),d:ba("Date",1),HH:ba("Hours",2),H:ba("Hours",1),hh:ba("Hours",2,-12),h:ba("Hours",1,-12),mm:ba("Minutes",2),m:ba("Minutes",1),ss:ba("Seconds",2),s:ba("Seconds",1),sss:ba("Milliseconds",3),EEEE:kb("Day"),EEE:kb("Day",!0),a:function(a,b){return 12>a.getHours()?b.AMPMS[0]:b.AMPMS[1]},Z:function(a,b,d){a=-1*d;return a=(0<=a?"+":"")+(Kb(Math[0<a?"floor":"ceil"](a/
60),2)+Kb(Math.abs(a%60),2))},ww:Id(2),w:Id(1),G:nc,GG:nc,GGG:nc,GGGG:function(a,b){return 0>=a.getFullYear()?b.ERANAMES[0]:b.ERANAMES[1]}},zg=/((?:[^yMLdHhmsaZEwG']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|m+|s+|a|Z|G+|w+))(.*)/,yg=/^\-?\d+$/;Bd.$inject=["$locale"];var tg=ha(Q),ug=ha(ub);Dd.$inject=["$parse"];var oe=ha({restrict:"E",compile:function(a,b){if(!b.href&&!b.xlinkHref)return function(a,b){if("a"===b[0].nodeName.toLowerCase()){var e="[object SVGAnimatedString]"===ma.call(b.prop("href"))?
"xlink:href":"href";b.on("click",function(a){b.attr(e)||a.preventDefault()})}}}}),vb={};q(Eb,function(a,b){function d(a,d,e){a.$watch(e[c],function(a){e.$set(b,!!a)})}if("multiple"!=a){var c=Aa("ng-"+b),e=d;"checked"===a&&(e=function(a,b,e){e.ngModel!==e[c]&&d(a,b,e)});vb[c]=function(){return{restrict:"A",priority:100,link:e}}}});q(bd,function(a,b){vb[b]=function(){return{priority:100,link:function(a,c,e){if("ngPattern"===b&&"/"==e.ngPattern.charAt(0)&&(c=e.ngPattern.match(Cg))){e.$set("ngPattern",
new RegExp(c[1],c[2]));return}a.$watch(e[b],function(a){e.$set(b,a)})}}}});q(["src","srcset","href"],function(a){var b=Aa("ng-"+a);vb[b]=function(){return{priority:99,link:function(d,c,e){var f=a,g=a;"href"===a&&"[object SVGAnimatedString]"===ma.call(c.prop("href"))&&(g="xlinkHref",e.$attr[g]="xlink:href",f=null);e.$observe(b,function(b){b?(e.$set(g,b),Ea&&f&&c.prop(f,e[g])):"href"===a&&e.$set(g,null)})}}}});var Lb={$addControl:A,$$renameControl:function(a,b){a.$name=b},$removeControl:A,$setValidity:A,
$setDirty:A,$setPristine:A,$setSubmitted:A};Jd.$inject=["$element","$attrs","$scope","$animate","$interpolate"];var Sd=function(a){return["$timeout","$parse",function(b,d){function c(a){return""===a?d('this[""]').assign:d(a).assign||A}return{name:"form",restrict:a?"EAC":"E",require:["form","^^?form"],controller:Jd,compile:function(d,f){d.addClass(Ua).addClass(ob);var g=f.name?"name":a&&f.ngForm?"ngForm":!1;return{pre:function(a,d,e,f){var n=f[0];if(!("action"in e)){var p=function(b){a.$apply(function(){n.$commitViewValue();
n.$setSubmitted()});b.preventDefault()};d[0].addEventListener("submit",p,!1);d.on("$destroy",function(){b(function(){d[0].removeEventListener("submit",p,!1)},0,!1)})}(f[1]||n.$$parentForm).$addControl(n);var q=g?c(n.$name):A;g&&(q(a,n),e.$observe(g,function(b){n.$name!==b&&(q(a,void 0),n.$$parentForm.$$renameControl(n,b),q=c(n.$name),q(a,n))}));d.on("$destroy",function(){n.$$parentForm.$removeControl(n);q(a,void 0);S(n,Lb)})}}}}}]},pe=Sd(),Ce=Sd(!0),Bg=/^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/,
Kg=/^[a-z][a-z\d.+-]*:\/*(?:[^:@]+(?::[^@]+)?@)?(?:[^\s:/?#]+|\[[a-f\d:]+\])(?::\d+)?(?:\/[^?#]*)?(?:\?[^#]*)?(?:#.*)?$/i,Lg=/^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+\/0-9=?A-Z^_`a-z{|}~]+(\.[-!#$%&'*+\/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/,Mg=/^\s*(\-|\+)?(\d+|(\d*(\.\d*)))([eE][+-]?\d+)?\s*$/,Td=/^(\d{4,})-(\d{2})-(\d{2})$/,Ud=/^(\d{4,})-(\d\d)-(\d\d)T(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/,rc=/^(\d{4,})-W(\d\d)$/,Vd=/^(\d{4,})-(\d\d)$/,
Wd=/^(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/,Ld=U();q(["date","datetime-local","month","time","week"],function(a){Ld[a]=!0});var Xd={text:function(a,b,d,c,e,f){lb(a,b,d,c,e,f);pc(c)},date:mb("date",Td,Nb(Td,["yyyy","MM","dd"]),"yyyy-MM-dd"),"datetime-local":mb("datetimelocal",Ud,Nb(Ud,"yyyy MM dd HH mm ss sss".split(" ")),"yyyy-MM-ddTHH:mm:ss.sss"),time:mb("time",Wd,Nb(Wd,["HH","mm","ss","sss"]),"HH:mm:ss.sss"),week:mb("week",rc,function(a,b){if(da(a))return a;if(G(a)){rc.lastIndex=0;var d=rc.exec(a);
if(d){var c=+d[1],e=+d[2],f=d=0,g=0,h=0,k=Hd(c),e=7*(e-1);b&&(d=b.getHours(),f=b.getMinutes(),g=b.getSeconds(),h=b.getMilliseconds());return new Date(c,0,k.getDate()+e,d,f,g,h)}}return NaN},"yyyy-Www"),month:mb("month",Vd,Nb(Vd,["yyyy","MM"]),"yyyy-MM"),number:function(a,b,d,c,e,f){Md(a,b,d,c);lb(a,b,d,c,e,f);c.$$parserName="number";c.$parsers.push(function(a){if(c.$isEmpty(a))return null;if(Mg.test(a))return parseFloat(a)});c.$formatters.push(function(a){if(!c.$isEmpty(a)){if(!T(a))throw nb("numfmt",
a);a=a.toString()}return a});if(w(d.min)||d.ngMin){var g;c.$validators.min=function(a){return c.$isEmpty(a)||y(g)||a>=g};d.$observe("min",function(a){w(a)&&!T(a)&&(a=parseFloat(a));g=T(a)&&!isNaN(a)?a:void 0;c.$validate()})}if(w(d.max)||d.ngMax){var h;c.$validators.max=function(a){return c.$isEmpty(a)||y(h)||a<=h};d.$observe("max",function(a){w(a)&&!T(a)&&(a=parseFloat(a));h=T(a)&&!isNaN(a)?a:void 0;c.$validate()})}},url:function(a,b,d,c,e,f){lb(a,b,d,c,e,f);pc(c);c.$$parserName="url";c.$validators.url=
function(a,b){var d=a||b;return c.$isEmpty(d)||Kg.test(d)}},email:function(a,b,d,c,e,f){lb(a,b,d,c,e,f);pc(c);c.$$parserName="email";c.$validators.email=function(a,b){var d=a||b;return c.$isEmpty(d)||Lg.test(d)}},radio:function(a,b,d,c){y(d.name)&&b.attr("name",++pb);b.on("click",function(a){b[0].checked&&c.$setViewValue(d.value,a&&a.type)});c.$render=function(){b[0].checked=d.value==c.$viewValue};d.$observe("value",c.$render)},checkbox:function(a,b,d,c,e,f,g,h){var k=Nd(h,a,"ngTrueValue",d.ngTrueValue,
!0),l=Nd(h,a,"ngFalseValue",d.ngFalseValue,!1);b.on("click",function(a){c.$setViewValue(b[0].checked,a&&a.type)});c.$render=function(){b[0].checked=c.$viewValue};c.$isEmpty=function(a){return!1===a};c.$formatters.push(function(a){return na(a,k)});c.$parsers.push(function(a){return a?k:l})},hidden:A,button:A,submit:A,reset:A,file:A},Gc=["$browser","$sniffer","$filter","$parse",function(a,b,d,c){return{restrict:"E",require:["?ngModel"],link:{pre:function(e,f,g,h){h[0]&&(Xd[Q(g.type)]||Xd.text)(e,f,
g,h[0],b,a,d,c)}}}}],Ng=/^(true|false|\d+)$/,Ue=function(){return{restrict:"A",priority:100,compile:function(a,b){return Ng.test(b.ngValue)?function(a,b,e){e.$set("value",a.$eval(e.ngValue))}:function(a,b,e){a.$watch(e.ngValue,function(a){e.$set("value",a)})}}}},ue=["$compile",function(a){return{restrict:"AC",compile:function(b){a.$$addBindingClass(b);return function(b,c,e){a.$$addBindingInfo(c,e.ngBind);c=c[0];b.$watch(e.ngBind,function(a){c.textContent=y(a)?"":a})}}}}],we=["$interpolate","$compile",
function(a,b){return{compile:function(d){b.$$addBindingClass(d);return function(c,d,f){c=a(d.attr(f.$attr.ngBindTemplate));b.$$addBindingInfo(d,c.expressions);d=d[0];f.$observe("ngBindTemplate",function(a){d.textContent=y(a)?"":a})}}}}],ve=["$sce","$parse","$compile",function(a,b,d){return{restrict:"A",compile:function(c,e){var f=b(e.ngBindHtml),g=b(e.ngBindHtml,function(b){return a.valueOf(b)});d.$$addBindingClass(c);return function(b,c,e){d.$$addBindingInfo(c,e.ngBindHtml);b.$watch(g,function(){var d=
f(b);c.html(a.getTrustedHtml(d)||"")})}}}}],Te=ha({restrict:"A",require:"ngModel",link:function(a,b,d,c){c.$viewChangeListeners.push(function(){a.$eval(d.ngChange)})}}),xe=qc("",!0),ze=qc("Odd",0),ye=qc("Even",1),Ae=Ta({compile:function(a,b){b.$set("ngCloak",void 0);a.removeClass("ng-cloak")}}),Be=[function(){return{restrict:"A",scope:!0,controller:"@",priority:500}}],Lc={},Og={blur:!0,focus:!0};q("click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste".split(" "),
function(a){var b=Aa("ng-"+a);Lc[b]=["$parse","$rootScope",function(d,c){return{restrict:"A",compile:function(e,f){var g=d(f[b],null,!0);return function(b,d){d.on(a,function(d){var e=function(){g(b,{$event:d})};Og[a]&&c.$$phase?b.$evalAsync(e):b.$apply(e)})}}}}]});var Ee=["$animate","$compile",function(a,b){return{multiElement:!0,transclude:"element",priority:600,terminal:!0,restrict:"A",$$tlb:!0,link:function(d,c,e,f,g){var h,k,l;d.$watch(e.ngIf,function(d){d?k||g(function(d,f){k=f;d[d.length++]=
b.$$createComment("end ngIf",e.ngIf);h={clone:d};a.enter(d,c.parent(),c)}):(l&&(l.remove(),l=null),k&&(k.$destroy(),k=null),h&&(l=tb(h.clone),a.leave(l).then(function(){l=null}),h=null))})}}}],Fe=["$templateRequest","$anchorScroll","$animate",function(a,b,d){return{restrict:"ECA",priority:400,terminal:!0,transclude:"element",controller:ca.noop,compile:function(c,e){var f=e.ngInclude||e.src,g=e.onload||"",h=e.autoscroll;return function(c,e,m,n,p){var q=0,s,B,r,y=function(){B&&(B.remove(),B=null);s&&
(s.$destroy(),s=null);r&&(d.leave(r).then(function(){B=null}),B=r,r=null)};c.$watch(f,function(f){var m=function(){!w(h)||h&&!c.$eval(h)||b()},t=++q;f?(a(f,!0).then(function(a){if(!c.$$destroyed&&t===q){var b=c.$new();n.template=a;a=p(b,function(a){y();d.enter(a,null,e).then(m)});s=b;r=a;s.$emit("$includeContentLoaded",f);c.$eval(g)}},function(){c.$$destroyed||t!==q||(y(),c.$emit("$includeContentError",f))}),c.$emit("$includeContentRequested",f)):(y(),n.template=null)})}}}}],We=["$compile",function(a){return{restrict:"ECA",
priority:-400,require:"ngInclude",link:function(b,d,c,e){ma.call(d[0]).match(/SVG/)?(d.empty(),a(Oc(e.template,C.document).childNodes)(b,function(a){d.append(a)},{futureParentElement:d})):(d.html(e.template),a(d.contents())(b))}}}],Ge=Ta({priority:450,compile:function(){return{pre:function(a,b,d){a.$eval(d.ngInit)}}}}),Se=function(){return{restrict:"A",priority:100,require:"ngModel",link:function(a,b,d,c){var e=b.attr(d.$attr.ngList)||", ",f="false"!==d.ngTrim,g=f?W(e):e;c.$parsers.push(function(a){if(!y(a)){var b=
[];a&&q(a.split(g),function(a){a&&b.push(f?W(a):a)});return b}});c.$formatters.push(function(a){if(L(a))return a.join(e)});c.$isEmpty=function(a){return!a||!a.length}}}},ob="ng-valid",Od="ng-invalid",Ua="ng-pristine",Mb="ng-dirty",Qd="ng-pending",nb=N("ngModel"),Pg=["$scope","$exceptionHandler","$attrs","$element","$parse","$animate","$timeout","$rootScope","$q","$interpolate",function(a,b,d,c,e,f,g,h,k,l){this.$modelValue=this.$viewValue=Number.NaN;this.$$rawModelValue=void 0;this.$validators={};
this.$asyncValidators={};this.$parsers=[];this.$formatters=[];this.$viewChangeListeners=[];this.$untouched=!0;this.$touched=!1;this.$pristine=!0;this.$dirty=!1;this.$valid=!0;this.$invalid=!1;this.$error={};this.$$success={};this.$pending=void 0;this.$name=l(d.name||"",!1)(a);this.$$parentForm=Lb;var m=e(d.ngModel),n=m.assign,p=m,u=n,s=null,B,r=this;this.$$setOptions=function(a){if((r.$options=a)&&a.getterSetter){var b=e(d.ngModel+"()"),f=e(d.ngModel+"($$$p)");p=function(a){var c=m(a);z(c)&&(c=b(a));
return c};u=function(a,b){z(m(a))?f(a,{$$$p:b}):n(a,b)}}else if(!m.assign)throw nb("nonassign",d.ngModel,ya(c));};this.$render=A;this.$isEmpty=function(a){return y(a)||""===a||null===a||a!==a};this.$$updateEmptyClasses=function(a){r.$isEmpty(a)?(f.removeClass(c,"ng-not-empty"),f.addClass(c,"ng-empty")):(f.removeClass(c,"ng-empty"),f.addClass(c,"ng-not-empty"))};var J=0;Kd({ctrl:this,$element:c,set:function(a,b){a[b]=!0},unset:function(a,b){delete a[b]},$animate:f});this.$setPristine=function(){r.$dirty=
!1;r.$pristine=!0;f.removeClass(c,Mb);f.addClass(c,Ua)};this.$setDirty=function(){r.$dirty=!0;r.$pristine=!1;f.removeClass(c,Ua);f.addClass(c,Mb);r.$$parentForm.$setDirty()};this.$setUntouched=function(){r.$touched=!1;r.$untouched=!0;f.setClass(c,"ng-untouched","ng-touched")};this.$setTouched=function(){r.$touched=!0;r.$untouched=!1;f.setClass(c,"ng-touched","ng-untouched")};this.$rollbackViewValue=function(){g.cancel(s);r.$viewValue=r.$$lastCommittedViewValue;r.$render()};this.$validate=function(){if(!T(r.$modelValue)||
!isNaN(r.$modelValue)){var a=r.$$rawModelValue,b=r.$valid,c=r.$modelValue,d=r.$options&&r.$options.allowInvalid;r.$$runValidators(a,r.$$lastCommittedViewValue,function(e){d||b===e||(r.$modelValue=e?a:void 0,r.$modelValue!==c&&r.$$writeModelToScope())})}};this.$$runValidators=function(a,b,c){function d(){var c=!0;q(r.$validators,function(d,e){var g=d(a,b);c=c&&g;f(e,g)});return c?!0:(q(r.$asyncValidators,function(a,b){f(b,null)}),!1)}function e(){var c=[],d=!0;q(r.$asyncValidators,function(e,g){var h=
e(a,b);if(!h||!z(h.then))throw nb("nopromise",h);f(g,void 0);c.push(h.then(function(){f(g,!0)},function(){d=!1;f(g,!1)}))});c.length?k.all(c).then(function(){g(d)},A):g(!0)}function f(a,b){h===J&&r.$setValidity(a,b)}function g(a){h===J&&c(a)}J++;var h=J;(function(){var a=r.$$parserName||"parse";if(y(B))f(a,null);else return B||(q(r.$validators,function(a,b){f(b,null)}),q(r.$asyncValidators,function(a,b){f(b,null)})),f(a,B),B;return!0})()?d()?e():g(!1):g(!1)};this.$commitViewValue=function(){var a=
r.$viewValue;g.cancel(s);if(r.$$lastCommittedViewValue!==a||""===a&&r.$$hasNativeValidators)r.$$updateEmptyClasses(a),r.$$lastCommittedViewValue=a,r.$pristine&&this.$setDirty(),this.$$parseAndValidate()};this.$$parseAndValidate=function(){var b=r.$$lastCommittedViewValue;if(B=y(b)?void 0:!0)for(var c=0;c<r.$parsers.length;c++)if(b=r.$parsers[c](b),y(b)){B=!1;break}T(r.$modelValue)&&isNaN(r.$modelValue)&&(r.$modelValue=p(a));var d=r.$modelValue,e=r.$options&&r.$options.allowInvalid;r.$$rawModelValue=
b;e&&(r.$modelValue=b,r.$modelValue!==d&&r.$$writeModelToScope());r.$$runValidators(b,r.$$lastCommittedViewValue,function(a){e||(r.$modelValue=a?b:void 0,r.$modelValue!==d&&r.$$writeModelToScope())})};this.$$writeModelToScope=function(){u(a,r.$modelValue);q(r.$viewChangeListeners,function(a){try{a()}catch(c){b(c)}})};this.$setViewValue=function(a,b){r.$viewValue=a;r.$options&&!r.$options.updateOnDefault||r.$$debounceViewValueCommit(b)};this.$$debounceViewValueCommit=function(b){var c=0,d=r.$options;
d&&w(d.debounce)&&(d=d.debounce,T(d)?c=d:T(d[b])?c=d[b]:T(d["default"])&&(c=d["default"]));g.cancel(s);c?s=g(function(){r.$commitViewValue()},c):h.$$phase?r.$commitViewValue():a.$apply(function(){r.$commitViewValue()})};a.$watch(function(){var b=p(a);if(b!==r.$modelValue&&(r.$modelValue===r.$modelValue||b===b)){r.$modelValue=r.$$rawModelValue=b;B=void 0;for(var c=r.$formatters,d=c.length,e=b;d--;)e=c[d](e);r.$viewValue!==e&&(r.$$updateEmptyClasses(e),r.$viewValue=r.$$lastCommittedViewValue=e,r.$render(),
r.$$runValidators(b,e,A))}return b})}],Re=["$rootScope",function(a){return{restrict:"A",require:["ngModel","^?form","^?ngModelOptions"],controller:Pg,priority:1,compile:function(b){b.addClass(Ua).addClass("ng-untouched").addClass(ob);return{pre:function(a,b,e,f){var g=f[0];b=f[1]||g.$$parentForm;g.$$setOptions(f[2]&&f[2].$options);b.$addControl(g);e.$observe("name",function(a){g.$name!==a&&g.$$parentForm.$$renameControl(g,a)});a.$on("$destroy",function(){g.$$parentForm.$removeControl(g)})},post:function(b,
c,e,f){var g=f[0];if(g.$options&&g.$options.updateOn)c.on(g.$options.updateOn,function(a){g.$$debounceViewValueCommit(a&&a.type)});c.on("blur",function(){g.$touched||(a.$$phase?b.$evalAsync(g.$setTouched):b.$apply(g.$setTouched))})}}}}}],Qg=/(\s+|^)default(\s+|$)/,Ve=function(){return{restrict:"A",controller:["$scope","$attrs",function(a,b){var d=this;this.$options=pa(a.$eval(b.ngModelOptions));w(this.$options.updateOn)?(this.$options.updateOnDefault=!1,this.$options.updateOn=W(this.$options.updateOn.replace(Qg,
function(){d.$options.updateOnDefault=!0;return" "}))):this.$options.updateOnDefault=!0}]}},He=Ta({terminal:!0,priority:1E3}),Rg=N("ngOptions"),Sg=/^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+group\s+by\s+([\s\S]+?))?(?:\s+disable\s+when\s+([\s\S]+?))?\s+for\s+(?:([\$\w][\$\w]*)|(?:\(\s*([\$\w][\$\w]*)\s*,\s*([\$\w][\$\w]*)\s*\)))\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?$/,Pe=["$compile","$document","$parse",function(a,b,d){function c(a,b,c){function e(a,b,c,d,f){this.selectValue=a;this.viewValue=
b;this.label=c;this.group=d;this.disabled=f}function f(a){var b;if(!q&&ta(a))b=a;else{b=[];for(var c in a)a.hasOwnProperty(c)&&"$"!==c.charAt(0)&&b.push(c)}return b}var n=a.match(Sg);if(!n)throw Rg("iexp",a,ya(b));var p=n[5]||n[7],q=n[6];a=/ as /.test(n[0])&&n[1];var s=n[9];b=d(n[2]?n[1]:p);var w=a&&d(a)||b,r=s&&d(s),y=s?function(a,b){return r(c,b)}:function(a){return Ca(a)},v=function(a,b){return y(a,E(a,b))},A=d(n[2]||n[1]),t=d(n[3]||""),K=d(n[4]||""),z=d(n[8]),H={},E=q?function(a,b){H[q]=b;H[p]=
a;return H}:function(a){H[p]=a;return H};return{trackBy:s,getTrackByValue:v,getWatchables:d(z,function(a){var b=[];a=a||[];for(var d=f(a),e=d.length,g=0;g<e;g++){var h=a===d?g:d[g],l=a[h],h=E(l,h),l=y(l,h);b.push(l);if(n[2]||n[1])l=A(c,h),b.push(l);n[4]&&(h=K(c,h),b.push(h))}return b}),getOptions:function(){for(var a=[],b={},d=z(c)||[],g=f(d),h=g.length,n=0;n<h;n++){var p=d===g?n:g[n],q=E(d[p],p),r=w(c,q),p=y(r,q),u=A(c,q),H=t(c,q),q=K(c,q),r=new e(p,r,u,H,q);a.push(r);b[p]=r}return{items:a,selectValueMap:b,
getOptionFromViewValue:function(a){return b[v(a)]},getViewValueFromOption:function(a){return s?ca.copy(a.viewValue):a.viewValue}}}}}var e=C.document.createElement("option"),f=C.document.createElement("optgroup");return{restrict:"A",terminal:!0,require:["select","ngModel"],link:{pre:function(a,b,c,d){d[0].registerOption=A},post:function(d,h,k,l){function m(a,b){a.element=b;b.disabled=a.disabled;a.label!==b.label&&(b.label=a.label,b.textContent=a.label);a.value!==b.value&&(b.value=a.selectValue)}function n(){var a=
t&&p.readValue();if(t)for(var b=t.items.length-1;0<=b;b--){var c=t.items[b];w(c.group)?Db(c.element.parentNode):Db(c.element)}t=K.getOptions();var d={};v&&h.prepend(B);t.items.forEach(function(a){var b;if(w(a.group)){b=d[a.group];b||(b=f.cloneNode(!1),C.appendChild(b),b.label=null===a.group?"null":a.group,d[a.group]=b);var c=e.cloneNode(!1)}else b=C,c=e.cloneNode(!1);b.appendChild(c);m(a,c)});h[0].appendChild(C);s.$render();s.$isEmpty(a)||(b=p.readValue(),(K.trackBy||y?na(a,b):a===b)||(s.$setViewValue(b),
s.$render()))}var p=l[0],s=l[1],y=k.multiple,B;l=0;for(var r=h.children(),A=r.length;l<A;l++)if(""===r[l].value){B=r.eq(l);break}var v=!!B,z=F(e.cloneNode(!1));z.val("?");var t,K=c(k.ngOptions,h,d),C=b[0].createDocumentFragment();y?(s.$isEmpty=function(a){return!a||0===a.length},p.writeValue=function(a){t.items.forEach(function(a){a.element.selected=!1});a&&a.forEach(function(a){if(a=t.getOptionFromViewValue(a))a.element.selected=!0})},p.readValue=function(){var a=h.val()||[],b=[];q(a,function(a){(a=
t.selectValueMap[a])&&!a.disabled&&b.push(t.getViewValueFromOption(a))});return b},K.trackBy&&d.$watchCollection(function(){if(L(s.$viewValue))return s.$viewValue.map(function(a){return K.getTrackByValue(a)})},function(){s.$render()})):(p.writeValue=function(a){var b=t.getOptionFromViewValue(a);b?(h[0].value!==b.selectValue&&(z.remove(),v||B.remove(),h[0].value=b.selectValue,b.element.selected=!0),b.element.setAttribute("selected","selected")):null===a||v?(z.remove(),v||h.prepend(B),h.val(""),B.prop("selected",
!0),B.attr("selected",!0)):(v||B.remove(),h.prepend(z),h.val("?"),z.prop("selected",!0),z.attr("selected",!0))},p.readValue=function(){var a=t.selectValueMap[h.val()];return a&&!a.disabled?(v||B.remove(),z.remove(),t.getViewValueFromOption(a)):null},K.trackBy&&d.$watch(function(){return K.getTrackByValue(s.$viewValue)},function(){s.$render()}));v?(B.remove(),a(B)(d),B.removeClass("ng-scope")):B=F(e.cloneNode(!1));h.empty();n();d.$watchCollection(K.getWatchables,n)}}}}],Ie=["$locale","$interpolate",
"$log",function(a,b,d){var c=/{}/g,e=/^when(Minus)?(.+)$/;return{link:function(f,g,h){function k(a){g.text(a||"")}var l=h.count,m=h.$attr.when&&g.attr(h.$attr.when),n=h.offset||0,p=f.$eval(m)||{},s={},w=b.startSymbol(),B=b.endSymbol(),r=w+l+"-"+n+B,z=ca.noop,v;q(h,function(a,b){var c=e.exec(b);c&&(c=(c[1]?"-":"")+Q(c[2]),p[c]=g.attr(h.$attr[b]))});q(p,function(a,d){s[d]=b(a.replace(c,r))});f.$watch(l,function(b){var c=parseFloat(b),e=isNaN(c);e||c in p||(c=a.pluralCat(c-n));c===v||e&&T(v)&&isNaN(v)||
(z(),e=s[c],y(e)?(null!=b&&d.debug("ngPluralize: no rule defined for '"+c+"' in "+m),z=A,k()):z=f.$watch(e,k),v=c)})}}}],Je=["$parse","$animate","$compile",function(a,b,d){var c=N("ngRepeat"),e=function(a,b,c,d,e,m,n){a[c]=d;e&&(a[e]=m);a.$index=b;a.$first=0===b;a.$last=b===n-1;a.$middle=!(a.$first||a.$last);a.$odd=!(a.$even=0===(b&1))};return{restrict:"A",multiElement:!0,transclude:"element",priority:1E3,terminal:!0,$$tlb:!0,compile:function(f,g){var h=g.ngRepeat,k=d.$$createComment("end ngRepeat",
h),l=h.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+track\s+by\s+([\s\S]+?))?\s*$/);if(!l)throw c("iexp",h);var m=l[1],n=l[2],p=l[3],s=l[4],l=m.match(/^(?:(\s*[\$\w]+)|\(\s*([\$\w]+)\s*,\s*([\$\w]+)\s*\))$/);if(!l)throw c("iidexp",m);var w=l[3]||l[1],y=l[2];if(p&&(!/^[$a-zA-Z_][$a-zA-Z0-9_]*$/.test(p)||/^(null|undefined|this|\$index|\$first|\$middle|\$last|\$even|\$odd|\$parent|\$root|\$id)$/.test(p)))throw c("badident",p);var r,z,v,A,t={$id:Ca};s?r=a(s):(v=function(a,b){return Ca(b)},
A=function(a){return a});return function(a,d,f,g,l){r&&(z=function(b,c,d){y&&(t[y]=b);t[w]=c;t.$index=d;return r(a,t)});var m=U();a.$watchCollection(n,function(f){var g,n,r=d[0],s,u=U(),t,C,F,E,G,D,H;p&&(a[p]=f);if(ta(f))G=f,n=z||v;else for(H in n=z||A,G=[],f)ua.call(f,H)&&"$"!==H.charAt(0)&&G.push(H);t=G.length;H=Array(t);for(g=0;g<t;g++)if(C=f===G?g:G[g],F=f[C],E=n(C,F,g),m[E])D=m[E],delete m[E],u[E]=D,H[g]=D;else{if(u[E])throw q(H,function(a){a&&a.scope&&(m[a.id]=a)}),c("dupes",h,E,F);H[g]={id:E,
scope:void 0,clone:void 0};u[E]=!0}for(s in m){D=m[s];E=tb(D.clone);b.leave(E);if(E[0].parentNode)for(g=0,n=E.length;g<n;g++)E[g].$$NG_REMOVED=!0;D.scope.$destroy()}for(g=0;g<t;g++)if(C=f===G?g:G[g],F=f[C],D=H[g],D.scope){s=r;do s=s.nextSibling;while(s&&s.$$NG_REMOVED);D.clone[0]!=s&&b.move(tb(D.clone),null,r);r=D.clone[D.clone.length-1];e(D.scope,g,w,F,y,C,t)}else l(function(a,c){D.scope=c;var d=k.cloneNode(!1);a[a.length++]=d;b.enter(a,null,r);r=d;D.clone=a;u[D.id]=D;e(D.scope,g,w,F,y,C,t)});m=
u})}}}}],Ke=["$animate",function(a){return{restrict:"A",multiElement:!0,link:function(b,d,c){b.$watch(c.ngShow,function(b){a[b?"removeClass":"addClass"](d,"ng-hide",{tempClasses:"ng-hide-animate"})})}}}],De=["$animate",function(a){return{restrict:"A",multiElement:!0,link:function(b,d,c){b.$watch(c.ngHide,function(b){a[b?"addClass":"removeClass"](d,"ng-hide",{tempClasses:"ng-hide-animate"})})}}}],Le=Ta(function(a,b,d){a.$watch(d.ngStyle,function(a,d){d&&a!==d&&q(d,function(a,c){b.css(c,"")});a&&b.css(a)},
!0)}),Me=["$animate","$compile",function(a,b){return{require:"ngSwitch",controller:["$scope",function(){this.cases={}}],link:function(d,c,e,f){var g=[],h=[],k=[],l=[],m=function(a,b){return function(){a.splice(b,1)}};d.$watch(e.ngSwitch||e.on,function(c){var d,e;d=0;for(e=k.length;d<e;++d)a.cancel(k[d]);d=k.length=0;for(e=l.length;d<e;++d){var s=tb(h[d].clone);l[d].$destroy();(k[d]=a.leave(s)).then(m(k,d))}h.length=0;l.length=0;(g=f.cases["!"+c]||f.cases["?"])&&q(g,function(c){c.transclude(function(d,
e){l.push(e);var f=c.element;d[d.length++]=b.$$createComment("end ngSwitchWhen");h.push({clone:d});a.enter(d,f.parent(),f)})})})}}}],Ne=Ta({transclude:"element",priority:1200,require:"^ngSwitch",multiElement:!0,link:function(a,b,d,c,e){c.cases["!"+d.ngSwitchWhen]=c.cases["!"+d.ngSwitchWhen]||[];c.cases["!"+d.ngSwitchWhen].push({transclude:e,element:b})}}),Oe=Ta({transclude:"element",priority:1200,require:"^ngSwitch",multiElement:!0,link:function(a,b,d,c,e){c.cases["?"]=c.cases["?"]||[];c.cases["?"].push({transclude:e,
element:b})}}),Tg=N("ngTransclude"),Qe=["$compile",function(a){return{restrict:"EAC",terminal:!0,compile:function(b){var d=a(b.contents());b.empty();return function(a,b,f,g,h){function k(){d(a,function(a){b.append(a)})}if(!h)throw Tg("orphan",ya(b));f.ngTransclude===f.$attr.ngTransclude&&(f.ngTransclude="");f=f.ngTransclude||f.ngTranscludeSlot;h(function(a,c){a.length?b.append(a):(k(),c.$destroy())},null,f);f&&!h.isSlotFilled(f)&&k()}}}}],qe=["$templateCache",function(a){return{restrict:"E",terminal:!0,
compile:function(b,d){"text/ng-template"==d.type&&a.put(d.id,b[0].text)}}}],Ug={$setViewValue:A,$render:A},Vg=["$element","$scope",function(a,b){var d=this,c=new Ra;d.ngModelCtrl=Ug;d.unknownOption=F(C.document.createElement("option"));d.renderUnknownOption=function(b){b="? "+Ca(b)+" ?";d.unknownOption.val(b);a.prepend(d.unknownOption);a.val(b)};b.$on("$destroy",function(){d.renderUnknownOption=A});d.removeUnknownOption=function(){d.unknownOption.parent()&&d.unknownOption.remove()};d.readValue=function(){d.removeUnknownOption();
return a.val()};d.writeValue=function(b){d.hasOption(b)?(d.removeUnknownOption(),a.val(b),""===b&&d.emptyOption.prop("selected",!0)):null==b&&d.emptyOption?(d.removeUnknownOption(),a.val("")):d.renderUnknownOption(b)};d.addOption=function(a,b){if(8!==b[0].nodeType){Qa(a,'"option value"');""===a&&(d.emptyOption=b);var g=c.get(a)||0;c.put(a,g+1);d.ngModelCtrl.$render();b[0].hasAttribute("selected")&&(b[0].selected=!0)}};d.removeOption=function(a){var b=c.get(a);b&&(1===b?(c.remove(a),""===a&&(d.emptyOption=
void 0)):c.put(a,b-1))};d.hasOption=function(a){return!!c.get(a)};d.registerOption=function(a,b,c,h,k){if(h){var l;c.$observe("value",function(a){w(l)&&d.removeOption(l);l=a;d.addOption(a,b)})}else k?a.$watch(k,function(a,e){c.$set("value",a);e!==a&&d.removeOption(e);d.addOption(a,b)}):d.addOption(c.value,b);b.on("$destroy",function(){d.removeOption(c.value);d.ngModelCtrl.$render()})}}],re=function(){return{restrict:"E",require:["select","?ngModel"],controller:Vg,priority:1,link:{pre:function(a,b,
d,c){var e=c[1];if(e){var f=c[0];f.ngModelCtrl=e;b.on("change",function(){a.$apply(function(){e.$setViewValue(f.readValue())})});if(d.multiple){f.readValue=function(){var a=[];q(b.find("option"),function(b){b.selected&&a.push(b.value)});return a};f.writeValue=function(a){var c=new Ra(a);q(b.find("option"),function(a){a.selected=w(c.get(a.value))})};var g,h=NaN;a.$watch(function(){h!==e.$viewValue||na(g,e.$viewValue)||(g=ia(e.$viewValue),e.$render());h=e.$viewValue});e.$isEmpty=function(a){return!a||
0===a.length}}}},post:function(a,b,d,c){var e=c[1];if(e){var f=c[0];e.$render=function(){f.writeValue(e.$viewValue)}}}}}},te=["$interpolate",function(a){return{restrict:"E",priority:100,compile:function(b,d){if(w(d.value))var c=a(d.value,!0);else{var e=a(b.text(),!0);e||d.$set("value",b.text())}return function(a,b,d){var k=b.parent();(k=k.data("$selectController")||k.parent().data("$selectController"))&&k.registerOption(a,b,d,c,e)}}}}],se=ha({restrict:"E",terminal:!1}),Ic=function(){return{restrict:"A",
require:"?ngModel",link:function(a,b,d,c){c&&(d.required=!0,c.$validators.required=function(a,b){return!d.required||!c.$isEmpty(b)},d.$observe("required",function(){c.$validate()}))}}},Hc=function(){return{restrict:"A",require:"?ngModel",link:function(a,b,d,c){if(c){var e,f=d.ngPattern||d.pattern;d.$observe("pattern",function(a){G(a)&&0<a.length&&(a=new RegExp("^"+a+"$"));if(a&&!a.test)throw N("ngPattern")("noregexp",f,a,ya(b));e=a||void 0;c.$validate()});c.$validators.pattern=function(a,b){return c.$isEmpty(b)||
y(e)||e.test(b)}}}}},Kc=function(){return{restrict:"A",require:"?ngModel",link:function(a,b,d,c){if(c){var e=-1;d.$observe("maxlength",function(a){a=Z(a);e=isNaN(a)?-1:a;c.$validate()});c.$validators.maxlength=function(a,b){return 0>e||c.$isEmpty(b)||b.length<=e}}}}},Jc=function(){return{restrict:"A",require:"?ngModel",link:function(a,b,d,c){if(c){var e=0;d.$observe("minlength",function(a){e=Z(a)||0;c.$validate()});c.$validators.minlength=function(a,b){return c.$isEmpty(b)||b.length>=e}}}}};C.angular.bootstrap?
C.console&&console.log("WARNING: Tried to load angular more than once."):(je(),le(ca),ca.module("ngLocale",[],["$provide",function(a){function b(a){a+="";var b=a.indexOf(".");return-1==b?0:a.length-b-1}a.value("$locale",{DATETIME_FORMATS:{AMPMS:["AM","PM"],DAY:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),ERANAMES:["Before Christ","Anno Domini"],ERAS:["BC","AD"],FIRSTDAYOFWEEK:6,MONTH:"January February March April May June July August September October November December".split(" "),
SHORTDAY:"Sun Mon Tue Wed Thu Fri Sat".split(" "),SHORTMONTH:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "),STANDALONEMONTH:"January February March April May June July August September October November December".split(" "),WEEKENDRANGE:[5,6],fullDate:"EEEE, MMMM d, y",longDate:"MMMM d, y",medium:"MMM d, y h:mm:ss a",mediumDate:"MMM d, y",mediumTime:"h:mm:ss a","short":"M/d/yy h:mm a",shortDate:"M/d/yy",shortTime:"h:mm a"},NUMBER_FORMATS:{CURRENCY_SYM:"$",DECIMAL_SEP:".",GROUP_SEP:",",
PATTERNS:[{gSize:3,lgSize:3,maxFrac:3,minFrac:0,minInt:1,negPre:"-",negSuf:"",posPre:"",posSuf:""},{gSize:3,lgSize:3,maxFrac:2,minFrac:2,minInt:1,negPre:"-\u00a4",negSuf:"",posPre:"\u00a4",posSuf:""}]},id:"en-us",localeID:"en_US",pluralCat:function(a,c){var e=a|0,f=c;void 0===f&&(f=Math.min(b(a),3));Math.pow(10,f);return 1==e&&0==f?"one":"other"}})}]),F(C.document).ready(function(){fe(C.document,Bc)}))})(window);!window.angular.$$csp().noInlineStyle&&window.angular.element(document.head).prepend('<style type="text/css">@charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}</style>');
//# sourceMappingURL=angular.min.js.map

/*
 AngularJS v1.5.8
 (c) 2010-2016 Google, Inc. http://angularjs.org
 License: MIT
*/
(function(P,d){'use strict';function G(t,g){g=g||{};d.forEach(g,function(d,q){delete g[q]});for(var q in t)!t.hasOwnProperty(q)||"$"===q.charAt(0)&&"$"===q.charAt(1)||(g[q]=t[q]);return g}var z=d.$$minErr("$resource"),M=/^(\.[a-zA-Z_$@][0-9a-zA-Z_$@]*)+$/;d.module("ngResource",["ng"]).provider("$resource",function(){var t=/^https?:\/\/[^\/]*/,g=this;this.defaults={stripTrailingSlashes:!0,cancellable:!1,actions:{get:{method:"GET"},save:{method:"POST"},query:{method:"GET",isArray:!0},remove:{method:"DELETE"},
"delete":{method:"DELETE"}}};this.$get=["$http","$log","$q","$timeout",function(q,L,H,I){function A(d,h){return encodeURIComponent(d).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,h?"%20":"+")}function B(d,h){this.template=d;this.defaults=v({},g.defaults,h);this.urlParams={}}function J(e,h,n,k){function b(a,c){var b={};c=v({},h,c);u(c,function(c,h){x(c)&&(c=c(a));var f;if(c&&c.charAt&&"@"==c.charAt(0)){f=a;var l=c.substr(1);if(null==l||""===l||"hasOwnProperty"===
l||!M.test("."+l))throw z("badmember",l);for(var l=l.split("."),m=0,k=l.length;m<k&&d.isDefined(f);m++){var r=l[m];f=null!==f?f[r]:void 0}}else f=c;b[h]=f});return b}function N(a){return a.resource}function m(a){G(a||{},this)}var t=new B(e,k);n=v({},g.defaults.actions,n);m.prototype.toJSON=function(){var a=v({},this);delete a.$promise;delete a.$resolved;return a};u(n,function(a,c){var h=/^(POST|PUT|PATCH)$/i.test(a.method),e=a.timeout,E=d.isDefined(a.cancellable)?a.cancellable:k&&d.isDefined(k.cancellable)?
k.cancellable:g.defaults.cancellable;e&&!d.isNumber(e)&&(L.debug("ngResource:\n  Only numeric values are allowed as `timeout`.\n  Promises are not supported in $resource, because the same value would be used for multiple requests. If you are looking for a way to cancel requests, you should use the `cancellable` option."),delete a.timeout,e=null);m[c]=function(f,l,k,g){var r={},n,w,C;switch(arguments.length){case 4:C=g,w=k;case 3:case 2:if(x(l)){if(x(f)){w=f;C=l;break}w=l;C=k}else{r=f;n=l;w=k;break}case 1:x(f)?
w=f:h?n=f:r=f;break;case 0:break;default:throw z("badargs",arguments.length);}var D=this instanceof m,p=D?n:a.isArray?[]:new m(n),s={},A=a.interceptor&&a.interceptor.response||N,B=a.interceptor&&a.interceptor.responseError||void 0,y,F;u(a,function(a,c){switch(c){default:s[c]=O(a);case "params":case "isArray":case "interceptor":case "cancellable":}});!D&&E&&(y=H.defer(),s.timeout=y.promise,e&&(F=I(y.resolve,e)));h&&(s.data=n);t.setUrlParams(s,v({},b(n,a.params||{}),r),a.url);r=q(s).then(function(f){var b=
f.data;if(b){if(d.isArray(b)!==!!a.isArray)throw z("badcfg",c,a.isArray?"array":"object",d.isArray(b)?"array":"object",s.method,s.url);if(a.isArray)p.length=0,u(b,function(a){"object"===typeof a?p.push(new m(a)):p.push(a)});else{var l=p.$promise;G(b,p);p.$promise=l}}f.resource=p;return f},function(a){(C||K)(a);return H.reject(a)});r["finally"](function(){p.$resolved=!0;!D&&E&&(p.$cancelRequest=d.noop,I.cancel(F),y=F=s.timeout=null)});r=r.then(function(a){var c=A(a);(w||K)(c,a.headers);return c},B);
return D?r:(p.$promise=r,p.$resolved=!1,E&&(p.$cancelRequest=y.resolve),p)};m.prototype["$"+c]=function(a,b,d){x(a)&&(d=b,b=a,a={});a=m[c].call(this,a,this,b,d);return a.$promise||a}});m.bind=function(a){return J(e,v({},h,a),n)};return m}var K=d.noop,u=d.forEach,v=d.extend,O=d.copy,x=d.isFunction;B.prototype={setUrlParams:function(e,h,n){var k=this,b=n||k.template,g,m,q="",a=k.urlParams={};u(b.split(/\W/),function(c){if("hasOwnProperty"===c)throw z("badname");!/^\d+$/.test(c)&&c&&(new RegExp("(^|[^\\\\]):"+
c+"(\\W|$)")).test(b)&&(a[c]={isQueryParamValue:(new RegExp("\\?.*=:"+c+"(?:\\W|$)")).test(b)})});b=b.replace(/\\:/g,":");b=b.replace(t,function(a){q=a;return""});h=h||{};u(k.urlParams,function(a,e){g=h.hasOwnProperty(e)?h[e]:k.defaults[e];d.isDefined(g)&&null!==g?(m=a.isQueryParamValue?A(g,!0):A(g,!0).replace(/%26/gi,"&").replace(/%3D/gi,"=").replace(/%2B/gi,"+"),b=b.replace(new RegExp(":"+e+"(\\W|$)","g"),function(a,c){return m+c})):b=b.replace(new RegExp("(/?):"+e+"(\\W|$)","g"),function(a,c,b){return"/"==
b.charAt(0)?b:c+b})});k.defaults.stripTrailingSlashes&&(b=b.replace(/\/+$/,"")||"/");b=b.replace(/\/\.(?=\w+($|\?))/,".");e.url=q+b.replace(/\/\\\./,"/.");u(h,function(a,b){k.urlParams[b]||(e.params=e.params||{},e.params[b]=a)})}};return J}]})})(window,window.angular);
//# sourceMappingURL=angular-resource.min.js.map

/*
 AngularJS v1.5.8
 (c) 2010-2016 Google, Inc. http://angularjs.org
 License: MIT
*/
(function(s,g){'use strict';function H(g){var l=[];t(l,A).chars(g);return l.join("")}var B=g.$$minErr("$sanitize"),C,l,D,E,q,A,F,t;g.module("ngSanitize",[]).provider("$sanitize",function(){function k(a,e){var b={},c=a.split(","),h;for(h=0;h<c.length;h++)b[e?q(c[h]):c[h]]=!0;return b}function I(a){for(var e={},b=0,c=a.length;b<c;b++){var h=a[b];e[h.name]=h.value}return e}function G(a){return a.replace(/&/g,"&amp;").replace(J,function(a){var b=a.charCodeAt(0);a=a.charCodeAt(1);return"&#"+(1024*(b-55296)+
(a-56320)+65536)+";"}).replace(K,function(a){return"&#"+a.charCodeAt(0)+";"}).replace(/</g,"&lt;").replace(/>/g,"&gt;")}function u(a){if(a.nodeType===s.Node.ELEMENT_NODE)for(var e=a.attributes,b=0,c=e.length;b<c;b++){var h=e[b],d=h.name.toLowerCase();if("xmlns:ns1"===d||0===d.lastIndexOf("ns1:",0))a.removeAttributeNode(h),b--,c--}(e=a.firstChild)&&u(e);(e=a.nextSibling)&&u(e)}var v=!1;this.$get=["$$sanitizeUri",function(a){v&&l(w,x);return function(e){var b=[];F(e,t(b,function(b,h){return!/^unsafe:/.test(a(b,
h))}));return b.join("")}}];this.enableSvg=function(a){return E(a)?(v=a,this):v};C=g.bind;l=g.extend;D=g.forEach;E=g.isDefined;q=g.lowercase;A=g.noop;F=function(a,e){null===a||void 0===a?a="":"string"!==typeof a&&(a=""+a);f.innerHTML=a;var b=5;do{if(0===b)throw B("uinput");b--;s.document.documentMode&&u(f);a=f.innerHTML;f.innerHTML=a}while(a!==f.innerHTML);for(b=f.firstChild;b;){switch(b.nodeType){case 1:e.start(b.nodeName.toLowerCase(),I(b.attributes));break;case 3:e.chars(b.textContent)}var c;if(!(c=
b.firstChild)&&(1==b.nodeType&&e.end(b.nodeName.toLowerCase()),c=b.nextSibling,!c))for(;null==c;){b=b.parentNode;if(b===f)break;c=b.nextSibling;1==b.nodeType&&e.end(b.nodeName.toLowerCase())}b=c}for(;b=f.firstChild;)f.removeChild(b)};t=function(a,e){var b=!1,c=C(a,a.push);return{start:function(a,d){a=q(a);!b&&z[a]&&(b=a);b||!0!==w[a]||(c("<"),c(a),D(d,function(b,d){var f=q(d),g="img"===a&&"src"===f||"background"===f;!0!==m[f]||!0===n[f]&&!e(b,g)||(c(" "),c(d),c('="'),c(G(b)),c('"'))}),c(">"))},end:function(a){a=
q(a);b||!0!==w[a]||!0===y[a]||(c("</"),c(a),c(">"));a==b&&(b=!1)},chars:function(a){b||c(G(a))}}};var J=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,K=/([^\#-~ |!])/g,y=k("area,br,col,hr,img,wbr"),d=k("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"),r=k("rp,rt"),p=l({},r,d),d=l({},d,k("address,article,aside,blockquote,caption,center,del,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,map,menu,nav,ol,pre,section,table,ul")),r=l({},r,k("a,abbr,acronym,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,q,ruby,rp,rt,s,samp,small,span,strike,strong,sub,sup,time,tt,u,var")),
x=k("circle,defs,desc,ellipse,font-face,font-face-name,font-face-src,g,glyph,hkern,image,linearGradient,line,marker,metadata,missing-glyph,mpath,path,polygon,polyline,radialGradient,rect,stop,svg,switch,text,title,tspan"),z=k("script,style"),w=l({},y,d,r,p),n=k("background,cite,href,longdesc,src,xlink:href"),p=k("abbr,align,alt,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,coords,dir,face,headers,height,hreflang,hspace,ismap,lang,language,nohref,nowrap,rel,rev,rows,rowspan,rules,scope,scrolling,shape,size,span,start,summary,tabindex,target,title,type,valign,value,vspace,width"),
r=k("accent-height,accumulate,additive,alphabetic,arabic-form,ascent,baseProfile,bbox,begin,by,calcMode,cap-height,class,color,color-rendering,content,cx,cy,d,dx,dy,descent,display,dur,end,fill,fill-rule,font-family,font-size,font-stretch,font-style,font-variant,font-weight,from,fx,fy,g1,g2,glyph-name,gradientUnits,hanging,height,horiz-adv-x,horiz-origin-x,ideographic,k,keyPoints,keySplines,keyTimes,lang,marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mathematical,max,min,offset,opacity,orient,origin,overline-position,overline-thickness,panose-1,path,pathLength,points,preserveAspectRatio,r,refX,refY,repeatCount,repeatDur,requiredExtensions,requiredFeatures,restart,rotate,rx,ry,slope,stemh,stemv,stop-color,stop-opacity,strikethrough-position,strikethrough-thickness,stroke,stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,stroke-width,systemLanguage,target,text-anchor,to,transform,type,u1,u2,underline-position,underline-thickness,unicode,unicode-range,units-per-em,values,version,viewBox,visibility,width,widths,x,x-height,x1,x2,xlink:actuate,xlink:arcrole,xlink:role,xlink:show,xlink:title,xlink:type,xml:base,xml:lang,xml:space,xmlns,xmlns:xlink,y,y1,y2,zoomAndPan",
!0),m=l({},n,r,p),f;(function(a){if(a.document&&a.document.implementation)a=a.document.implementation.createHTMLDocument("inert");else throw B("noinert");var e=(a.documentElement||a.getDocumentElement()).getElementsByTagName("body");1===e.length?f=e[0]:(e=a.createElement("html"),f=a.createElement("body"),e.appendChild(f),a.appendChild(e))})(s)});g.module("ngSanitize").filter("linky",["$sanitize",function(k){var l=/((ftp|https?):\/\/|(www\.)|(mailto:)?[A-Za-z0-9._%+-]+@)\S*[^\s.;,(){}<>"\u201d\u2019]/i,
q=/^mailto:/i,u=g.$$minErr("linky"),v=g.isDefined,s=g.isFunction,t=g.isObject,y=g.isString;return function(d,g,p){function x(a){a&&m.push(H(a))}function z(a,b){var c,d=w(a);m.push("<a ");for(c in d)m.push(c+'="'+d[c]+'" ');!v(g)||"target"in d||m.push('target="',g,'" ');m.push('href="',a.replace(/"/g,"&quot;"),'">');x(b);m.push("</a>")}if(null==d||""===d)return d;if(!y(d))throw u("notstring",d);for(var w=s(p)?p:t(p)?function(){return p}:function(){return{}},n=d,m=[],f,a;d=n.match(l);)f=d[0],d[2]||
d[4]||(f=(d[3]?"http://":"mailto:")+f),a=d.index,x(n.substr(0,a)),z(f,d[0].replace(q,"")),n=n.substring(a+d[0].length);x(n);return k(m.join(""))}}])})(window,window.angular);
//# sourceMappingURL=angular-sanitize.min.js.map

/*
 AngularJS v1.5.8
 (c) 2010-2016 Google, Inc. http://angularjs.org
 License: MIT
*/
(function(t,p){'use strict';var b="BUTTON A INPUT TEXTAREA SELECT DETAILS SUMMARY".split(" "),l=function(a,c){if(-1!==c.indexOf(a[0].nodeName))return!0};p.module("ngAria",["ng"]).provider("$aria",function(){function a(a,b,m,h){return function(d,f,e){var q=e.$normalize(b);!c[q]||l(f,m)||e[q]||d.$watch(e[a],function(a){a=h?!a:!!a;f.attr(b,a)})}}var c={ariaHidden:!0,ariaChecked:!0,ariaReadonly:!0,ariaDisabled:!0,ariaRequired:!0,ariaInvalid:!0,ariaValue:!0,tabindex:!0,bindKeypress:!0,bindRoleForClick:!0};
this.config=function(a){c=p.extend(c,a)};this.$get=function(){return{config:function(a){return c[a]},$$watchExpr:a}}}).directive("ngShow",["$aria",function(a){return a.$$watchExpr("ngShow","aria-hidden",[],!0)}]).directive("ngHide",["$aria",function(a){return a.$$watchExpr("ngHide","aria-hidden",[],!1)}]).directive("ngValue",["$aria",function(a){return a.$$watchExpr("ngValue","aria-checked",b,!1)}]).directive("ngChecked",["$aria",function(a){return a.$$watchExpr("ngChecked","aria-checked",b,!1)}]).directive("ngReadonly",
["$aria",function(a){return a.$$watchExpr("ngReadonly","aria-readonly",b,!1)}]).directive("ngRequired",["$aria",function(a){return a.$$watchExpr("ngRequired","aria-required",b,!1)}]).directive("ngModel",["$aria",function(a){function c(c,h,d,f){return a.config(h)&&!d.attr(c)&&(f||!l(d,b))}function g(a,c){return!c.attr("role")&&c.attr("type")===a&&"INPUT"!==c[0].nodeName}function k(a,c){var d=a.type,f=a.role;return"checkbox"===(d||f)||"menuitemcheckbox"===f?"checkbox":"radio"===(d||f)||"menuitemradio"===
f?"radio":"range"===d||"progressbar"===f||"slider"===f?"range":""}return{restrict:"A",require:"ngModel",priority:200,compile:function(b,h){var d=k(h,b);return{pre:function(a,e,c,b){"checkbox"===d&&(b.$isEmpty=function(a){return!1===a})},post:function(f,e,b,n){function h(){return n.$modelValue}function k(a){e.attr("aria-checked",b.value==n.$viewValue)}function l(){e.attr("aria-checked",!n.$isEmpty(n.$viewValue))}var m=c("tabindex","tabindex",e,!1);switch(d){case "radio":case "checkbox":g(d,e)&&e.attr("role",
d);c("aria-checked","ariaChecked",e,!1)&&f.$watch(h,"radio"===d?k:l);m&&e.attr("tabindex",0);break;case "range":g(d,e)&&e.attr("role","slider");if(a.config("ariaValue")){var p=!e.attr("aria-valuemin")&&(b.hasOwnProperty("min")||b.hasOwnProperty("ngMin")),r=!e.attr("aria-valuemax")&&(b.hasOwnProperty("max")||b.hasOwnProperty("ngMax")),s=!e.attr("aria-valuenow");p&&b.$observe("min",function(a){e.attr("aria-valuemin",a)});r&&b.$observe("max",function(a){e.attr("aria-valuemax",a)});s&&f.$watch(h,function(a){e.attr("aria-valuenow",
a)})}m&&e.attr("tabindex",0)}!b.hasOwnProperty("ngRequired")&&n.$validators.required&&c("aria-required","ariaRequired",e,!1)&&b.$observe("required",function(){e.attr("aria-required",!!b.required)});c("aria-invalid","ariaInvalid",e,!0)&&f.$watch(function(){return n.$invalid},function(a){e.attr("aria-invalid",!!a)})}}}}}]).directive("ngDisabled",["$aria",function(a){return a.$$watchExpr("ngDisabled","aria-disabled",b,!1)}]).directive("ngMessages",function(){return{restrict:"A",require:"?ngMessages",
link:function(a,b,g,k){b.attr("aria-live")||b.attr("aria-live","assertive")}}}).directive("ngClick",["$aria","$parse",function(a,c){return{restrict:"A",compile:function(g,k){var m=c(k.ngClick,null,!0);return function(c,d,f){if(!l(d,b)&&(a.config("bindRoleForClick")&&!d.attr("role")&&d.attr("role","button"),a.config("tabindex")&&!d.attr("tabindex")&&d.attr("tabindex",0),a.config("bindKeypress")&&!f.ngKeypress))d.on("keypress",function(a){function b(){m(c,{$event:a})}var d=a.which||a.keyCode;32!==d&&
13!==d||c.$apply(b)})}}}}]).directive("ngDblclick",["$aria",function(a){return function(c,g,k){!a.config("tabindex")||g.attr("tabindex")||l(g,b)||g.attr("tabindex",0)}}])})(window,window.angular);
//# sourceMappingURL=angular-aria.min.js.map

/*! Angular Feature Flags v1.0.0 © 2016 Michael Taranto */
!function(){function e(e,a,t){var n={},r=[],i=function(a){var t=e.defer();return t.resolve(a),t.promise},l=function(e){return a.isPresent(e)},f=function(e){return l(e)?"true"===a.get(e):n[e]},u=function(e){return n[e]},s=function(e){return e.forEach(function(e){n[e.key]=e.active,e.active=f(e.key)}),angular.copy(e,r),r},c=function(e){return e.then(function(e){return s(e.data||e)})},g=function(){return r},o=function(e){return angular.isArray(e)?i(s(e)):c(e)},d=function(e){e.active=!0,a.set(e.key,!0)},v=function(e){e.active=!1,a.set(e.key,!1)},y=function(e){e.active=n[e.key],a.remove(e.key)},O=function(){t&&o(t)};return O(),{set:o,get:g,enable:d,disable:v,reset:y,isOn:f,isOnByDefault:u,isOverridden:l}}angular.module("feature-flags",[]),angular.module("feature-flags").directive("featureFlag",["featureFlags","$interpolate",function(e,a){return{transclude:"element",priority:599,terminal:!0,restrict:"A",$$tlb:!0,compile:function(t,n){var r="featureFlagHide"in n;return t[0].textContent=" featureFlag: "+n.featureFlag+" is "+(r?"on":"off")+" ",function(t,n,i,l,f){var u,s;t.$watch(function(){var n=a(i.featureFlag)(t);return e.isOn(n)},function(e){var a=r?!e:e;a?(s=t.$new(),f(s,function(e){u=e,n.after(u).remove()})):(s&&(s.$destroy(),s=null),u&&(u.after(n).remove(),u=null))})}}}}]),angular.module("feature-flags").directive("featureFlagOverrides",["featureFlags",function(e){return{restrict:"A",link:function(a){a.flags=e.get(),a.isOn=e.isOn,a.isOverridden=e.isOverridden,a.enable=e.enable,a.disable=e.disable,a.reset=e.reset,a.isOnByDefault=e.isOnByDefault},template:'<div class="feature-flags">    <h1>Feature Flags</h1>    <div id="feature-flag--{{flag.key}}" class="feature-flags-flag" ng-repeat="flag in flags">        <div class="feature-flags-name">{{flag.name || flag.key}}</div>        <div id="feature-flag--{{flag.key}}--enable" class="feature-flags-switch" ng-click="enable(flag)" ng-class="{\'active\': isOverridden(flag.key) && isOn(flag.key)}">ON</div>        <div id="feature-flag--{{flag.key}}--disable" class="feature-flags-switch" ng-click="disable(flag)" ng-class="{\'active\': isOverridden(flag.key) && !isOn(flag.key)}">OFF</div>        <div id="feature-flag--{{flag.key}}--reset" class="feature-flags-switch" ng-click="reset(flag)" ng-class="{\'active\': !isOverridden(flag.key)}">DEFAULT ({{isOnByDefault(flag.key) ? \'ON\' : \'OFF\'}})</div>        <div class="feature-flags-desc">{{flag.description}}</div>    </div></div>',replace:!0}}]),angular.module("feature-flags").service("featureFlagOverrides",["$rootElement",function(e){var a=e.attr("ng-app"),t="featureFlags."+a+".",n=function(e){return t+e},r=function(e){return 0===e.indexOf(t)},i=function(e,a){localStorage.setItem(n(a),e)},l=function(e){return localStorage.getItem(n(e))},f=function(e){localStorage.removeItem(n(e))};return{isPresent:function(e){return null!==l(e)},get:l,set:function(e,a){angular.isObject(e)?angular.forEach(e,i):i(a,e)},remove:f,reset:function(){var e;for(e in localStorage)r(e)&&localStorage.removeItem(e)}}}]),angular.module("feature-flags").provider("featureFlags",function(){var a=[];this.setInitialFlags=function(e){a=e},this.$get=["$q","featureFlagOverrides",function(t,n){return new e(t,n,a)}]})}();
/* Javascript Core Components v2.0.4 - 2020-04-20-12-04\n * https://github.com/2tor/js-core-components
 * Copyright (c) 2020 2U, Inc.\n */
/* Javascript Core Components v2.0.4 - 2020-04-20-12-04\n * https://github.com/2tor/js-core-components
 * Copyright (c) 2020 2U, Inc.\n */// Namespace
var mejs = mejs || {};

// version number
mejs.version = '2.8.2';

// player number (for missing, same id attr)
mejs.meIndex = 0;

// media types accepted by plugins
mejs.plugins = {
    silverlight: [
        {version: [3,0], types: ['video/mp4','video/m4v','video/mov','video/wmv','audio/wma','audio/m4a','audio/mp3','audio/wav','audio/mpeg']}
    ],
    flash: [
        {version: [9,0,124], types: ['video/mp4','video/m4v','video/mov','video/flv','video/x-flv','audio/flv','audio/x-flv','audio/mp3','audio/m4a','audio/mpeg', 'video/youtube', 'video/x-youtube']}
        //,{version: [12,0], types: ['video/webm']} // for future reference (hopefully!)
    ],
    youtube: [
        {version: null, types: ['video/youtube', 'video/x-youtube']}
    ],
    vimeo: [
        {version: null, types: ['video/vimeo']}
    ]
};
mejs.Utility = {
    encodeUrl: function(url) {
        return encodeURIComponent(url); //.replace(/\?/gi,'%3F').replace(/=/gi,'%3D').replace(/&/gi,'%26');
    },
    escapeHTML: function(s) {
        return s.toString().split('&').join('&amp;').split('<').join('&lt;').split('"').join('&quot;');
    },
    absolutizeUrl: function(url) {
        var el = document.createElement('div');
        el.innerHTML = '<a href="' + this.escapeHTML(url) + '">x</a>';
        return el.firstChild.href;
    },
    getScriptPath: function(scriptNames) {
        var
            i = 0,
            j,
            path = '',
            name = '',
            script,
            scripts = document.getElementsByTagName('script'),
            il = scripts.length,
            jl = scriptNames.length;

        for (; i < il; i++) {
            script = scripts[i].src;
            for (j = 0; j < jl; j++) {
                name = scriptNames[j];
                if (script.indexOf(name) > -1) {
                    path = script.substring(0, script.indexOf(name));
                    break;
                }
            }
            if (path !== '') {
                break;
            }
        }
        return path;
    },
    secondsToTimeCode: function(time, forceHours, showFrameCount, fps) {
        //add framecount
        if (typeof showFrameCount == 'undefined') {
            showFrameCount=false;
        } else if(typeof fps == 'undefined') {
            fps = 25;
        }
    
        var hours = Math.floor(time / 3600) % 24,
            minutes = Math.floor(time / 60) % 60,
            seconds = Math.floor(time % 60),
            frames = Math.floor(((time % 1)*fps).toFixed(3)),
            result =
                    ((forceHours || hours > 0) ? (hours < 10 ? '0' + hours : hours) + ':' : '') +
                        (minutes < 10 ? '0' + minutes : minutes) + ':' +
                        (seconds < 10 ? '0' + seconds : seconds) +
                        ((showFrameCount) ? ':' + (frames < 10 ? '0' + frames : frames) : '');
        return result;
    },
    
    timeCodeToSeconds: function(hh_mm_ss_ff, forceHours, showFrameCount, fps){
        if (typeof showFrameCount == 'undefined') {
            showFrameCount=false;
        } else if(typeof fps == 'undefined') {
            fps = 25;
        }
    
        var tc_array = hh_mm_ss_ff.split(":"),
            tc_hh = parseInt(tc_array[0], 10),
            tc_mm = parseInt(tc_array[1], 10),
            tc_ss = parseInt(tc_array[2], 10),
            tc_ff = 0,
            tc_in_seconds = 0;
        
        if (showFrameCount) {
            tc_ff = parseInt(tc_array[3], 10)/fps;
        }
        
        tc_in_seconds = ( tc_hh * 3600 ) + ( tc_mm * 60 ) + tc_ss + tc_ff;
        
        return tc_in_seconds;
    },
    
    /* borrowed from SWFObject: http://code.google.com/p/swfobject/source/browse/trunk/swfobject/src/swfobject.js#474 */
    removeSwf: function(id) {
        var obj = document.getElementById(id);
        if (obj && obj.nodeName == "OBJECT") {
            if (mejs.MediaFeatures.isIE) {
                obj.style.display = "none";
                (function(){
                    if (obj.readyState == 4) {
                        mejs.Utility.removeObjectInIE(id);
                    } else {
                        setTimeout(arguments.callee, 10);
                    }
                })();
            } else {
                obj.parentNode.removeChild(obj);
            }
        }
    },
    removeObjectInIE: function(id) {
        var obj = document.getElementById(id);
        if (obj) {
            for (var i in obj) {
                if (typeof obj[i] == "function") {
                    obj[i] = null;
                }
            }
            obj.parentNode.removeChild(obj);
        }
    }
};


// Core detector, plugins are added below
mejs.PluginDetector = {

    // main public function to test a plug version number PluginDetector.hasPluginVersion('flash',[9,0,125]);
    hasPluginVersion: function(plugin, v) {
        var pv = this.plugins[plugin];
        v[1] = v[1] || 0;
        v[2] = v[2] || 0;
        return (pv[0] > v[0] || (pv[0] == v[0] && pv[1] > v[1]) || (pv[0] == v[0] && pv[1] == v[1] && pv[2] >= v[2])) ? true : false;
    },

    // cached values
    nav: window.navigator,
    ua: window.navigator.userAgent.toLowerCase(),

    // stored version numbers
    plugins: [],

    // runs detectPlugin() and stores the version number
    addPlugin: function(p, pluginName, mimeType, activeX, axDetect) {
        this.plugins[p] = this.detectPlugin(pluginName, mimeType, activeX, axDetect);
    },

    // get the version number from the mimetype (all but IE) or ActiveX (IE)
    detectPlugin: function(pluginName, mimeType, activeX, axDetect) {

        var version = [0,0,0],
            description,
            i,
            ax;

        // Firefox, Webkit, Opera
        if (typeof(this.nav.plugins) != 'undefined' && typeof this.nav.plugins[pluginName] == 'object') {
            description = this.nav.plugins[pluginName].description;
            if (description && !(typeof this.nav.mimeTypes != 'undefined' && this.nav.mimeTypes[mimeType] && !this.nav.mimeTypes[mimeType].enabledPlugin)) {
                version = description.replace(pluginName, '').replace(/^\s+/,'').replace(/\sr/gi,'.').split('.');
                for (i=0; i<version.length; i++) {
                    version[i] = parseInt(version[i].match(/\d+/), 10);
                }
            }
        // Internet Explorer / ActiveX
        } else if (typeof(window.ActiveXObject) != 'undefined') {
            try {
                ax = new ActiveXObject(activeX);
                if (ax) {
                    version = axDetect(ax);
                }
            }
            catch (e) { }
        }
        return version;
    }
};

// Add Flash detection
mejs.PluginDetector.addPlugin('flash','Shockwave Flash','application/x-shockwave-flash','ShockwaveFlash.ShockwaveFlash', function(ax) {
    // adapted from SWFObject
    var version = [],
        d = ax.GetVariable("$version");
    if (d) {
        d = d.split(" ")[1].split(",");
        version = [parseInt(d[0], 10), parseInt(d[1], 10), parseInt(d[2], 10)];
    }
    return version;
});

// Add Silverlight detection
mejs.PluginDetector.addPlugin('silverlight','Silverlight Plug-In','application/x-silverlight-2','AgControl.AgControl', function (ax) {
    // Silverlight cannot report its version number to IE
    // but it does have a isVersionSupported function, so we have to loop through it to get a version number.
    // adapted from http://www.silverlightversion.com/
    var v = [0,0,0,0],
        loopMatch = function(ax, v, i, n) {
            while(ax.isVersionSupported(v[0]+ "."+ v[1] + "." + v[2] + "." + v[3])){
                v[i]+=n;
            }
            v[i] -= n;
        };
    loopMatch(ax, v, 0, 1);
    loopMatch(ax, v, 1, 1);
    loopMatch(ax, v, 2, 10000); // the third place in the version number is usually 5 digits (4.0.xxxxx)
    loopMatch(ax, v, 2, 1000);
    loopMatch(ax, v, 2, 100);
    loopMatch(ax, v, 2, 10);
    loopMatch(ax, v, 2, 1);
    loopMatch(ax, v, 3, 1);

    return v;
});
// add adobe acrobat
/*
PluginDetector.addPlugin('acrobat','Adobe Acrobat','application/pdf','AcroPDF.PDF', function (ax) {
    var version = [],
        d = ax.GetVersions().split(',')[0].split('=')[1].split('.');

    if (d) {
        version = [parseInt(d[0], 10), parseInt(d[1], 10), parseInt(d[2], 10)];
    }
    return version;
});
*/
// necessary detection (fixes for <IE9)
mejs.MediaFeatures = {
    init: function() {
        var
            t = this,
            d = document,
            nav = mejs.PluginDetector.nav,
            ua = mejs.PluginDetector.ua.toLowerCase(),
            i,
            v,
            html5Elements = ['source','track','audio','video'];

        // detect browsers (only the ones that have some kind of quirk we need to work around)
        t.isiPad = (ua.match(/ipad/i) !== null);
        t.isiPhone = (ua.match(/iphone/i) !== null);
        t.isiOS = t.isiPhone || t.isiPad;
        t.isAndroid = (ua.match(/android/i) !== null);
        t.isBustedAndroid = (ua.match(/android 2\.[12]/) !== null);
        t.isIE = (nav.appName.toLowerCase().indexOf("microsoft") != -1);
        t.isChrome = (ua.match(/chrome/gi) !== null);
        t.isFirefox = (ua.match(/firefox/gi) !== null);
        t.isWebkit = (ua.match(/webkit/gi) !== null);
        t.isGecko = (ua.match(/gecko/gi) !== null) && !t.isWebkit;
        t.isOpera = (ua.match(/opera/gi) !== null);
        t.hasTouch = ('ontouchstart' in window);

        // create HTML5 media elements for IE before 9, get a <video> element for fullscreen detection
        for (i=0; i<html5Elements.length; i++) {
            v = document.createElement(html5Elements[i]);
        }
        
        t.supportsMediaTag = (typeof v.canPlayType !== 'undefined' || t.isBustedAndroid);

        // detect native JavaScript fullscreen (Safari/Firefox only, Chrome still fails)
        
        // iOS
        t.hasSemiNativeFullScreen = (typeof v.webkitEnterFullscreen !== 'undefined');
        
        // Webkit/firefox
        t.hasWebkitNativeFullScreen = (typeof v.webkitRequestFullScreen !== 'undefined');
        t.hasMozNativeFullScreen = (typeof v.mozRequestFullScreen !== 'undefined');
        
        t.hasTrueNativeFullScreen = (t.hasWebkitNativeFullScreen || t.hasMozNativeFullScreen);
        t.nativeFullScreenEnabled = t.hasTrueNativeFullScreen;
        if (t.hasMozNativeFullScreen) {
            t.nativeFullScreenEnabled = v.mozFullScreenEnabled;
        }
        
        
        if (this.isChrome) {
            t.hasSemiNativeFullScreen = false;
        }
        
        if (t.hasTrueNativeFullScreen) {
            t.fullScreenEventName = (t.hasWebkitNativeFullScreen) ? 'webkitfullscreenchange' : 'mozfullscreenchange';
            
            
            t.isFullScreen = function() {
                if (v.mozRequestFullScreen) {
                    return d.mozFullScreen;
                } else if (v.webkitRequestFullScreen) {
                    return d.webkitIsFullScreen;
                }
            }
                    
            t.requestFullScreen = function(el) {
        
                if (t.hasWebkitNativeFullScreen) {
                    el.webkitRequestFullScreen();
                } else if (t.hasMozNativeFullScreen) {
                    el.mozRequestFullScreen();
                }
            }
            
            t.cancelFullScreen = function() {                
                if (t.hasWebkitNativeFullScreen) {
                    document.webkitCancelFullScreen();
                } else if (t.hasMozNativeFullScreen) {
                    document.mozCancelFullScreen();
                }
            }    
            
        }
        
        
        // OS X 10.5 can't do this even if it says it can :(
        if (t.hasSemiNativeFullScreen && ua.match(/mac os x 10_5/i)) {
            t.hasNativeFullScreen = false;
            t.hasSemiNativeFullScreen = false;
        }
        
    }
};
mejs.MediaFeatures.init();

mejs.HtmlMediaElement = {

    pluginType: 'native',
    isFullScreen: false,

    setCurrentTime: function (time) {
        this.currentTime = time;
    },

    // hideControls: function() {

    //     var t = this;

    //     t.controls.addClass('mejs-hide-controls');

    // },

    // showControls: function(doAnimation) {

    //     var t = this;

    //     t.controls.removeClass('mejs-hide-controls');

    //     t.setControlsSize();
    // },

    setMuted: function (muted) {
        this.muted = muted;
    },

    setVolume: function (volume) {
        this.volume = volume;
    },

    // for parity with the plugin versions
    stop: function () {
        this.pause();
    },

    // This can be a url string
    // or an array [{src:'file.mp4',type:'video/mp4'},{src:'file.webm',type:'video/webm'}]
    setSrc: function (url) {

        // Fix for IE9 which can't set .src when there are <source> elements. Awesome, right?
        var
            existingSources = this.getElementsByTagName('source');
        while (existingSources.length > 0){
            this.removeChild(existingSources[0]);
        }

        if (typeof url == 'string') {
            this.src = url;
        } else {
            var i, media;

            for (i=0; i<url.length; i++) {
                media = url[i];
                if (this.canPlayType(media.type)) {
                    this.src = media.src;
                }
            }
        }
    },

    setVideoSize: function (width, height) {

        this.width = width;
        this.height = height;

    },

    setVideoMasking: function (width, height) {

        posterImage.css('margin-top', Math.floor((posterContainer.height() - posterImage.height()) / 2) + 'px');
        posterImage.css('margin-left', Math.floor((posterContainer.width() - posterImage.width()) / 2) + 'px');

        posterImage.show();

    }

};

/*
Mimics the <video/audio> element by calling Flash's External Interface or Silverlights [ScriptableMember]
*/
mejs.PluginMediaElement = function (pluginid, pluginType, mediaUrl) {
    this.id = pluginid;
    this.pluginType = pluginType;
    this.src = mediaUrl;
    this.events = {};
};

// JavaScript values and ExternalInterface methods that match HTML5 video properties methods
// http://www.adobe.com/livedocs/flash/9.0/ActionScriptLangRefV3/fl/video/FLVPlayback.html
// http://www.whatwg.org/specs/web-apps/current-work/multipage/video.html
mejs.PluginMediaElement.prototype = {

    // special
    pluginElement: null,
    pluginType: '',
    isFullScreen: false,

    // not implemented :(
    playbackRate: -1,
    defaultPlaybackRate: -1,
    seekable: [],
    played: [],

    // HTML5 read-only properties
    paused: true,
    ended: false,
    seeking: false,
    duration: 0,
    error: null,
    tagName: '',

    // HTML5 get/set properties, but only set (updated by event handlers)
    muted: false,
    volume: 1,
    currentTime: 0,

    // HTML5 methods
    play: function () {
        if (this.pluginApi != null) {
            if (this.pluginType == 'youtube') {
                this.pluginApi.playVideo();
            } else {
                this.pluginApi.playMedia();
            }
            this.paused = false;
        }
    },
    load: function () {
        if (this.pluginApi != null) {
            if (this.pluginType == 'youtube') {
            } else {
                this.pluginApi.loadMedia();
            }

            this.paused = false;
        }
    },
    pause: function () {
        if (this.pluginApi != null) {
            if (this.pluginType == 'youtube') {
                this.pluginApi.pauseVideo();
            } else {
                this.pluginApi.pauseMedia();
            }


            this.paused = true;
        }
    },
    stop: function () {
        if (this.pluginApi != null) {
            if (this.pluginType == 'youtube') {
                this.pluginApi.stopVideo();
            } else {
                this.pluginApi.stopMedia();
            }
            this.paused = true;
        }
    },
    canPlayType: function(type) {
        var i,
            j,
            pluginInfo,
            pluginVersions = mejs.plugins[this.pluginType];

        for (i=0; i<pluginVersions.length; i++) {
            pluginInfo = pluginVersions[i];

            // test if user has the correct plugin version
            if (mejs.PluginDetector.hasPluginVersion(this.pluginType, pluginInfo.version)) {

                // test for plugin playback types
                for (j=0; j<pluginInfo.types.length; j++) {
                    // find plugin that can play the type
                    if (type == pluginInfo.types[j]) {
                        return true;
                    }
                }
            }
        }

        return false;
    },

    positionFullscreenButton: function(x,y,visibleAndAbove) {
        if (this.pluginApi != null && this.pluginApi.positionFullscreenButton) {
            this.pluginApi.positionFullscreenButton(x,y,visibleAndAbove);
        }
    },

    hideFullscreenButton: function() {
        if (this.pluginApi != null && this.pluginApi.hideFullscreenButton) {
            this.pluginApi.hideFullscreenButton();
        }
    },


    // custom methods since not all JavaScript implementations support get/set

    // This can be a url string
    // or an array [{src:'file.mp4',type:'video/mp4'},{src:'file.webm',type:'video/webm'}]
    setSrc: function (url) {
        if (typeof url == 'string') {
            this.pluginApi.setSrc(mejs.Utility.absolutizeUrl(url));
            this.src = mejs.Utility.absolutizeUrl(url);
        } else {
            var i, media;

            for (i=0; i<url.length; i++) {
                media = url[i];
                if (this.canPlayType(media.type)) {
                    this.pluginApi.setSrc(mejs.Utility.absolutizeUrl(media.src));
                    this.src = mejs.Utility.absolutizeUrl(url);
                }
            }
        }

    },
    setCurrentTime: function (time) {
        if (this.pluginApi != null) {
            if (this.pluginType == 'youtube') {
                this.pluginApi.seekTo(time);
            } else {
                this.pluginApi.setCurrentTime(time);
            }



            this.currentTime = time;
        }
    },
    setVolume: function (volume) {
        if (this.pluginApi != null) {
            // same on YouTube and MEjs
            if (this.pluginType == 'youtube') {
                this.pluginApi.setVolume(volume * 100);
            } else {
                this.pluginApi.setVolume(volume);
            }
            this.volume = volume;
        }
    },
    setMuted: function (muted) {
        if (this.pluginApi != null) {
            if (this.pluginType == 'youtube') {
                if (muted) {
                    this.pluginApi.mute();
                } else {
                    this.pluginApi.unMute();
                }
                this.muted = muted;
                this.dispatchEvent('volumechange');
            } else {
                this.pluginApi.setMuted(muted);
            }
            this.muted = muted;
        }
    },

    // additional non-HTML5 methods

    setVideoSize: function (width, height) {

        //if (this.pluginType == 'flash' || this.pluginType == 'silverlight') {
            if ( this.pluginElement.style) {
                this.pluginElement.style.width = width + 'px';
                this.pluginElement.style.height = height + 'px';
            }
            if (this.pluginApi != null && this.pluginApi.setVideoSize) {
                this.pluginApi.setVideoSize(width, height);
            }
        //}
    },

    setFullscreen: function (fullscreen) {
        if (this.pluginApi != null && this.pluginApi.setFullscreen) {
            this.pluginApi.setFullscreen(fullscreen);
        }
    },

    enterFullScreen: function() {
        if (this.pluginApi != null && this.pluginApi.setFullscreen) {
            this.setFullscreen(true);
        }

    },

    exitFullScreen: function() {
        if (this.pluginApi != null && this.pluginApi.setFullscreen) {
            this.setFullscreen(false);
        }
    },

    // start: fake events
    addEventListener: function (eventName, callback, bubble) {
        this.events[eventName] = this.events[eventName] || [];
        this.events[eventName].push(callback);
    },
    removeEventListener: function (eventName, callback) {
        if (!eventName) { this.events = {}; return true; }
        var callbacks = this.events[eventName];
        if (!callbacks) return true;
        if (!callback) { this.events[eventName] = []; return true; }
        for (i = 0; i < callbacks.length; i++) {
            if (callbacks[i] === callback) {
                this.events[eventName].splice(i, 1);
                return true;
            }
        }
        return false;
    },
    dispatchEvent: function (eventName) {
        var i,
            args,
            callbacks = this.events[eventName];

        if (callbacks) {
            args = Array.prototype.slice.call(arguments, 1);
            for (i = 0; i < callbacks.length; i++) {
                callbacks[i].apply(null, args);
            }
        }
    },
    // end: fake events

    // fake DOM attribute methods
    attributes: {},
    hasAttribute: function(name){
        return (name in this.attributes);
    },
    removeAttribute: function(name){
        delete this.attributes[name];
    },
    getAttribute: function(name){
        if (this.hasAttribute(name)) {
            return this.attributes[name];
        }
        return '';
    },
    setAttribute: function(name, value){
        this.attributes[name] = value;
    },

    remove: function() {
        mejs.Utility.removeSwf(this.pluginElement.id);
    }
};

// Handles calls from Flash/Silverlight and reports them as native <video/audio> events and properties
mejs.MediaPluginBridge = {

    pluginMediaElements:{},
    htmlMediaElements:{},

    registerPluginElement: function (id, pluginMediaElement, htmlMediaElement) {
        this.pluginMediaElements[id] = pluginMediaElement;
        this.htmlMediaElements[id] = htmlMediaElement;
    },

    // when Flash/Silverlight is ready, it calls out to this method
    initPlugin: function (id) {

        var pluginMediaElement = this.pluginMediaElements[id],
            htmlMediaElement = this.htmlMediaElements[id];

        if (pluginMediaElement) {
            // find the javascript bridge
            switch (pluginMediaElement.pluginType) {
                case "flash":
                    pluginMediaElement.pluginElement = pluginMediaElement.pluginApi = document.getElementById(id);
                    break;
                case "silverlight":
                    pluginMediaElement.pluginElement = document.getElementById(pluginMediaElement.id);
                    pluginMediaElement.pluginApi = pluginMediaElement.pluginElement.Content.MediaElementJS;
                    break;
            }
    
            if (pluginMediaElement.pluginApi != null && pluginMediaElement.success) {
                pluginMediaElement.success(pluginMediaElement, htmlMediaElement);
            }
        }
    },

    // receives events from Flash/Silverlight and sends them out as HTML5 media events
    // http://www.whatwg.org/specs/web-apps/current-work/multipage/video.html
    fireEvent: function (id, eventName, values) {

        var
            e,
            i,
            bufferedTime,
            pluginMediaElement = this.pluginMediaElements[id];

        pluginMediaElement.ended = false;
        pluginMediaElement.paused = true;

        // fake event object to mimic real HTML media event.
        e = {
            type: eventName,
            target: pluginMediaElement
        };

        // attach all values to element and event object
        for (i in values) {
            pluginMediaElement[i] = values[i];
            e[i] = values[i];
        }

        // fake the newer W3C buffered TimeRange (loaded and total have been removed)
        bufferedTime = values.bufferedTime || 0;

        e.target.buffered = e.buffered = {
            start: function(index) {
                return 0;
            },
            end: function (index) {
                return bufferedTime;
            },
            length: 1
        };

        pluginMediaElement.dispatchEvent(e.type, e);
    }
};

/*
Default options
*/
mejs.MediaElementDefaults = {
    // allows testing on HTML5, flash, silverlight
    // auto: attempts to detect what the browser can do
    // native: forces HTML5 playback
    // shim: disallows HTML5, will attempt either Flash or Silverlight
    // none: forces fallback view
    mode: 'auto',
    // remove or reorder to change plugin priority and availability
    plugins: ['flash','silverlight','youtube','vimeo'],
    // shows debug errors on screen
    enablePluginDebug: false,
    // overrides the type specified, useful for dynamic instantiation
    type: '',
    // path to Flash and Silverlight plugins
    pluginPath: mejs.Utility.getScriptPath(['mediaelement.js','mediaelement.min.js','mediaelement-and-player.js','mediaelement-and-player.min.js']),
    // name of flash file
    flashName: 'flashmediaelement.swf',
    // turns on the smoothing filter in Flash
    enablePluginSmoothing: false,
    // name of silverlight file
    silverlightName: 'silverlightmediaelement.xap',
    // default if the <video width> is not specified
    defaultVideoWidth: 480,
    // default if the <video height> is not specified
    defaultVideoHeight: 270,
    // overrides <video width>
    pluginWidth: -1,
    // overrides <video height>
    pluginHeight: -1,
    // additional plugin variables in 'key=value' form
    pluginVars: [],    
    // rate in milliseconds for Flash and Silverlight to fire the timeupdate event
    // larger number is less accurate, but less strain on plugin->JavaScript bridge
    timerRate: 250,
    // initial volume for player
    startVolume: 0.8,
    success: function () { },
    error: function () { }
};

/*
Determines if a browser supports the <video> or <audio> element
and returns either the native element or a Flash/Silverlight version that
mimics HTML5 MediaElement
*/
mejs.MediaElement = function (el, o) {
    return mejs.HtmlMediaElementShim.create(el,o);
};

mejs.HtmlMediaElementShim = {

    create: function(el, o) {
        var
            options = mejs.MediaElementDefaults,
            htmlMediaElement = (typeof(el) == 'string') ? document.getElementById(el) : el,
            tagName = htmlMediaElement.tagName.toLowerCase(),
            isMediaTag = (tagName === 'audio' || tagName === 'video'),
            src = (isMediaTag) ? htmlMediaElement.getAttribute('src') : htmlMediaElement.getAttribute('href'),
            poster = htmlMediaElement.getAttribute('poster'),
            autoplay =  htmlMediaElement.getAttribute('autoplay'),
            preload =  htmlMediaElement.getAttribute('preload'),
            controls =  htmlMediaElement.getAttribute('controls'),
            playback,
            prop;

        // extend options
        for (prop in o) {
            options[prop] = o[prop];
        }

        // clean up attributes
        src =         (typeof src == 'undefined'     || src === null || src === '') ? null : src;
        poster =    (typeof poster == 'undefined'     || poster === null) ? '' : poster;
        preload =     (typeof preload == 'undefined'     || preload === null || preload === 'false') ? 'none' : preload;
        autoplay =     !(typeof autoplay == 'undefined' || autoplay === null || autoplay === 'false');
        controls =     !(typeof controls == 'undefined' || controls === null || controls === 'false');

        // test for HTML5 and plugin capabilities
        playback = this.determinePlayback(htmlMediaElement, options, mejs.MediaFeatures.supportsMediaTag, isMediaTag, src);
        playback.url = (playback.url !== null) ? mejs.Utility.absolutizeUrl(playback.url) : '';

        if (playback.method == 'native') {
            // second fix for android
            if (mejs.MediaFeatures.isBustedAndroid) {
                htmlMediaElement.src = playback.url;
                htmlMediaElement.addEventListener('click', function() {
                    htmlMediaElement.play();
                }, false);
            }
        
            // add methods to native HTMLMediaElement
            return this.updateNative(playback, options, autoplay, preload);
        } else if (playback.method !== '') {
            // create plugin to mimic HTMLMediaElement
            
            return this.createPlugin( playback,  options, poster, autoplay, preload, controls);
        } else {
            // boo, no HTML5, no Flash, no Silverlight.
            this.createErrorMessage( playback, options, poster );
            
            return this;
        }
    },
    
    determinePlayback: function(htmlMediaElement, options, supportsMediaTag, isMediaTag, src) {
        var
            mediaFiles = [],
            i,
            j,
            k,
            l,
            n,
            type,
            result = { method: '', url: '', htmlMediaElement: htmlMediaElement, isVideo: (htmlMediaElement.tagName.toLowerCase() != 'audio')},
            pluginName,
            pluginVersions,
            pluginInfo,
            dummy;
            
        // STEP 1: Get URL and type from <video src> or <source src>

        // supplied type overrides <video type> and <source type>
        if (typeof options.type != 'undefined' && options.type !== '') {
            
            // accept either string or array of types
            if (typeof options.type == 'string') {
                mediaFiles.push({type:options.type, url:src});
            } else {
                
                for (i=0; i<options.type.length; i++) {
                    mediaFiles.push({type:options.type[i], url:src});
                }
            }

        // test for src attribute first
        } else if (src !== null) {
            type = this.formatType(src, htmlMediaElement.getAttribute('type'));
            mediaFiles.push({type:type, url:src});

        // then test for <source> elements
        } else {
            // test <source> types to see if they are usable
            for (i = 0; i < htmlMediaElement.childNodes.length; i++) {
                n = htmlMediaElement.childNodes[i];
                if (n.nodeType == 1 && n.tagName.toLowerCase() == 'source') {
                    src = n.getAttribute('src');
                    type = this.formatType(src, n.getAttribute('type'));
                    mediaFiles.push({type:type, url:src});
                }
            }
        }
        
        // in the case of dynamicly created players
        // check for audio types
        if (!isMediaTag && mediaFiles.length > 0 && mediaFiles[0].url !== null && this.getTypeFromFile(mediaFiles[0].url).indexOf('audio') > -1) {
            result.isVideo = false;
        }
        

        // STEP 2: Test for playback method
        
        // special case for Android which sadly doesn't implement the canPlayType function (always returns '')
        if (mejs.MediaFeatures.isBustedAndroid) {
            htmlMediaElement.canPlayType = function(type) {
                return (type.match(/video\/(mp4|m4v)/gi) !== null) ? 'maybe' : '';
            };
        }
        

        // test for native playback first
        if (supportsMediaTag && (options.mode === 'auto' || options.mode === 'native')) {
                        
            if (!isMediaTag) {

                // create a real HTML5 Media Element 
                dummy = document.createElement( result.isVideo ? 'video' : 'audio');
                htmlMediaElement.parentNode.insertBefore(dummy, htmlMediaElement);
                htmlMediaElement.style.display = 'none';
                
                // use this one from now on
                result.htmlMediaElement = htmlMediaElement = dummy;
            }
                
            for (i=0; i<mediaFiles.length; i++) {
                // normal check
                if (htmlMediaElement.canPlayType(mediaFiles[i].type).replace(/no/, '') !== ''
                    // special case for Mac/Safari 5.0.3 which answers '' to canPlayType('audio/mp3') but 'maybe' to canPlayType('audio/mpeg')
                    || htmlMediaElement.canPlayType(mediaFiles[i].type.replace(/mp3/,'mpeg')).replace(/no/, '') !== '') {
                    result.method = 'native';
                    result.url = mediaFiles[i].url;
                    break;
                }
            }
            
            if (result.method === 'native') {
                if (result.url !== null) {
                    htmlMediaElement.src = result.url;
                }
            
                return result;
            }
        }

        // if native playback didn't work, then test plugins
        if (options.mode === 'auto' || options.mode === 'shim') {
            for (i=0; i<mediaFiles.length; i++) {
                type = mediaFiles[i].type;

                // test all plugins in order of preference [silverlight, flash]
                for (j=0; j<options.plugins.length; j++) {

                    pluginName = options.plugins[j];
            
                    // test version of plugin (for future features)
                    pluginVersions = mejs.plugins[pluginName];
                    
                    for (k=0; k<pluginVersions.length; k++) {
                        pluginInfo = pluginVersions[k];
                    
                        // test if user has the correct plugin version
                        
                        // for youtube/vimeo
                        if (pluginInfo.version == null || 
                            
                            mejs.PluginDetector.hasPluginVersion(pluginName, pluginInfo.version)) {

                            // test for plugin playback types
                            for (l=0; l<pluginInfo.types.length; l++) {
                                // find plugin that can play the type
                                if (type == pluginInfo.types[l]) {
                                    result.method = pluginName;
                                    result.url = mediaFiles[i].url;
                                    return result;
                                }
                            }
                        }
                    }
                }
            }
        }
        
        // what if there's nothing to play? just grab the first available
        if (result.method === '' && mediaFiles.length > 0) {
            result.url = mediaFiles[0].url;
        }

        return result;
    },

    formatType: function(url, type) {
        var ext;

        // if no type is supplied, fake it with the extension
        if (url && !type) {
            return this.getTypeFromFile(url);
        } else {
            // only return the mime part of the type in case the attribute contains the codec
            // see http://www.whatwg.org/specs/web-apps/current-work/multipage/video.html#the-source-element
            // `video/mp4; codecs="avc1.42E01E, mp4a.40.2"` becomes `video/mp4`
            
            if (type && ~type.indexOf(';')) {
                return type.substr(0, type.indexOf(';')); 
            } else {
                return type;
            }
        }
    },
    
    getTypeFromFile: function(url) {
        var ext = url.substring(url.lastIndexOf('.') + 1);
        return (/(mp4|m4v|ogg|ogv|webm|flv|wmv|mpeg|mov)/gi.test(ext) ? 'video' : 'audio') + '/' + ext;
    },

    createErrorMessage: function(playback, options, poster) {
        var
            htmlMediaElement = playback.htmlMediaElement,
            errorContainer = document.createElement('div');
            
        errorContainer.className = 'me-cannotplay';

        try {
            errorContainer.style.width = htmlMediaElement.width + 'px';
            errorContainer.style.height = htmlMediaElement.height + 'px';
        } catch (e) {}

        errorContainer.innerHTML = (poster !== '') ?
            '<a href="' + playback.url + '"><img src="' + poster + '" width="100%" height="100%" /></a>' :
            '<a href="' + playback.url + '"><span>Download File</span></a>';

        htmlMediaElement.parentNode.insertBefore(errorContainer, htmlMediaElement);
        htmlMediaElement.style.display = 'none';

        options.error(htmlMediaElement);
    },

    createPlugin:function(playback, options, poster, autoplay, preload, controls) {
        var
            htmlMediaElement = playback.htmlMediaElement,
            width = 1,
            height = 1,
            pluginid = 'me_' + playback.method + '_' + (mejs.meIndex++),
            pluginMediaElement = new mejs.PluginMediaElement(pluginid, playback.method, playback.url),
            container = document.createElement('div'),
            specialIEContainer,
            node,
            initVars;

        // copy tagName from html media element
        pluginMediaElement.tagName = htmlMediaElement.tagName;

        // copy attributes from html media element to plugin media element
        for (var i = 0; i < htmlMediaElement.attributes.length; i++) {
            var attribute = htmlMediaElement.attributes[i];
            if (attribute.specified === true) {
                pluginMediaElement.setAttribute(attribute.name, attribute.value);
            }
        }

        // check for placement inside a <p> tag (sometimes WYSIWYG editors do this)
        node = htmlMediaElement.parentNode;
        while (node !== null && node.tagName.toLowerCase() != 'body') {
            if (node.parentNode.tagName.toLowerCase() == 'p') {
                node.parentNode.parentNode.insertBefore(node, node.parentNode);
                break;
            }
            node = node.parentNode;
        }

        if (playback.isVideo) {
            width = (options.videoWidth > 0) ? options.videoWidth : (htmlMediaElement.getAttribute('width') !== null) ? htmlMediaElement.getAttribute('width') : options.defaultVideoWidth;
            height = (options.videoHeight > 0) ? options.videoHeight : (htmlMediaElement.getAttribute('height') !== null) ? htmlMediaElement.getAttribute('height') : options.defaultVideoHeight;
        
            // in case of '%' make sure it's encoded
            width = mejs.Utility.encodeUrl(width);
            height = mejs.Utility.encodeUrl(height);
        
        } else {
            if (options.enablePluginDebug) {
                width = 320;
                height = 240;
            }
        }

        // register plugin
        pluginMediaElement.success = options.success;
        mejs.MediaPluginBridge.registerPluginElement(pluginid, pluginMediaElement, htmlMediaElement);

        // add container (must be added to DOM before inserting HTML for IE)
        container.className = 'me-plugin';
        container.id = pluginid + '_container';
        
        if (playback.isVideo) {
                htmlMediaElement.parentNode.insertBefore(container, htmlMediaElement);
        } else {
                document.body.insertBefore(container, document.body.childNodes[0]);
        }

        // flash/silverlight vars
        initVars = [
            'id=' + pluginid,
            'isvideo=' + ((playback.isVideo) ? "true" : "false"),
            'autoplay=' + ((autoplay) ? "true" : "false"),
            'preload=' + preload,
            'width=' + width,
            'startvolume=' + options.startVolume,
            'timerrate=' + options.timerRate,
            'height=' + height];

        if (playback.url !== null) {
            if (playback.method == 'flash') {
                initVars.push('file=' + mejs.Utility.encodeUrl(playback.url));
            } else {
                initVars.push('file=' + playback.url);
            }
        }
        if (options.enablePluginDebug) {
            initVars.push('debug=true');
        }
        if (options.enablePluginSmoothing) {
            initVars.push('smoothing=true');
        }
        if (controls) {
            initVars.push('controls=true'); // shows controls in the plugin if desired
        }
        if (options.pluginVars) {
            initVars = initVars.concat(options.pluginVars);
        }

        switch (playback.method) {
            case 'silverlight':
                container.innerHTML =
'<object data="data:application/x-silverlight-2," type="application/x-silverlight-2" id="' + pluginid + '" name="' + pluginid + '" width="' + width + '" height="' + height + '">' +
'<param name="initParams" value="' + initVars.join(',') + '" />' +
'<param name="windowless" value="true" />' +
'<param name="background" value="black" />' +
'<param name="minRuntimeVersion" value="3.0.0.0" />' +
'<param name="autoUpgrade" value="true" />' +
'<param name="source" value="' + options.pluginPath + options.silverlightName + '" />' +
'</object>';
                    break;

            case 'flash':

                if (mejs.MediaFeatures.isIE) {
                    specialIEContainer = document.createElement('div');
                    container.appendChild(specialIEContainer);
                    specialIEContainer.outerHTML =
'<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="//download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab" ' +
'id="' + pluginid + '" width="' + width + '" height="' + height + '">' +
'<param name="movie" value="' + options.pluginPath + options.flashName + '?x=' + (new Date()) + '" />' +
'<param name="flashvars" value="' + initVars.join('&amp;') + '" />' +
'<param name="quality" value="high" />' +
'<param name="bgcolor" value="#000000" />' +
'<param name="wmode" value="transparent" />' +
'<param name="allowScriptAccess" value="always" />' +
'<param name="allowFullScreen" value="true" />' +
'</object>';

                } else {

                    container.innerHTML =
'<embed id="' + pluginid + '" name="' + pluginid + '" ' +
'play="true" ' +
'loop="false" ' +
'quality="high" ' +
'bgcolor="#000000" ' +
'wmode="transparent" ' +
'allowScriptAccess="always" ' +
'allowFullScreen="true" ' +
'type="application/x-shockwave-flash" pluginspage="//www.macromedia.com/go/getflashplayer" ' +
'src="' + options.pluginPath + options.flashName + '" ' +
'flashvars="' + initVars.join('&') + '" ' +
'width="' + width + '" ' +
'height="' + height + '"></embed>';
                }
                break;
            
            case 'youtube':
            
                
                var
                    videoId = playback.url.substr(playback.url.lastIndexOf('=')+1);
                    youtubeSettings = {
                        container: container,
                        containerId: container.id,
                        pluginMediaElement: pluginMediaElement,
                        pluginId: pluginid,
                        videoId: videoId,
                        height: height,
                        width: width
                    };
                
                if (mejs.PluginDetector.hasPluginVersion('flash', [10,0,0]) ) {
                    mejs.YouTubeApi.createFlash(youtubeSettings);
                } else {
                    mejs.YouTubeApi.enqueueIframe(youtubeSettings);
                }
                
                break;
            
            // DEMO Code. Does NOT work.
            case 'vimeo':
                pluginMediaElement.vimeoid = playback.url.substr(playback.url.lastIndexOf('/')+1);
                container.innerHTML =
                    '<object width="' + width + '" height="' + height + '">' +
                        '<param name="allowfullscreen" value="true" />' +
                        '<param name="allowscriptaccess" value="always" />' +
                        '<param name="flashvars" value="api=1" />' + 
                        '<param name="movie" value="http://vimeo.com/moogaloop.swf?clip_id=' + pluginMediaElement.vimeoid  + '&amp;server=vimeo.com&amp;show_title=0&amp;show_byline=0&amp;show_portrait=0&amp;color=00adef&amp;fullscreen=1&amp;autoplay=0&amp;loop=0" />' +
                        '<embed src="//vimeo.com/moogaloop.swf?api=1&amp;clip_id=' + pluginMediaElement.vimeoid + '&amp;server=vimeo.com&amp;show_title=0&amp;show_byline=0&amp;show_portrait=0&amp;color=00adef&amp;fullscreen=1&amp;autoplay=0&amp;loop=0" type="application/x-shockwave-flash" allowfullscreen="true" allowscriptaccess="always" width="' + width + '" height="' + height + '"></embed>' +
                    '</object>';
                    
                break;            
        }
        // hide original element
        htmlMediaElement.style.display = 'none';

        // FYI: options.success will be fired by the MediaPluginBridge
        
        return pluginMediaElement;
    },

    updateNative: function(playback, options, autoplay, preload) {
        
        var htmlMediaElement = playback.htmlMediaElement,
            m;
        
        
        // add methods to video object to bring it into parity with Flash Object
        for (m in mejs.HtmlMediaElement) {
            htmlMediaElement[m] = mejs.HtmlMediaElement[m];
        }

        /*
        Chrome now supports preload="none"
        if (mejs.MediaFeatures.isChrome) {
        
            // special case to enforce preload attribute (Chrome doesn't respect this)
            if (preload === 'none' && !autoplay) {
            
                // forces the browser to stop loading (note: fails in IE9)
                htmlMediaElement.src = '';
                htmlMediaElement.load();
                htmlMediaElement.canceledPreload = true;

                htmlMediaElement.addEventListener('play',function() {
                    if (htmlMediaElement.canceledPreload) {
                        htmlMediaElement.src = playback.url;
                        htmlMediaElement.load();
                        htmlMediaElement.play();
                        htmlMediaElement.canceledPreload = false;
                    }
                }, false);
            // for some reason Chrome forgets how to autoplay sometimes.
            } else if (autoplay) {
                htmlMediaElement.load();
                htmlMediaElement.play();
            }
        }
        */

        // fire success code
        options.success(htmlMediaElement, htmlMediaElement);
        
        return htmlMediaElement;
    }
};

/*
 - test on IE (object vs. embed)
 - determine when to use iframe (Firefox, Safari, Mobile) vs. Flash (Chrome, IE)
 - fullscreen?
*/

// YouTube Flash and Iframe API
mejs.YouTubeApi = {
    isIframeStarted: false,
    isIframeLoaded: false,
    loadIframeApi: function() {
        if (!this.isIframeStarted) {
            var tag = document.createElement('script');
            tag.src = "http://www.youtube.com/player_api";
            var firstScriptTag = document.getElementsByTagName('script')[0];
            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
            this.isIframeStarted = true;
        }
    },
    iframeQueue: [],
    enqueueIframe: function(yt) {
        
        if (this.isLoaded) {
            this.createIframe(yt);
        } else {
            this.loadIframeApi();
            this.iframeQueue.push(yt);
        }
    },
    createIframe: function(settings) {
        
        var
        pluginMediaElement = settings.pluginMediaElement,    
        player = new YT.Player(settings.containerId, {
            height: settings.height,
            width: settings.width,
            videoId: settings.videoId,
            playerVars: {controls:0},
            events: {
                'onReady': function() {
                    
                    // hook up iframe object to MEjs
                    settings.pluginMediaElement.pluginApi = player;
                    
                    // init mejs
                    mejs.MediaPluginBridge.initPlugin(settings.pluginId);
                    
                    // create timer
                    setInterval(function() {
                        mejs.YouTubeApi.createEvent(player, pluginMediaElement, 'timeupdate');
                    }, 250);                    
                },
                'onStateChange': function(e) {
                    
                    mejs.YouTubeApi.handleStateChange(e.data, player, pluginMediaElement);
                    
                }
            }
        });
    },
    
    createEvent: function (player, pluginMediaElement, eventName) {
        var obj = {
            type: eventName,
            target: pluginMediaElement
        };

        if (player && player.getDuration) {
            
            // time 
            pluginMediaElement.currentTime = obj.currentTime = player.getCurrentTime();
            pluginMediaElement.duration = obj.duration = player.getDuration();
            
            // state
            obj.paused = pluginMediaElement.paused;
            obj.ended = pluginMediaElement.ended;            
            
            // sound
            obj.muted = player.isMuted();
            obj.volume = player.getVolume() / 100;
            
            // progress
            obj.bytesTotal = player.getVideoBytesTotal();
            obj.bufferedBytes = player.getVideoBytesLoaded();
            
            // fake the W3C buffered TimeRange
            var bufferedTime = obj.bufferedBytes / obj.bytesTotal * obj.duration;
            
            obj.target.buffered = obj.buffered = {
                start: function(index) {
                    return 0;
                },
                end: function (index) {
                    return bufferedTime;
                },
                length: 1
            };
            
        }
        
        // send event up the chain
        pluginMediaElement.dispatchEvent(obj.type, obj);
    },    
    
    iFrameReady: function() {
        
        this.isLoaded = true;
        this.isIframeLoaded = true;
        
        while (this.iframeQueue.length > 0) {
            var settings = this.iframeQueue.pop();
            this.createIframe(settings);
        }    
    },
    
    // FLASH!
    flashPlayers: {},
    createFlash: function(settings) {
        
        this.flashPlayers[settings.pluginId] = settings;
        
        /*
        settings.container.innerHTML =
            '<object type="application/x-shockwave-flash" id="' + settings.pluginId + '" data="//www.youtube.com/apiplayer?enablejsapi=1&amp;playerapiid=' + settings.pluginId  + '&amp;version=3&amp;autoplay=0&amp;controls=0&amp;modestbranding=1&loop=0" ' +
                'width="' + settings.width + '" height="' + settings.height + '" style="visibility: visible; ">' +
                '<param name="allowScriptAccess" value="always">' +
                '<param name="wmode" value="transparent">' +
            '</object>';
        */

        var specialIEContainer,
            youtubeUrl = 'http://www.youtube.com/apiplayer?enablejsapi=1&amp;playerapiid=' + settings.pluginId  + '&amp;version=3&amp;autoplay=0&amp;controls=0&amp;modestbranding=1&loop=0';
            
        if (mejs.MediaFeatures.isIE) {
            
            specialIEContainer = document.createElement('div');
            settings.container.appendChild(specialIEContainer);
            specialIEContainer.outerHTML = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="//download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab" ' +
'id="' + settings.pluginId + '" width="' + settings.width + '" height="' + settings.height + '">' +
    '<param name="movie" value="' + youtubeUrl + '" />' +
    '<param name="wmode" value="transparent" />' +
    '<param name="allowScriptAccess" value="always" />' +
    '<param name="allowFullScreen" value="true" />' +
'</object>';
        } else {
        settings.container.innerHTML =
            '<object type="application/x-shockwave-flash" id="' + settings.pluginId + '" data="' + youtubeUrl + '" ' +
                'width="' + settings.width + '" height="' + settings.height + '" style="visibility: visible; ">' +
                '<param name="allowScriptAccess" value="always">' +
                '<param name="wmode" value="transparent">' +
            '</object>';
        }        
        
    },
    
    flashReady: function(id) {
        var
            settings = this.flashPlayers[id],
            player = document.getElementById(id),
            pluginMediaElement = settings.pluginMediaElement;
        
        // hook up and return to MediaELementPlayer.success    
        pluginMediaElement.pluginApi = 
        pluginMediaElement.pluginElement = player;
        mejs.MediaPluginBridge.initPlugin(id);
        
        // load the youtube video
        player.cueVideoById(settings.videoId);
        
        var callbackName = settings.containerId + '_callback'
        
        window[callbackName] = function(e) {
            mejs.YouTubeApi.handleStateChange(e, player, pluginMediaElement);
        }
        
        player.addEventListener('onStateChange', callbackName);
        
        setInterval(function() {
            mejs.YouTubeApi.createEvent(player, pluginMediaElement, 'timeupdate');
        }, 250);
    },
    
    handleStateChange: function(youTubeState, player, pluginMediaElement) {
        switch (youTubeState) {
            case -1: // not started
                pluginMediaElement.paused = true;
                pluginMediaElement.ended = true;
                mejs.YouTubeApi.createEvent(player, pluginMediaElement, 'loadedmetadata');
                //createYouTubeEvent(player, pluginMediaElement, 'loadeddata');
                break;
            case 0:
                pluginMediaElement.paused = false;
                pluginMediaElement.ended = true;
                mejs.YouTubeApi.createEvent(player, pluginMediaElement, 'ended');
                break;
            case 1:
                pluginMediaElement.paused = false;
                pluginMediaElement.ended = false;                
                mejs.YouTubeApi.createEvent(player, pluginMediaElement, 'play');
                mejs.YouTubeApi.createEvent(player, pluginMediaElement, 'playing');
                break;
            case 2:
                pluginMediaElement.paused = true;
                pluginMediaElement.ended = false;                
                mejs.YouTubeApi.createEvent(player, pluginMediaElement, 'pause');
                break;
            case 3: // buffering
                mejs.YouTubeApi.createEvent(player, pluginMediaElement, 'progress');
                break;
            case 5:
                // cued?
                break;                        
            
        }            
        
    }
}
// IFRAME
function onYouTubePlayerAPIReady() {
    mejs.YouTubeApi.iFrameReady();
}
// FLASH
function onYouTubePlayerReady(id) {
    mejs.YouTubeApi.flashReady(id);
}

window.mejs = mejs;
window.MediaElement = mejs.MediaElement;
if (typeof jQuery != 'undefined') {
    mejs.$ = jQuery;
} else if (typeof ender != 'undefined') {
    mejs.$ = ender;
}
(function ($) {

    // default player values
    mejs.MepDefaults = {
        // url to poster (to fix iOS 3.x)
        poster: '',
        // default if the <video width> is not specified
        defaultVideoWidth: 480,
        // default if the <video height> is not specified
        defaultVideoHeight: 270,
        // if set, overrides <video width>
        videoWidth: -1,
        // if set, overrides <video height>
        videoHeight: -1,
        // default if the user doesn't specify
        defaultAudioWidth: 400,
        // default if the user doesn't specify
        defaultAudioHeight: 30,
        // width of audio player
        audioWidth: -1,
        // height of audio player
        audioHeight: -1,
        // initial volume when the player starts (overrided by user cookie)
        startVolume: 0.8,
        // useful for <audio> player loops
        loop: false,
        // stop at the end instead of resetting the playhead
        rewindAtEnd: false,
        // show the on-screen play button
        showOnScreenPlayButton: false,
        // resize to media dimensions
        enableAutosize: true,
        // forces the hour marker (##:00:00)
        alwaysShowHours: false,
        // show framecount in timecode (##:00:00:00)
        showTimecodeFrameCount: false,
        // used when showTimecodeFrameCount is set to true
        framesPerSecond: 25,

        // custom subtitles target location
        subtitlesLocation: 'default',
        // tracks object
        tracks: [],
        // automatically calculate the width of the progress bar based on the sizes of other elements
        autosizeProgress: true,
        // controls are fixed to bottom of video
        fixedControls: false,
        // controls are compact
        compactControls: false,
        // controls user interface style
        controlsAppearance: 'tall',
        // Volume orientation
        volumeBarOrientation: 'vertical',
        // Hide controls when playing and mouse is not over the video
        alwaysShowControls: false,
        // Force show controls to start, ignored if alwaysShowControls is true
        showControlsToStart: false,
        // force iPad's native controls
        iPadUseNativeControls: false,
        // force iPhone's native controls
        iPhoneUseNativeControls: false,
        // force Android's native controls
        AndroidUseNativeControls: false,
        // features to show
        features: ['playpause','current','progress','duration','speed','tracks','volume','fullscreen','analytics'],
        // only for dynamic
        isVideo: true,
        // time to wait for buffering to complete when switching sources
        timeLimitForBuffering: 1000,
        // turns keyboard support on and off for this instance
        enableKeyboard: true,

        // whenthis player starts, it will pause other players
        pauseOtherPlayers: true,

        // array of keyboard actions such as play pause
        keyActions: [
                {
                        keys: [
                                32, // SPACE
                                179 // GOOGLE play/pause button
                              ],
                        action: function(player, media) {
                                if (media.paused || media.ended) {
                                        media.play();
                                } else {
                                        media.pause();
                                }
                        }
                },
                {
                        keys: [38], // UP
                        action: function(player, media) {
                                var newVolume = Math.min(media.volume + 0.1, 1);
                                media.setVolume(newVolume);
                        }
                },
                {
                        keys: [40], // DOWN
                        action: function(player, media) {
                                var newVolume = Math.max(media.volume - 0.1, 0);
                                media.setVolume(newVolume);
                        }
                },
                {
                        keys: [
                                37, // LEFT
                                227 // Google TV rewind
                        ],
                        action: function(player, media) {
                                if (!isNaN(media.duration) && media.duration > 0) {
                                        if (player.isVideo) {
                                                player.showControls();
                                                player.startControlsTimer();
                                        }

                                        // 5%
                                        var newTime = Math.max(media.currentTime - (media.duration * 0.05), 0);
                                        media.setCurrentTime(newTime);
                                }
                        }
                },
                {
                        keys: [
                                39, // RIGHT
                                228 // Google TV forward
                        ],
                        action: function(player, media) {
                                if (!isNaN(media.duration) && media.duration > 0) {
                                        if (player.isVideo) {
                                                player.showControls();
                                                player.startControlsTimer();
                                        }

                                        // 5%
                                        var newTime = Math.min(media.currentTime + (media.duration * 0.05), media.duration);
                                        media.setCurrentTime(newTime);
                                }
                        }
                },
                {
                        keys: [70], // f
                        action: function(player, media) {
                                if (typeof player.enterFullScreen != 'undefined') {
                                        if (player.isFullScreen) {
                                                player.exitFullScreen();
                                        } else {
                                                player.enterFullScreen();
                                        }
                                }
                        }
                }
        ]
    };

    mejs.mepIndex = 0;

    mejs.players = [];

    // wraps a MediaElement object in player controls
    mejs.MediaElementPlayer = function(node, o) {
        // enforce object, even without "new" (via John Resig)
        if ( !(this instanceof mejs.MediaElementPlayer) ) {
            return new mejs.MediaElementPlayer(node, o);
        }

        var t = this;

        // these will be reset after the MediaElement.success fires
        t.$media = t.$node = $(node);
        t.node = t.media = t.$media[0];

        // check for existing player
        if (typeof t.node.player != 'undefined') {
            return t.node.player;
        } else {
            // attach player to DOM node for reference
            t.node.player = t;
        }


        // try to get options from data-mejsoptions
        if (typeof o == 'undefined') {
            o = t.$node.data('mejsoptions');
        }

        // extend default options
        t.options = $.extend({},mejs.MepDefaults,o);

        // add to player array (for focus events)
        mejs.players.push(t);

        // start up
        t.init();

        return t;
    };

    // actual player
    mejs.MediaElementPlayer.prototype = {

        hasFocus: false,

        controlsAreVisible: true,

        init: function() {

            var
                t = this,
                mf = mejs.MediaFeatures,
                // options for MediaElement (shim)
                meOptions = $.extend(true, {}, t.options, {
                    success: function(media, domNode) { t.meReady(media, domNode); },
                    error: function(e) { t.handleError(e);}
                }),
                tagName = t.media.tagName.toLowerCase();

            t.isDynamic = (tagName !== 'audio' && tagName !== 'video');

            if (t.isDynamic) {
                // get video from src or href?
                t.isVideo = t.options.isVideo;
            } else {
                t.isVideo = (tagName !== 'audio' && t.options.isVideo);
            }

            if (t.options.audioOnly === true) {
                t.isVideo = false;
            }

            t.isGuidedDiscussion = t.$media.closest('.socratic').length ? true : false;
            t.isOyster = t.$media.closest('.oyster').length ? true : false;

            var parentLearningObjectClass = '';
            parentLearningObjectClass += t.isGuidedDiscussion ? ' mejs-guided-discussion' : '';
            parentLearningObjectClass += t.isOyster ? ' mejs-oyster' : '';

            // use native controls in iPad, iPhone, and Android
            if ((mf.isiPad && t.options.iPadUseNativeControls) || (mf.isiPhone && t.options.iPhoneUseNativeControls)) {

                // add controls and stop
                t.$media.attr('controls', 'controls');

                // attempt to fix iOS 3 bug
                //t.$media.removeAttr('poster');
                                // no Issue found on iOS3 -ttroxell

                // override Apple's autoplay override for iPads
                if (mf.isiPad && t.media.getAttribute('autoplay') !== null) {
                    t.media.load();
                    t.media.play();
                }

            } else if (mf.isAndroid && t.AndroidUseNativeControls) {

                // leave default player

            } else {

                // DESKTOP: use MediaElementPlayer controls

                // remove native controls
                t.$media.removeAttr('controls');

                // player array index
                var playerArrayIndex = mejs.mepIndex;

                // unique ID
                t.id = 'mep_' + mejs.mepIndex++;

                // build container
                t.container =
                    $('<div role="region" id="' + t.id + '" data-player-index="' + playerArrayIndex + '" class="mejs-container'+
                            parentLearningObjectClass +'" oncontextmenu="return false;" aria-label="Video Player" tabindex="0">'+
                        '<div class="mejs-inner" role="application">'+
                            '<div class="mejs-mediaelement">'+
                                '<div class="mejs-video-position"></div>'+
                            '</div>'+
                            '<div class="mejs-layers"></div>'+
                            '<div class="mejs-controls"></div>'+
                            '<div class="mejs-clear"></div>'+
                        '</div>' +
                    '</div>')
                    .addClass(t.$media[0].className)
                    .insertBefore(t.$media);

                // add classes for user and content
                t.container.addClass(
                    (mf.isAndroid ? 'mejs-android ' : '') +
                    (mf.isiOS ? 'mejs-ios ' : '') +
                    (mf.isiPad ? 'mejs-ipad ' : '') +
                    (mf.isiPhone ? 'mejs-iphone ' : '') +
                    (t.isVideo ? 'mejs-video ' : 'mejs-audio ')
                );


                // move the <video/video> tag into the right spot
                if (mf.isiOS) {

                    // sadly, you can't move nodes in iOS, so we have to destroy and recreate it!
                    var $newMedia = t.$media.clone();

                    t.container.find('.mejs-video-position').append($newMedia);

                    t.$media.remove();
                    t.$node = t.$media = $newMedia;
                    t.node = t.media = $newMedia[0];

                } else {

                    // normal way of moving it into place (doesn't work on iOS)
                    t.container.find('.mejs-video-position').append(t.$media);
                }

                // find parts
                t.controls = t.container.find('.mejs-controls');
                t.layers = t.container.find('.mejs-layers');

                // // controls ui
                // t.controls.addClass('mejs-'+t.options.controlsAppearance+'-controls');

                // if (t.options.compactControls)
                //     t.controls.addClass('mejs-compact-controls');

                // if (t.options.fixedControls)
                //     t.controls.addClass('mejs-fixed-controls');
                // else
                //     t.controls.addClass('mejs-floating-controls');

                if (t.options.alwaysShowControls || t.options.fixedControls)
                    t.options.showControlsToStart = false;

                if (t.options.showControlsToStart && !t.options.alwaysShowControls)
                    t.options.alwaysShowControls = true;

                // removes media from keyboard order

                t.$media.attr("tabindex", "-1");

                // determine the size

                /* size priority:
                    (1) videoWidth (forced),
                    (2) style="width;height;"
                    (3) width attribute,
                    (4) defaultVideoWidth (for unspecified cases)
                */

                var capsTagName = tagName.substring(0,1).toUpperCase() + tagName.substring(1);

                if (t.options[tagName + 'Width'] > 0 || t.options[tagName + 'Width'].toString().indexOf('%') > -1) {
                    t.width = t.options[tagName + 'Width'];
                } else if (t.media.style.width !== '' && t.media.style.width !== null) {
                    t.width = t.media.style.width;
                } else if (t.media.getAttribute('width') !== null) {
                    t.width = t.$media.attr('width');
                } else {
                    t.width = t.options['default' + capsTagName + 'Width'];
                }

                if (t.options[tagName + 'Height'] > 0 || t.options[tagName + 'Height'].toString().indexOf('%') > -1) {
                    t.height = t.options[tagName + 'Height'];
                } else if (t.media.style.height !== '' && t.media.style.height !== null) {
                    t.height = t.media.style.height;
                } else if (t.$media[0].getAttribute('height') !== null) {
                    t.height = t.$media.attr('height');
                } else {
                    t.height = t.options['default' + capsTagName + 'Height'];
                }

                // set the size, while we wait for the plugins to load below
                if (t.options.fixedControls) {
                    t.controls.width(t.width);
                }
                t.setPlayerSize(t.width, t.height);

                // create MediaElementShim
                meOptions.pluginWidth = t.height;
                meOptions.pluginHeight = t.width;
            }

            // create MediaElement shim
            mejs.MediaElement(t.$media[0], meOptions);

        },

        showControls: function(doAnimation) {

            var t = this;

            if (!t.options.fixedControls) {
                if (t.controls.hasClass('mejs-hide-controls')) {
                    t.controls.removeClass('mejs-hide-controls');
                }
                t.setControlsSize();
            }

            t.controlsAreVisible = true;

        },

        hideControls: function(doAnimation) {

            var t = this;

            if (!t.options.fixedControls) {

                if (!t.options.alwaysShowControls) {
                    t.controls.addClass('mejs-hide-controls');
                    t.controlsAreVisible = false;
                }

            }

        },

        controlsTimer: null,

        startControlsTimer: function(timeout) {

            var t = this;

            timeout = typeof timeout != 'undefined' ? timeout : 1500;

            t.killControlsTimer('start');

            t.controlsTimer = setTimeout(function() {
                t.hideControls();
                t.killControlsTimer('hide');
            }, timeout);
        },

        killControlsTimer: function(src) {

            var t = this;

            if (t.controlsTimer !== null) {
                clearTimeout(t.controlsTimer);
                delete t.controlsTimer;
                t.controlsTimer = null;
            }
        },

        controlsEnabled: true,

        disableControls: function() {
            var t= this;

            t.killControlsTimer();
            t.hideControls(false);
            this.controlsEnabled = false;
        },

        enableControls: function() {
            var t= this;

            t.showControls(false);

            t.controlsEnabled = true;
        },


        // Sets up all controls and events
        meReady: function(media, domNode) {

            var t = this,
                mf = mejs.MediaFeatures,
                autoplayAttr = domNode.getAttribute('autoplay'),
                autoplay = !(typeof autoplayAttr == 'undefined' || autoplayAttr === null || autoplayAttr === 'false'),
                featureIndex,
                feature;

            // make sure it can't create itself again if a plugin reloads
            if (t.created)
                return;
            else
                t.created = true;

            t.media = media;
            t.domNode = domNode;

            if (!(mf.isAndroid && t.options.AndroidUseNativeControls) && !(mf.isiPad && t.options.iPadUseNativeControls) && !(mf.isiPhone && t.options.iPhoneUseNativeControls)) {

                // two built in features
                t.buildposter(t, t.controls, t.layers, t.media);
                t.buildkeyboard(t, t.controls, t.layers, t.media);
                t.buildoverlays(t, t.controls, t.layers, t.media);

                // grab for use by features
                t.findTracks();

                // add user-defined features/controls
                settingsBuilt = false;
                for (featureIndex in t.options.features) {
                    feature = t.options.features[featureIndex];
                    if (feature == 'speed' || feature == 'tracks') {
                        if (!settingsBuilt) {
                            if (t['buildsettings']) {
                                try {
                                    t['buildsettings'](t, t.controls, t.layers, t.media);
                                } catch (e) {
                                    console.log(e);
                                }
                                settingsBuilt = true;
                            }
                        }
                    }
                    if (t['build' + feature]) {
                        try {
                            t['build' + feature](t, t.controls, t.layers, t.media);
                        } catch (e) {
                            // TODO: report control error
                            //throw e;
                            //console.log('error building ' + feature);
                            //console.log(e);
                        }
                    }
                }

                t.container.trigger('controlsready');

                // reset all layers and controls
                t.setPlayerSize(t.width, t.height);
                t.setControlsSize();


                // controls fade
                if (t.isVideo) {

                    if (mejs.MediaFeatures.hasTouch) {

                        // for touch devices (iOS, Android)
                        // show/hide without animation on touch

                        t.$media.bind('touchstart', function() {

                            // toggle controls
                            if (t.$media.find('.mejs-settings-selector').length && t.$media.find('.mejs-settings-selector').css('visibility')=='visible') {
                                return;
                            } else if (t.controlsAreVisible) {
                                t.hideControls(false);
                            } else {
                                if (t.controlsEnabled) {
                                    t.showControls(false);
                                }
                            }
                        });

                    } else {
                        // click controls
                        var clickElement = (t.media.pluginType == 'native') ? t.$media : $(t.media.pluginElement);

                        // click to play/pause
                        clickElement.click(function() {
                            if (media.paused) {
                                media.play();
                            } else {
                                media.pause();
                            }
                        });


                        // show/hide controls if controls appearance is not 'fixed'
                        if (!t.options.fixedControls) {
                            t.container
                                .bind('mouseenter mouseover', function () {
                                    if (t.controlsEnabled) {
                                        if (!t.options.alwaysShowControls) {
                                            t.killControlsTimer('enter');
                                            t.showControls();
                                            t.startControlsTimer(3000);
                                        }
                                    }
                                })
                                .bind('mousemove', function() {
                                    if (t.controlsEnabled) {
                                        if (!t.controlsAreVisible) {
                                            t.showControls();
                                        }
                                        //t.killControlsTimer('move');
                                        if (!t.options.alwaysShowControls) {
                                            t.startControlsTimer(3000);
                                        }
                                    }
                                })
                                .bind('mouseleave', function () {
                                    if (t.controlsEnabled) {
                                        // if (!t.media.paused && !t.options.alwaysShowControls) {
                                        if (!t.options.alwaysShowControls) {
                                            t.startControlsTimer(1000);
                                        }
                                    }
                                });
                            // check for autoplay
                            if (autoplay && !t.options.alwaysShowControls)
                                t.hideControls();
                        }

                        // // show/hide controls
                        // t.container
                        //     .bind('mouseenter mouseover', function () {
                        //         if (t.controlsEnabled) {
                        //             if (!t.options.alwaysShowControls) {
                        //                 t.killControlsTimer('enter');
                        //                 t.showControls();
                        //                 t.startControlsTimer(2500);
                        //             }
                        //         }
                        //     })
                        //     .bind('mousemove', function() {
                        //         if (t.controlsEnabled) {
                        //             if (!t.controlsAreVisible) {
                        //                 t.showControls();
                        //             }
                        //             //t.killControlsTimer('move');
                        //             if (!t.options.alwaysShowControls) {
                        //                 t.startControlsTimer(2500);
                        //             }
                        //         }
                        //     })
                        //     .bind('mouseleave', function () {
                        //         if (t.controlsEnabled) {
                        //             if (!t.media.paused && !t.options.alwaysShowControls) {
                        //                 t.startControlsTimer(1000);
                        //             }
                        //         }
                        //     });
                    }

                    // check for autoplay
                    if (autoplay && !t.options.alwaysShowControls) {
                        t.hideControls();
                    }

                    // resizer
                    if (t.options.enableAutosize) {
                        t.media.addEventListener('loadedmetadata', function(e) {
                            // if the <video height> was not set and the options.videoHeight was not set
                            // then resize to the real dimensions
                            if (t.options.videoHeight <= 0 && t.domNode.getAttribute('height') === null && !isNaN(e.target.videoHeight)) {
                                t.setPlayerSize(e.target.videoWidth, e.target.videoHeight);
                                t.setControlsSize();
                                t.media.setVideoSize(e.target.videoWidth, e.target.videoHeight);
                            }
                        }, false);
                    }
                }

                // EVENTS

                // FOCUS: when a video starts playing, it takes focus from other players (possibily pausing them)
                media.addEventListener('play', function() {

                        // go through all other players
                        for (var i=0, il=mejs.players.length; i<il; i++) {
                            var p = mejs.players[i];
                            if (p.id != t.id && t.options.pauseOtherPlayers && !p.paused && !p.ended) {
                                p.pause();
                            }
                            p.hasFocus = false;
                        }

                        t.hasFocus = true;
                },false);


                // ended for all
                t.media.addEventListener('ended', function (e) {
                    if (t.options.rewindAtEnd) {
                        try{
                            t.media.setCurrentTime(0);
                        } catch (exp) {

                        }
                        t.media.pause();
                    }

                    if (t.setProgressRail)
                        t.setProgressRail();
                    if (t.setCurrentRail)
                        t.setCurrentRail();

                    if (t.options.rewindAtEnd && t.options.loop) {
                        t.media.play();
                    } else if (!t.options.alwaysShowControls && t.controlsEnabled) {
                        t.showControls();
                    }
                }, false);

                // resize on the first play
                t.media.addEventListener('loadedmetadata', function(e) {
                    if (t.updateDuration) {
                        t.updateDuration();
                    }
                    if (t.updateCurrent) {
                        t.updateCurrent();
                    }

                    if (!t.isFullScreen) {
                        t.setPlayerSize(t.width, t.height);
                        t.setControlsSize();
                    }
                }, false);


                // webkit has trouble doing this without a delay
                setTimeout(function () {
                    t.setPlayerSize(t.width, t.height);
                    t.setControlsSize();
                }, 50);

                // adjust controls whenever window sizes (used to be in fullscreen only)
                $(window).resize(function() {

                    // don't resize for fullscreen mode
                    if ( !(t.isFullScreen || (mejs.MediaFeatures.hasTrueNativeFullScreen && document.webkitIsFullScreen)) ) {
                        t.setPlayerSize(t.width, t.height);
                    }

                    // adjust controls when they are not fixed
                    if (!t.options.fixedControls) {
                        t.setControlsSize();
                    }
                });

                // TEMP: needs to be moved somewhere else
                if (t.media.pluginType == 'youtube' || !t.options.showOnScreenPlayButton) {
                    t.container.find('.mejs-overlay-play').hide();
                }
            }

            // force autoplay for HTML5
            if (autoplay && media.pluginType == 'native') {
                media.load();
                media.play();
            }


            if (t.options.success) {

                if (typeof t.options.success == 'string') {
                        window[t.options.success](t.media, t.domNode, t);
                } else {
                        t.options.success(t.media, t.domNode, t);
                }
            }
        },

        handleError: function(e) {
            var t = this;

            t.controls.hide();

            // Tell user that the file cannot be played
            if (t.options.error) {
                t.options.error(e);
            }
        },

        setPlayerSize: function(width, height) {

            var t = this;

            if (typeof width != 'undefined')
                t.width = width;

            if (typeof height != 'undefined')
                t.height = height;

            // detect 100% mode
            if (t.container.hasClass('mejs-container-fullscreen')) {

                // do we have the native dimensions yet?
                // var
                //     nativeWidth = (t.media.videoWidth && t.media.videoWidth > 0) ? t.media.videoWidth : t.options.defaultVideoWidth,
                //     nativeHeight = (t.media.videoHeight && t.media.videoHeight > 0) ? t.media.videoHeight : t.options.defaultVideoHeight,
                //     parentWidth = t.container.parent().width(),
                //     newHeight = parseInt(parentWidth * nativeHeight/nativeWidth, 10);

                // if (t.container.parent()[0].tagName.toLowerCase() === 'body') {
                //     parentWidth = $(window).width();
                //     newHeight = $(window).height();
                // }

                // // set outer container size
                // t.container.width(parentWidth);

                // $('.mejs-mediaelement', t.container).height(newHeight);

                // // set native <video>
                // t.$media.width('100%').height('100%');

                // // set shims
                // t.container.find('object, embed, iframe').width('100%').height('100%');

                // // if shim is ready, send the size to the embeded plugin
                // if (t.media.setVideoSize)
                //     t.media.setVideoSize(parentWidth, newHeight);

                // // set the layers
                // t.layers.width('100%').height('100%');

            } else {

                t.container.width(t.width);

                $('.mejs-mediaelement', t.container).height(t.height);

                t.layers.width(t.width).height(t.height);

                // If the player is not wide, lots of side effects can occur. Add a flag
                var container = $('.mejs-container');

                if (t.width <= 300)
                    container.addClass('mejs-tiny');
                else
                    container.removeClass('mejs-tiny');

            }

            // console.log($('.mejs-mediaelement', t.container).width());
            // console.log($('.mejs-mediaelement', t.container).height());

            // t.setVideoMasking();

        },

        setPosterSize: function(width, height) {

            var posterContainer = $('.mejs-poster', this.container),
                posterImage = $('img', posterContainer);

            if (width == 'auto') {
                if (posterImage.width() > 0 && posterImage.height() > 0) {
                    width = posterImage.width() / posterImage.height() * height;
                }
                posterImage.width(width);
            } else {
                if (posterImage.width() > 0 && posterImage.height() > 0) {
                    height = posterImage.height() / posterImage.width() * width;
                }
                posterImage.width(width);
            }

        },

        setControlsSize: function() {

            var t = this,
                usedWidth = 0,
                railWidth = 0,
                rail = t.controls.find('.mejs-time-rail'),
                total = t.controls.find('.mejs-time-total'),
                current = t.controls.find('.mejs-time-current'),
                loaded = t.controls.find('.mejs-time-loaded'),
                others = rail.siblings();

            // remove all previous ui classes before redefining
            t.controls.removeClass('mejs-desktop-controls mejs-device-controls mejs-floating-controls mejs-fixed-controls mejs-tall-controls mejs-short-controls mejs-compact-controls');

            // determine desktop or device
            if (mejs.MediaFeatures.hasTouch) {
                t.controls.addClass('mejs-device-controls');
            } else {
                t.controls.addClass('mejs-desktop-controls');
            }

            // add short or tall appearance class
            t.controls.addClass('mejs-'+t.options.controlsAppearance+'-controls');

            // add compact controls class
            if (t.options.compactControls)
                t.controls.addClass('mejs-compact-controls');

            // add fixed or floating controls class
            if (t.options.fixedControls) {
                t.controls.addClass('mejs-fixed-controls');
                t.controls.removeClass('mejs-hide-controls');
            }
            else
                t.controls.addClass('mejs-floating-controls');

        },

        buildposter: function(player, controls, layers, media) {

            var t = this,
                poster = $('<div class="mejs-poster mejs-layer"></div>').appendTo(layers),
                posterUrl = player.$media.attr('posterUrl');

            // prioriy goes to option
            // this is useful if you need to support iOS 3.x (iOS completely fails with poster)
            if (player.options.poster !== '')
                posterUrl = player.options.poster;

            // second, try the real poster
            if (posterUrl !== '' && posterUrl != null)
                t.setPoster(posterUrl);
            else
                poster.hide();

            t.container.find('.mejs-poster').find('img').attr('tabindex', -1).attr('alt', '');

            if (player.isVideo) {
                media.addEventListener('play', function() {
                    poster.hide();
                }, false);
            }

        },

        setPoster: function(url) {
            var t = this,
                posterDiv = t.container.find('.mejs-poster'),
                posterImg = posterDiv.find('img');
            if (posterImg.length === 0) {
                posterImg = $('<img />').appendTo(posterDiv);
            }
            posterImg.on('error', function(e) {
                console.warn("Failed to load video thumbnail.");
                posterDiv.hide();
            })
            posterImg.attr('src', url);
        },

        buildoverlays: function(player, controls, layers, media) {
            if (!player.isVideo)
                return;

            var
            loading =
                $('<div class="mejs-overlay mejs-layer">'+
                    '<div class="mejs-overlay-loading"><span></span></div>'+
                '</div>')
                .hide() // start out hidden
                .appendTo(layers),
            error =
                $('<div class="mejs-overlay mejs-layer">'+
                    '<div class="mejs-overlay-error"></div>'+
                '</div>')
                .hide() // start out hidden
                .appendTo(layers),
            // this needs to come last so it's on top
            bigPlay =
                $('<div class="mejs-overlay mejs-layer mejs-overlay-play">'+
                    '<div class="mejs-overlay-button"></div>'+
                '</div>')
                .appendTo(layers)
                .click(function() {
                    if (media.paused) {
                        media.play();
                    } else {
                        media.pause();
                    }
                });

            if (!player.options.showOnScreenPlayButton) {
                bigPlay.remove();
            }

            // show/hide big play button
            media.addEventListener('play',function() {
                bigPlay.hide();
                loading.hide();
                controls.find('.mejs-time-buffering').hide();
                error.hide();
            }, false);

            media.addEventListener('playing', function() {
                bigPlay.hide();
                loading.hide();
                controls.find('.mejs-time-buffering').hide();
                error.hide();
            }, false);

            media.addEventListener('seeking', function() {
                loading.show();
                controls.find('.mejs-time-buffering').show();
            }, false);

            media.addEventListener('seeked', function() {
                loading.hide();
                controls.find('.mejs-time-buffering').hide();
            }, false);

            media.addEventListener('pause',function() {
                if (!mejs.MediaFeatures.isiPhone) {
                    bigPlay.show();
                }
            }, false);

            media.addEventListener('waiting', function() {
                loading.show();
                controls.find('.mejs-time-buffering').show();
            }, false);


            // show/hide loading
            media.addEventListener('loadeddata',function() {
                loading.show();
                controls.find('.mejs-time-buffering').show();
            }, false);
            media.addEventListener('canplay',function() {
                loading.hide();
                controls.find('.mejs-time-buffering').hide();
            }, false);

            // error handling
            media.addEventListener('error',function() {
                loading.hide();
                controls.find('.mejs-time-buffering').hide();
                error.show();
                error.find('mejs-overlay-error').html("Error loading this resource");
            }, false);
        },

        buildkeyboard: function(player, controls, layers, media) {

                var t = this;
                // listen for key presses
                t.container.keyup(function(e) {

                    if (player.hasFocus && player.options.enableKeyboard) {

                        // find a matching key
                        for (var i=0, il=player.options.keyActions.length; i<il; i++) {
                            var keyAction = player.options.keyActions[i];

                            for (var j=0, jl=keyAction.keys.length; j<jl; j++) {
                                if (e.keyCode == keyAction.keys[j]) {
                                    if(e.target.tagName.toLowerCase() != 'input') {
                                        e.preventDefault();
                                        keyAction.action(player, media);
                                        return false;
                                    }
                                }
                            }
                        }
                    }

                    return true;
                });

                // check if user has navigated into the player region, and provides focus to player
                t.container.keydown(function(event) {
                    if ($(":focus").closest('.mejs-container').length > 0) {
                        player.hasFocus = true;
                        if (event.target.tagName.toLowerCase() != 'input' && event.keyCode > 36 && event.keyCode < 41){
                            return false;
                        }
                    }
                });

                // check if user has navigated away from player region, then kill its focus
                t.container.keydown(function(event) {
                    if ($(event.target).closest('.mejs-container').length === 0) {
                        player.hasFocus = false;
                    }
                });

                // check if someone clicked outside a player region, then kill its focus
                t.container.click(function(event) {
                    if ($(event.target).closest('.mejs-container').length === 0) {
                        player.hasFocus = false;
                    }
                });

        },

        findTracks: function() {

            var t = this,
                tracktags = t.$media.find('track');
            // store for use by plugins
            t.tracks = [];

            tracktags.each(function(index, track) {

                track = $(track);

                t.tracks.push({
                    trackID: index,
                    srclang: track.attr('srclang').toLowerCase(),
                    src: track.attr('src'),
                    kind: track.attr('kind'),
                    label: track.attr('label') || '',
                    entries: [],
                    isLoaded: false
                });

            });
        },
        changeSkin: function(className) {
            this.container[0].className = 'mejs-container ' + className;
            this.setPlayerSize(this.width, this.height);
            this.setControlsSize();
        },
        play: function() {
            this.media.play();
        },
        pause: function() {
            this.media.pause();
        },
        load: function() {
            this.media.load();
        },
        setMuted: function(muted) {
            this.media.setMuted(muted);
        },
        setCurrentTime: function(time) {
            this.media.setCurrentTime(time);
        },
        getCurrentTime: function() {
            return this.media.currentTime;
        },
        setVolume: function(volume) {
            this.media.setVolume(volume);
        },
        getVolume: function() {
            return this.media.volume;
        },
        setSrc: function(src) {
            this.media.setSrc(src);
        },
        remove: function() {
            var t = this;

            if (t.media.pluginType == 'flash') {
                t.media.remove();
            } else if (t.media.pluginType == 'native') {
                t.media.prop('controls', true);
            }

            // grab video and put it back in place
            if (!t.isDynamic) {
                t.$node.insertBefore(t.container);
            }

            t.container.remove();
        }
    };

    // turn into jQuery plugin
    if (typeof jQuery != 'undefined') {
        jQuery.fn.mediaelementplayer = function (options) {
            return this.each(function () {
                new mejs.MediaElementPlayer(this, options);
            });
        };
    }

    $(document).ready(function() {
        // auto enable using JSON attribute
        $('.mejs-player').mediaelementplayer();
    });

    // push out to window
    window.MediaElementPlayer = mejs.MediaElementPlayer;

})(mejs.$);

(function($) {

    $.extend(mejs.MepDefaults, {
        playpauseText: 'Play/Pause'
    });

    // PLAY/pause BUTTON
    $.extend(MediaElementPlayer.prototype, {
        buildplaypause: function(player, controls, layers, media) {
            var
                t = this,
                play =
                $('<div class="mejs-button mejs-playpause-button mejs-play" >' +
                    '<button id="playbutton_'+t.id+'" type="button"  title="play">'+
                        '<span class="mejs-out-of-sight" aria-live="assertive">play</span>'+
                    '</button>' +
                '</div>')
                .appendTo(controls);

            play.bind('click touchstart', function(e) {
                var
                    target = $(e.target),
                    targetContainer = target.closest('.mejs-controls');
                e.preventDefault();

                if (!targetContainer.hasClass('mejs-hide-controls') || !targetContainer.hasClass('mejs-device-controls')) {

                    e.preventDefault();

                    if (media.paused) {
                        media.play();
                        if (mejs.MediaFeatures.isiOS && player.isVideo ) { t.container.find('.mejs-poster').hide();}
                    } else {
                        media.pause();
                    }

                    return false;

                }
                return false;

            });

            media.addEventListener('play',function() {
                play.removeClass('mejs-play').addClass('mejs-pause');
                var $playPause = $("#playbutton_"+t.id);
                $playPause.attr('title', 'pause');
                $playPause.find(".mejs-out-of-sight").text("pause");
                if (t.options.showControlsToStart) {
                    t.options.alwaysShowControls = false;
                }
            }, false);
            media.addEventListener('playing',function() {
                play.removeClass('mejs-play').addClass('mejs-pause');
            }, false);


            media.addEventListener('pause',function() {
                play.removeClass('mejs-pause').addClass('mejs-play');
                var $playPause = $("#playbutton_"+t.id);
                $playPause.attr('title', 'play');
                $playPause.find(".mejs-out-of-sight").text("play");
            }, false);
            media.addEventListener('paused',function() {
                play.removeClass('mejs-pause').addClass('mejs-play');
            }, false);
        }
    });

})(mejs.$);

(function($) {

    $.extend(mejs.MepDefaults, {
        stopText: 'Stop'
    });

    // STOP BUTTON
    $.extend(MediaElementPlayer.prototype, {
        buildstop: function(player, controls, layers, media) {
            var t = this,
                stop =
                $('<div class="mejs-button mejs-stop-button mejs-stop">' +
                    '<button type="button"  title="' + t.options.stopText + '"></button>' +
                '</div>')
                .appendTo(controls)
                .click(function() {
                    if (!media.paused) {
                        media.pause();
                    }
                    if (media.currentTime > 0) {
                        media.setCurrentTime(0);
                        controls.find('.mejs-time-current').width('0px');
                        controls.find('.mejs-time-handle').css('left', '0px');
                        controls.find('.mejs-time-float-current').html( mejs.Utility.secondsToTimeCode(0) );
                        controls.find('.mejs-currenttime').html( mejs.Utility.secondsToTimeCode(0) );
                        layers.find('.mejs-poster').show();
                    }
                });
        }
    });

})(mejs.$);

(function($) {
    // progress/loaded bar
    $.extend(MediaElementPlayer.prototype, {
        buildprogress: function(player, controls, layers, media) {

            $('<div class="mejs-time-rail">'+
                '<div class="mejs-time-total">'+
                    '<span class="mejs-time-buffering"></span>'+
                    '<span class="mejs-time-loaded"></span>'+
                    '<span class="mejs-time-current"></span>'+
                    '<span class="mejs-time-handle"></span>'+
                    '<span class="mejs-time-float">' +
                        '<span class="mejs-time-float-current">00:00</span>' +
                        '<span class="mejs-time-float-corner"></span>' +
                        '<span class="mejs-time-float-marker"></span>' +
                    '</span>'+
                '</div>'+
            '</div>')
                .appendTo(controls);
                controls.find('.mejs-time-buffering').hide();

            var
                t = this,
                total = controls.find('.mejs-time-total'),
                loaded  = controls.find('.mejs-time-loaded'),
                current  = controls.find('.mejs-time-current'),
                handle  = controls.find('.mejs-time-handle'),
                timefloat  = controls.find('.mejs-time-float'),
                timefloatcurrent  = controls.find('.mejs-time-float-current'),
                handleMouseMove = function (e) {
                    if(total.parents('.mejs-controls').css('visibility') === 'hidden') return false;
                    // mouse position relative to the object
                    var x = e.pageX || e.originalEvent.touches[0].pageX,
                        offset = total.offset(),
                        width = total.outerWidth(),
                        percentage = 0,
                        newTime = 0,
                        pos = x - offset.left;

                    if (x > offset.left && x <= width + offset.left && media.duration) {
                        percentage = ((x - offset.left) / width);
                        newTime = (percentage <= 0.02) ? 0 : percentage * media.duration;

                        // seek to where the mouse is
                        media.setCurrentTime(newTime);
                    }
                },
                mouseIsDown = false,
                mouseIsOver = false;

            // handle clicks
            total.on('mousedown touchstart', function(e){
                mouseIsDown = true;
            }).on('mouseup touchend touchcancel', function(e){
                mouseIsDown = false;
            }).on('mouseenter', function(e){
                if (!mejs.MediaFeatures.hasTouch) {
                    timefloat.show();
                }
            }).on('mouseleave', function(e){
                timefloat.hide();
            }).on('click', function(e){
                handleMouseMove(e);
            }).on('mouseover', function(e){
                player.updateTimefloat(e);
            }).on('mousemove touchmove',function(e){
                if (mouseIsDown) handleMouseMove(e);
                player.updateTimefloat(e);
            })

            // loading
            media.addEventListener('progress', function (e) {
                player.setProgressRail(e);
                player.setCurrentRail(e);
            }, false);

            // current time
            media.addEventListener('timeupdate', function(e) {
                player.setProgressRail(e);
                player.setCurrentRail(e);
            }, false);


            // store for later use
            t.loaded = loaded;
            t.total = total;
            t.current = current;
            t.handle = handle;

            setTimeout(1000, t.setControlsSize);
        },
        updateTimefloat: function(e) {
            var total = this.container.find('.mejs-time-total'),
                timefloat = this.container.find('.mejs-time-float'),
                timefloatcurrent = this.container.find('.mejs-time-float-current'),
                x = e.pageX,
                offset = total.offset(),
                width = total.outerWidth(),
                percentage = 0,
                newTime = 0,
                pos = x - offset.left;

            if (x > offset.left && x <= width + offset.left && this.media.duration) {
                percentage = ((x - offset.left) / width);
                newTime = percentage * this.media.duration;

                // move float to where the mouse is
                timefloatcurrent.html( mejs.Utility.secondsToTimeCode(newTime) )
                timefloat.css('left', (percentage * 100) + '%');
            }
        },
        setProgressRail: function(e) {

            var
                t = this,
                target = (e != undefined) ? e.target : t.media,
                percent = null;

            // newest HTML5 spec has buffered array (FF4, Webkit)
            if (target && target.buffered && target.buffered.length > 0 && target.buffered.end && target.duration) {
                // TODO: account for a real array with multiple values (only Firefox 4 has this so far)
                percent = target.buffered.end(0) / target.duration;
            }
            // Some browsers (e.g., FF3.6 and Safari 5) cannot calculate target.bufferered.end()
            // to be anything other than 0. If the byte count is available we use this instead.
            // Browsers that support the else if do not seem to have the bufferedBytes value and
            // should skip to there. Tested in Safari 5, Webkit head, FF3.6, Chrome 6, IE 7/8.
            else if (target && target.bytesTotal != undefined && target.bytesTotal > 0 && target.bufferedBytes != undefined) {
                percent = target.bufferedBytes / target.bytesTotal;
            }
            // Firefox 3 with an Ogg file seems to go this way
            else if (e && e.lengthComputable && e.total != 0) {
                percent = e.loaded/e.total;
            }

            // finally update the progress bar
            if (percent !== null) {
                percent = Math.min(1, Math.max(0, percent));
                // update loaded bar
                if (t.loaded && t.total) {
                    t.loaded.width((percent * 100) + '%');
                }
            }
        },
        setCurrentRail: function() {

            var t = this;

            if (t.media.currentTime != undefined && t.media.duration) {

                // update bar and handle
                if (t.total && t.handle) {
                    var
                        newWidthPct = (t.media.currentTime / t.media.duration) * 100,
                        handlePosCalcString = 'calc(' + newWidthPct + '% - ' + (t.handle.outerWidth(true) / 2) + 'px)';

                    t.current.width(newWidthPct + '%');
                    t.handle.css('left', handlePosCalcString);
                }
            }

        }
    });
})(mejs.$);

(function($) {
    
    // options
    $.extend(mejs.MepDefaults, {
        duration: -1,
        timeAndDurationSeparator: ' <span> | </span> '
    });


    // current and duration 00:00 / 00:00
    $.extend(MediaElementPlayer.prototype, {
        buildcurrent: function(player, controls, layers, media) {
            var t = this;
            
            $('<div class="mejs-time">'+
                    '<span class="mejs-currenttime">' + (player.options.alwaysShowHours ? '00:' : '')+
                    (player.options.showTimecodeFrameCount? '00:00:00':'00:00')+
                    '</span>'+
                '</div>')
                .appendTo(controls);
            
            t.currenttime = t.controls.find('.mejs-currenttime');

            media.addEventListener('timeupdate',function() {
                player.updateCurrent();
            }, false);
        },


        buildduration: function(player, controls, layers, media) {
            var t = this;
            
            if (controls.children().last().find('.mejs-currenttime').length > 0) {
                $(t.options.timeAndDurationSeparator +
                    '<span class="mejs-duration">' +
                        (t.options.duration > 0 ?
                            mejs.Utility.secondsToTimeCode(t.options.duration, t.options.alwaysShowHours || t.media.duration > 3600, t.options.showTimecodeFrameCount,  t.options.framesPerSecond || 25) :
                               ((player.options.alwaysShowHours ? '00:' : '') + (player.options.showTimecodeFrameCount? '00:00:00':'00:00'))
                           ) +
                    '</span>')
                    .appendTo(controls.find('.mejs-time'));
            } else {

                // add class to current time
                controls.find('.mejs-currenttime').parent().addClass('mejs-currenttime-container');
                
                $('<div class="mejs-time mejs-duration-container">'+
                    '<span class="mejs-duration">' +
                        (t.options.duration > 0 ?
                            mejs.Utility.secondsToTimeCode(t.options.duration, t.options.alwaysShowHours || t.media.duration > 3600, t.options.showTimecodeFrameCount,  t.options.framesPerSecond || 25) :
                               ((player.options.alwaysShowHours ? '00:' : '') + (player.options.showTimecodeFrameCount? '00:00:00':'00:00'))
                           ) +
                    '</span>' +
                '</div>')
                .appendTo(controls);
            }
            
            t.durationD = t.controls.find('.mejs-duration');

            media.addEventListener('timeupdate',function() {
                player.updateDuration();
            }, false);
        },
        
        updateCurrent:  function() {
            var t = this;

            if (t.currenttime) {
                var timeNow = mejs.Utility.secondsToTimeCode(t.media.currentTime, t.options.alwaysShowHours || t.media.duration > 3600, t.options.showTimecodeFrameCount,  t.options.framesPerSecond || 25);
                t.currenttime.text(timeNow);
            }
        },
        
        updateDuration: function() {
            var t = this;
            
            if (t.media.duration && t.durationD) {
                var mediaDuration = mejs.Utility.secondsToTimeCode(t.media.duration, t.options.alwaysShowHours, t.options.showTimecodeFrameCount, t.options.framesPerSecond || 25);
                t.durationD.text(mediaDuration);
            }
        }
    });

})(mejs.$);
(function($) {

    // add extra default options
    $.extend(mejs.MepDefaults, {
        // this will automatically turn on a <track>
        startLanguage: '',

        settingsText: 'Settings'
    });

    $.extend(MediaElementPlayer.prototype, {

        hasChapters: false,
        savedCurrentTime: 0,
        savedPlaybackRate: 0,
        waitedForBuffering: 0,
        wasPaused: false,

        buildsettings: function(player, controls, layers, media) {
            // Flash doesn't use variable speed
            var hasSpeed = ($.inArray('speed', player.options.features) !== -1) && !player.options.forceFlash;
            var numberOfPlayableSources = Object.keys(player.options.playableSources || {}).length;
            var hasSrcQualityChooser = numberOfPlayableSources > 1;
            var hasTracks = (player.tracks.length != 0) && player.isVideo;

            if (!hasSpeed && !hasTracks && !hasSrcQualityChooser)
                return;

            var t= this, i, options = '';

            player.chapters =
                    $('<div class="mejs-chapters mejs-layer"></div>')
                        .prependTo(layers).hide();
            player.captions =
                    $('<div class="mejs-captions-layer mejs-layer"><div class="mejs-captions-position"><div class="mejs-captions-text"></div></div></div>')
                        .prependTo(layers).hide();
            player.captionsText = player.captions.find('.mejs-captions-text');

            if (hasSrcQualityChooser) {
                var quality, qualityOptionButtons = '';
                for (quality in player.options.playableSources) {
                    if (player.options.playableSources.hasOwnProperty(quality)) {
                        var srcUrl = player.options.playableSources[quality].url;
                        var selected = '';
                        if (quality == 'med' || (!player.options.playableSources['med'] && quality === 'high')) {
                            selected = 'selected'; // Default selected video quality is "med"
                            if (quality === 'med') quality = 'medium'; // Changing so we display full word "medium"
                        }
                        qualityOptionButtons += '<button class="quality-button '+selected+'" type="button" title="'+quality+' quality" value="'+srcUrl+'">'+quality+'</button>';
                    }
                }
            }
            player.settingsButton =
                    $('<div class="mejs-button mejs-settings-button">'+
                        '<button type="button"  title="' + t.options.settingsText + '"></button>'+
                        '<div class="mejs-settings-selector' + (numberOfPlayableSources > 3 ? ' mejs-settings-xtra-wide' : '') + '">'+
                            '<ul class="settings-buttons">'+
                            (hasSpeed?'<li><span>Speed</span></li>'    +
                                '<li class="speed-buttons">'+
                                    '<button class="speed-button selected" type="button"  aria-label="1x speed" value="100">'+
                                        '1.0x'+
                                    '</button>'+
                                    '<button class="speed-button" type="button"  aria-label="1.25x speed" value="125">'+
                                        '1.25x'+
                                    '</button>'+
                                    '<button class="speed-button" type="button"  aria-label="1.5x speed" value="150">'+
                                        '1.5x'+
                                    '</button>'+
                                    '<button class="speed-button" type="button"  aria-label="2x speed" value="200">'+
                                        '2.0x'+
                                    '</button>'+
                                '<br /></li>':'')+
                            (hasSrcQualityChooser?'<li><span>Quality</span></li>' +
                                '<li class="quality-buttons">' +
                                    qualityOptionButtons +
                                '<br /></li>':'')+
                            (hasTracks?'<li><span>Subtitles</span></li>'    +
                                '<li>'+
                                    '<input type="radio" name="' + player.id + '_captions" id="' + player.id + '_captions_off" value="off" checked="checked" />' +
                                    '<label for="' + player.id + '_captions_off" aria-label="Subtitles Off">Off</label>'+
                                '</li>':'')+
                        '</ul></div>'+
                    '</div>')
                        .appendTo(controls);

            if (mejs.MediaFeatures.hasTouch) {

                player.settingsButton.bind('click touchstart', function(e) {
                    var target = $(e.target),
                        targetContainer = target.closest('.mejs-controls');
                    e.preventDefault();
                    if (!targetContainer.hasClass('mejs-hide-controls') || !targetContainer.hasClass('mejs-device-controls')) {
                        e.preventDefault();

                        if (target.prop("tagName").toLowerCase()=="label") {
                            // Track is being selected
                            var input_obj = $('#'+target.attr('for'));
                            var input_value = input_obj.val();
                            var input_id = input_obj.attr('id');
                            lang = input_value;
                            var idParts = input_id.split('_');

                            $('.mejs-settings-selector li').removeClass('selected');
                            input_obj.parent().addClass('selected');

                            t.captions.removeClass('mejs-overlay-captions mejs-full-captions');

                            if (lang == 'off') {
                                player.selectedTrack = null;
                                player.displayCaptions();
                            } else {
                                for (i=0; i<player.tracks.length; i++) {
                                    if (input_id == idParts[0]+'_'+idParts[1]+'_'+idParts[2]+'_'+player.tracks[i].trackID) {
                                        player.selectedTrack = player.tracks[i];
                                        player.captions.attr('lang', player.selectedTrack.srclang);
                                        player.displayCaptions();
                                        break;
                                    }
                                }
                            }
                        } else {
                            // Prevent selector from being closed when a track is clicked
                            player.toggleSettings(player);
                        }
                        return false;
                    }
                    return false;
                });


            } else {
                // hover for browsers
                player.settingsButton.hover(function() {
                    player.openSettings(player);
                }, function() {
                    player.closeSettings(player);
                });
            }

            player.settingsButton.children('button').on('keyup', function(e){
                if(e.keyCode === 13) {
                    e.stopPropagation();
                    player.toggleSettings(player);
                }
            })

            player.container.on('controlsready', function(e) {
                player.container.find('.mejs-button').not('.mejs-play').children('button').on('focus', function(e){
                    player.closeSettings(player);
                });
            });

            // handle clicks to the language radio buttons
            player.settingsButton.delegate('input[type=radio]','click touchstart',function(e) {
                var
                    target = $(e.target),
                    targetContainer = target.closest('.mejs-controls');
                e.preventDefault();
                // push captions above controls if controls are visible
                if (!targetContainer.hasClass('mejs-hide-controls') || !targetContainer.hasClass('mejs-device-controls')) {

                    lang = this.value;
                    var idParts = this.id.split('_');

                    $('.mejs-settings-selector li').removeClass('selected');
                    $(this).parent().addClass('selected');

                    t.captions.removeClass('mejs-overlay-captions mejs-full-captions');

                    if (lang == 'off') {
                        player.selectedTrack = null;
                        player.displayCaptions();
                    } else {
                        for (i=0; i<player.tracks.length; i++) {
                            if (this.id == idParts[0]+'_'+idParts[1]+'_'+idParts[2]+'_'+player.tracks[i].trackID) {
                                player.selectedTrack = player.tracks[i];
                                player.captions.attr('lang', player.selectedTrack.srclang);
                                player.displayCaptions();
                                break;
                            }
                        }
                    }
                }
            });

            // handle clicks to the speed radio buttons
            player.settingsButton.find('button.speed-button').bind('click touchstart', function(e) {
                var
                    target = $(e.target),
                    targetContainer = target.closest('.mejs-controls');
                e.preventDefault();

                if (!targetContainer.hasClass('mejs-hide-controls') || !targetContainer.hasClass('mejs-device-controls')) {
                    player.settingsButton.find('.speed-buttons button').removeClass('selected')
                    if (media.paused) {
                        media.playbackRate = target.attr('value') / 100;
                    } else {
                        media.pause();
                        media.playbackRate = target.attr('value') / 100;
                        media.play();
                    }
                    target.addClass('selected')

                    return false;
                }
            });
            // handle clicks to the video quality buttons
            player.settingsButton.find('button.quality-button').bind('click touchstart', function(e) {
                var target = $(e.target);
                var targetContainer = target.closest('.mejs-controls');
                e.preventDefault();
                if (!targetContainer.hasClass('mejs-hide-controls') || !targetContainer.hasClass('mejs-device-controls')) {
                    player.settingsButton.find('.quality-buttons button').removeClass('selected');
                    if (!media.currentSrc.match(this.value+"$")) {
                        player.savedCurrentTime = media.currentTime;
                        player.savedPlaybackRate = media.playbackRate;
                        // Start showing spinner here
                        if (!media.paused) {
                            media.pause();
                        }
                        media.setSrc(this.value);
                        media.load();
                    }
                    target.addClass('selected');
                    return false;
                }
            });
            if (!player.options.alwaysShowControls) {
                // move with controls
                player.container
                    .bind('mouseenter', function() {
                        // push captions above controls
                        player.container.find('.mejs-captions-position').addClass('mejs-captions-position-hover');
                    })
                    .bind('mouseleave', function () {
                        if (!media.paused) {
                            // move back to normal place
                            player.container.find('.mejs-captions-position').removeClass('mejs-captions-position-hover');
                        }
                    });
            } else {
                player.container.find('.mejs-captions-position').addClass('mejs-captions-position-hover');
            }

            player.trackToLoad = -1;
            player.selectedTrack = null;
            player.isLoadingTrack = false;



            // add to list
            for (i=0; i<player.tracks.length; i++) {
                if (player.tracks[i].kind == 'subtitles' || player.tracks[i].kind == 'transcript') {
                    player.addTrackButton(player.tracks[i]);
                }
            }

            player.loadNextTrack();


            media.addEventListener('timeupdate',function(e) {
                player.displayCaptions();
            }, false);

            media.addEventListener('loadedmetadata', function(e) {
                player.displayChapters();
            }, false);

            if (hasSrcQualityChooser) {

                media.addEventListener('loadedmetadata', function(e) {
                    if (player.savedCurrentTime > 0) {
                        console.log("Loaded metadata eventlistener - quality chooser, currenttime:" + player.savedCurrentTime);
                        media.setCurrentTime(player.savedCurrentTime);
                        media.playbackRate = player.savedPlaybackRate;
                        player.waitedForBuffering = 0;
                        player.playIfBuffered(player, player.options.timeLimitForBuffering);
                    }
                }, false);
            }

            player.container.hover(
                function () {
                    // chapters
                    if (player.hasChapters) {
                        player.chapters.css('visibility','visible');
                        player.chapters.fadeIn(200).height(player.chapters.find('.mejs-chapter').outerHeight());
                    }
                },
                function () {
                    if (player.hasChapters && !media.paused) {
                        player.chapters.fadeOut(200, function() {
                            $(this).css('visibility','hidden');
                            $(this).css('display','block');
                        });
                    }
                });

            // check for autoplay
            if (player.node.getAttribute('autoplay') !== null) {
                player.chapters.css('visibility','hidden');
            }
            player.closeSettings(player);
        },

        toggleSettings: function(player){
            var selector = player.settingsButton.find('.mejs-settings-selector')
            if (selector.css('visibility') === 'hidden') {
                player.openSettings(player);
            } else {
                player.closeSettings(player);
            }
        },

        openSettings: function(player){
            player.settingsButton.find('.mejs-settings-selector').css('visibility', 'visible');
            player.settingsButton.children('button').attr('aria-expanded', 'true');
        },

        closeSettings: function(player){
            player.settingsButton.find('.mejs-settings-selector').css('visibility', 'hidden');
            player.settingsButton.children('button').attr('aria-expanded', 'false');
        },

        isBufferedUntil: function(media, time) {
            if (media.buffered && media.buffered.length > 0 && media.buffered.end && media.duration) {
                // TODO: account for a real array with multiple values
                if (media.buffered.end(0) >= time) {
                    return true;
                }
                return false;
            }
        },

        playIfBuffered: function(player, timeLimitForBuffering) {
            var media = player.media;
            if (player.isBufferedUntil(media, player.savedCurrentTime)) {
                console.log("playIfBuffered: Buffering completed")
                // Stop showing spinner here
                if (media.paused) {
                    media.play();
                }
            } else {
                if (player.waitedForBuffering < timeLimitForBuffering) {
                    player.waitedForBuffering += 50;
                    setTimeout(function(){player.playIfBuffered(player, timeLimitForBuffering)}, 50);
                } else {
                    console.log("playIfBufferred: Timed out waiting for buffering to complete");
                    // Stop showing spinner here
                    if (media.paused) {
                        media.play();
                    }
                }
            }
        },

        loadNextTrack: function() {
            var t = this;

            t.trackToLoad++;
            if (t.trackToLoad < t.tracks.length) {
                t.isLoadingTrack = true;
                t.loadTrack(t.trackToLoad);
            } else {
                // add done?
                t.isLoadingTrack = false;
            }
        },

        loadTrack: function(index){
            var
                t = this,
                track = t.tracks[index],
                after = function() {

                    track.isLoaded = true;

                    // create button
                    //t.addTrackButton(track.srclang);
                    t.enableTrackButton(track);

                    t.loadNextTrack();

                };

            if (track.isTranslation) {

                // translate the first track
                mejs.TrackFormatParser.translateTrackText(t.tracks[0].entries, t.tracks[0].srclang, track.srclang, t.options.googleApiKey, function(newOne) {

                    // store the new translation
                    track.entries = newOne;

                    after();
                });

            } else {
                $.ajax({
                    url: track.src,
                    success: function(d) {

                        if (track.kind == 'transcript') {
                            track.entries = d;
                        } else if (track.kind == 'subtitles') {
                            // parse the loaded file
                            track.entries = mejs.TrackFormatParser.parse(d);
                        }

                        after();

                        if (track.kind == 'chapters' && t.media.duration > 0) {
                            t.drawChapters(track);
                        }
                    },
                    error: function() {
                        t.loadNextTrack();
                    }
                });
            }
        },

        enableTrackButton: function(track) {
            var t = this;

            if (track.label === '') {
                track.label = mejs.language.codes[track.srclang] || track.srclang;
            }

            t.settingsButton
                .find('#' + t.id + '_captions_' + track.trackID)
                    .prop('disabled',false)
                .siblings('label')
                    .html( track.label );

            // auto select
            if (t.options.startLanguage == track.srclang) {
                $('#' + t.id + '_captions_' + track.trackID).click();
            }

            t.adjustLanguageBox();
        },

        addTrackButton: function(track) {
            var t = this;
            if (track.label === '') {
                track.label = mejs.language.codes[track.srclang] || track.srclang;
            }

            t.settingsButton.find('ul.settings-buttons').append(
                $('<li><input type="radio" name="' + t.id + '_captions" id="' + t.id + '_captions_' + track.trackID + '" value="' + track.srclang + '" disabled="disabled" />' +
                    '<label for="' + t.id + '_captions_' + track.trackID + '" aria-label="' + track.label + ' Subtitles">' + track.label + '<span>(<em>loading</em>)</span>' + '</label></li>')
            );

            t.adjustLanguageBox();

            // remove this from the dropdownlist (if it exists)
            t.container.find('.mejs-captions-translations option[value=' + track.srclang + ']').remove();
        },

        adjustLanguageBox:function() {

        },

        displayCaptions: function() {

            if (typeof this.tracks == 'undefined')
                return;

            var
                t = this,
                i,
                track = t.selectedTrack;

            if (track !== null && track.isLoaded) {

                if (t.options.subtitlesLocation != 'default')
                    $(t.options.subtitlesLocation).addClass('mejs-captions-location');
                else
                    t.captions.addClass('mejs-captions-location');

                if (!$(t.options.subtitlesLocation).hasClass('mejs-active-captions-location')) {
                    $('.mejs-active-captions-location').removeClass('mejs-active-captions-location').hide();
                    if (t.options.subtitlesLocation != 'default')
                        $(t.options.subtitlesLocation).addClass('mejs-active-captions-location').show();
                    else
                        t.captions.addClass('mejs-active-captions-location').show();
                }

                if (track.kind == 'transcript') {

                    if (t.options.subtitlesLocation != 'default') {
                        $(t.options.subtitlesLocation).html(track.entries);
                    } else {
                        t.captions.addClass('mejs-full-captions');
                        t.captionsText.html(track.entries);
                        $('.mejs-captions-position', t.captions).css('top', (t.container.height()+12)+'px');
                    }

                } else if (track.kind == 'subtitles') {

                    for (i=0; i<track.entries.times.length; i++) {
                        if (t.media.currentTime >= track.entries.times[i].start && t.media.currentTime <= track.entries.times[i].stop) {
                            $('.mejs-captions-position', t.captions).css('top', '');
                            if (t.options.subtitlesLocation != 'default') {
                                $(t.options.subtitlesLocation).html(track.entries.text[i]);
                            } else {
                                t.captions.addClass('mejs-overlay-captions');
                                t.captionsText.html(track.entries.text[i]);
                            }
                            return; // exit out if one is visible;
                        }
                    }

                    $('.mejs-captions-location').hide();

                }
                /* Ensure poster image is hidden when closed captions are displaying
                 * (Prevents double-image bug from https://jira.2u.com/browse/OYS-339)
                 */
                t.container.find('.mejs-poster').hide();

            } else {
                if (t.options.subtitlesLocation != 'default')
                    $(t.options.subtitlesLocation).hide();
                else
                    t.captions.hide();
            }
        },

        displayChapters: function() {
            var
                t = this,
                i;

            for (i=0; i<t.tracks.length; i++) {
                if (t.tracks[i].kind == 'chapters' && t.tracks[i].isLoaded) {
                    t.drawChapters(t.tracks[i]);
                    t.hasChapters = true;
                    break;
                }
            }
        },

        drawChapters: function(chapters) {
            var
                t = this,
                i,
                dur,
                //width,
                //left,
                percent = 0,
                usedPercent = 0;

            t.chapters.empty();

            for (i=0; i<chapters.entries.times.length; i++) {
                dur = chapters.entries.times[i].stop - chapters.entries.times[i].start;
                percent = Math.floor(dur / t.media.duration * 100);
                if (percent + usedPercent > 100 || // too large
                    i == chapters.entries.times.length-1 && percent + usedPercent < 100) // not going to fill it in
                    {
                    percent = 100 - usedPercent;
                }

                t.chapters.append( $(
                    '<div class="mejs-chapter" rel="' + chapters.entries.times[i].start + '" style="left: ' + usedPercent.toString() + '%;width: ' + percent.toString() + '%;">' +
                        '<div class="mejs-chapter-block' + ((i==chapters.entries.times.length-1) ? ' mejs-chapter-block-last' : '') + '">' +
                            '<span class="ch-title">' + chapters.entries.text[i] + '</span>' +
                            '<span class="ch-time">' + mejs.Utility.secondsToTimeCode(chapters.entries.times[i].start) + '&ndash;' + mejs.Utility.secondsToTimeCode(chapters.entries.times[i].stop) + '</span>' +
                        '</div>' +
                    '</div>'));
                usedPercent += percent;
            }

            t.chapters.find('div.mejs-chapter').bind('click touchstart', function() {
                t.media.setCurrentTime( parseFloat( $(this).attr('rel') ) );
                if (t.media.paused) {
                    t.media.play();
                }
            });

            t.chapters.show();
        }
    });



    mejs.language = {
        codes:  {
            af:'Afrikaans',
            sq:'Albanian',
            ar:'Arabic',
            be:'Belarusian',
            bg:'Bulgarian',
            ca:'Catalan',
            zh:'Chinese',
            'zh-cn':'Chinese Simplified',
            'zh-tw':'Chinese Traditional',
            hr:'Croatian',
            cs:'Czech',
            da:'Danish',
            nl:'Dutch',
            en:'English',
            et:'Estonian',
            fi:'Finnish',
            fr:'French',
            gl:'Galician',
            de:'German',
            el:'Greek',
            ht:'Haitian Creole',
            iw:'Hebrew',
            hi:'Hindi',
            hu:'Hungarian',
            is:'Icelandic',
            id:'Indonesian',
            ga:'Irish',
            it:'Italian',
            ja:'Japanese',
            ko:'Korean',
            lv:'Latvian',
            lt:'Lithuanian',
            mk:'Macedonian',
            ms:'Malay',
            mt:'Maltese',
            no:'Norwegian',
            fa:'Persian',
            pl:'Polish',
            pt:'Portuguese',
            //'pt-pt':'Portuguese (Portugal)',
            ro:'Romanian',
            ru:'Russian',
            sr:'Serbian',
            sk:'Slovak',
            sl:'Slovenian',
            es:'Spanish',
            sw:'Swahili',
            sv:'Swedish',
            tl:'Tagalog',
            th:'Thai',
            tr:'Turkish',
            uk:'Ukrainian',
            vi:'Vietnamese',
            cy:'Welsh',
            yi:'Yiddish'
        }
    };

    /*
    Parses WebVVT format which should be formatted as
    ================================
    WEBVTT

    1
    00:00:01,1 --> 00:00:05,000
    A line of text

    2
    00:01:15,1 --> 00:02:05,000
    A second line of text

    ===============================

    Adapted from: http://www.delphiki.com/html5/playr
    */
    mejs.TrackFormatParser = {
        // match start "chapter-" (or anythingelse)
        pattern_identifier: /^([a-zA-z]+-)?[0-9]+$/,
        pattern_timecode: /^([0-9]{2}:[0-9]{2}:[0-9]{2}([,.][0-9]{1,3})?) --\> ([0-9]{2}:[0-9]{2}:[0-9]{2}([,.][0-9]{3})?)(.*)$/,

        split2: function (text, regex) {
            // normal version for compliant browsers
            // see below for IE fix
            return text.split(regex);
        },
        parse: function(trackText) {
            var
                i = 0,
                lines = this.split2(trackText, /\r?\n/),
                entries = {text:[], times:[]},
                timecode,
                text;

            for(; i<lines.length; i++) {
                // check for the line number
                if (this.pattern_identifier.exec(lines[i])){
                    // skip to the next line where the start --> end time code should be
                    i++;
                    timecode = this.pattern_timecode.exec(lines[i]);

                    if (timecode && i<lines.length){
                        i++;
                        // grab all the (possibly multi-line) text that follows
                        text = lines[i];
                        i++;
                        while(lines[i] !== '' && i<lines.length){
                            text = text + '\n' + lines[i];
                            i++;
                        }

                        // Text is in a different array so I can use .join
                        entries.text.push(text);
                        entries.times.push(
                        {
                            start: mejs.Utility.timeCodeToSeconds(timecode[1]),
                            stop: mejs.Utility.timeCodeToSeconds(timecode[3]),
                            settings: timecode[5]
                        });
                    }
                }
            }

            return entries;
        }
    };

    // test for browsers with bad String.split method.
    if ('x\n\ny'.split(/\n/gi).length != 3) {
        // add super slow IE8 and below version
        mejs.TrackFormatParser.split2 = function(text, regex) {
            var
                parts = [],
                chunk = '',
                i;

            for (i=0; i<text.length; i++) {
                chunk += text.substring(i,i+1);
                if (regex.test(chunk)) {
                    parts.push(chunk.replace(regex, ''));
                    chunk = '';
                }
            }
            parts.push(chunk);
            return parts;
        };
    }

})(mejs.$);

(function($) {

    $.extend(mejs.MepDefaults, {
        muteText: 'Mute Toggle',
        hideVolumeOnTouchDevices: true,
        volumeBarOrientation: 'vertical'
    });

    $.extend(MediaElementPlayer.prototype, {
        buildvolume: function(player, controls, layers, media) {

            // Android and iOS don't support volume controls
            if (mejs.MediaFeatures.hasTouch && this.options.hideVolumeOnTouchDevices)
                return;

            var t = this,
                mode = t.options.volumeBarOrientation,
                mute = (mode === 'horizontal') ?

                // horizontal version
                $('<div class="mejs-button mejs-volume-button mejs-mute">'+
                    '<button type="button" title="' + t.options.muteText + '">'+
                        '<span id="muteButton'+t.id+'" aria-live="assertive" class="mejs-out-of-sight"></span>'+
                    '</button>'+
                '</div>' +
                '<div class="mejs-horizontal-volume-slider">'+ // outer background
                    '<div class="mejs-horizontal-volume-total"></div>'+ // line background
                    '<div class="mejs-horizontal-volume-current"></div>'+ // current volume
                    '<div class="mejs-horizontal-volume-handle"></div>'+ // handle
                '</div>')
                    .appendTo(controls) :

                // vertical version
                $('<div class="mejs-button mejs-volume-button mejs-mute">'+
                    '<button type="button" title="' + t.options.muteText + '">'+
                        '<span id="muteButton'+t.id+'" aria-live="assertive" class="mejs-out-of-sight"></span>'+
                    '</button>'+
                    '<div class="mejs-volume-slider">'+ // outer background
                        '<div class="mejs-volume-total">'+
                            '<div class="mejs-volume-current"></div>'+ // current volume
                            '<div class="mejs-volume-handle"></div>'+ // handle
                        '</div>'+ // line background
                    '</div>'+
                '</div>')
                    .appendTo(controls),

            volumeSlider = t.container.find('.mejs-volume-slider, .mejs-horizontal-volume-slider'),
            volumeTotal = t.container.find('.mejs-volume-total, .mejs-horizontal-volume-total'),
            volumeCurrent = t.container.find('.mejs-volume-current, .mejs-horizontal-volume-current'),
            volumeHandle = t.container.find('.mejs-volume-handle, .mejs-horizontal-volume-handle'),

            positionVolumeHandle = function(volume, secondTry) {

                if (!volumeSlider.is(':visible') && typeof secondTry != 'undefined') {
                    volumeSlider.show();
                    positionVolumeHandle(volume, true);
                    volumeSlider.hide();
                    return;
                }

                // correct to 0-1
                volume = Math.max(0,volume);
                volume = Math.min(volume,1);

                // ajust mute button style
                if (volume === 0) {
                    mute.removeClass('mejs-mute').addClass('mejs-unmute');
                    $("#muteButton"+t.id).text("Mute");
                } else {
                    mute.removeClass('mejs-unmute').addClass('mejs-mute');
                    $("#muteButton"+t.id).text(Math.round((volume*100)).toString()+" percent volume");
                }

                // position slider
                if (mode === 'vertical') {
                    var

                        // height of the full size volume slider background
                        totalHeight = volumeTotal.height(),

                        // top/left of full size volume slider background
                        totalPosition = volumeTotal.position(),

                        // the new top position based on the current volume
                        // 70% volume on 100px height == top:30px
                        newTop = totalHeight - (totalHeight * volume);

                    // show the current visibility
                    // volumeCurrent.css('top', totalPosition.top + newTop);
                    volumeCurrent.height(totalHeight - newTop );

                    // handle
                    // volumeHandle.css('top', totalPosition.top + newTop - (volumeHandle.height() / 2));
                    volumeHandle.css('top', newTop - (volumeHandle.height() / 2));

                } else {
                    var volumePct = (volume * 100).toFixed(0);
                    volumeHandle.css('left', 'calc(' + volumePct + '% - 6px)'); // 6px is half of the handles width
                    volumeCurrent.width(volumePct + '%');
                }
            },
            handleVolumeMove = function(e) {

                var volume = null,
                    totalOffset = volumeTotal.offset();

                // calculate the new volume based on the moust position
                if (mode === 'vertical') {

                    var
                        railHeight = volumeTotal.height(),
                        totalTop = parseInt(volumeTotal.css('top').replace(/px/,''),10),
                        newY = e.pageY - totalOffset.top;

                    volume = (railHeight - newY) / railHeight;

                    // the controls just hide themselves (usually when mouse moves too far up)
                    if (totalOffset.top === 0 || totalOffset.left === 0)
                        return;

                } else {
                    var
                        railWidth = volumeTotal.width(),
                        newX = e.pageX - totalOffset.left;

                    volume = newX / railWidth;
                }

                // ensure the volume isn't outside 0-1
                volume = Math.max(0,volume);
                volume = Math.min(volume,1);

                // position the slider and handle
                positionVolumeHandle(volume);

                // set the media object (this will trigger the volumechanged event)
                if (volume === 0) {
                    media.setMuted(true);
                } else {
                    media.setMuted(false);
                }
                media.setVolume(volume);
            },
            mouseIsDown = false,
            mouseIsOver = false;

            // SLIDER

            mute
                .hover(function() {
                    volumeSlider.show();
                    mouseIsOver = true;
                }, function() {
                    mouseIsOver = false;

                    if (!mouseIsDown && mode === 'vertical')    {
                        volumeSlider.hide();
                    }
                });

            volumeSlider
                .bind('mouseover', function() {
                    mouseIsOver = true;
                })
                .bind('mousedown', function (e) {
                    handleVolumeMove(e);
                    $(document)
                        .bind('mousemove.vol', function(e) {
                            handleVolumeMove(e);
                        })
                        .bind('mouseup.vol', function () {
                            mouseIsDown = false;
                            $(document).unbind('.vol');

                            if (!mouseIsOver && mode === 'vertical') {
                                volumeSlider.hide();
                            }
                        });
                    mouseIsDown = true;

                    return false;
                });


            // MUTE button
            mute.find('button').click(function(e) {
                media.setMuted( !media.muted );
                e.stopPropagation();
            });

            // listen for volume change events from other sources
            media.addEventListener('volumechange', function(e) {
                if (!mouseIsDown) {
                    if (media.muted) {
                        positionVolumeHandle(0);
                        mute.removeClass('mejs-mute').addClass('mejs-unmute');
                    } else {
                        positionVolumeHandle(media.volume);
                        mute.removeClass('mejs-unmute').addClass('mejs-mute');
                    }
                }
            }, false);

            // set initial volume
            positionVolumeHandle(player.options.startVolume);

            // shim gets the startvolume as a parameter, but we have to set it on the native <video> and <audio> elements
            if (media.pluginType === 'native') {
                media.setVolume(player.options.startVolume);
            }
        }
    });

})(mejs.$);

(function($) {

    $.extend(mejs.MepDefaults, {
        usePluginFullScreen: true,
        newWindowCallback: function() { return '';},
        fullscreenText: 'Fullscreen'
    });

    $.extend(MediaElementPlayer.prototype, {

        isFullScreen: false,

        isNativeFullScreen: false,

        docStyleOverflow: null,

        isInIframe: false,

        fixedControlsBeforeFullscreen: false,

        transcriptBeforeFullscreen: false,

        buildfullscreen: function(player, controls, layers, media) {

            if (!player.isVideo)
                return;

            player.isInIframe = (window.location != window.parent.location);

            // native events
            if (mejs.MediaFeatures.hasTrueNativeFullScreen) {

                // chrome doesn't alays fire this in an iframe
                var func = function(e) {
                    if (player.isFullScreen) {
                        if (mejs.MediaFeatures.isFullScreen()) {
                            player.isNativeFullScreen = true;
                            // reset the controls once we are fully in full screen
                            player.setControlsSize();
                        } else {
                            player.isNativeFullScreen = false;
                            // when a user presses ESC
                            // make sure to put the player back into place
                            player.exitFullScreen();
                        }
                    }
                };

                if (mejs.MediaFeatures.hasMozNativeFullScreen) {
                    $(document).bind(mejs.MediaFeatures.fullScreenEventName, func);
                } else {
                    player.container.bind(mejs.MediaFeatures.fullScreenEventName, func);
                }
            }

            var t = this,
                normalHeight = 0,
                normalWidth = 0,
                normalVideoHeight = 0,
                normalVideoWidth = 0,
                container = player.container,
                fullscreenBtn =
                    $('<div class="mejs-button mejs-fullscreen-button">' +
                        '<button tabindex="-1" type="button"  title="' + t.options.fullscreenText + '"></button>' +
                    '</div>')
                    .appendTo(controls);

                if (t.media.pluginType === 'native' || (!t.options.usePluginFullScreen && !mejs.MediaFeatures.isFirefox)) {

                    fullscreenBtn.click(function() {
                        var isFullScreen = (mejs.MediaFeatures.hasTrueNativeFullScreen && mejs.MediaFeatures.isFullScreen()) || player.isFullScreen;

                        if (isFullScreen) {
                            player.exitFullScreen();
                        } else {
                            player.enterFullScreen();
                        }
                    });

                } else {

                    var hideTimeout = null,
                        supportsPointerEvents = (function() {
                            // TAKEN FROM MODERNIZR
                            var element = document.createElement('x'),
                                documentElement = document.documentElement,
                                getComputedStyle = window.getComputedStyle,
                                supports;
                            if(!('pointerEvents' in element.style)){
                                return false;
                            }
                            element.style.pointerEvents = 'auto';
                            element.style.pointerEvents = 'x';
                            documentElement.appendChild(element);
                            supports = getComputedStyle &&
                                getComputedStyle(element, '').pointerEvents === 'auto';
                            documentElement.removeChild(element);
                            return !!supports;
                        })();

                    if (supportsPointerEvents && !mejs.MediaFeatures.isOpera) { // opera doesn't allow this :(

                        // allows clicking through the fullscreen button and controls down directly to Flash

                        /*
                         When a user puts his mouse over the fullscreen button, the controls are disabled
                         So we put a div over the video and another one on iether side of the fullscreen button
                         that caputre mouse movement
                         and restore the controls once the mouse moves outside of the fullscreen button
                        */

                        var fullscreenIsDisabled = false,
                            restoreControls = function() {
                                if (fullscreenIsDisabled) {
                                    // hide the hovers
                                    videoHoverDiv.hide();
                                    controlsLeftHoverDiv.hide();
                                    controlsRightHoverDiv.hide();

                                    // restore the control bar
                                    fullscreenBtn.css('pointer-events', '');
                                    t.controls.css('pointer-events', '');

                                    // store for later
                                    fullscreenIsDisabled = false;
                                }
                            },
                            videoHoverDiv = $('<div class="mejs-fullscreen-hover" />').appendTo(t.container).mouseover(restoreControls),
                            controlsLeftHoverDiv = $('<div class="mejs-fullscreen-hover"  />').appendTo(t.container).mouseover(restoreControls),
                            controlsRightHoverDiv = $('<div class="mejs-fullscreen-hover"  />').appendTo(t.container).mouseover(restoreControls),
                            positionHoverDivs = function() {
                                var style = {position: 'absolute', top: 0, left: 0}; //, backgroundColor: '#f00'};
                                videoHoverDiv.css(style);
                                controlsLeftHoverDiv.css(style);
                                controlsRightHoverDiv.css(style);

                                // over video, but not controls
                                videoHoverDiv
                                    .width( t.container.width() )
                                    .height( t.container.height() - t.controls.height() );

                                // over controls, but not the fullscreen button
                                var fullScreenBtnOffset = fullscreenBtn.offset().left - t.container.offset().left;
                                    fullScreenBtnWidth = fullscreenBtn.outerWidth(true);

                                controlsLeftHoverDiv
                                    .width( fullScreenBtnOffset )
                                    .height( t.controls.height() )
                                    .css({top: t.container.height() - t.controls.height()});

                                // after the fullscreen button
                                controlsRightHoverDiv
                                    .width( t.container.width() - fullScreenBtnOffset - fullScreenBtnWidth )
                                    .height( t.controls.height() )
                                    .css({top: t.container.height() - t.controls.height(),
                                         left: fullScreenBtnOffset + fullScreenBtnWidth});
                            };

                        $(document).resize(function() {
                            positionHoverDivs();
                        });

                        // on hover, kill the fullscreen button's HTML handling, allowing clicks down to Flash
                        fullscreenBtn
                            .mouseover(function() {

                                if (!t.isFullScreen) {

                                    var buttonPos = fullscreenBtn.offset(),
                                        containerPos = player.container.offset();

                                    // move the button in Flash into place
                                    media.positionFullscreenButton(buttonPos.left - containerPos.left, buttonPos.top - containerPos.top, false);

                                    // allows click through
                                    fullscreenBtn.css('pointer-events', 'none');
                                    t.controls.css('pointer-events', 'none');

                                    // show the divs that will restore things
                                    videoHoverDiv.show();
                                    controlsRightHoverDiv.show();
                                    controlsLeftHoverDiv.show();
                                    positionHoverDivs();

                                    fullscreenIsDisabled = true;
                                }

                            });

                        // restore controls anytime the user enters or leaves fullscreen
                        media.addEventListener('fullscreenchange', function(e) {
                            restoreControls();
                        });


                        // the mouseout event doesn't work on the fullscren button, because we already killed the pointer-events
                        // so we use the document.mousemove event to restore controls when the mouse moves outside the fullscreen button
                        /*
                        $(document).mousemove(function(e) {

                            // if the mouse is anywhere but the fullsceen button, then restore it all
                            if (fullscreenIsDisabled) {

                                var fullscreenBtnPos = fullscreenBtn.offset();


                                if (e.pageY < fullscreenBtnPos.top || e.pageY > fullscreenBtnPos.top + fullscreenBtn.outerHeight(true) ||
                                    e.pageX < fullscreenBtnPos.left || e.pageX > fullscreenBtnPos.left + fullscreenBtn.outerWidth(true)
                                    ) {

                                    fullscreenBtn.css('pointer-events', '');
                                    t.controls.css('pointer-events', '');

                                    fullscreenIsDisabled = false;
                                }
                            }
                        });
                        */


                    } else {

                        // the hover state will show the fullscreen button in Flash to hover up and click

                        fullscreenBtn
                            .mouseover(function() {

                                if (hideTimeout !== null) {
                                    clearTimeout(hideTimeout);
                                    delete hideTimeout;
                                }

                                var buttonPos = fullscreenBtn.offset(),
                                    containerPos = player.container.offset();

                                media.positionFullscreenButton(buttonPos.left - containerPos.left, buttonPos.top - containerPos.top, true);

                            })
                            .mouseout(function() {

                                if (hideTimeout !== null) {
                                    clearTimeout(hideTimeout);
                                    delete hideTimeout;
                                }

                                hideTimeout = setTimeout(function() {
                                    media.hideFullscreenButton();
                                }, 1500);


                            });
                    }
                }

            player.fullscreenBtn = fullscreenBtn;

            $(document).bind('keydown',function (e) {
                if (((mejs.MediaFeatures.hasTrueNativeFullScreen && mejs.MediaFeatures.isFullScreen()) || t.isFullScreen) && e.keyCode == 27) {
                    player.exitFullScreen();
                }
            });

            if (t.options.fixedControls)
                t.fixedControlsBeforeFullscreen = true;

        },
        enterFullScreen: function() {

            var t = this;

            // firefox+flash can't adjust plugin sizes without resetting :(
            if (t.media.pluginType !== 'native' && (mejs.MediaFeatures.isFirefox || t.options.usePluginFullScreen)) {
                //t.media.setFullscreen(true);
                //player.isFullScreen = true;
                return;
            }

            // store overflow
            docStyleOverflow = document.documentElement.style.overflow;
            // set it to not show scroll bars so 100% will work
            document.documentElement.style.overflow = 'hidden';

            // store sizing
            normalHeight = t.container.height();
            normalWidth = t.container.width();
            normalVideoHeight = t.container.find('video').attr('height');
            normalVideoWidth = t.container.find('video').attr('width');

            // attempt to do true fullscreen (Safari 5.1 and Firefox Nightly only for now)
            if (t.media.pluginType === 'native') {
                if (mejs.MediaFeatures.hasTrueNativeFullScreen) {

                    mejs.MediaFeatures.requestFullScreen(t.container[0]);
                    //return;

                    if (t.isInIframe) {
                        // sometimes exiting from fullscreen doesn't work
                        // notably in Chrome <iframe>. Fixed in version 17
                        setTimeout(function checkFullscreen() {

                            if (t.isNativeFullScreen) {

                                // check if the video is suddenly not really fullscreen
                                if ($(window).width() !== screen.width) {
                                    // manually exit
                                    t.exitFullScreen();
                                } else {
                                    // test again
                                    setTimeout(checkFullscreen, 500);
                                }
                            }


                        }, 500);
                    }

                } else if (mejs.MediaFeatures.hasSemiNativeFullScreen) {
                    t.media.webkitEnterFullscreen();
                    return;
                }
            }

            // check for iframe launch
            if (t.isInIframe) {
                var url = t.options.newWindowCallback(this);


                if (url !== '') {

                    // launch immediately
                    if (!mejs.MediaFeatures.hasTrueNativeFullScreen) {
                        t.pause();
                        window.open(url, t.id, 'top=0,left=0,width=' + screen.availWidth + ',height=' + screen.availHeight + ',resizable=yes,scrollbars=no,status=no,toolbar=no');
                        return;
                    } else {
                        setTimeout(function() {
                            if (!t.isNativeFullScreen) {
                                t.pause();
                                window.open(url, t.id, 'top=0,left=0,width=' + screen.availWidth + ',height=' + screen.availHeight + ',resizable=yes,scrollbars=no,status=no,toolbar=no');
                            }
                        }, 250);
                    }
                }

            }

            // switch captions from transcript to overlay when opening fullscreen
            if ($('#' + t.id + '_captions_1').parent().hasClass("selected")) {
                t.transcriptBeforeFullscreen = true;
                $('#' + t.id + '_captions_1').parent().removeClass('selected');
                $('#' + t.id + '_captions_0').parent().addClass('selected');
                t.captions.removeClass('mejs-overlay-captions mejs-full-captions');
                t.selectedTrack = t.tracks[0];
                t.displayCaptions();
            }


            // make full size
            t.container.addClass('mejs-container-fullscreen');
            t.container.find('.mejs-inner').removeAttr('style');
            t.container.find('.mejs-mediaelement').removeAttr('style');
            t.container.find('.mejs-layers').removeAttr('style');
            t.container.find('.mejs-controls').removeAttr('style');
            t.container.find('video').removeAttr('height width');

            // prevent transcript view during fullscreen
            $('#' + t.id + '_captions_1').parent().hide();

            if (t.fixedControlsBeforeFullscreen) {
                t.controls.removeClass('mejs-fixed-controls').addClass('mejs-floating-controls');
                t.options.fixedControls = false;
            }

            // Only needed for safari 5.1 native full screen, can cause display issues elsewhere
            // Actually, it seems to be needed for IE8, too
            //if (mejs.MediaFeatures.hasTrueNativeFullScreen) {
                setTimeout(function() {
                    t.container.css({width: '100%', height: '100%'});
                    t.setControlsSize();
                }, 500);
            //}

            if (t.pluginType === 'native') {
                t.$media
                    .width('100%')
                    .height('100%');
            } else {
                t.container.find('object, embed, iframe')
                    .width('100%')
                    .height('100%');

                //if (!mejs.MediaFeatures.hasTrueNativeFullScreen) {
                    t.media.setVideoSize($(window).width(),$(window).height());
                //}
            }

            t.layers.children('div')
                .width('100%')
                .height('100%');

            if (t.fullscreenBtn) {
                t.fullscreenBtn
                    .removeClass('mejs-fullscreen')
                    .addClass('mejs-unfullscreen');
            }

            // Ensure poster image is hidden in fullscreen
            t.container.find('.mejs-poster').hide();

            t.setControlsSize();
            t.isFullScreen = true;
        },

        exitFullScreen: function() {

            var t = this;

            // firefox can't adjust plugins
            if (t.media.pluginType !== 'native' && mejs.MediaFeatures.isFirefox) {
                t.media.setFullscreen(false);
                //player.isFullScreen = false;
                return;
            }

            // come outo of native fullscreen
            if (mejs.MediaFeatures.hasTrueNativeFullScreen && (mejs.MediaFeatures.isFullScreen() || t.isFullScreen)) {
                mejs.MediaFeatures.cancelFullScreen();
            }

            // restore scroll bars to document
            document.documentElement.style.overflow = docStyleOverflow;

            t.container
                .removeClass('mejs-container-fullscreen')
                .width(normalWidth)
                .height(normalHeight);
                //.css({position: '', left: '', top: '', right: '', bottom: '', overflow: 'inherit', width: normalWidth + 'px', height: normalHeight + 'px', 'z-index': 1});

            // $('.mejs-mediaelement', t.container)
            //     .width(normalVideoWidth)
            //     .height(normalVideoHeight);

            $('.mejs-layers', t.container)
                .width(normalVideoWidth)
                .height(normalVideoHeight);

            $('.mejs-inner', t.container)
                .width(normalWidth)
                .height(normalHeight);

            if (t.fixedControlsBeforeFullscreen) {
                t.controls.removeClass('mejs-floating-controls').addClass('mejs-fixed-controls');
                t.options.fixedControls = true;
            }

            // put back full transcript option
            $('#' + t.id + '_captions_1').parent().show();

            // switch back to transcript if it was originally selected and captions were not deselcted during fullscreen
            if (t.transcriptBeforeFullscreen && $('#' + t.id + '_captions_0').parent().hasClass('selected')) {
                $('#' + t.id + '_captions_0').parent().removeClass('selected');
                $('#' + t.id + '_captions_1').parent().addClass('selected');
                t.captions.removeClass('mejs-overlay-captions mejs-full-captions');
                t.selectedTrack = t.tracks[1];
                t.displayCaptions();
            }
            t.transcriptBeforeFullscreen = false;

            if (t.pluginType === 'native') {
                t.$media
                    .width(normalVideoWidth)
                    .height(normalVideoHeight);
            } else {
                t.container.find('object embed')
                    .width(normalVideoWidth)
                    .height(normalVideoHeight);

                t.media.setVideoSize(normalVideoWidth, normalVideoHeight);
            }

            t.fullscreenBtn
                .removeClass('mejs-unfullscreen')
                .addClass('mejs-fullscreen');

            t.setControlsSize();
            t.isFullScreen = false;
        }
    });

})(mejs.$);

(function($) {

$.extend(mejs.MepDefaults,
    { 'contextMenuItems': [
        // demo of a fullscreen option
        { 
            render: function(player) {
                
                // check for fullscreen plugin
                if (typeof player.enterFullScreen == 'undefined')
                    return null;
            
                if (player.isFullScreen) {
                    return "Turn off Fullscreen";
                } else {
                    return "Go Fullscreen";
                }
            },
            click: function(player) {
                if (player.isFullScreen) {
                    player.exitFullScreen();
                } else {
                    player.enterFullScreen();
                }
            }
        }
        ,
        // demo of a mute/unmute button
        { 
            render: function(player) {
                if (player.media.muted) {
                    return "Unmute";
                } else {
                    return "Mute";
                }
            },
            click: function(player) {
                if (player.media.muted) {
                    player.setMuted(false);
                } else {
                    player.setMuted(true);
                }
            }
        },
        // separator
        {
            isSeparator: true
        }
        ,
        // demo of simple download video
        { 
            render: function(player) {
                return "Download Video";
            },
            click: function(player) {
                window.location.href = player.media.currentSrc;
            }
        }    
    ]}
);


    $.extend(MediaElementPlayer.prototype, {
        buildcontextmenu: function(player, controls, layers, media) {
            
            // create context menu
            player.contextMenu = $('<div class="mejs-contextmenu"></div>')
                                .appendTo($('body'))
                                .hide();
            
            // create events for showing context menu
            player.container.bind('contextmenu', function(e) {
                if (player.isContextMenuEnabled) {
                    e.preventDefault();
                    player.renderContextMenu(e.clientX-1, e.clientY-1);
                    return false;
                }
            });
            player.container.bind('click', function() {
                player.contextMenu.hide();
            });    
            player.contextMenu.bind('mouseleave', function() {

                //console.log('context hover out');
                player.startContextMenuTimer();
                
            });        
        },
        
        isContextMenuEnabled: true,
        enableContextMenu: function() {
            this.isContextMenuEnabled = true;
        },
        disableContextMenu: function() {
            this.isContextMenuEnabled = false;
        },
        
        contextMenuTimeout: null,
        startContextMenuTimer: function() {
            //console.log('startContextMenuTimer');
            
            var t = this;
            
            t.killContextMenuTimer();
            
            t.contextMenuTimer = setTimeout(function() {
                t.hideContextMenu();
                t.killContextMenuTimer();
            }, 750);
        },
        killContextMenuTimer: function() {
            var timer = this.contextMenuTimer;
            
            //console.log('killContextMenuTimer', timer);
            
            if (timer != null) {                
                clearTimeout(timer);
                delete timer;
                timer = null;
            }
        },        
        
        hideContextMenu: function() {
            this.contextMenu.hide();
        },
        
        renderContextMenu: function(x,y) {
            
            // alway re-render the items so that things like "turn fullscreen on" and "turn fullscreen off" are always written correctly
            var t = this,
                html = '',
                items = t.options.contextMenuItems;
            
            for (var i=0, il=items.length; i<il; i++) {
                
                if (items[i].isSeparator) {
                    html += '<div class="mejs-contextmenu-separator"></div>';
                } else {
                
                    var rendered = items[i].render(t);
                
                    // render can return null if the item doesn't need to be used at the moment
                    if (rendered != null) {
                        html += '<div class="mejs-contextmenu-item" data-itemindex="' + i + '" id="element-' + (Math.random()*1000000) + '">' + rendered + '</div>';
                    }
                }
            }
            
            // position and show the context menu
            t.contextMenu
                .empty()
                .append($(html))
                .css({top:y, left:x})
                .show();
                
            // bind events
            t.contextMenu.find('.mejs-contextmenu-item').each(function() {
                            
                // which one is this?
                var $dom = $(this),
                    itemIndex = parseInt( $dom.data('itemindex'), 10 ),
                    item = t.options.contextMenuItems[itemIndex];
                
                // bind extra functionality?
                if (typeof item.show != 'undefined')
                    item.show( $dom , t);
                
                // bind click action
                $dom.click(function() {            
                    // perform click action
                    if (typeof item.click != 'undefined')
                        item.click(t);
                    
                    // close
                    t.contextMenu.hide();                
                });                
            });    
            
            // stop the controls from hiding
            setTimeout(function() {
                t.killControlsTimer('rev3');    
            }, 100);
                        
        }
    });
    
})(mejs.$);
(function($) {

var actionIdPrefix = 'lms.course.content.video';

var eventPrefix = 'Video';
var eventMap = {
    PLAYED: 'Played',
    PLAYING: 'Playing',
    SEEKED: 'Seeked',
    PAUSED: 'Paused',
    ENDED: 'Ended',
    PLAYBACK_RATE_CHANGED: 'Playback Rate Changed',
    VOLUME_CHANGED: 'Volume Changed'
};

$.extend(MediaElementPlayer.prototype, {
    analyticsDefaultContext: function () {
        defaultContext = {
            video_playback_rate: this.media.playbackRate ? this.media.playbackRate : 1,
            video_current_time: this.media.currentTime,
            video_percent_watched: this.analyticsPercentWatched(),
            video_duration: this.media.duration,
            video_current_volume: this.media.muted ? 0 : this.media.volume,
            video_id: this.options.videoRef,
            video_dimensions: [this.media.videoWidth, this.media.videoHeight].join('x'),
            video_ended: this.media.ended
        }

        if (typeof window.i11l !== 'undefined' && typeof window.i11l.LMSContext !== 'undefined') {
            defaultContext = $.extend(defaultContext, {
                course_uuid: window.i11l.LMSContext.course.uuid || null,
                section_uuid: window.i11l.LMSContext.course.section_uuid || null,
                user_role: window.i11l.LMSContext.course.role || window.i11l.LMSContext.user.role,
                course_content_id: window.i11l.LMSContext.course.cm_id || null
            });
        }

        return defaultContext;
    },

    analyticsPercentWatched: function () {
        if (this.media.currentTime > 0 && this.media.duration > 0) {
            return parseInt((this.media.currentTime / this.media.duration) * 100, 10);
        } else {
            return 0;
        }
    },

    analyticsActionId: function (eventLabel) {
        return [actionIdPrefix, eventLabel.replace(/\s/g, '_').toLowerCase()].join('.');
    },

    analyticsCall: function (method, eventLabel, context) {
        var actionId = { 'action_id': this.analyticsActionId(eventLabel) };
        var context = $.extend(this.analyticsDefaultContext(), context || {}, actionId);
        var label = [eventPrefix, eventLabel].join(' ');
        if (typeof window.analytics !== 'undefined' && typeof window.analytics[method] === 'function') {
            window.analytics[method](label, context);
        } else {
            console.log('analytics.js not present: ' + [method, label].join(', '));
            console.dir(context);
        }
    },

    analyticsTrack: function (eventName, context) {
        this.analyticsCall( 'track', eventName, context);
    },

    buildanalytics: function(player, controls, layers, media) {
        var lastPercentWatched;
        var eventSequence = 0;
        media.addEventListener('play', function (evt) {
            player.analyticsTrack(eventMap.PLAYED, { event_sequence: eventSequence++ });
        }, false);

        media.addEventListener('pause', function (evt) {
            /* When the video ends, the player may fire a paused event
             * but we would like to only fire this event if the user initiates
             * a pause.
             */
            if (player.media.currentTime !== player.media.duration) {
                player.analyticsTrack(eventMap.PAUSED, { event_sequence: eventSequence++ });
            }
        }, false);

        media.addEventListener('ended', function (evt) {
            player.analyticsTrack(eventMap.ENDED, { event_sequence: eventSequence++ });
        }, false);

        media.addEventListener('ratechange', function (evt) {
            if (player.media.duration !== NaN && player.media.duration > 0) {
                player.analyticsTrack(eventMap.PLAYBACK_RATE_CHANGED, { event_sequence: eventSequence++ });
            }
        }, false);

        media.addEventListener('volumechange', function (evt) {
            if (player.media.duration !== NaN && player.media.duration > 0) {
                player.analyticsTrack(eventMap.VOLUME_CHANGED, { event_sequence: eventSequence++ });
            }
        }, false);

        media.addEventListener('seeked', function (evt) {
            player.analyticsTrack(eventMap.SEEKED, { event_sequence: eventSequence++ });
        }, false);

        media.addEventListener('timeupdate', function (evt) {
            // Interval for sending Playing event (by % watched)
            var interval = 5;
            var percent = player.analyticsPercentWatched();
            if (percent > 0 && percent !== lastPercentWatched && percent % interval === 0 && percent < 100) {
                /* Only track the event if:
                 *  A. Some percentage of the video has been watched.
                 *  B. We're not sending the event twice (keeping state in lastPercentWatched)
                 *  C. It's not the end (since an event is sent for that already)
                 */
                player.analyticsTrack(eventMap.PLAYING, { event_sequence: eventSequence++ });
                lastPercentWatched = percent;
            }
        }, false);

    }
});

})(mejs.$);

(function() {
  var isFunction, isNumber, isObject, isString, isUndefined, isntUndefined, sortArrayObjByKey, type, uuid;

  this.exportModule = function(module, name, obj, topLevelNamespace) {
    var _base;
    if (topLevelNamespace == null) {
      topLevelNamespace = 'u';
    }
    window[topLevelNamespace] || (window[topLevelNamespace] = {});
    (_base = window[topLevelNamespace])[module] || (_base[module] = {});
    if (name !== null && obj !== null) {
      return window[topLevelNamespace][module][name] = obj;
    }
  };

  uuid = function() {
    var replacement;
    replacement = function(c) {
      var r, v;
      r = Math.random() * 16 | 0;
      v = c === 'x' ? r : r & 0x3 | 0x8;
      return v.toString(16);
    };
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, replacement);
  };

  type = function(obj) {
    var classToType, myClass, name, _i, _len, _ref;
    if (obj === void 0 || obj === null) {
      return String(obj);
    }
    classToType = new Object;
    _ref = 'Boolean Number String Function Array Date RegExp'.split(' ');
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      name = _ref[_i];
      classToType['[object ' + name + ']'] = name.toLowerCase();
    }
    myClass = Object.prototype.toString.call(obj);
    if (myClass in classToType) {
      return classToType[myClass];
    }
    return 'object';
  };

  isString = function(obj) {
    return type(obj) === 'string';
  };

  isObject = function(obj) {
    return type(obj) === 'object';
  };

  isFunction = function(obj) {
    return type(obj) === 'function';
  };

  isNumber = function(obj) {
    return type(obj) === 'number';
  };

  isUndefined = function(obj) {
    return type(obj) === 'undefined';
  };

  isntUndefined = function(obj) {
    return type(obj) !== 'undefined';
  };

  sortArrayObjByKey = function(arr, key, direction) {
    var sortAsc, sortDesc;
    if (direction == null) {
      direction = 'asc';
    }
    /*
    Takes an array of objects and sorts them by the specified key
    key must have a numeric value
    return {array}
    */

    sortAsc = function(a, b) {
      return a[key] - b[key];
    };
    sortDesc = function(a, b) {
      return b[key] - a[key];
    };
    return arr.sort(direction === 'asc' ? sortAsc : sortDesc);
  };

  this.exportModule('utils', 'uuid', uuid);

  this.exportModule('utils', 'type', type);

  this.exportModule('utils', 'isString', isString);

  this.exportModule('utils', 'isObject', isObject);

  this.exportModule('utils', 'isFunction', isFunction);

  this.exportModule('utils', 'isNumber', isNumber);

  this.exportModule('utils', 'isUndefined', isUndefined);

  this.exportModule('utils', 'isntUndefined', isntUndefined);

  this.exportModule('utils', 'setTimeout', window.setTimeout);

  this.exportModule('utils', 'sortArrayObjByKey', sortArrayObjByKey);

}).call(this);

(function() {
  this.DynamicLoader = (function() {
    function DynamicLoader(window) {
      this.document = window.document;
    }

    DynamicLoader.prototype.setElementAttrs = function(element, attrs) {
      var attr, value, _results;
      _results = [];
      for (attr in attrs) {
        value = attrs[attr];
        _results.push(element.setAttribute(attr, value));
      }
      return _results;
    };

    DynamicLoader.prototype.isFileReady = function(readyState) {
      return !readyState || readyState === "loaded" || readyState === "complete" || readyState === "uninitialized";
    };

    DynamicLoader.prototype.getFirstScript = function() {
      return this.document.getElementsByTagName('script')[0];
    };

    DynamicLoader.prototype.getScriptPath = function(scriptNames) {
      var path, script, scriptName, scripts, _i, _j, _len, _len1;
      scripts = document.getElementsByTagName('script');
      for (_i = 0, _len = scripts.length; _i < _len; _i++) {
        script = scripts[_i];
        for (_j = 0, _len1 = scriptNames.length; _j < _len1; _j++) {
          scriptName = scriptNames[_j];
          if (script.src.indexOf(scriptName) > -1) {
            path = script.src.substring(0, script.src.indexOf(scriptName));
            break;
          }
        }
      }
      return path;
    };

    DynamicLoader.prototype.loadScript = function(src, callback, attrs, async) {
      var done, errorTimeout, firstScript, script,
        _this = this;
      if (attrs == null) {
        attrs = {};
      }
      if (async == null) {
        async = true;
      }
      done = false;
      errorTimeout = 9000;
      script = this.document.createElement("script");
      script.type = "text/javascript";
      script.async = async;
      script.src = src;
      this.setElementAttrs(script, attrs);
      script.onreadystatechange = script.onload = function() {
        if (!done && _this.isFileReady(script.readyState)) {
          done = true;
          if (callback !== void 0) {
            callback();
          }
          return script.onload = script.onreadystatechange = null;
        }
      };
      setTimeout(function() {
        if (!done) {
          done = true;
          if (callback !== void 0) {
            return callback(1);
          }
        }
      }, errorTimeout);
      firstScript = this.getFirstScript();
      return firstScript.parentNode.insertBefore(script, firstScript);
    };

    DynamicLoader.prototype.loadStylesheet = function(href, attrs) {
      var firstScript, link;
      link = this.document.createElement("link");
      link.href = href;
      link.rel = "stylesheet";
      link.type = "text/css";
      this.setElementAttrs(link, attrs);
      firstScript = this.getFirstScript();
      return firstScript.parentNode.insertBefore(link, firstScript);
    };

    return DynamicLoader;

  })();

}).call(this);

(function() {
  this.BrowserDetector = (function() {
    var _ref, _ref1;

    function BrowserDetector() {}

    BrowserDetector.userAgent = (typeof window !== "undefined" && window !== null ? (_ref = window.navigator) != null ? (_ref1 = _ref.userAgent) != null ? _ref1.toLowerCase() : void 0 : void 0 : void 0) || '';

    BrowserDetector.isOpera = function() {
      return (window.opera != null) && window.opera.toString() === "[object Opera]";
    };

    BrowserDetector.isIE = function() {
      var _ref2;
      return (((_ref2 = window.document) != null ? _ref2.attachEvent : void 0) != null) && !this.isOpera();
    };

    BrowserDetector.isIE9 = function() {
      return (this.userAgent.match(/Trident\/5/i)) !== null;
    };

    BrowserDetector.isIE10 = function() {
      return (this.userAgent.match(/Trident\/6/i)) !== null;
    };

    BrowserDetector.isIE11 = function() {
      return (this.userAgent.match(/Trident\/7/i)) !== null;
    };

    BrowserDetector.IEVersion = function() {
      var version;
      version = null;
      if (this.isIE9()) {
        version = 9;
      } else if (this.isIE10()) {
        version = 10;
      } else if (this.isIE11()) {
        version = 11;
      }
      return version;
    };

    BrowserDetector.isFirefox = function() {
      return (this.userAgent.match(/firefox/i)) !== null;
    };

    BrowserDetector.isIpad = function() {
      return (this.userAgent.match(/ipad/i)) !== null;
    };

    BrowserDetector.isIphone = function() {
      return (this.userAgent.match(/iphone/i)) !== null;
    };

    BrowserDetector.isIos = function() {
      return this.isIphone() || this.isIpad();
    };

    BrowserDetector.isAndroid = function() {
      return (this.userAgent.match(/android/i)) !== null;
    };

    BrowserDetector.isAndroidPhone = function() {
      return (this.userAgent.match(/mobile/i)) !== null && this.isAndroid();
    };

    BrowserDetector.isAndroidVersion = function(major, minor) {
      var re;
      if (minor == null) {
        minor = 0;
      }
      re = new RegExp("Android " + major + "\\." + minor, "i");
      return (this.userAgent.match(re)) !== null;
    };

    BrowserDetector.isAtOrAboveAndroidVersion = function(major, minor, patch) {
      var answer, match;
      if (minor == null) {
        minor = 0;
      }
      if (patch == null) {
        patch = 0;
      }
      match = this.userAgent.match(/Android (\d)\.(\d)(?:\.(\d))?/i);
      if (match === null || match[1] === null || match[1] < major) {
        answer = false;
      } else if (match[1] > major) {
        answer = true;
      } else if (match[2] === null || match[2] < minor) {
        answer = false;
      } else if (match[2] > minor) {
        answer = true;
      } else if (match[3] === null || match[3] < patch) {
        answer = false;
      } else {
        answer = true;
      }
      return answer;
    };

    BrowserDetector.isBustedAndroid = function() {
      return (this.userAgent.match(/Android 2\.[12]/i)) !== null;
    };

    BrowserDetector.isDevice = function() {
      return this.isIos() || this.isAndroid() || this.hasTouch();
    };

    BrowserDetector.isPhone = function() {
      return this.isAndroidPhone() || this.isIphone();
    };

    BrowserDetector.deviceType = function() {
      var type;
      type = 'browser';
      if (this.isIphone()) {
        type = 'iphone';
      } else if (this.isIpad()) {
        type = 'ipad';
      } else if (this.isAndroid()) {
        type = 'android';
      }
      return type;
    };

    BrowserDetector.hasTouch = function() {
      return window.ontouchstart != null;
    };

    BrowserDetector.getSize = function() {
      var scale, targetWidth;
      if (this.deviceType() === 'browser') {
        return {
          'w': window.innerWidth,
          'h': window.innerHeight
        };
      } else if (this.isAndroid() && !this.isAtOrAboveAndroidVersion(4, 4, 2)) {
        targetWidth = 400;
        scale = Math.round(screen.width / targetWidth * 10) / 10;
        return {
          'w': Math.floor(screen.width / scale),
          'h': Math.floor(screen.height / scale)
        };
      } else {
        return {
          'w': screen.availWidth,
          'h': screen.availHeight
        };
      }
    };

    return BrowserDetector;

  })();

}).call(this);

(function() {
  this.Timecode = (function() {
    var isNumber, isString, timecodePattern;

    timecodePattern = /^(\d+)[:\.]{1}(\d{2})$/;

    isNumber = function(number) {
      return typeof number === "number";
    };

    isString = function(string) {
      return typeof string === "string";
    };

    function Timecode() {
      this.seconds = 0;
      this.timecode = "0:00";
    }

    Timecode.prototype.setTimecode = function(tc) {
      var secs;
      secs = this.getSecondsFromTimecode(tc);
      if (isNumber(secs)) {
        this.seconds = secs;
        return this.timecode = tc;
      }
    };

    Timecode.prototype.setSeconds = function(secs) {
      var tc;
      tc = this.getTimecodeFromSeconds(secs);
      if (isString(tc)) {
        this.seconds = secs;
        return this.timecode = tc;
      }
    };

    Timecode.prototype.set = function(value) {
      if (isNumber(value)) {
        return this.setSeconds(value);
      } else if (isString(value)) {
        return this.setTimecode(value);
      }
    };

    Timecode.prototype.getSecondsFromTimecode = function(tc) {
      /*
      Takes timecode and turns it into seconds (i.e. 31).
      return {number|undefined}
      */

      var match, result;
      if (!isString(tc)) {
        return;
      }
      result = void 0;
      match = timecodePattern.exec(tc);
      if (match === null) {
        return;
      }
      if (match.length === 3) {
        result = parseInt(match[2], 10);
        result = result + (parseInt(match[1], 10)) * 60;
      }
      return result;
    };

    Timecode.prototype.getTimecodeFromSeconds = function(seconds) {
      /*
      Takes seconds and turns it into timecode (i.e. "1:31")
      returns {string|undefined}
          expect(time_code.seconds.toBe(0)
          time_code.set("1:00")
          expect(time_code.isSmallChange(60)).toBeTruthy()
          expect(time_code.seconds.toBe(60)
      */

      var minutes;
      if (!isNumber(seconds)) {
        return;
      }
      seconds = Math.floor(seconds);
      minutes = Math.floor(seconds / 60);
      seconds = seconds - (minutes * 60);
      seconds = seconds < 10 ? "0" + seconds : "" + seconds;
      return "" + minutes + ":" + seconds;
    };

    Timecode.prototype.isSmallChange = function(secs) {
      var current, newer;
      current = Math.floor(this.seconds);
      newer = Math.floor(secs);
      return current === newer;
    };

    return Timecode;

  })();

}).call(this);

(function() {
  this.FilesSources = (function() {
    var filesPattern, qualityLabel;

    function FilesSources(jQuery, options, callback) {
      var ref, _ref;
      this.jQuery = jQuery;
      this.options = options;
      this.callback = callback;
      this.sources = {};
      this.playableSources = null;
      this.loaded = false;
      if (filesPattern.test(this.options.videoRef)) {
        _ref = filesPattern.exec(this.options.videoRef), ref = _ref[0], this.fileUUID = _ref[1];
        this.fetchSources();
      } else {
        console.error("" + this.options.videoRef + " doesnt match the Files API regex");
      }
    }

    filesPattern = /^files\:\/\/([0-9a-zA-Z-]+)$/;

    qualityLabel = {
      'very low': '360p',
      'low': '480p',
      'med': '720p',
      'high': '1080p'
    };

    FilesSources.prototype.fetchSources = function() {
      var _this = this;
      return this.jQuery.getJSON('/api/bucket', function(config) {
        _this.baseURL = "" + config.content_api_uri + "/files-api/files/" + _this.fileUUID;
        return _this.jQuery.getJSON("" + _this.baseURL + "/metadata", function(data) {
          if (_this.options.isMasked) {
            _this.options.height = 1080;
            _this.options.width = 1920;
          }
          return _this.processSources(data.sources);
        });
      });
    };

    FilesSources.prototype.processSources = function(sources) {
      var profile, sortedSources, source, _i, _len;
      sortedSources = sources.sort(function(a, b) {
        return a.height - b.height;
      });
      for (_i = 0, _len = sortedSources.length; _i < _len; _i++) {
        source = sortedSources[_i];
        if (!(source.label !== 'original')) {
          continue;
        }
        profile = {
          type: source.extension,
          height: this.options.height,
          width: this.options.width,
          label: source.label,
          quality: this.getSourceQuality(source),
          posterType: 'png',
          url: this.buildSourceUrl(source),
          posterUrl: this.buildPosterUrl(source)
        };
        this.addSource(profile);
      }
      this.playableSources = this.getPlayableSources();
      this.loaded = true;
      if (this.callback != null) {
        return this.callback();
      }
    };

    FilesSources.prototype.getSourceQuality = function(source) {
      if (source.height <= 360) {
        return 'very low';
      } else if (source.height <= 480) {
        return 'low';
      } else if (source.height <= 720) {
        return 'med';
      }
      return 'high';
    };

    FilesSources.prototype.qualityToLabel = function(quality) {
      if (qualityLabel[quality] != null) {
        return qualityLabel[quality];
      }
      return quality;
    };

    FilesSources.prototype.addSource = function(profile) {
      if (!this.sources[profile.type]) {
        this.sources[profile.type] = {};
      }
      return this.sources[profile.type][profile.quality] = profile;
    };

    FilesSources.prototype.buildSourceUrl = function(source) {
      return "" + this.baseURL + "?label=" + source.label;
    };

    FilesSources.prototype.buildPosterUrl = function(source) {
      return "" + this.baseURL + "/poster?label=" + source.label;
    };

    FilesSources.prototype.getPosterFrameUrl = function(quality) {
      if (quality == null) {
        quality = 'high';
      }
      return "" + this.baseURL + "/poster?label=" + (this.qualityToLabel(quality));
    };

    FilesSources.prototype.getPlayableSources = function() {
      return this.sources['mp4'];
    };

    return FilesSources;

  })();

}).call(this);

(function() {
  var __slice = [].slice;

  this.KalturaSourcesSelector = (function() {
    function KalturaSourcesSelector(jQuery, options, originalCallback) {
      this.jQuery = jQuery;
      this.options = options;
      this.originalCallback = originalCallback;
      this.sources = null;
      this.playableSources = null;
      this.loaded = false;
      this.checkS3FilesAvailability();
    }

    KalturaSourcesSelector.prototype.checkS3FilesAvailability = function() {
      var s3failCallback, s3successCallback, sourcesInstance,
        _this = this;
      s3failCallback = function() {
        return _this.initOriginKalturaSources();
      };
      s3successCallback = function() {
        return _this.jQuery.ajax({
          type: 'HEAD',
          url: sourcesInstance.getPosterFrameUrl(),
          success: function() {
            return _this.callback(sourcesInstance);
          },
          error: s3failCallback
        });
      };
      return sourcesInstance = new KalturaS3Sources(this.jQuery, this.getS3Options(), s3successCallback, s3failCallback);
    };

    KalturaSourcesSelector.prototype.getS3Options = function() {
      var option, s3options, value, _ref;
      s3options = {};
      _ref = this.options;
      for (option in _ref) {
        value = _ref[option];
        s3options[option] = value;
      }
      s3options.videoRef = this.options.videoRef.replace('kaltura', 'kalturas3');
      return s3options;
    };

    KalturaSourcesSelector.prototype.initOriginKalturaSources = function() {
      var sourcesInstance,
        _this = this;
      return sourcesInstance = new KalturaSources(this.jQuery, this.options, function() {
        return _this.callback(sourcesInstance);
      });
    };

    KalturaSourcesSelector.prototype.callback = function(sourcesInstance) {
      var _this = this;
      this.sourcesInstance = sourcesInstance;
      ['options', 'sources', 'playableSources', 'loaded'].forEach(function(property) {
        return _this[property] = sourcesInstance[property];
      });
      if (this.originalCallback != null) {
        return this.originalCallback();
      }
    };

    KalturaSourcesSelector.prototype.getPosterFrameUrl = function() {
      var args, _ref;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      return (_ref = this.sourcesInstance) != null ? _ref.getPosterFrameUrl.apply(_ref, args) : void 0;
    };

    KalturaSourcesSelector.prototype.getSourcesByTypeAndTag = function() {
      var args, _ref;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      return (_ref = this.sourcesInstance) != null ? _ref.getSourcesByTypeAndTag.apply(_ref, args) : void 0;
    };

    KalturaSourcesSelector.prototype.getPlayableSource = function() {
      var args, _ref;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      return (_ref = this.sourcesInstance) != null ? _ref.getPlayableSource.apply(_ref, args) : void 0;
    };

    return KalturaSourcesSelector;

  })();

}).call(this);

(function() {
  var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  this.KalturaSources = (function() {
    var kalturaPattern;

    KalturaSources.MAX_BITRATE = 1700;

    function KalturaSources(jQuery, options, callback, windowObj) {
      var ref, _ref;
      this.jQuery = jQuery;
      this.options = options;
      this.callback = callback;
      if (windowObj == null) {
        windowObj = window;
      }
      this.sources = {
        mp4: [],
        webm: []
      };
      this.playableSources = null;
      this.partnerId = "";
      this.entryId = "";
      this.loaded = false;
      this.windowObj = windowObj;
      this.video = document.createElement('video');
      if (kalturaPattern.test(this.options.videoRef)) {
        _ref = kalturaPattern.exec(this.options.videoRef), ref = _ref[0], this.partnerId = _ref[1], this.entryId = _ref[2];
        this.fetchSources(this.partnerId, this.entryId);
      }
    }

    kalturaPattern = /kaltura:\/\/_?(\d+)\/([\w\d]+)/i;

    KalturaSources.prototype.getParams = function(partnerId, entryId) {
      return {
        "service": "multirequest",
        "format": "9",
        "1:service": "session",
        "1:action": "startWidgetSession",
        "1:widgetId": "_" + partnerId,
        "2:service": "flavorasset",
        "2:action": "getByEntryId",
        "2:ks": "{1:result:ks}",
        "2:entryId": entryId,
        "callback": ""
      };
    };

    KalturaSources.prototype.serializeUrlParams = function(params) {
      var name, queryString, separator, value;
      queryString = "?";
      separator = "";
      for (name in params) {
        value = params[name];
        value = encodeURIComponent(value);
        queryString = "" + queryString + separator + name + "=" + value;
        separator = "&";
      }
      return queryString;
    };

    KalturaSources.prototype.apiBaseUrl = function() {
      return "" + this.windowObj.location.protocol + "//www.kaltura.com/api_v3/index.php";
    };

    KalturaSources.prototype.fetchSources = function(partnerId, entryId) {
      var params, url, urlparams,
        _this = this;
      params = this.getParams(partnerId, entryId);
      urlparams = this.serializeUrlParams(params);
      url = "" + (this.apiBaseUrl()) + "/" + urlparams + "?";
      return this.jQuery.getJSON(url, function(data) {
        return _this.processSources(data);
      });
    };

    KalturaSources.prototype.processSources = function(json) {
      var bitrate, dimensions, extension, flavor, flavors, includedExtensions, source, tags, url, _i, _len;
      flavors = json[1];
      includedExtensions = ["mp4", "webm"];
      for (_i = 0, _len = flavors.length; _i < _len; _i++) {
        flavor = flavors[_i];
        extension = flavor.fileExt;
        url = this.buildUrl(flavor);
        bitrate = flavor.bitrate;
        if (flavor.tags != null) {
          tags = flavor.tags.split(",");
        }
        dimensions = {
          'w': flavor.width,
          'h': flavor.height
        };
        if (__indexOf.call(includedExtensions, extension) >= 0 && !flavor.isOriginal && bitrate < KalturaSources.MAX_BITRATE) {
          this.addSource(extension, url, bitrate, tags, dimensions);
        }
      }
      source = this.getPlayableSource();
      if (source != null) {
        this.playableSources = {
          'default': source
        };
      }
      this.loaded = true;
      if (this.callback !== void 0) {
        return this.callback();
      }
    };

    KalturaSources.prototype.addSource = function(type, url, bitrate, tags, dimensions) {
      return this.sources[type].push({
        url: url,
        bitrate: bitrate,
        dimensions: dimensions,
        tags: tags,
        type: type
      });
    };

    KalturaSources.prototype.cdnBaseUrl = function() {
      var httpUrl, httpsUrl;
      httpsUrl = "https://cdnsecakmi.kaltura.com";
      httpUrl = "http://cdnakmi.kaltura.com";
      if (this.windowObj.location.protocol === "https:") {
        return httpsUrl;
      } else {
        return httpUrl;
      }
    };

    KalturaSources.prototype.buildUrl = function(flavor) {
      var protocol;
      protocol = this.windowObj.location.protocol.replace(/:$/, "");
      return [this.cdnBaseUrl(), "p/" + flavor.partnerId, "sp/" + flavor.partnerId + "00", "playManifest", "entryId/" + flavor.entryId, "flavorId/" + flavor.id, "format/url/protocol/" + protocol + "/a." + flavor.fileExt].join("/");
    };

    KalturaSources.prototype.getPosterFrameUrl = function() {
      var entry, fileExt, height, quality, type, width;
      if (!this.options.audioOnly) {
        quality = 80;
        type = 1;
        fileExt = "jpg";
        width = this.options.width;
        height = this.options.height;
        entry = this.entryId;
        return "" + (this.cdnBaseUrl()) + "/p/0/thumbnail/entry_id/" + entry + "/width/" + width + "/height/" + height + "/type/" + type + "/quality/" + quality + "." + fileExt;
      } else {
        return this.options.posterFrame;
      }
    };

    KalturaSources.prototype.getSourcesByTypeAndTag = function(type, tag) {
      var results, source, _i, _len, _ref;
      results = [];
      _ref = this.sources[type];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        source = _ref[_i];
        if (__indexOf.call(source.tags, tag) >= 0) {
          results.push(source);
        }
      }
      return results;
    };

    KalturaSources.prototype.getPlayableSource = function() {
      var filtered, playable, sorted;
      filtered = null;
      sorted = null;
      playable = null;
      if (this.sources.mp4.length > 0) {
        filtered = this.sources.mp4;
      } else if (this.sources.webm.length > 0 && this.video.canPlayType('video/webm; codecs="vp8, vorbis"') === 'probably') {
        filtered = this.sources.webm;
      }
      if (filtered != null) {
        sorted = filtered.sort(function(a, b) {
          return a.bitrate - b.bitrate;
        });
      }
      if (sorted != null) {
        playable = BrowserDetector.isIos() || BrowserDetector.isAndroid() ? sorted[0] : sorted[sorted.length - 1];
      }
      return playable;
    };

    return KalturaSources;

  })();

}).call(this);

(function() {
  this.KalturaS3Sources = (function() {
    var kalturaPattern;

    function KalturaS3Sources(jQuery, options, callback, failCallback) {
      var ref, _ref;
      this.jQuery = jQuery;
      this.options = options;
      this.callback = callback;
      this.failCallback = failCallback;
      this.sources = {};
      this.bucket = null;
      this.playableSources = null;
      this.loaded = false;
      if (kalturaPattern.test(this.options.videoRef)) {
        _ref = kalturaPattern.exec(this.options.videoRef), ref = _ref[0], this.partnerId = _ref[1], this.entryId = _ref[2];
        this.fetchSources();
      } else {
        if (this.failCallback != null) {
          this.failCallback();
        }
        console.error("" + this.options.videoRef + " doesnt match the KS3 regex");
      }
    }

    kalturaPattern = /^kalturas3\:\/\/(\d+)\/([0-9a-zA-Z_]+)$/;

    KalturaS3Sources.prototype.fetchSources = function() {
      var _this = this;
      return this.jQuery.ajax({
        url: '/api/bucket',
        success: function(data) {
          _this.bucket = data.content;
          _this.baseUrl = "https://" + _this.bucket + ".s3.amazonaws.com/prod/kaltura_export/" + _this.partnerId + "/" + _this.entryId;
          if (_this.options.isMasked) {
            _this.options.height = 1080;
            _this.options.width = 1920;
          }
          return _this.processSources([
            {
              type: 'mp4',
              height: _this.options.height,
              width: _this.options.width,
              label: 'mp4,low',
              quality: 'low',
              posterType: 'png'
            }, {
              type: 'mp4',
              height: _this.options.height,
              width: _this.options.width,
              label: 'mp4,high',
              quality: 'high',
              posterType: 'png'
            }
          ]);
        },
        error: function() {
          if (_this.failCallback != null) {
            return _this.failCallback();
          }
        }
      });
    };

    KalturaS3Sources.prototype.processSources = function(profiles) {
      var profile, _i, _len;
      for (_i = 0, _len = profiles.length; _i < _len; _i++) {
        profile = profiles[_i];
        profile.url = this.buildSrcUrl(profile.type, profile.quality);
        profile.posterUrl = this.buildPosterUrl(profile.posterType, profile.quality);
        this.addSource(profile);
      }
      this.playableSources = this.getPlayableSources();
      this.loaded = true;
      if (this.callback != null) {
        return this.callback();
      }
    };

    KalturaS3Sources.prototype.addSource = function(profile) {
      if (!this.sources[profile.type]) {
        this.sources[profile.type] = {};
      }
      return this.sources[profile.type][profile.quality] = profile;
    };

    KalturaS3Sources.prototype.buildSrcUrl = function(type, quality) {
      return "" + this.baseUrl + "/" + type + "_" + quality + "." + type;
    };

    KalturaS3Sources.prototype.buildPosterUrl = function(posterType, quality) {
      return "" + this.baseUrl + "/0_high.jpg";
    };

    KalturaS3Sources.prototype.getPosterFrameUrl = function(quality) {
      if (quality == null) {
        quality = 'high';
      }
      return this.playableSources[quality].posterUrl;
    };

    KalturaS3Sources.prototype.getPlayableSources = function() {
      return this.sources['mp4'];
    };

    return KalturaS3Sources;

  })();

}).call(this);

(function() {
  this.WebSources = (function() {
    var manifestPattern, qualityOrder, webPattern;

    function WebSources(jQuery, options, callback) {
      var ref, _ref;
      this.jQuery = jQuery;
      this.options = options;
      this.callback = callback;
      this.video = document.createElement('video');
      this.sources = {};
      this.playableSources = null;
      this.loaded = false;
      if (webPattern.test(this.options.videoRef)) {
        _ref = webPattern.exec(this.options.videoRef), ref = _ref[0], this.baseUrl = _ref[1], this.path = _ref[2], this.jsonFile = _ref[3];
        this.fetchSources();
      }
    }

    webPattern = /(^https?\:\/\/[\w\-\.]+\.[a-zA-Z]{2,3}\/|\/static\/)(\S*\/)?([\w\-\.]+\.json)$/i;

    manifestPattern = /^[\s\n]*(?:videosCallback\()?(.+?)(?:\))?[\s\n]*$/i;

    qualityOrder = {
      low: 0,
      med: 1,
      high: 2
    };

    WebSources.prototype.fetchSources = function() {
      var url,
        _this = this;
      url = this.options.videoRef;
      return this.jQuery.ajax({
        url: url,
        dataType: 'text',
        success: function(data) {
          var err, profiles, rawJson;
          rawJson = manifestPattern.exec(data);
          try {
            profiles = JSON.parse(rawJson[1]);
            return _this.processSources(profiles);
          } catch (_error) {
            err = _error;
            return console.error(err);
          }
        }
      });
    };

    WebSources.prototype.processSources = function(profiles) {
      var profile, sortedProfiles, _i, _len;
      if (profiles === void 0 || profiles.length === 0) {
        return false;
      }
      sortedProfiles = profiles.sort(function(a, b) {
        return qualityOrder[a.quality] - qualityOrder[b.quality];
      });
      for (_i = 0, _len = sortedProfiles.length; _i < _len; _i++) {
        profile = sortedProfiles[_i];
        if (profile.type != null) {
          if (profile.type === 'mpeg4') {
            profile.type = 'mp4';
          }
          profile.url = this.buildSrcUrl(profile.type, profile.quality);
          profile.posterUrl = this.buildPosterUrl(profile.posterType, profile.quality);
          this.addSource(profile);
        }
      }
      this.playableSources = this.getPlayableSources();
      this.loaded = true;
      if (this.callback !== void 0) {
        return this.callback();
      }
    };

    WebSources.prototype.addSource = function(profile) {
      if (!this.sources[profile.type]) {
        this.sources[profile.type] = {};
      }
      return this.sources[profile.type][profile.quality] = profile;
    };

    WebSources.prototype.buildSrcUrl = function(type, quality) {
      return "" + this.baseUrl + this.path + type + "_" + quality + "." + type;
    };

    WebSources.prototype.buildPosterUrl = function(posterType, quality) {
      return "" + this.baseUrl + this.path + "0_" + quality + "." + posterType;
    };

    WebSources.prototype.getPosterFrameUrl = function(quality) {
      if (quality == null) {
        quality = 'high';
      }
      return this.playableSources[quality].posterUrl;
    };

    WebSources.prototype.getPlayableSources = function() {
      if (this.sources['mp4'] != null) {
        return this.sources['mp4'];
      } else if ((this.sources['webm'] != null) && this.video.canPlayType('video/webm; codecs="vp8, vorbis"') === 'probably') {
        return this.sources['webm'];
      } else {
        return null;
      }
    };

    return WebSources;

  })();

}).call(this);

(function() {
  this.SourcesFactory = (function() {
    function SourcesFactory() {}

    return SourcesFactory;

  })();

  this.SourcesFactory.prototype.makeSources = function(jQuery, options, callback) {
    var matches, scheme;
    matches = options.videoRef.match(/(^\/?\w+\/?).*/i);
    scheme = matches[1];
    switch (scheme) {
      case "http":
        return new WebSources(jQuery, options, callback);
      case "https":
        return new WebSources(jQuery, options, callback);
      case "/static/":
        return new WebSources(jQuery, options, callback);
      case "kaltura":
        return new KalturaSourcesSelector(jQuery, options, callback);
      case "kalturas3":
        return new KalturaS3Sources(jQuery, options, callback);
      case "files":
        return new FilesSources(jQuery, options, callback);
      default:
        return console.warn("Invalid scheme: " + scheme);
    }
  };

}).call(this);

(function() {
  this.VideoMarkupWriter = (function() {
    function VideoMarkupWriter(jQuery, document, selector, videoElementId, options) {
      this.jQuery = jQuery;
      this.document = document;
      this.selector = selector;
      this.container = jQuery(selector);
      this.videoElementId = videoElementId;
      this.options = options;
    }

    VideoMarkupWriter.prototype.embed = function(sources, posterFrame, tracks) {
      var forceFlash, video;
      if (tracks == null) {
        tracks = [];
      }
      forceFlash = this.options.audioOnly && BrowserDetector.isFirefox();
      return video = this.embedVideo(sources, posterFrame, forceFlash, tracks);
    };

    VideoMarkupWriter.prototype.remove = function() {
      return this.container.empty();
    };

    VideoMarkupWriter.prototype.embedVideo = function(sources, posterFrame, forceFlash, tracks) {
      var defaultSource, height, track, videoElement, width, _i, _len;
      if (tracks == null) {
        tracks = [];
      }
      width = BrowserDetector.isIphone() ? 360 : this.options.width;
      height = BrowserDetector.isIphone() ? 240 : this.options.height;
      videoElement = this.jQuery('<video preload="' + this.options.preload + '" webkit-playsinline controls>').attr('id', this.videoElementId).attr('width', width).attr('height', height).attr('posterUrl', posterFrame);
      defaultSource = sources.playableSources['default'] || sources.playableSources['med'] || sources.playableSources['high'];
      videoElement.append(this.createSourceElement(defaultSource.type, defaultSource.url));
      if (tracks != null ? tracks.length : void 0) {
        for (_i = 0, _len = tracks.length; _i < _len; _i++) {
          track = tracks[_i];
          videoElement.append(this.createTrackElement(track.type, track.url, track.label, track.language));
        }
      }
      return this.container.html(videoElement[0].outerHTML);
    };

    VideoMarkupWriter.prototype.createSourceElement = function(sourceType, sourceUrl) {
      return this.jQuery('<source>').attr('type', 'video/' + sourceType).attr('src', sourceUrl);
    };

    VideoMarkupWriter.prototype.createTrackElement = function(trackType, trackUrl, trackLabel, trackLanguage) {
      if (trackLabel == null) {
        trackLabel = "";
      }
      if (trackLanguage == null) {
        trackLanguage = "en";
      }
      return this.jQuery('<track>').attr('kind', trackType).attr('src', trackUrl).attr('label', trackLabel).attr('srclang', trackLanguage);
    };

    return VideoMarkupWriter;

  })();

}).call(this);

(function() {
  var VideoPlayer, embedVideoPlayer, playerStates,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    _this = this;

  playerStates = {
    playing: "playing",
    buffering: "buffering",
    ended: "ended",
    paused: "paused",
    loading: "loading",
    ready: "ready",
    seeked: "seeked",
    waiting: "waiting"
  };

  VideoPlayer = (function() {
    var isFunction;

    function VideoPlayer(jQuery, document, options, selector, videoElementId, bindObj) {
      var factory;
      this.jQuery = jQuery;
      this.document = document;
      this.options = options;
      this.selector = selector;
      this.bindObj = bindObj;
      this.playerInitialized = __bind(this.playerInitialized, this);
      this.playerStateChanged = __bind(this.playerStateChanged, this);
      this.sourcesCallback = __bind(this.sourcesCallback, this);
      this.initialized = false;
      if (videoElementId === null) {
        videoElementId = u.utils.uuid();
      }
      this.videoElementId = videoElementId;
      this.playerState = playerStates.loading;
      this.currentTime = new Timecode();
      if (!this.options.preload) {
        this.options.preload = 'auto';
      }
      if (this.jQuery("#" + videoElementId).closest('.masked').length > 0) {
        this.options.isMasked = true;
      }
      factory = new SourcesFactory();
      this.sources = factory.makeSources(this.jQuery, this.options, this.sourcesCallback);
      if (!this.options.encodingErrorMessage) {
        this.options.encodingErrorMessage = "Your video is going through final processing. Depending on the size and quality of your video, this may take time to complete.";
      }
    }

    VideoPlayer.prototype.sourcesCallback = function() {
      var defaultSource;
      if (this.sources.playableSources != null) {
        this.writer = new VideoMarkupWriter(this.jQuery, this.document, this.selector, this.videoElementId, this.options);
        this.writer.embed(this.sources, this.sources.getPosterFrameUrl(), this.options.tracks, this.options.preload);
        if (this.bindObj != null) {
          defaultSource = this.sources.playableSources['default'] || this.sources.playableSources['med'] || this.sources.playableSources['high'];
          this.bindObj.sourceDimensions = defaultSource.dimensions;
        }
        return this.createPlayer();
      } else {
        this.showError(this.options.encodingErrorMessage);
        return this.player = null;
      }
    };

    isFunction = function(fn) {
      return typeof fn === "function";
    };

    VideoPlayer.prototype.isFlash = function() {
      return this.player.media.pluginType === "flash";
    };

    VideoPlayer.prototype.play = function() {
      return this.player.media.play();
    };

    VideoPlayer.prototype.pause = function() {
      return this.player.media.pause();
    };

    VideoPlayer.prototype.setPlayerSize = function(width, height) {
      this.player.setPlayerSize(width, height);
      return this.setControlsSize();
    };

    VideoPlayer.prototype.setControlsSize = function() {
      var element;
      element = this.getPlayerElement();
      if (u.utils.isntUndefined(element) && element !== null) {
        return element.setControlsSize();
      }
    };

    VideoPlayer.prototype.getPlayerElement = function() {
      var player, playerElement, _i, _len, _ref;
      playerElement = null;
      _ref = window.mejs.players;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        player = _ref[_i];
        if (player.id === this.player.id) {
          playerElement = player;
        }
      }
      return playerElement;
    };

    VideoPlayer.prototype.setPosterSize = function(width, height) {
      var element;
      element = this.getPlayerElement();
      if (u.utils.isntUndefined(element) && element !== null) {
        return element.setPosterSize(width, height);
      }
    };

    VideoPlayer.prototype.getVideoSize = function() {
      return this.sources.playableSources['high'].dimensions;
    };

    VideoPlayer.prototype.setVideoSize = function(width, height) {
      if (this.player.media && u.utils.isFunction(this.player.media.setVideoSize)) {
        return this.player.media.setVideoSize(width, height);
      }
    };

    VideoPlayer.prototype.setOption = function(name, value) {
      this.player.options[name] = value;
      return this.setControlsSize();
    };

    VideoPlayer.prototype.destroy = function() {
      this.player.media.stop();
      return this.writer.remove();
    };

    VideoPlayer.prototype.setPlayerTime = function(time_value) {
      var tempTimecode;
      tempTimecode = new Timecode();
      tempTimecode.set(time_value);
      return this.player.media.setCurrentTime(tempTimecode.seconds);
    };

    VideoPlayer.prototype.showOnlyPoster = function() {
      var posterElement, videoElement;
      posterElement = this.jQuery(".mejs-poster");
      if (!this.isFlash) {
        videoElement = this.jQuery(this.player.media);
        videoElement.hide();
      }
      return posterElement.show();
    };

    VideoPlayer.prototype.hideLoading = function() {
      var loadingElement;
      loadingElement = (this.jQuery(".mejs-overlay-loading")).parent();
      if (loadingElement !== void 0) {
        return loadingElement.hide();
      }
    };

    VideoPlayer.prototype.playerStateChanged = function(evt, newState) {
      this.playerState = newState;
      if (this.isFlash() && newState === playerStates.seeked) {
        this.playerTimeUpdated(evt, this.player.media.currentTime);
      }
      if (this.options.audioOnly) {
        this.showOnlyPoster();
      }
      return this.hideLoading();
    };

    VideoPlayer.prototype.isSeeking = function() {
      return this.playerState === playerStates.seeked;
    };

    VideoPlayer.prototype.isWaiting = function() {
      return this.playerState === playerStates.waiting;
    };

    VideoPlayer.prototype.playerTimeUpdated = function(evt, seconds) {
      if (this.isSeeking() || this.isWaiting()) {
        this.playerStateChanged(evt, playerStates.playing);
      }
      if (this.currentTime.isSmallChange(seconds)) {
        return;
      }
      return this.currentTime.set(seconds);
    };

    VideoPlayer.prototype.bindEvent = function(el, name, handler) {
      return el.addEventListener(name, handler, true);
    };

    VideoPlayer.prototype.bind = function(media, bindObj) {
      this.bindEvent(media, "timeupdate", function(evt) {
        if (isFunction(bindObj.playerTimeUpdated)) {
          return bindObj.playerTimeUpdated(evt, media.currentTime);
        }
      });
      this.bindEvent(media, "playing", function(evt) {
        if (isFunction(bindObj.playerStateChanged)) {
          return bindObj.playerStateChanged(evt, playerStates.playing);
        }
      });
      this.bindEvent(media, "pause", function(evt) {
        if (isFunction(bindObj.playerStateChanged)) {
          return bindObj.playerStateChanged(evt, playerStates.paused);
        }
      });
      this.bindEvent(media, "ended", function(evt) {
        if (isFunction(bindObj.playerStateChanged)) {
          return bindObj.playerStateChanged(evt, playerStates.ended);
        }
      });
      this.bindEvent(media, "seeked", function(evt) {
        if (isFunction(bindObj.playerStateChanged)) {
          return bindObj.playerStateChanged(evt, playerStates.seeked);
        }
      });
      this.bindEvent(media, "seeking", function(evt) {
        if (isFunction(bindObj.playerStateChanged)) {
          return bindObj.playerStateChanged(evt, playerStates.seeked);
        }
      });
      this.bindEvent(media, "canplay", function(evt) {
        if (isFunction(bindObj.playerStateChanged)) {
          return bindObj.playerStateChanged(evt, playerStates.ready);
        }
      });
      this.bindEvent(media, "loadstart", function(evt) {
        if (isFunction(bindObj.playerStateChanged)) {
          return bindObj.playerStateChanged(evt, playerStates.ready);
        }
      });
      return this.bindEvent(media, "waiting", function(evt) {
        if (isFunction(bindObj.playerStateChanged)) {
          return bindObj.playerStateChanged(evt, playerStates.waiting);
        }
      });
    };

    VideoPlayer.prototype.bindPlayerEvents = function(bindObj) {
      this.bind(this.player.media, bindObj);
      return bindObj.playerInitialized(this.player, bindObj);
    };

    VideoPlayer.prototype.showPlayerLoading = function(player, delay) {
      var loadingIndicatorElement;
      if (delay == null) {
        delay = 3000;
      }
      loadingIndicatorElement = $(".mejs-overlay-loading");
      player.hideControls();
      loadingIndicatorElement.parent().show();
      loadingIndicatorElement.show();
      if (delay !== null) {
        return setTimeout(function() {
          player.showControls();
          loadingIndicatorElement.parent().hide();
          return loadingIndicatorElement.hide();
        }, delay);
      }
    };

    VideoPlayer.prototype.getTimeProgress = function() {
      var duration;
      duration = this.player.media.duration;
      if (duration !== void 0 && this.currentTime !== void 0) {
        return this.currentTime.seconds / duration;
      }
    };

    VideoPlayer.prototype.getBytesProgress = function() {
      /*
      FIXME: Returns 0 / 0 for everything but Flash?
      */

      var loadedBytes, totalBytes;
      loadedBytes = 0;
      totalBytes = 0;
      if (this.isFlash()) {
        loadedBytes = this.player.media.bufferedBytes;
        totalBytes = this.player.media.bytesTotal;
      }
      return loadedBytes / totalBytes;
    };

    VideoPlayer.prototype.createPlayer = function() {
      var container, features, minimumIE10, previouslyDefinedSuccessHandler;
      previouslyDefinedSuccessHandler = this.options.success;
      container = this.jQuery(this.selector);
      container.addClass("no-focus");
      if (container.closest('.oyster').length === 0 && container.closest('.socratic').length === 0) {
        if (BrowserDetector.isAndroid() || BrowserDetector.isIE() || BrowserDetector.isIE11()) {
          features = ['playpause', 'current', 'progress', 'duration', 'tracks', 'volume', 'analytics'];
        } else {
          features = ['playpause', 'current', 'progress', 'duration', 'tracks', 'speed', 'volume', 'analytics'];
        }
        if (!BrowserDetector.isIphone() && !BrowserDetector.isAndroid()) {
          features.push('fullscreen');
        }
        this.options.features = features;
      }
      this.options.playableSources = this.sources.playableSources;
      this.player = new MediaElementPlayer("#" + this.videoElementId, this.options);
      this.bindPlayerEvents(this);
      if (this.bindObj != null) {
        this.bindPlayerEvents(this.bindObj);
      }
      minimumIE10 = BrowserDetector.isIE() && BrowserDetector.IEVersion() >= 10;
      if (BrowserDetector.isIE() || this.options.forceFlash) {
        this.showPlayerLoading(this.player, null);
      }
      if (!minimumIE10) {
        this.showPlayerLoading(this.player);
      }
      this.initialized = true;
      return this.player;
    };

    VideoPlayer.prototype.showError = function(message) {
      var container;
      container = this.jQuery(this.selector);
      if (container) {
        return container.html("<span class=\"encoding-error-msg\">" + message + "</span>");
      }
    };

    VideoPlayer.prototype.playerInitialized = function(player, _this) {
      _this.player = player;
      if (!(BrowserDetector.isIE() && BrowserDetector.IEVersion() >= 10)) {
        return this.showPlayerLoading(player);
      }
    };

    return VideoPlayer;

  })();

  embedVideoPlayer = function(selector, options, bindObj, videoElementId) {
    var document, jQuery, player;
    if (videoElementId == null) {
      videoElementId = null;
    }
    jQuery = window.jQuery;
    document = window.document;
    player = new VideoPlayer(jQuery, document, options, selector, videoElementId, bindObj);
    return player;
  };

  this.exportModule("video", "VideoPlayer", VideoPlayer);

  this.exportModule("video", "embedVideoPlayer", embedVideoPlayer);

  this.exportModule("video", "playerStates", playerStates);

}).call(this);

/*	SWFObject v2.2 <http://code.google.com/p/swfobject/>
    is released under the MIT License <http://www.opensource.org/licenses/mit-license.php>

    CODE FROM https://cdnjs.cloudflare.com/ajax/libs/swfobject/2.2/swfobject.js
*/
var swfobject=function(){var D="undefined",r="object",S="Shockwave Flash",W="ShockwaveFlash.ShockwaveFlash",q="application/x-shockwave-flash",R="SWFObjectExprInst",x="onreadystatechange",O=window,j=document,t=navigator,T=false,U=[h],o=[],N=[],I=[],l,Q,E,B,J=false,a=false,n,G,m=true,M=function(){var aa=typeof j.getElementById!=D&&typeof j.getElementsByTagName!=D&&typeof j.createElement!=D,ah=t.userAgent.toLowerCase(),Y=t.platform.toLowerCase(),ae=Y?/win/.test(Y):/win/.test(ah),ac=Y?/mac/.test(Y):/mac/.test(ah),af=/webkit/.test(ah)?parseFloat(ah.replace(/^.*webkit\/(\d+(\.\d+)?).*$/,"$1")):false,X=!+"\v1",ag=[0,0,0],ab=null;if(typeof t.plugins!=D&&typeof t.plugins[S]==r){ab=t.plugins[S].description;if(ab&&!(typeof t.mimeTypes!=D&&t.mimeTypes[q]&&!t.mimeTypes[q].enabledPlugin)){T=true;X=false;ab=ab.replace(/^.*\s+(\S+\s+\S+$)/,"$1");ag[0]=parseInt(ab.replace(/^(.*)\..*$/,"$1"),10);ag[1]=parseInt(ab.replace(/^.*\.(.*)\s.*$/,"$1"),10);ag[2]=/[a-zA-Z]/.test(ab)?parseInt(ab.replace(/^.*[a-zA-Z]+(.*)$/,"$1"),10):0}}else{if(typeof O.ActiveXObject!=D){try{var ad=new ActiveXObject(W);if(ad){ab=ad.GetVariable("$version");if(ab){X=true;ab=ab.split(" ")[1].split(",");ag=[parseInt(ab[0],10),parseInt(ab[1],10),parseInt(ab[2],10)]}}}catch(Z){}}}return{w3:aa,pv:ag,wk:af,ie:X,win:ae,mac:ac}}(),k=function(){if(!M.w3){return}if((typeof j.readyState!=D&&j.readyState=="complete")||(typeof j.readyState==D&&(j.getElementsByTagName("body")[0]||j.body))){f()}if(!J){if(typeof j.addEventListener!=D){j.addEventListener("DOMContentLoaded",f,false)}if(M.ie&&M.win){j.attachEvent(x,function(){if(j.readyState=="complete"){j.detachEvent(x,arguments.callee);f()}});if(O==top){(function(){if(J){return}try{j.documentElement.doScroll("left")}catch(X){setTimeout(arguments.callee,0);return}f()})()}}if(M.wk){(function(){if(J){return}if(!/loaded|complete/.test(j.readyState)){setTimeout(arguments.callee,0);return}f()})()}s(f)}}();function f(){if(J){return}try{var Z=j.getElementsByTagName("body")[0].appendChild(C("span"));Z.parentNode.removeChild(Z)}catch(aa){return}J=true;var X=U.length;for(var Y=0;Y<X;Y++){U[Y]()}}function K(X){if(J){X()}else{U[U.length]=X}}function s(Y){if(typeof O.addEventListener!=D){O.addEventListener("load",Y,false)}else{if(typeof j.addEventListener!=D){j.addEventListener("load",Y,false)}else{if(typeof O.attachEvent!=D){i(O,"onload",Y)}else{if(typeof O.onload=="function"){var X=O.onload;O.onload=function(){X();Y()}}else{O.onload=Y}}}}}function h(){if(T){V()}else{H()}}function V(){var X=j.getElementsByTagName("body")[0];var aa=C(r);aa.setAttribute("type",q);var Z=X.appendChild(aa);if(Z){var Y=0;(function(){if(typeof Z.GetVariable!=D){var ab=Z.GetVariable("$version");if(ab){ab=ab.split(" ")[1].split(",");M.pv=[parseInt(ab[0],10),parseInt(ab[1],10),parseInt(ab[2],10)]}}else{if(Y<10){Y++;setTimeout(arguments.callee,10);return}}X.removeChild(aa);Z=null;H()})()}else{H()}}function H(){var ag=o.length;if(ag>0){for(var af=0;af<ag;af++){var Y=o[af].id;var ab=o[af].callbackFn;var aa={success:false,id:Y};if(M.pv[0]>0){var ae=c(Y);if(ae){if(F(o[af].swfVersion)&&!(M.wk&&M.wk<312)){w(Y,true);if(ab){aa.success=true;aa.ref=z(Y);ab(aa)}}else{if(o[af].expressInstall&&A()){var ai={};ai.data=o[af].expressInstall;ai.width=ae.getAttribute("width")||"0";ai.height=ae.getAttribute("height")||"0";if(ae.getAttribute("class")){ai.styleclass=ae.getAttribute("class")}if(ae.getAttribute("align")){ai.align=ae.getAttribute("align")}var ah={};var X=ae.getElementsByTagName("param");var ac=X.length;for(var ad=0;ad<ac;ad++){if(X[ad].getAttribute("name").toLowerCase()!="movie"){ah[X[ad].getAttribute("name")]=X[ad].getAttribute("value")}}P(ai,ah,Y,ab)}else{p(ae);if(ab){ab(aa)}}}}}else{w(Y,true);if(ab){var Z=z(Y);if(Z&&typeof Z.SetVariable!=D){aa.success=true;aa.ref=Z}ab(aa)}}}}}function z(aa){var X=null;var Y=c(aa);if(Y&&Y.nodeName=="OBJECT"){if(typeof Y.SetVariable!=D){X=Y}else{var Z=Y.getElementsByTagName(r)[0];if(Z){X=Z}}}return X}function A(){return !a&&F("6.0.65")&&(M.win||M.mac)&&!(M.wk&&M.wk<312)}function P(aa,ab,X,Z){a=true;E=Z||null;B={success:false,id:X};var ae=c(X);if(ae){if(ae.nodeName=="OBJECT"){l=g(ae);Q=null}else{l=ae;Q=X}aa.id=R;if(typeof aa.width==D||(!/%$/.test(aa.width)&&parseInt(aa.width,10)<310)){aa.width="310"}if(typeof aa.height==D||(!/%$/.test(aa.height)&&parseInt(aa.height,10)<137)){aa.height="137"}j.title=j.title.slice(0,47)+" - Flash Player Installation";var ad=M.ie&&M.win?"ActiveX":"PlugIn",ac="MMredirectURL="+O.location.toString().replace(/&/g,"%26")+"&MMplayerType="+ad+"&MMdoctitle="+j.title;if(typeof ab.flashvars!=D){ab.flashvars+="&"+ac}else{ab.flashvars=ac}if(M.ie&&M.win&&ae.readyState!=4){var Y=C("div");X+="SWFObjectNew";Y.setAttribute("id",X);ae.parentNode.insertBefore(Y,ae);ae.style.display="none";(function(){if(ae.readyState==4){ae.parentNode.removeChild(ae)}else{setTimeout(arguments.callee,10)}})()}u(aa,ab,X)}}function p(Y){if(M.ie&&M.win&&Y.readyState!=4){var X=C("div");Y.parentNode.insertBefore(X,Y);X.parentNode.replaceChild(g(Y),X);Y.style.display="none";(function(){if(Y.readyState==4){Y.parentNode.removeChild(Y)}else{setTimeout(arguments.callee,10)}})()}else{Y.parentNode.replaceChild(g(Y),Y)}}function g(ab){var aa=C("div");if(M.win&&M.ie){aa.innerHTML=ab.innerHTML}else{var Y=ab.getElementsByTagName(r)[0];if(Y){var ad=Y.childNodes;if(ad){var X=ad.length;for(var Z=0;Z<X;Z++){if(!(ad[Z].nodeType==1&&ad[Z].nodeName=="PARAM")&&!(ad[Z].nodeType==8)){aa.appendChild(ad[Z].cloneNode(true))}}}}}return aa}function u(ai,ag,Y){var X,aa=c(Y);if(M.wk&&M.wk<312){return X}if(aa){if(typeof ai.id==D){ai.id=Y}if(M.ie&&M.win){var ah="";for(var ae in ai){if(ai[ae]!=Object.prototype[ae]){if(ae.toLowerCase()=="data"){ag.movie=ai[ae]}else{if(ae.toLowerCase()=="styleclass"){ah+=' class="'+ai[ae]+'"'}else{if(ae.toLowerCase()!="classid"){ah+=" "+ae+'="'+ai[ae]+'"'}}}}}var af="";for(var ad in ag){if(ag[ad]!=Object.prototype[ad]){af+='<param name="'+ad+'" value="'+ag[ad]+'" />'}}aa.outerHTML='<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"'+ah+">"+af+"</object>";N[N.length]=ai.id;X=c(ai.id)}else{var Z=C(r);Z.setAttribute("type",q);for(var ac in ai){if(ai[ac]!=Object.prototype[ac]){if(ac.toLowerCase()=="styleclass"){Z.setAttribute("class",ai[ac])}else{if(ac.toLowerCase()!="classid"){Z.setAttribute(ac,ai[ac])}}}}for(var ab in ag){if(ag[ab]!=Object.prototype[ab]&&ab.toLowerCase()!="movie"){e(Z,ab,ag[ab])}}aa.parentNode.replaceChild(Z,aa);X=Z}}return X}function e(Z,X,Y){var aa=C("param");aa.setAttribute("name",X);aa.setAttribute("value",Y);Z.appendChild(aa)}function y(Y){var X=c(Y);if(X&&X.nodeName=="OBJECT"){if(M.ie&&M.win){X.style.display="none";(function(){if(X.readyState==4){b(Y)}else{setTimeout(arguments.callee,10)}})()}else{X.parentNode.removeChild(X)}}}function b(Z){var Y=c(Z);if(Y){for(var X in Y){if(typeof Y[X]=="function"){Y[X]=null}}Y.parentNode.removeChild(Y)}}function c(Z){var X=null;try{X=j.getElementById(Z)}catch(Y){}return X}function C(X){return j.createElement(X)}function i(Z,X,Y){Z.attachEvent(X,Y);I[I.length]=[Z,X,Y]}function F(Z){var Y=M.pv,X=Z.split(".");X[0]=parseInt(X[0],10);X[1]=parseInt(X[1],10)||0;X[2]=parseInt(X[2],10)||0;return(Y[0]>X[0]||(Y[0]==X[0]&&Y[1]>X[1])||(Y[0]==X[0]&&Y[1]==X[1]&&Y[2]>=X[2]))?true:false}function v(ac,Y,ad,ab){if(M.ie&&M.mac){return}var aa=j.getElementsByTagName("head")[0];if(!aa){return}var X=(ad&&typeof ad=="string")?ad:"screen";if(ab){n=null;G=null}if(!n||G!=X){var Z=C("style");Z.setAttribute("type","text/css");Z.setAttribute("media",X);n=aa.appendChild(Z);if(M.ie&&M.win&&typeof j.styleSheets!=D&&j.styleSheets.length>0){n=j.styleSheets[j.styleSheets.length-1]}G=X}if(M.ie&&M.win){if(n&&typeof n.addRule==r){n.addRule(ac,Y)}}else{if(n&&typeof j.createTextNode!=D){n.appendChild(j.createTextNode(ac+" {"+Y+"}"))}}}function w(Z,X){if(!m){return}var Y=X?"visible":"hidden";if(J&&c(Z)){c(Z).style.visibility=Y}else{v("#"+Z,"visibility:"+Y)}}function L(Y){var Z=/[\\\"<>\.;]/;var X=Z.exec(Y)!=null;return X&&typeof encodeURIComponent!=D?encodeURIComponent(Y):Y}var d=function(){if(M.ie&&M.win){window.attachEvent("onunload",function(){var ac=I.length;for(var ab=0;ab<ac;ab++){I[ab][0].detachEvent(I[ab][1],I[ab][2])}var Z=N.length;for(var aa=0;aa<Z;aa++){y(N[aa])}for(var Y in M){M[Y]=null}M=null;for(var X in swfobject){swfobject[X]=null}swfobject=null})}}();return{registerObject:function(ab,X,aa,Z){if(M.w3&&ab&&X){var Y={};Y.id=ab;Y.swfVersion=X;Y.expressInstall=aa;Y.callbackFn=Z;o[o.length]=Y;w(ab,false)}else{if(Z){Z({success:false,id:ab})}}},getObjectById:function(X){if(M.w3){return z(X)}},embedSWF:function(ab,ah,ae,ag,Y,aa,Z,ad,af,ac){var X={success:false,id:ah};if(M.w3&&!(M.wk&&M.wk<312)&&ab&&ah&&ae&&ag&&Y){w(ah,false);K(function(){ae+="";ag+="";var aj={};if(af&&typeof af===r){for(var al in af){aj[al]=af[al]}}aj.data=ab;aj.width=ae;aj.height=ag;var am={};if(ad&&typeof ad===r){for(var ak in ad){am[ak]=ad[ak]}}if(Z&&typeof Z===r){for(var ai in Z){if(typeof am.flashvars!=D){am.flashvars+="&"+ai+"="+Z[ai]}else{am.flashvars=ai+"="+Z[ai]}}}if(F(Y)){var an=u(aj,am,ah);if(aj.id==ah){w(ah,true)}X.success=true;X.ref=an}else{if(aa&&A()){aj.data=aa;P(aj,am,ah,ac);return}else{w(ah,true)}}if(ac){ac(X)}})}else{if(ac){ac(X)}}},switchOffAutoHideShow:function(){m=false},ua:M,getFlashPlayerVersion:function(){return{major:M.pv[0],minor:M.pv[1],release:M.pv[2]}},hasFlashPlayerVersion:F,createSWF:function(Z,Y,X){if(M.w3){return u(Z,Y,X)}else{return undefined}},showExpressInstall:function(Z,aa,X,Y){if(M.w3&&A()){P(Z,aa,X,Y)}},removeSWF:function(X){if(M.w3){y(X)}},createCSS:function(aa,Z,Y,X){if(M.w3){v(aa,Z,Y,X)}},addDomLoadEvent:K,addLoadEvent:s,getQueryParamValue:function(aa){var Z=j.location.search||j.location.hash;if(Z){if(/\?/.test(Z)){Z=Z.split("?")[1]}if(aa==null){return L(Z)}var Y=Z.split("&");for(var X=0;X<Y.length;X++){if(Y[X].substring(0,Y[X].indexOf("="))==aa){return L(Y[X].substring((Y[X].indexOf("=")+1)))}}}return""},expressInstallCallback:function(){if(a){var X=c(R);if(X&&l){X.parentNode.replaceChild(l,X);if(Q){w(Q,true);if(M.ie&&M.win){l.style.display="block"}}if(E){E(B)}}a=false}}}}();

var mediaSelect;

mediaSelect = angular.module('MediaSelect', ['MediaServices', 'MediaLibraryServices', 'MediaDirectives', 'MediaFilters', 'MediaConfiguration', 'MediaSelectPlayerModule', 'BrowserDetector']);

var browserDetector;

browserDetector = angular.module('BrowserDetector', []);

browserDetector.factory('Browser', function() {
  return BrowserDetector;
});

var mediaFilters;

mediaFilters = angular.module('MediaFilters', []);

mediaFilters.filter('formatDateTime', function() {
  return function(timeString) {
    var datePart, formattedStr, myArray, myRe, timePart;
    myRe = new RegExp("(([^T]+)T([\\d:]+))([+-].*)", "g");
    myArray = myRe.exec(timeString);
    if ((myArray != null) && myArray.length > 1) {
      datePart = myArray[2];
      timePart = myArray[3];
      return formattedStr = "" + datePart + " " + timePart;
    } else {
      return timeString;
    }
  };
});

mediaFilters.filter('formatVideoDuration', function() {
  return function(durationInSeconds) {
    var hour, minutes, secs;
    if (durationInSeconds === null) {
      return null;
    }
    hour = Math.floor(durationInSeconds / 3600);
    minutes = Math.floor((durationInSeconds - hour * 3600) / 60);
    secs = durationInSeconds - (hour * 3600 + minutes * 60);
    return "" + hour + ":" + minutes + ":" + secs;
  };
});

var lmsConfiguration;

lmsConfiguration = angular.module('MediaConfiguration', []);

lmsConfiguration.factory('MediaConfiguration', [
  '$window', function($window) {
    var data, _ref;
    data = {};
    data.context = {};
    data.context.user = {};
    data.context.user.id = 0;
    data.context.courseId = 0;
    data.context.sectionId = 0;
    data.context.moduleId = 0;
    data.context.role = "student";
    data.context.site = {};
    data.context.site.kalturaPartnerId = 0;
    data.getValueAsBoolean = function(value) {
      var result;
      result = false;
      if (typeof value === 'boolean') {
        return result = value;
      } else if (typeof value === 'string') {
        return result = value.toLowerCase() === "true";
      }
    };
    data.getValueAsNumber = function(value) {
      return +value;
    };
    data.getRoleIsStudent = function() {
      return data.context.role === 'student';
    };
    data.getRoleIsTeacher = function() {
      return !data.getRoleIsStudent();
    };
    data.setup = function(context) {
      var _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7;
      if (context != null) {
        data.hasContext = true;
        data.context.user.id = (_ref = context.user) != null ? _ref.id : void 0;
        data.context.role = (_ref1 = context.course) != null ? _ref1.role : void 0;
        data.context.course_sections = (_ref2 = context.course) != null ? _ref2.sections : void 0;
        data.context.sectionId = (_ref3 = context.course) != null ? _ref3.section_id : void 0;
        data.context.enrolled_section_ids = (_ref4 = context.course) != null ? _ref4.sections_enrolled : void 0;
        data.context.courseId = (_ref5 = context.course) != null ? _ref5.id : void 0;
        data.context.moduleId = (_ref6 = context.course) != null ? _ref6.cm_id : void 0;
        return data.context.site.kalturaPartnerId = data.getValueAsNumber((_ref7 = context.site) != null ? _ref7.kaltura_partner_id : void 0);
      }
    };
    data.setup($window != null ? (_ref = $window.i11l) != null ? _ref.LMSContext : void 0 : void 0);
    return data;
  }
]);

var MediaController,
  __slice = [].slice;

MediaController = function($rootScope, $scope, $window, recorder, config, library, UserVideosModelFactory, player, browser) {
  $scope.setup = function() {
    $scope.visible = false;
    $scope.recording = false;
    $scope.mediaState = "recorder";
    $scope.entryId = "";
    $scope.leftButtonClass = "black";
    $scope.centerButtonClass = "gray";
    $scope.rightButtonClass = "green";
    $scope.leftButtonText = "Cancel";
    $scope.centerButtonText = "Start Recording";
    $scope.rightButtonText = "Next";
    $scope.leftButtonEnabled = true;
    $scope.centerButtonEnabled = false;
    $scope.centerButtonVisible = false;
    $scope.rightButtonEnabled = false;
    $scope.sortOrder = {
      "created": "desc",
      "title": "asc",
      "duration": "desc"
    };
    $scope.sortBy = "created";
    return $scope.setToStartRecording();
  };
  $scope.raiseEvent = function() {
    var args, name;
    name = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    return $rootScope.$broadcast(name, args);
  };
  $scope.$on('cameraClicked', function(event, args) {
    var container;
    container = args[0];
    if (args.length > 1) {
      $scope.videoContext = args[1];
    }
    if (browser.isDevice()) {
      console.log("cameraClicked on device:" + $scope.videoContext);
      return $window.location = "call://cameraClickedButtonPressed?context=" + $scope.videoContext;
    } else {
      return $scope.cameraShow(container);
    }
  });
  $scope.getContainerClass = function() {
    if ($scope.isLibraryState()) {
      return "container-b extended";
    } else {
      return "container-b";
    }
  };
  $scope.$on('fileClicked', function(event, args) {
    var container;
    $scope.userId = args[0];
    container = args[1];
    if (args.length > 2) {
      $scope.videoContext = args[2];
    }
    return library.getUserVideos($scope.userId, $scope.sortBy, $scope.sortOrder[$scope.sortBy], function(items) {
      $scope.userVideosModel = UserVideosModelFactory(items);
      if (container != null) {
        $scope.mediaState = "library";
        $scope.centerButtonText = "";
        $scope.rightButtonText = "Next";
        $scope.leftButtonEnabled = true;
        $scope.centerButtonVisible = false;
        $scope.centerButtonEnabled = false;
        $scope.rightButtonEnabled = false;
        return $scope.show();
      }
    });
  });
  $scope.sortVideosBy = function(sortBy) {
    $scope.sortBy = sortBy;
    $scope.sortOrder[sortBy] = $scope.sortOrder[sortBy] === "desc" ? "asc" : "desc";
    return library.getUserVideos($scope.userId, $scope.sortBy, $scope.sortOrder[sortBy], function(items) {
      return $scope.userVideosModel.setVideos(items);
    });
  };
  $scope.previewVideo = function(entryId) {
    var videoRef;
    $scope.mediaState = "preview";
    $scope.rightButtonText = "Choose";
    $scope.rightButtonEnabled = true;
    $scope.entryIdSelectedForPreview = entryId;
    videoRef = "kaltura://" + config.context.site.kalturaPartnerId + "/" + entryId;
    return $scope.player = player(videoRef, null, 560, 315, "#preview_viewport");
  };
  $scope.cameraShow = function(container) {
    $scope.mediaState = "recorder";
    $scope.setFlashVisible();
    $scope.setToStartRecording();
    return $scope.show();
  };
  $scope.show = function() {
    $scope.raiseEvent('mediaSelectShow');
    return $scope.visible = true;
  };
  $scope.hide = function() {
    $scope.raiseEvent('mediaSelectHide');
    return $scope.visible = false;
  };
  $scope.getFlashElement = function() {
    return angular.element('#krecord');
  };
  $scope.getFlashObj = function() {
    return angular.element('#krecord')[0];
  };
  $scope.getHelpTextElement = function() {
    return angular.element('.help-text');
  };
  $scope.cancelClick = function() {
    return $scope.cancel();
  };
  $scope.leftClick = function() {
    return $scope.cancel();
  };
  $scope.centerClick = function() {
    return $scope.toggleRecording();
  };
  $scope.rightClick = function() {
    var entryId;
    if ($scope.rightButtonEnabled) {
      if ($scope.isRecorderState()) {
        return $scope.recordNext();
      } else if ($scope.isInfoState()) {
        return $scope.infoNext();
      } else if ($scope.isPreviewState()) {
        entryId = $scope.entryIdSelectedForPreview;
        $scope.entryIdSelectedForPreview = null;
        return $scope.videoSelectedFromLibrary(entryId);
      }
    }
  };
  $scope.recordNext = function() {
    return $scope.addEntry();
  };
  $scope.isCanceledState = function() {
    return $scope.mediaState === "canceled";
  };
  $scope.isInfoState = function() {
    return $scope.mediaState === "info";
  };
  $scope.isRecorderState = function() {
    return $scope.mediaState === "recorder";
  };
  $scope.isPreviewState = function() {
    return $scope.mediaState === "preview";
  };
  $scope.isLibraryState = function() {
    return $scope.mediaState === "library";
  };
  $scope.isLibraryOrPreviewState = function() {
    return $scope.mediaState === "preview" || $scope.mediaState === "library";
  };
  $scope.cancel = function() {
    if ($scope.isPreviewState()) {
      $scope.mediaState = "library";
      return $scope.rightButtonEnabled = false;
    } else {
      $scope.hide();
      return $scope.mediaState = "canceled";
    }
  };
  $scope.changeToInfo = function() {
    return $scope.mediaState = "info";
  };
  $scope.startRecording = function() {
    var flashObj;
    flashObj = $scope.getFlashObj();
    flashObj.startRecording();
    $scope.setHelpTextInvisible();
    $scope.setFlashVisible();
    $scope.recording = true;
    $scope._trackEvent('videoRecordingStarted');
    return $scope.setToStopRecording();
  };
  $scope.setToStopRecording = function() {
    $scope.centerButtonText = "Stop Recording";
    $scope.centerButtonClass = "gray stop-recording";
    return $scope.rightButtonEnabled = false;
  };
  $scope.setToStartRecording = function() {
    $scope.centerButtonText = "Start Recording";
    $scope.centerButtonClass = "gray start-recording";
    return $scope.rightButtonEnabled = false;
  };
  $scope.setToRetakeRecording = function() {
    $scope.centerButtonText = "Retake";
    $scope.centerButtonClass = "gray retake";
    return $scope.rightButtonEnabled = true;
  };
  $scope.stopRecording = function() {
    var flashObj;
    flashObj = $scope.getFlashObj();
    flashObj.stopRecording();
    $scope.setFlashInvisible();
    $scope.setHelpTextVisible();
    $scope.recording = false;
    $scope._trackEvent('videoRecordingStopped');
    return $scope.setToRetakeRecording();
  };
  $scope.setFlashInvisible = function() {
    var flashElement;
    flashElement = $scope.getFlashElement();
    return flashElement.css("visibility", "hidden");
  };
  $scope.setFlashVisible = function() {
    var flashElement;
    flashElement = $scope.getFlashElement();
    return flashElement.css("visibility", "visible");
  };
  $scope.setHelpTextInvisible = function() {
    var helpTextElement;
    helpTextElement = $scope.getHelpTextElement();
    return helpTextElement.css("display", "none");
  };
  $scope.setHelpTextVisible = function() {
    var helpTextElement;
    helpTextElement = $scope.getHelpTextElement();
    return helpTextElement.css("display", "block");
  };
  $scope.toggleRecording = function() {
    if ($scope.recording) {
      return $scope.stopRecording();
    } else {
      return $scope.startRecording();
    }
  };
  $scope.previewRecording = function() {
    var flashObj;
    flashObj = $scope.getFlashObj();
    return flashObj.previewRecording();
  };
  $scope.addEntry = function() {
    var flashObj;
    flashObj = $scope.getFlashObj();
    return flashObj.addEntry();
  };
  $scope.composeVideoRef = function(entryId) {
    return "kaltura://" + config.context.site.kalturaPartnerId + "/" + entryId;
  };
  $scope.$on('nativeVideoRecordedEvt', function(event, args) {
    var entryId, videoRef;
    entryId = args[0];
    console.log("nativeVideoRecorded:" + entryId);
    videoRef = $scope.composeVideoRef(entryId);
    $scope._trackEvent('nativeVideoRecordingComplete');
    return $scope.raiseEvent('videoRecorded', videoRef, $scope.videoContext != null ? $scope.videoContext : '');
  });
  $scope.addEntryComplete = function(addedEntry) {
    var videoRef;
    $scope.entryId = addedEntry[0].id;
    videoRef = $scope.composeVideoRef($scope.entryId);
    library.addToMediaLibrary($scope.entryId);
    $scope.raiseEvent('videoRecorded', videoRef, $scope.videoContext != null ? $scope.videoContext : '');
    $scope._trackEvent('videoRecordingComplete');
    return $scope.cancel();
  };
  $scope.videoSelectedFromLibrary = function(entryId) {
    $scope.entryId = entryId;
    $scope.raiseEvent('videoSelected', $scope.composeVideoRef(entryId), $scope.videoContext != null ? $scope.videoContext : '');
    $scope.mediaState = "library";
    return $scope.cancel();
  };
  $scope.connected = function() {
    $scope.centerButtonVisible = true;
    return $scope.centerButtonEnabled = true;
  };
  $scope._trackEvent = function(eventName) {
    var blt, context, _ref, _ref1;
    if (((_ref = window.analytics) != null ? _ref.track : void 0) != null) {
      context = {
        action_id: "lms.course.content.files." + (eventName.replace(/\s/g, '_').toLowerCase()),
        entryId: $scope.entryId
      };
      if (((_ref1 = window.i11l) != null ? _ref1.LMSContext : void 0) != null) {
        $.extend(context, {
          course_uuid: window.i11l.LMSContext.course.uuid || null,
          section_uuid: window.i11l.LMSContext.course.section_uuid || null,
          user_role: window.i11l.LMSContext.course.role || window.i11l.LMSContext.user.role,
          course_content_id: window.i11l.LMSContext.course.cm_id || null
        });
      }
      blt = $('[data-guided-discussion],[guided-discussion]');
      if (blt.length > 0) {
        context.blt_id = blt.attr('data-guided-discussion') || blt.attr('guided-discussion');
      }
      return window.analytics.track("Files " + eventName, context);
    }
  };
  $window.connected = function() {
    $scope.connected();
    return $scope.$apply();
  };
  $window.addEntryComplete = function(addedEntry) {
    $scope.addEntryComplete(addedEntry);
    return $scope.$apply();
  };
  return $scope.setup();
};

MediaController.$inject = ['$rootScope', '$scope', '$window', 'Recorder', 'MediaConfiguration', 'MediaLibrary', 'UserVideosModelFactory', 'MediaSelectPlayer', 'Browser'];

angular.module('MediaSelect').controller('MediaController', MediaController);

var mediaDirectives;

mediaDirectives = angular.module('MediaDirectives', []);

mediaDirectives.directive('mediaTopBar', [
  function() {
    return {
      restrict: 'A',
      replace: true,
      templateUrl: '/media-top-bar.html'
    };
  }
]);

mediaDirectives.directive('mediaButtonBar', [
  function() {
    return {
      restrict: 'A',
      replace: true,
      templateUrl: '/media-button-bar.html'
    };
  }
]);

mediaDirectives.directive('mediaUpload', [
  function() {
    return {
      restrict: 'A',
      replace: true,
      templateUrl: '/media-upload.html'
    };
  }
]);

mediaDirectives.directive('mediaRecorder', [
  function() {
    return {
      restrict: 'A',
      replace: true,
      controller: 'RecorderController',
      templateUrl: '/media-recorder.html'
    };
  }
]);

mediaDirectives.directive('mediaInfo', [
  function() {
    return {
      restrict: 'A',
      replace: true,
      controller: 'MediaInfoController',
      templateUrl: '/media-info.html'
    };
  }
]);

mediaDirectives.directive('mediaPreview', [
  function() {
    return {
      restrict: 'A',
      replace: true,
      templateUrl: '/media-preview.html'
    };
  }
]);

mediaDirectives.directive('mediaSelect', [
  function() {
    return {
      restrict: 'A',
      scope: {},
      replace: true,
      controller: 'MediaController',
      templateUrl: '/media-select.html'
    };
  }
]);

mediaDirectives.directive('mediaDraggable', [
  '$window', '$document', function($window, $document) {
    return {
      restrict: 'A',
      link: function(scope, element, attrs) {
        var data, dragElement, getHeight, getLeft, getMoveBindElement, getTop, getWidth, getXPosition, getYPosition, keyHandler, mouseDownHandler, mouseMoveHandler, mouseUpHandler, moveBindElement;
        data = {
          down: false,
          offsetX: 0,
          offsetY: 0,
          originalLeft: 0,
          originalTop: 0
        };
        dragElement = angular.element(attrs['mediaDraggable']);
        getXPosition = function(e) {
          return e.pageX;
        };
        getYPosition = function(e) {
          return e.pageY;
        };
        getLeft = function(element) {
          var value;
          value = element.css('left');
          return parseInt(value, 10);
        };
        getTop = function(element) {
          var value;
          value = element.css('top');
          return parseInt(value, 10);
        };
        getWidth = function(element) {
          var value;
          value = element.css('width');
          return parseInt(value, 10);
        };
        getHeight = function(element) {
          var value;
          value = element.css('height');
          return parseInt(value, 10);
        };
        getMoveBindElement = function($window, $document) {
          element = $window.attachEvent != null ? $document : $window;
          return angular.element(element);
        };
        mouseDownHandler = function(e) {
          var dragHeight, dragWidth, innerHeight, innerWidth;
          data.down = true;
          data.originalLeft = getLeft(dragElement);
          data.originalTop = getTop(dragElement);
          data.offsetX = getXPosition(e);
          data.offsetY = getYPosition(e);
          innerWidth = $window.innerWidth;
          innerHeight = $window.innerHeight;
          dragWidth = getWidth(dragElement);
          dragHeight = getHeight(dragElement);
          data.maxLeft = Math.max(innerWidth - dragWidth, 0);
          return data.maxTop = Math.max(innerHeight - dragHeight, 0);
        };
        mouseUpHandler = function(e) {
          return data.down = false;
        };
        mouseMoveHandler = function(e) {
          var newLeft, newTop, newXPosition, newYPosition;
          if (data.down) {
            newXPosition = getXPosition(e);
            newYPosition = getYPosition(e);
            newLeft = data.originalLeft + (newXPosition - data.offsetX);
            newTop = data.originalTop + (newYPosition - data.offsetY);
            if (newLeft < 0) {
              newLeft = 0;
            } else if (newLeft > data.maxLeft) {
              newLeft = data.maxLeft;
            }
            if (newTop < 0) {
              newTop = 0;
            } else if (newTop > data.maxTop) {
              newTop = data.maxTop;
            }
            return dragElement.css({
              left: newLeft,
              top: newTop
            });
          }
        };
        keyHandler = function(e) {
          if (e.keyCode === 27) {
            return data.down = false;
          }
        };
        element.bind('mousedown', mouseDownHandler);
        element.bind('mouseup', mouseUpHandler);
        moveBindElement = getMoveBindElement($window, $document);
        moveBindElement.bind('mousemove', mouseMoveHandler);
        return moveBindElement.bind('keyup', keyHandler);
      }
    };
  }
]);

mediaDirectives.directive('mediaLibrary', [
  function() {
    return {
      restrict: 'A',
      replace: true,
      templateUrl: '/media-library.html'
    };
  }
]);

var MediaInfoController;

MediaInfoController = function($scope) {
  $scope.title = '';
  $scope.description = '';
  return $scope.tags = '';
};

MediaInfoController.$inject = ['$scope'];

angular.module('MediaSelect').controller('MediaInfoController', MediaInfoController);

var UserVideosModel, mediaLibraryServices;

mediaLibraryServices = angular.module('MediaLibraryServices', ['ngResource']);

mediaLibraryServices.factory('MediaLibrary', [
  '$resource', function($resource) {
    var factory;
    factory = {};
    factory.addToMediaLibrary = function(entryId) {
      var mediaResource, url;
      url = '/local/kalturav3/action.php';
      mediaResource = $resource(url);
      return mediaResource.get({
        entryId: entryId,
        kmediaType: "video"
      });
    };
    factory.getUserVideos = function(userid, sortBy, sortOrder, callback) {
      var mediaResource;
      mediaResource = $resource('/api/users/:userId/videos/:sortBy/:sortOrder');
      return mediaResource.query({
        userId: userid,
        sortBy: sortBy,
        sortOrder: sortOrder
      }, callback);
    };
    return factory;
  }
]);

UserVideosModel = (function() {
  function UserVideosModel(videos) {
    this.videos = videos;
    this.pagesize = 10;
    this.currentPage = 1;
  }

  UserVideosModel.prototype.setVideos = function(videos) {
    return this.videos = videos;
  };

  UserVideosModel.prototype.setCurrentPage = function(pg) {
    return this.currentPage = pg;
  };

  UserVideosModel.prototype.setPageSize = function(size) {
    return this.pagesize = size;
  };

  UserVideosModel.prototype.count = function() {
    return this.videos.length;
  };

  UserVideosModel.prototype.items = function() {
    return this.videos.slice((this.currentPage - 1) * this.pagesize, this.toIndex());
  };

  UserVideosModel.prototype.fromIndex = function() {
    return ((this.currentPage - 1) * this.pagesize) + 1;
  };

  UserVideosModel.prototype.toIndex = function() {
    if (this.count() >= this.currentPage * this.pagesize) {
      return this.currentPage * this.pagesize;
    } else {
      return this.count();
    }
  };

  UserVideosModel.prototype.hasVideos = function() {
    return this.count() > 0;
  };

  UserVideosModel.prototype.hasPreviousPage = function() {
    return this.currentPage > 1;
  };

  UserVideosModel.prototype.hasNextPage = function() {
    return this.currentPage * this.pagesize < this.count();
  };

  UserVideosModel.prototype.previousPage = function() {
    if (this.hasPreviousPage()) {
      return this.currentPage = this.currentPage - 1;
    }
  };

  UserVideosModel.prototype.nextPage = function() {
    if (this.hasNextPage()) {
      return this.currentPage = this.currentPage + 1;
    }
  };

  UserVideosModel.prototype.getPreviousClass = function() {
    if (this.hasPreviousPage()) {
      return 'previous';
    } else {
      return 'previous disabled';
    }
  };

  UserVideosModel.prototype.getNextClass = function() {
    if (this.hasNextPage()) {
      return 'next';
    } else {
      return 'next disabled';
    }
  };

  UserVideosModel.prototype.thumbnailUrl = function(entryId) {
    var cdnBaseUrl, fileExt, height, quality, type, width;
    quality = 80;
    type = 1;
    fileExt = "jpg";
    width = 50;
    height = 50;
    cdnBaseUrl = location.protocol === "https:" ? "https://cdnsecakmi.kaltura.com" : "http://cdnakmi.kaltura.com";
    return "" + cdnBaseUrl + "/p/0/thumbnail/entry_id/" + entryId + "/width/" + width + "/height/" + height + "/type/" + type + "/quality/" + quality + "." + fileExt;
  };

  mediaLibraryServices.factory('UserVideosModelFactory', function() {
    return function(videos) {
      return new UserVideosModel(videos);
    };
  });

  return UserVideosModel;

})();

var mediaSelectPlayer;

mediaSelectPlayer = angular.module('MediaSelectPlayerModule', []);

mediaSelectPlayer.factory('MediaSelectPlayer', [
  'Hostname', function(Hostname) {
    return function(videoRef, finishedCallback, width, height, selector) {
      var options, player, videoElementId;
      if (selector == null) {
        selector = ".viewport";
      }
      videoElementId = 'v' + (new Date().getTime());
      options = {
        compactControls: true,
        fixedControls: false,
        controlsAppearance: 'short',
        showControlsToStart: true,
        audioOnly: false,
        width: width,
        height: height,
        videoRef: videoRef,
        startVolume: 0.65,
        autosizeProgress: false,
        rewindAtEnd: false,
        translations: ['en'],
        startLanguage: 'en',
        showOnScreenPlayButton: true,
        pluginPath: Hostname + '/libs/mediaelement/',
        videoVolume: 'horizontal',
        features: ['playpause', 'current', 'progress', 'duration', 'tracks', 'volume'],
        success: function(mediaElement, domObject) {
          var _this = this;
          return mediaElement.addEventListener('ended', function(e) {
            if (typeof finishedCallback === 'function') {
              return finishedCallback();
            }
          }, false);
        }
      };
      return player = u.video.embedVideoPlayer(selector, options, null, videoElementId);
    };
  }
]);

var mediaServices;

mediaServices = angular.module('MediaServices', ['ngResource']);

mediaServices.factory('MediaResourceFactory', [
  '$resource', 'Hostname', 'Configuration', function($resource, Hostname, Configuration) {
    var factory;
    factory = {};
    factory.getMediaSessionUrl = function() {
      var result;
      result = '';
      if (!Configuration.permissions.useApi) {
        result = Hostname + '/dist/data/media-session.json';
      } else if (Configuration.permissions.apiHostname !== '') {
        result = Configuration.permissions.apiHostname + '/users/:userId/media/session';
      } else {
        result = '/api/users/:userId/media/session';
      }
      return result;
    };
    factory.getMediaSessionResource = function() {
      return $resource(factory.getMediaSessionUrl());
    };
    return factory;
  }
]);

mediaServices.factory('Recorder', [
  '$window', '$location', 'Hostname', 'MediaResourceFactory', function($window, $location, Hostname, MediaResourceFactory) {
    var obj;
    obj = {};
    obj.getFlashVars = function(userId, partnerId, session) {
      var flashVars;
      flashVars = {};
      flashVars.autoPreview = false;
      flashVars.debugMode = false;
      flashVars.host = "www.kaltura.com";
      flashVars.ks = session;
      flashVars.localeUrl = "/content/player/locale.xml";
      flashVars.partnerId = partnerId;
      flashVars.permissions = 1;
      flashVars.rtmp_host = "rtmp://www.kaltura.com:1935";
      flashVars.showUi = false;
      flashVars.subPId = partnerId * 100;
      flashVars.themeUrl = "/content/player/skin.swf";
      flashVars.uid = userId;
      return flashVars;
    };
    obj.getParams = function() {
      var params;
      params = {};
      params.allowScriptAccess = "always";
      params.allowNetworking = "all";
      params.wmode = "direct";
      return params;
    };
    obj.embedSWF = function(flashVars, params) {
      var swfExpress, swfHeight, swfId, swfUrl, swfVersion, swfWidth;
      swfUrl = "/content/player/KRecord.swf";
      swfId = "krecord";
      swfWidth = "480";
      swfHeight = "360";
      swfVersion = "9.0.0";
      swfExpress = "expressInstall.swf";
      $window.swfobject.embedSWF(swfUrl, swfId, swfWidth, swfHeight, swfVersion, swfExpress, flashVars, params);
      return angular.element('#krecord').css("visibility", "hidden");
    };
    obj.partialApplySuccess = function(userId, partnerId) {
      return function(data) {
        var flashVars, params;
        obj.session = data.session;
        flashVars = obj.getFlashVars(userId, partnerId, obj.session);
        params = obj.getParams();
        obj.embedSWF(flashVars, params);
        return obj.session;
      };
    };
    obj.sessionError = function(err) {
      return console.log(err);
    };
    obj.setupRecorder = function(userId, partnerId) {
      var sessionError, sessionSuccess;
      sessionSuccess = obj.partialApplySuccess(userId, partnerId);
      sessionError = obj.sessionError;
      return obj.getRecorderSession(userId, sessionSuccess, sessionError);
    };
    obj.getRecorderSession = function(userId, successCallback, errorCallback) {
      var Session, response;
      Session = MediaResourceFactory.getMediaSessionResource();
      return response = Session.get({
        userId: userId,
        protocol: $location.protocol()
      }, successCallback, errorCallback);
    };
    return obj;
  }
]);

var RecorderController;

RecorderController = function($scope, recorder, config) {
  $scope.setup = function(recorder, config) {
    return recorder.setupRecorder(config.context.user.id, config.context.site.kalturaPartnerId);
  };
  return $scope.setup(recorder, config);
};

RecorderController.$inject = ['$scope', 'Recorder', 'MediaConfiguration'];

angular.module('MediaSelect').controller('RecorderController', RecorderController);

angular.module('MediaDirectives').run(['$templateCache', function($templateCache) {
  'use strict';

  $templateCache.put('/media-button-bar.html',
    "<div class=bottom-bar><div class=left><button ng-class=leftButtonClass ng-disabled=!leftButtonEnabled ng-click=leftClick()>{{ leftButtonText }}</button></div><div class=center><button ng-class=centerButtonClass class=gray ng-show=centerButtonVisible ng-disabled=!centerButtonEnabled ng-click=centerClick()>{{ centerButtonText }}</button><!-- BUTTON ICON REFERENCE\n" +
    "        <button class=\"gray start-recording\">Start Recording</button>\n" +
    "        <button class=\"gray stop-recording\">Stop Recording</button>\n" +
    "        <button class=\"gray retake\">Retake</button>\n" +
    "    	--></div><div class=right><button ng-class=rightButtonClass ng-disabled=!rightButtonEnabled ng-click=rightClick()>{{ rightButtonText }}</button></div></div>"
  );


  $templateCache.put('/media-info.html',
    "<div class=info><div class=inner><div class=title><input ng-model=title placeholder=\"Add a title\"></div><div class=description><textarea rows=9 ng-model=description placeholder=\"Add a description\"></textarea></div><div class=tags><textarea rows=3 ng-model=tags ng-list placeholder=\"Tags (comma-separated)\"></textarea></div></div></div>"
  );


  $templateCache.put('/media-library.html',
    "<div class=library><div class=filters><div class=title><a ng-click=\"sortVideosBy('title')\">Name</a></div><div class=duration><a ng-click=\"sortVideosBy('duration')\">Duration</a></div><div class=timestamp><a ng-click=\"sortVideosBy('created')\">Uploaded</a></div></div><div class=list><div ng-repeat=\"item in userVideosModel.items()\"><a ng-click=previewVideo(item.entry_id)><div class=thumbnail><img ng-src=\"{{ userVideosModel.thumbnailUrl(item.entry_id) }}\"></div><div class=title>{{item.title}}</div><div class=duration>{{item.duration | formatVideoDuration}}</div><div class=timestamp>{{item.submitted_time | formatDateTime}}</div></a></div></div></div>"
  );


  $templateCache.put('/media-preview.html',
    "<div><div class=library><div id=preview_viewport class=viewport><div class=video><!-- video goes here --></div></div></div></div>"
  );


  $templateCache.put('/media-recorder.html',
    "<div class=video><div class=help-text>Press Next to preview your recording or Retake to record a new video.</div><div id=krecord><!--<div class=\"overlay\">\n" +
    "    		<a href=\"#\"></a>\n" +
    "    	</div>--></div></div>"
  );


  $templateCache.put('/media-select.html',
    "<div class=media-select data-ng-show=visible><div class=container-a><div ng-class=getContainerClass()><div data-media-top-bar></div><div data-ng-switch on=mediaState><div data-ng-switch-when=upload><div data-media-upload></div></div><div data-ng-switch-when=library><div data-media-library></div></div><div data-ng-switch-when=recorder><div data-media-recorder></div></div><div data-ng-switch-when=info><div data-media-info></div></div><div data-ng-switch-when=preview><div data-media-preview></div></div></div><div data-media-button-bar></div></div></div></div>"
  );


  $templateCache.put('/media-top-bar.html',
    "<div class=top-bar data-media-draggable=.media-select><div class=x><a data-ng-click=cancelClick()></a></div><div class=extended ng-show=isLibraryState()><div class=pagination><div class=buttons><a ng-class=userVideosModel.getPreviousClass() data-ng-click=userVideosModel.previousPage()></a><div class=separator></div><a ng-class=userVideosModel.getNextClass() data-ng-click=userVideosModel.nextPage()></a></div><div class=label>{{userVideosModel.fromIndex()}} - {{userVideosModel.toIndex()}} of {{userVideosModel.count()}}</div></div><!--\n" +
    "        <div class=\"search\">\n" +
    "            <div class=\"field\">\n" +
    "                <input name=\"search-library\" type=\"text\" placeholder=\"Search\" />\n" +
    "            </div>\n" +
    "        </div>\n" +
    "        --></div></div>"
  );


  $templateCache.put('/media-upload.html',
    "<div class=upload><div class=text>Choose file from:</div><div class=buttons><button class=gray>Computer</button> <button class=gray>Media Library</button></div></div>"
  );

}]);

(function() {
  var Oyster,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Oyster = (function() {
    var defaultOptions;

    defaultOptions = {
      slideContainerSelector: '.slides',
      slideSelector: '.slide',
      posterFrame: null,
      audioOnly: false,
      allowSkipBeforeBuffered: true,
      enableKeyboard: true,
      rewindAtEnd: false,
      showOnScreenPlayButton: false,
      videoVolume: 'vertical'
    };

    function Oyster(selector, options) {
      var scale, targetWidth;
      if (options == null) {
        options = {};
      }
      this.showPrintView = bind(this.showPrintView, this);
      if (BrowserDetector.isAndroid() && !BrowserDetector.isAtOrAboveAndroidVersion(4, 4, 2)) {
        targetWidth = 400;
        scale = Math.round(screen.width / targetWidth * 10) / 10;
      } else {
        scale = 1;
      }
      if (BrowserDetector.isAndroid() || BrowserDetector.isIE() || BrowserDetector.isIE11()) {
        defaultOptions.features = ['playpause', 'current', 'progress', 'duration', 'tracks', 'analytics'];
      } else {
        defaultOptions.features = ['playpause', 'current', 'progress', 'duration', 'speed', 'tracks', 'analytics'];
      }
      if (!BrowserDetector.isDevice()) {
        defaultOptions.features.push('volume');
      }
      $('head').append('<meta name="viewport" content="width=device-width, initial-scale=' + scale + ', minimum-scale=' + scale + ', maximum-scale=' + scale + ', user-scalable=yes">');
      this.id = u.utils.uuid();
      this.options = $.extend(defaultOptions, options);
      this.selector = selector;
      this.container = $(this.selector);
      this.container.attr('role', 'region').attr('tabindex', '0');
      this.originalHtml = this.container.find('.slides')[0].outerHTML;
      this.sourceDimensions = null;
      this.player = null;
      this.playerState = null;
      this.lastAction = null;
      this.initialized = false;
    }

    Oyster.prototype.initialize = function() {
      if (!this.container.hasClass('oyster')) {
        this.container.addClass('oyster');
      }
      if (this.options.audioOnly && !this.container.hasClass('oyster-audio-only')) {
        this.container.addClass('oyster-audio-only');
      }
      if (!this.container.hasClass('oyster-desktop') && (!BrowserDetector.isDevice() || BrowserDetector.isIpad())) {
        $('html').removeClass('oyster-device-html-class oyster-device');
        this.container.addClass('oyster-desktop');
        if (BrowserDetector.isIpad()) {
          $('div.oyster').on('touchstart', '.driver div.mejs-layers, div.slides, div.controls.hidden', function(evt) {
            if ($('.driver .mejs-settings-selector').css('visibility') === 'visible') {
              return $('.driver .mejs-settings-selector').css('visibility', 'hidden');
            }
          });
        }
      } else if (!this.container.hasClass('oyster-device') && BrowserDetector.isDevice()) {
        this.container.removeClass('oyster-desktop');
        this.container.addClass('oyster-device');
        this.container.addClass("oyster-" + (BrowserDetector.deviceType()));
        $('html').addClass('oyster-device-html-class');
        this.container.wrapInner('<div class="oyster-mobile-fullscreen" />');
        this.container.prepend('<div class="oyster-mobile-intro"><div class="oyster-mobile-intro-info"><h2>' + $('#contentwrap > h2').text() + '</h2><h4>' + $('#contentwrap > h4').text() + '</h4><div class="oyster-mobile-intro-image"><img src="" /></div></div>' + '<div class="oyster-mobile-intro-button"><button>Launch</button></div></div>');
        $('div.oyster').on('touchstart', 'div.oyster-mobile-intro button', {
          'oyster': this
        }, this.handleIntroClick);
        $('div.oyster').on('touchstart', 'div.controls .back button', {
          'oyster': this
        }, this.handleBackClick);
        $('div.oyster').on('touchstart', '.driver div.mejs-layers, div.slides, div.controls.hidden', function(evt) {
          if ($('.driver .mejs-poster').is(':hidden')) {
            $('div.controls').toggleClass('hidden');
            if ($('.driver div.mejs-controls').css('visibility') === 'visible') {
              return $('.driver div.mejs-controls').css('visibility', 'hidden');
            } else {
              return $('.driver div.mejs-controls').css('visibility', 'visible');
            }
          }
        });
      }
      this.driverContainer = $('.presentation > .driver', this.container);
      this.animatingToPosition = '';
      this.controls = this.container.find('.controls');
      this.container.attr('title', 'Video Slide Presentation');
      this.player = this.embedVideoPlayer();
      this.initialized = true;
      return this;
    };

    Oyster.prototype.handleIntroClick = function(evt) {
      var enterPresentationMode;
      enterPresentationMode = function() {
        return setTimeout(function() {
          return window.open('call://enterPresentationMode', '_self');
        }, 1);
      };
      $('.oyster-mobile-intro', this.container).toggle();
      $('.oyster-mobile-fullscreen', this.container).toggle();
      window.open('call://changeOrientation/landscape', '_self');
      return enterPresentationMode();
    };

    Oyster.prototype.handleBackClick = function(evt) {
      var exitPresentationMode;
      exitPresentationMode = function() {
        return setTimeout(function() {
          return window.open('call://exitPresentationMode', '_self');
        }, 1);
      };
      $('.jump > select').blur();
      $('.oyster-mobile-intro', this.container).toggle();
      $('.oyster-mobile-fullscreen', this.container).toggle();
      window.open('call://changeOrientation/portrait', '_self');
      evt.data.oyster.player.pause();
      if (evt.data.oyster.slides.currentSlide.isVideo) {
        evt.data.oyster.slides.currentSlide.player.pause();
      }
      return exitPresentationMode();
    };

    Oyster.prototype.initializeSlides = function() {
      var slideElements;
      $(this.options.slideContainerSelector).data('sourceDimensions', this.sourceDimensions);
      slideElements = $(this.options.slideContainerSelector, this.container).children(this.options.slideSelector);
      return this.slides = new u.oyster.OysterSlides(slideElements, this.player, this.options);
    };

    Oyster.prototype.buildCaptionView = function() {
      $('.controls, .caption', this.driverContainer).remove();
      this.driverContainer.append('<div class="caption"></div>');
      this.driverContainer.find('.video').append('<div class="subtitles"></div>');
      return this.captionContainer = $('.caption', this.driverContainer).first();
    };

    Oyster.prototype.buildControls = function() {
      var controlsHtml, jumpSlideSelect, printViewButton, slideTitle;
      slideTitle = this.slides.chapters[0].title;
      controlsHtml = "<div class=\"back\">\n    <button>Back</button>\n</div>\n<div class=\"title\">" + slideTitle + "</div>\n<div class=\"jump\">\n    <div class=\"skin\">\n        <div class=\"selection\">\n            " + this.slides.chapters[0].title + "\n        </div>\n        <div class=\"caret\"></div>\n    </div>\n    <button>Jump To</button>\n    <select aria-label=\"Slide Selector\" role=\"selectbox\">" + (this.getChapterSelectOptions()) + "</select>\n</div>\n<div class=\"view\">\n    <a href=\"#\" class=\"print-view-btn\" role=\"button\" alt=\"Open Print View in new window\" title=\"Open Print View in new window\" aria-label=\"Open Print View in new window\">\n        <i class=\"icon-print\"></i>Print\n    </a>\n    <button class=\"showingVideo\">Slide</button>\n</div>\n<div class=\"pagination\">\n    <a href=\"#\" class=\"prev-btn\" title=\"Previous Slide\" aria-label=\"Previous Slide\" role=\"button\">&laquo;</a>\n    <span class=\"display\">\n        <span class=\"current-slide\" title=\"Current Slide\">" + (this.slides.currentSlide.index + 1) + "</span>\n        <span class=\"delimiter\"><em>of</em></span>\n        <span class=\"total-slides\" title=\"Total Slides\">" + this.slides.length + "</span>\n    </span>\n    <a href=\"#\" class=\"next-btn\" title=\"Next Slide\" aria-label=\"Next Slide\" role=\"button\">&raquo;</a>\n</div>";
      this.controls.html(controlsHtml);
      this.jumpSlideSelectSelector = '.jump > select';
      this.curentSlideDisplaySelector = '.pagination > span.display > span.current-slide';
      jumpSlideSelect = $(this.jumpSlideSelectSelector, this.controls);
      $(this.jumpSlideSelectSelector, this.controls).bind('change', (function(_this) {
        return function(evt) {
          var $this, id;
          evt.preventDefault();
          $this = $(evt.target);
          id = $this.val();
          return _this.gotoSlideById(id);
        };
      })(this));
      this.prevButton = $('.prev-btn', this.controls);
      this.nextButton = $('.next-btn', this.controls);
      this.prevButton.bind('click', (function(_this) {
        return function(evt) {
          evt.preventDefault();
          if (!_this.buttonIsDisabled(_this.prevButton)) {
            return _this.gotoPrevSlide();
          }
        };
      })(this));
      this.nextButton.bind('click', (function(_this) {
        return function(evt) {
          evt.preventDefault();
          if (!_this.buttonIsDisabled(_this.nextButton)) {
            return _this.gotoNextSlide();
          }
        };
      })(this));
      printViewButton = $('.print-view-btn', this.controls);
      if (BrowserDetector.isDevice()) {
        $('.view a', this.controls).remove();
      }
      if (!BrowserDetector.isDevice()) {
        $('.view button', this.controls).remove();
      }
      printViewButton.bind('click', (function(_this) {
        return function(evt) {
          return _this.showPrintView(evt);
        };
      })(this));
      return $('.view button', this.controls).on('click touchstart', (function(_this) {
        return function(evt) {
          evt.preventDefault();
          return _this.toggleDeviceView();
        };
      })(this));
    };

    Oyster.prototype.showPrintView = function(evt) {
      evt.preventDefault();
      this.lastAction = this.player.playerState;
      if (this.player.playerState === u.video.playerStates.playing) {
        this.player.pause();
      }
      if (!BrowserDetector.isDevice()) {
        return this.openPrintViewWindow(this.generatePrintViewHtml());
      } else {
        this.container.addClass('print');
        displayViewButton.removeClass('current');
        printViewButton.addClass('current');
        this.lastAction = u.video.playerStates.paused;
        return this.slideElements.show();
      }
    };

    Oyster.prototype.openPrintViewWindow = function(html) {
      var bindEvents, doc, oysterPrintWindow;
      oysterPrintWindow = window.open('', 'printOyster', 'resizable=yes, scrollbars=yes, width=770, height=400');
      oysterPrintWindow.document.write(html);
      oysterPrintWindow.document.close();
      oysterPrintWindow.focus();
      doc = oysterPrintWindow.document;
      bindEvents = function() {
        return $(doc).find('.toggle-slides a').on('click', function(e) {
          var $this, slides;
          $this = $(this);
          slides = $('.slide', doc);
          $('.toggle-slides a', doc).removeClass('current');
          $this.addClass('current');
          if ($this.hasClass('view-all')) {
            slides.css('display', 'block');
          }
          if ($this.hasClass('view-keyframes')) {
            slides.not('.keyframe').css('display', 'none');
          }
          return false;
        });
      };
      setTimeout(bindEvents, 1000);
      if (this.lastAction === u.video.playerStates.playing) {
        return oysterPrintWindow.onunload = (function(_this) {
          return function() {
            return _this.player.play();
          };
        })(this);
      }
    };

    Oyster.prototype.generatePrintViewHtml = function() {
      var loader, path, printWindowSlideContainer, printWindowSlideLength, printWindowSlides, printWindowSlidesHtml, slides;
      loader = new DynamicLoader(window);
      path = loader.getScriptPath(['oyster-combined-deps.js', 'oyster-combined-deps.min.js']);
      slides = this.slides;
      printWindowSlideContainer = $(this.originalHtml);
      printWindowSlides = printWindowSlideContainer.children('.slide');
      printWindowSlideLength = printWindowSlides.length;
      printWindowSlides.each(function(index) {
        var $this, displayIndex;
        $this = $(this);
        displayIndex = index + 1;
        $this.before("<a name=\"slide-" + displayIndex + "\"></a>");
        if ($('object, video, embed', $this).length || $this.html().trim() === '') {
          return $this.addClass('empty').html("<div><span>" + displayIndex + " of " + printWindowSlideLength + ": Video Content Slide</span></div>");
        } else {
          return $this.prepend("<div class=\"slide-num\">" + displayIndex + " of " + printWindowSlideLength + "</div>");
        }
      });
      printWindowSlides.show();
      printWindowSlidesHtml = printWindowSlideContainer[0].outerHTML;
      return "<!DOCTYPE>\n<html class=\"print-window\">\n    <head>\n        <link rel=\"stylesheet\" href=\"" + path + "oyster.css\">\n        <title>Print View</title>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML\"></script>\n        <style>\n        div.slide { font-family: sans-serif; }\n        </style>\n    </head>\n    <body>\n        <div class=\"bar\">\n            <div class=\"toggle-slides\">\n                <a href=\"#\" role=\"button\" class=\"view-all current\">View All</a>\n                <a href=\"#\" role=\"button\" class=\"view-keyframes\">View Keyframes</a>\n            </div>\n        </div>\n        " + printWindowSlidesHtml + "\n    </body>\n</html>";
    };

    Oyster.prototype.getChapterSelectOptions = function() {
      var chapter, i, len, options, ref;
      options = "";
      ref = this.slides.chapters;
      for (i = 0, len = ref.length; i < len; i++) {
        chapter = ref[i];
        options += "<option value=\"" + chapter.id + "\">" + chapter.title + "</option>";
      }
      return options;
    };

    Oyster.prototype.embedVideoPlayer = function() {
      var defaultVideoPlayerId, hasContainer, video, videoContainer, videoContainerClass, videoContainerSelector, videoDriverElement, videoDriverSelector, viewport;
      videoDriverSelector = '.presentation > .driver > .video';
      videoDriverElement = $(videoDriverSelector, this.container);
      videoContainerClass = 'video-viewport';
      hasContainer = videoDriverElement.children("." + videoContainerClass).index() > -1;
      if (!hasContainer) {
        viewport = $("<div class=\"" + videoContainerClass + "\"></div>");
        videoDriverElement.append(viewport);
      }
      videoContainerSelector = videoDriverSelector + " ." + videoContainerClass;
      videoContainer = $(videoContainerSelector, this.container);
      this.options.forceFlash = this.options.audioOnly && BrowserDetector.isFirefox();
      defaultVideoPlayerId = 'meplayer1';
      video = u.video.embedVideoPlayer(videoContainerSelector, this.options, this, defaultVideoPlayerId);
      return video;
    };

    Oyster.prototype.gotoSlideById = function(id) {
      var slide;
      slide = this.slides.findSlideById(id);
      if (!u.utils.isUndefined(slide)) {
        return this.gotoSlide(slide);
      }
    };

    Oyster.prototype.gotoSlide = function(slide) {
      var seconds;
      if (!u.utils.isUndefined(slide)) {
        if (this.slides.currentSlide.isVideo) {
          this.slides.currentSlide.player.pause();
        }
        seconds = slide.timecode.seconds;
        if (this.player.isFlash() && seconds > 0) {
          seconds = seconds + 1;
        }
        this.player.setPlayerTime(seconds);
        return this.showSlide(slide);
      }
    };

    Oyster.prototype.gotoPrevSlide = function() {
      return this.gotoSlide(this.slides.getPrevSlide());
    };

    Oyster.prototype.gotoNextSlide = function() {
      return this.gotoSlide(this.slides.getNextSlide());
    };

    Oyster.prototype.enableButton = function(button) {
      if (this.buttonIsDisabled(button)) {
        return button.removeClass('disabled');
      }
    };

    Oyster.prototype.disableButton = function(button) {
      if (!this.buttonIsDisabled(button)) {
        return button.addClass('disabled');
      }
    };

    Oyster.prototype.buttonIsDisabled = function(button) {
      return button.hasClass('disabled');
    };

    Oyster.prototype.updateSlideDisplay = function() {
      return $(this.curentSlideDisplaySelector, this.controls).html(this.slides.currentSlide.index + 1);
    };

    Oyster.prototype.updateJumpDisplay = function() {
      var jumpSlideSelect, slide;
      slide = this.slides.currentSlide;
      jumpSlideSelect = $(this.jumpSlideSelectSelector, this.controls);
      return jumpSlideSelect.children('option').each(function() {
        var $this;
        $this = $(this);
        if ($this.text() === slide.title) {
          jumpSlideSelect.val($this.val());
          return $('.jump .selection, .controls .title', this.controls).text(slide.title);
        }
      });
    };

    Oyster.prototype.getVideoSize = function() {
      return this.player.getVideoSize();
    };

    Oyster.prototype.updateControls = function() {
      var nextSlideBuffered;
      if (this.player.playerState !== u.video.playerStates.playing && this.player.playerState !== u.video.playerStates.seeked) {
        this.disableButton(this.prevButton);
        return this.disableButton(this.nextButton);
      } else {
        nextSlideBuffered = this.options.allowSkipBeforeBuffered || this.canSkipToNextSlide();
        if (u.utils.isUndefined(this.slides.getNextSlide()) || !nextSlideBuffered) {
          this.disableButton(this.nextButton);
        } else {
          this.enableButton(this.nextButton);
        }
        if (u.utils.isUndefined(this.slides.getPrevSlide())) {
          return this.disableButton(this.prevButton);
        } else {
          return this.enableButton(this.prevButton);
        }
      }
    };

    Oyster.prototype.showSlide = function(slide) {
      var tmpCurrentSlide;
      tmpCurrentSlide = this.slides.currentSlide;
      if (tmpCurrentSlide.isPause && tmpCurrentSlide.index !== slide.index) {
        tmpCurrentSlide.pauseActionPerformed = 0;
      }
      this.slides.setCurrentSlide(slide);
      this.updateSlideDisplay();
      if (slide.index !== tmpCurrentSlide.index) {
        this.updateJumpDisplay();
      }
      this.updateControls();
      this.updateLayout();
      return this.updateCaption();
    };

    Oyster.prototype.updateCaption = function() {
      var slide;
      slide = this.slides.currentSlide;
      if (slide.hasCaption) {
        return this.captionContainer.html(slide.caption);
      } else {
        return this.captionContainer.html('');
      }
    };

    Oyster.prototype.playerInitialized = function(player, _this) {
      _this.initializeSlides();
      _this.buildControls();
      _this.buildCaptionView();
      _this.container.show();
      return _this.showSlide(_this.slides.currentSlide);
    };

    Oyster.prototype.playerStateChanged = function(evt, newState) {
      var slideEndTime, timePassed;
      if (this.slides.currentSlide.kenburns && newState === 'paused') {
        this.slides.currentSlide.kenburns.stopEffect(false);
      } else if (this.slides.currentSlide.kenburns && newState === 'playing') {
        this.slides.currentSlide.kenburns.startEffect();
      } else if (this.slides.currentSlide.kenburns && newState === 'seeked') {
        slideEndTime = this.slides.currentSlide.kenburns.display_time + this.slides.currentSlide.timecode.seconds;
        if (this.player.currentTime.seconds < slideEndTime && this.player.currentTime.seconds >= this.slides.currentSlide.timecode.seconds) {
          timePassed = this.player.currentTime.seconds - this.slides.currentSlide.timecode.seconds;
          this.slides.currentSlide.kenburns.setTimePassedInSeconds(timePassed);
          this.slides.currentSlide.kenburns.startEffect();
        }
      }
      return this.updateControls();
    };

    Oyster.prototype.playerTimeUpdated = function(evt, seconds) {
      var currentTime, distanceWouldBeLess, hasntReachedSlideYet, slide;
      if (seconds === 0) {
        return;
      }
      currentTime = this.player.currentTime;
      slide = this.slides.findSlideByTimecode(currentTime);
      if (u.utils.isUndefined(slide)) {
        slide = this.slides.findNearestSlideByTimecode(currentTime);
        distanceWouldBeLess = this.getCurrentSlideDistance() > slide.distance;
        hasntReachedSlideYet = currentTime.seconds < this.slides.currentSlide.seconds;
        if (this.player.isSeeking || (distanceWouldBeLess || hasntReachedSlideYet)) {
          return this.showSlide(slide);
        }
      } else {
        slide.distance = 0;
        if (slide.isPause && this.lastAction !== u.video.playerStates.paused && !slide.pauseActionPerformed) {
          this.player.pause();
          this.lastAction = u.video.playerStates.paused;
          slide.pauseActionPerformed = 1;
          if (BrowserDetector.isDevice() && !BrowserDetector.isIpad()) {
            if ($('.view button', this.controls).hasClass('showingVideo')) {
              this.toggleDeviceView();
            }
            if (slide.isVideo) {
              $('.driver .mejs-controls', this.container).hide();
            }
          }
          if (slide.pauseDuration !== -1) {
            setTimeout((function(_this) {
              return function() {
                return _this.player.play();
              };
            })(this), slide.pauseDuration * 1000);
          }
        } else {
          if (!slide.isVideo) {
            $('.driver .mejs-controls', this.container).show();
          }
          this.lastAction = u.video.playerStates.playing;
        }
        return this.showSlide(slide);
      }
    };

    Oyster.prototype.getViewport = function() {
      return $('.presentation', this.container);
    };

    Oyster.prototype.setViewportType = function(type) {
      var element;
      element = this.getViewport();
      return element.removeClass('normal').removeClass('monologue').addClass(type);
    };

    Oyster.prototype.maskViewport = function() {
      return this.getViewport().addClass('masked');
    };

    Oyster.prototype.unmaskViewport = function() {
      return this.getViewport().removeClass('masked');
    };

    Oyster.prototype.getMarginLeftFromPosition = function(position) {
      var elements, offset;
      offset = -200;
      elements = position.split('-');
      if (elements[1] === 'left') {
        offset -= parseInt(elements[2]) * 50;
      } else if (elements[1] === 'right') {
        offset += parseInt(elements[2]) * 50;
      }
      return offset + 'px';
    };

    Oyster.prototype.setDriverPosition = function(position) {
      var hasAttribute, margin_left_value;
      if (u.utils.isntUndefined(position) && position !== '') {
        margin_left_value = this.getMarginLeftFromPosition(position);
        if (this.animatingToPosition === '') {
          this.driverContainer.attr('data-position', position);
          this.animatingToPosition = position;
        }
        if (this.animatingToPosition !== position) {
          this.animatingToPosition = position;
          if (!this.container.hasClass('oyster-device')) {
            this.driverContainer.find('.mejs-video-position,.mejs-poster img').animate({
              'margin-left': margin_left_value
            }, 600, function() {
              return $(this).css('margin-left', '');
            });
          }
        }
        return this.driverContainer.attr('data-position', position);
      } else {
        hasAttribute = u.utils.isntUndefined(this.driverContainer.attr('data-position'));
        if (hasAttribute) {
          if (this.slides.currentSlide.isMonologue) {
            return this.driverContainer.attr('data-position', 'centered');
          } else {
            return this.driverContainer.removeAttr('data-position');
          }
        }
      }
    };

    Oyster.prototype.updateLayout = function() {
      var slide;
      slide = this.slides.currentSlide;
      this.setViewportType(slide.viewportType);
      if (slide.isMasked) {
        this.maskViewport();
      } else {
        this.unmaskViewport();
      }
      this.player.setOption('fixedControls', slide.playerFixedControls);
      this.player.setOption('compactControls', slide.playerCompactControls);
      this.player.setOption('controlsAppearance', slide.playerControlsAppearance);
      this.player.setOption('subtitlesLocation', slide.playerSubtitlesLocation);
      this.player.setOption('fullSubtitlesLocation', slide.playerFullSubtitlesLocation);
      this.player.setVideoSize(slide.videoSize.width, slide.videoSize.height);
      this.player.setPosterSize(slide.posterSize.width, slide.posterSize.height);
      this.player.setPlayerSize(slide.playerSize.width, slide.playerSize.height);
      if (slide.isVideo) {
        if (!BrowserDetector.isDevice() || BrowserDetector.isIpad() || $('.view button', this.controls).hasClass('showingSlide')) {
          slide.updateVideoSlidePlayer();
        }
      }
      if (slide.posterMarginLeft != null) {
        $('.driver .mejs-video-position video').css('margin-left', slide.posterMarginLeft);
      }
      if (slide.videoSlidePosterMarginLeft) {
        $('.slide .mejs-video-position video').css('margin-left', slide.videoSlidePosterMarginLeft);
      }
      if (slide.letterboxSize != null) {
        $('.mejs-video-position video').css('margin-top', '-' + slide.letterboxSize + 'px');
      }
      return this.setDriverPosition(slide.position);
    };

    Oyster.prototype.getCurrentSlideDistance = function() {
      var distance;
      distance = this.slides.currentSlide.timecode.seconds - this.player.currentTime.seconds;
      if (distance < 0) {
        distance = -distance;
      }
      return Math.floor(distance);
    };

    Oyster.prototype.getNextSlideTimeProgress = function() {
      var duration, nextSlide;
      duration = this.player.media.duration;
      nextSlide = this.getNextSlide();
      if (duration !== void 0 && nextSlide !== void 0) {
        return nextSlide.seconds / duration;
      }
    };

    Oyster.prototype.canSkipToNextSlide = function() {
      var buffer, bytesProgress, nextSlideTimeProgress;
      bytesProgress = this.player.getBytesProgress();
      if (bytesProgress === 1 || !this.player.isFlash()) {
        return true;
      }
      nextSlideTimeProgress = this.getNextSlideTimeProgress();
      buffer = 0.02;
      return bytesProgress > (nextSlideTimeProgress + buffer);
    };

    Oyster.prototype.toggleDeviceView = function() {
      var currentTime, slide;
      if (u.utils.isntUndefined(this.player)) {
        currentTime = this.player.currentTime;
        if (u.utils.isntUndefined(currentTime) && currentTime.seconds) {
          slide = this.slides.findNearestSlideByTimecode(currentTime);
        }
      }
      if ($('.view button', this.controls).hasClass('showingVideo')) {
        $('.view button', this.controls).text('Video').removeClass('showingVideo').addClass('showingSlide');
        $('.driver .mejs-mediaelement', this.container).hide();
        if (u.utils.isntUndefined(slide) && slide.isVideo) {
          $('.driver .mejs-controls', this.container).hide();
        }
        return $('.slides', this.container).show();
      } else {
        $('.view button', this.controls).text('Slide').removeClass('showingSlide').addClass('showingVideo');
        $('.slides', this.container).hide();
        return $('.driver .mejs-mediaelement, .driver .mejs-controls', this.container).show();
      }
    };

    return Oyster;

  })();

  this.exportModule('oyster', 'Oyster', Oyster);

}).call(this);

(function() {
  var OysterSlide,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  OysterSlide = (function() {
    var defaultAction, slidePositionClassPattern;

    slidePositionClassPattern = /^pull-(left|right)-(\d+)$/;

    defaultAction = 'show';

    function OysterSlide(slideElement, index) {
      this.embedVideoSlidePlayer = bind(this.embedVideoSlidePlayer, this);
      var _, count, dir, hasLegacyCaption, innerHeight, innerWidth, legacyCaption, monologuePlayerHeight, monologuePlayerWidth, newHeight, newWidth, pos, ref, screenRatio, screenSize, slideClasses, slidePositionClasses, videoRatio;
      if (!slideElement.attr('id')) {
        slideElement.attr('id', u.utils.uuid());
      }
      this.id = slideElement.attr('id');
      this.index = index;
      this.timecode = new Timecode();
      this.timecode.setTimecode(slideElement.data('time'));
      this.action = slideElement.data('action') || defaultAction;
      this.isMasked = u.utils.isntUndefined(slideElement.data('masked'));
      this.isMonologue = u.utils.isntUndefined(slideElement.data('monologue'));
      this.isChapter = parseInt(slideElement.data('chapter') || '0', 10) === 1;
      this.isKeyframe = slideElement.hasClass('keyframe');
      this.pauseDuration = parseInt(slideElement.data('pause-duration') || '0', 10);
      this.isPause = this.pauseDuration !== 0;
      this.isFullScreenOpaque = slideElement.hasClass('full') && (slideElement.hasClass('image') || slideElement.hasClass('opaque'));
      this.pauseActionPerformed = 0;
      this.title = slideElement.attr('title') || '';
      this.isVideo = u.utils.isntUndefined(slideElement.data('video-ref'));
      if (this.isVideo) {
        slideElement.addClass('video');
      }
      legacyCaption = $('.caption', slideElement);
      hasLegacyCaption = legacyCaption.index() > -1;
      if (hasLegacyCaption) {
        slideElement.data('caption', legacyCaption.html());
        legacyCaption.remove();
      }
      this.caption = slideElement.data('caption');
      this.hasCaption = u.utils.isntUndefined(this.caption);
      this.viewportType = this.isMonologue && 'monologue' || 'normal';
      this.videoSize = slideElement.parent().data('sourceDimensions');
      if (!(this.videoSize != null) || this.videoSize.h === 0 || this.videoSize.w === 0) {
        this.videoSize = {
          'w': 203,
          'h': 152
        };
      }
      $('.oyster-mobile-intro img').attr('src', $('.mejs-poster img').attr('src'));
      if (this.isMasked) {
        $('.oyster-mobile-intro-image').addClass('oyster-mobile-intro-image-masked');
      }
      this.playerControlsAppearance = 'short';
      videoRatio = this.videoSize.w / this.videoSize.h;
      screenSize = BrowserDetector.getSize();
      screenRatio = screenSize.w / screenSize.h;
      if (!BrowserDetector.isDevice() || BrowserDetector.isIpad()) {
        this.playerSize = {
          width: 203,
          height: 152
        };
        this.posterSize = {
          width: parseInt(this.playerSize.height * videoRatio, 10),
          height: this.playerSize.height
        };
        this.videoSize = {
          width: this.posterSize.width,
          height: this.posterSize.height
        };
        if (this.isVideo) {
          this.videoSlidePlayerSize = {
            width: 480,
            height: 360
          };
          this.videoSlidePosterSize = {
            width: parseInt(this.videoSlidePlayerSize.height * videoRatio, 10),
            height: this.videoSlidePlayerSize.height
          };
          this.videoSlideVideoSize = {
            width: this.videoSlidePosterSize.width,
            height: this.videoSlidePosterSize.height
          };
          this.videoSlidePosterMarginLeft = Math.round((this.videoSlidePlayerSize.width - this.videoSlideVideoSize.width) / 2) + 'px';
        }
        this.playerFixedControls = true;
        this.playerCompactControls = true;
        this.playerSubtitlesLocation = 'default';
        this.playerFullSubtitlesLocation = 'default';
        if (this.isMonologue) {
          monologuePlayerWidth = 710;
          monologuePlayerHeight = 399;
          this.playerSize = this.posterSize = this.videoSize = {
            width: monologuePlayerWidth,
            height: monologuePlayerHeight
          };
          this.playerCompactControls = false;
          this.playerFullSubtitlesLocation = 'default';
        }
        if (this.isMasked && this.isMonologue) {
          this.posterSize = this.videoSize = {
            width: 1110,
            height: 624
          };
        } else if (this.isMasked && !this.isMonologue) {
          this.posterSize = this.videoSize = {
            width: 419,
            height: 315
          };
        }
        if (!this.isMasked) {
          this.posterMarginLeft = Math.round((this.playerSize.width - this.videoSize.width) / 2) + 'px';
        }
      } else {
        this.playerFixedControls = false;
        this.playerCompactControls = true;
        this.playerSubtitlesLocation = 'default';
        this.playerFullSubtitlesLocation = 'default';
        innerWidth = screenRatio < 1 ? screenSize.h : screenSize.w;
        innerHeight = screenRatio < 1 ? screenSize.w : screenSize.h;
        newHeight = innerHeight;
        newWidth = parseInt(newHeight * videoRatio, 10);
        if (this.isMasked) {
          this.letterboxSize = Math.round(158 / 584 * innerHeight);
          newHeight = innerHeight + this.letterboxSize * 2;
          newWidth = parseInt(newHeight * videoRatio, 10);
        }
        this.posterSize = this.videoSize = {
          width: newWidth,
          height: newHeight
        };
        this.playerSize = {
          width: innerWidth,
          height: innerHeight
        };
        if (this.isVideo) {
          this.videoSlidePlayerSize = this.playerSize;
          this.videoSlidePosterSize = this.posterSize;
          this.videoSlideVideoSize = this.posterSize;
          this.videoSlidePosterMarginLeft = Math.round((this.videoSlidePlayerSize.width - this.videoSlideVideoSize.width) / 2) + 'px';
        }
        $('.slides', this.container).width('100%').height(newHeight);
        this.posterMarginLeft = Math.round((this.playerSize.width - this.videoSize.width) / 2) + 'px';
      }
      this.position = '';
      slideClasses = slideElement.attr('class').split(' ');
      slidePositionClasses = (function() {
        var i, len, results;
        results = [];
        for (i = 0, len = slideClasses.length; i < len; i++) {
          pos = slideClasses[i];
          if (slidePositionClassPattern.test(pos)) {
            results.push(slidePositionClassPattern.exec(pos));
          }
        }
        return results;
      })();
      if (slideElement.hasClass('centered')) {
        this.position = 'centered';
      } else if (slidePositionClasses.length) {
        ref = slidePositionClasses[0], _ = ref[0], dir = ref[1], count = ref[2];
        this.position = "pull-" + dir + "-" + count;
      }
    }

    OysterSlide.prototype.embedVideoSlidePlayer = function(playerOptions) {
      var hasContainer, slideElement, videoCaptionFull, videoCaptionOverlay, videoSlideContainerClass, videoSlideContainerSelector, videoSlideElement, videoSlidePlayerId, videoSlideSelector;
      if (!this.isVideo || !playerOptions) {
        return false;
      }
      slideElement = this.getElement();
      playerOptions.videoRef = slideElement.data('video-ref');
      playerOptions.tracks = false;
      videoCaptionOverlay = slideElement.data('video-caption-overlay') || '';
      videoCaptionFull = slideElement.data('video-caption-full') || '';
      if (videoCaptionOverlay || videoCaptionFull) {
        playerOptions.tracks = [
          {
            label: "Overlay",
            type: "subtitles",
            url: videoCaptionOverlay
          }, {
            label: "Full",
            type: "transcript",
            url: videoCaptionFull
          }
        ];
      }
      videoSlideSelector = '#' + this.id;
      videoSlideElement = $(videoSlideSelector);
      videoSlideContainerClass = 'video-slide-viewport-' + this.id;
      hasContainer = videoSlideElement.children("." + videoSlideContainerClass).index() > -1;
      if (!hasContainer) {
        videoSlideElement.append($("<div class=\"" + videoSlideContainerClass + "\"></div>"));
      }
      videoSlideContainerSelector = videoSlideSelector + " ." + videoSlideContainerClass;
      playerOptions.forceFlash = playerOptions.audioOnly && BrowserDetector.isFirefox();
      videoSlidePlayerId = 'meplayer_' + this.id;
      this.player = u.video.embedVideoPlayer(videoSlideContainerSelector, playerOptions, null, videoSlidePlayerId);
      return true;
    };

    OysterSlide.prototype.updateVideoSlidePlayer = function() {
      if (!this.player) {
        return false;
      }
      this.player.setOption('fixedControls', this.playerFixedControls);
      this.player.setOption('compactControls', this.playerCompactControls);
      this.player.setOption('controlsAppearance', this.playerControlsAppearance);
      this.player.setOption('subtitlesLocation', this.playerSubtitlesLocation);
      this.player.setOption('fullSubtitlesLocation', this.playerFullSubtitlesLocation);
      this.player.setPlayerSize(this.videoSlidePlayerSize.width, this.videoSlidePlayerSize.height);
      this.player.setVideoSize(this.videoSlideVideoSize.width, this.videoSlideVideoSize.height);
      return this.player.setPosterSize(this.videoSlidePosterSize.width, this.videoSlidePosterSize.height);
    };

    OysterSlide.prototype.getElement = function() {
      return $("#" + this.id);
    };

    OysterSlide.prototype.show = function() {
      this.getElement().show();
      return this.getElement().addClass('isCurrent');
    };

    OysterSlide.prototype.hide = function() {
      this.getElement().hide();
      return this.getElement().removeClass('isCurrent');
    };

    return OysterSlide;

  })();

  this.exportModule('oyster', 'OysterSlide', OysterSlide);

}).call(this);

(function() {
  var OysterSlides,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  OysterSlides = (function() {
    function OysterSlides(slideElements, player, playerOptions) {
      this.findSlideById = bind(this.findSlideById, this);
      this.findSlideByIndex = bind(this.findSlideByIndex, this);
      var i, image_src, j, len, len1, newCanvas, options, ref, ref1, slide, slide_duration;
      this.containerId = u.utils.uuid();
      this.player = player;
      this.playerOptions = playerOptions;
      this.animatingSlideTransition = false;
      slideElements.parent().attr('id', this.containerId);
      this.slides = slideElements.map(this.extractSlideFromElement);
      this.chapters = (function() {
        var i, len, ref, results;
        ref = this.slides;
        results = [];
        for (i = 0, len = ref.length; i < len; i++) {
          slide = ref[i];
          if (slide.isChapter) {
            results.push(slide);
          }
        }
        return results;
      }).call(this);
      if (this.chapters.length < 1) {
        this.chapters = (function() {
          var i, len, ref, results;
          ref = this.slides;
          results = [];
          for (i = 0, len = ref.length; i < len; i++) {
            slide = ref[i];
            if (slide.title !== '') {
              results.push(slide);
            }
          }
          return results;
        }).call(this);
      }
      if (this.chapters.length === 0) {
        ref = this.slides;
        for (i = 0, len = ref.length; i < len; i++) {
          slide = ref[i];
          slide.title = "Slide " + (slide.index + 1);
          this.chapters.push(slide);
        }
      }
      ref1 = this.slides;
      for (j = 0, len1 = ref1.length; j < len1; j++) {
        slide = ref1[j];
        if (slide.getElement().hasClass('kenburns')) {
          slide_duration = (JSON.stringify(this.slides[slide.index + 1].timecode.seconds - JSON.stringify(slide.timecode.seconds))) * 1000;
          image_src = slide.getElement().find('img').attr('src');
          slide.getElement().empty();
          newCanvas = $('<canvas/>', {
            'class': 'kenburns_canvas'
          }).attr('width', 710).attr('height', 399);
          newCanvas.html('<p>Your browser doesn\'t support canvas! Try Chrome, Firefox or Opera</p>');
          slide.getElement().append(newCanvas);
          options = {
            image: image_src,
            frames_per_second: 30,
            display_time: slide_duration,
            zoom: slide.getElement().data('zoomfactor'),
            zoom_direction: slide.getElement().data('zoomdirection'),
            x_direction: slide.getElement().data('xdirection'),
            y_direction: slide.getElement().data('ydirection'),
            background_color: "#ffffff"
          };
          slide.kenburns = new u.oyster.kenburns(slide.getElement().find('canvas'), options);
        } else if (slide.isVideo) {
          slide.embedVideoSlidePlayer($.extend({}, playerOptions));
        }
      }
      this.length = this.slides.length;
      if (this.length > 0) {
        this.first = this.slides[0];
        this.setCurrentSlide(this.first);
      }
    }

    OysterSlides.prototype.extractSlideFromElement = function(index) {
      var element, slide;
      element = $(this);
      slide = new u.oyster.OysterSlide(element, index);
      return slide;
    };

    OysterSlides.prototype.hideAll = function() {
      $("#" + this.containerId).children('.slide').hide();
      return $("#" + this.containerId).children('.slide').removeClass('isCurrent');
    };

    OysterSlides.prototype.setCurrentSlide = function(slide, show, hideOthers) {
      var slidesTitle;
      if (show == null) {
        show = true;
      }
      if (hideOthers == null) {
        hideOthers = true;
      }
      if (this.currentSlide === void 0) {
        if (hideOthers) {
          this.hideAll();
        }
        this.currentSlide = slide;
        this.currentSlide.show();
      }
      if (this.isNextSlide(slide) && slide.isMonologue) {
        this.currentSlide.getElement().hide();
        slide.getElement().show();
        if (slide.getElement().hasClass('kenburns')) {
          slide.kenburns.startEffect();
        }
        return this.currentSlide = slide;
      } else if (this.currentSlide !== slide) {
        if (hideOthers) {
          this.hideAll();
        }
        if (show) {
          this.currentSlide = slide;
          if (slide.isKeyframe || slide.index === 0) {
            slidesTitle = 'Slide ' + (parseInt(slide.index) + 1);
            if (slide.title) {
              slidesTitle += ' ' + slide.title;
            }
            $('.slide-announce').html(slidesTitle);
          }
          return this.currentSlide.show();
        }
      }
    };

    OysterSlides.prototype.isNextSlide = function(slide) {
      return this.currentSlide.index === (slide.index - 1);
    };

    OysterSlides.prototype.getNextSlide = function() {
      if (this.currentSlide.index < this.slides.length) {
        return this.findSlideByIndex(this.currentSlide.index + 1);
      }
    };

    OysterSlides.prototype.getPrevSlide = function() {
      if (this.currentSlide.index > 0) {
        return this.findSlideByIndex(this.currentSlide.index - 1);
      }
    };

    OysterSlides.prototype.findSlideByTimecode = function(timecode) {
      var i, len, ref, slide;
      ref = this.slides;
      for (i = 0, len = ref.length; i < len; i++) {
        slide = ref[i];
        if (slide.timecode.timecode === timecode.timecode) {
          return slide;
        }
      }
    };

    OysterSlides.prototype.findNearestSlideByTimecode = function(timecode) {
      var distance, distances, i, index, j, len, len1, nearestSlide, ref, seconds, slide;
      if (!this.slides.length) {
        return;
      }
      seconds = timecode.seconds;
      distances = [];
      ref = this.slides;
      for (i = 0, len = ref.length; i < len; i++) {
        slide = ref[i];
        distance = slide.timecode.seconds - seconds;
        distances.push({
          id: slide.id,
          seconds: slide.timecode.seconds,
          distance: distance < 0 ? -distance : distance,
          absDistance: distance
        });
      }
      distances = u.utils.sortArrayObjByKey(distances, 'distance', 'asc');
      nearestSlide = distances[0];
      if (nearestSlide.seconds > seconds) {
        for (index = j = 0, len1 = distances.length; j < len1; index = ++j) {
          slide = distances[index];
          if (index !== 0 && slide.seconds <= seconds) {
            nearestSlide = slide;
            break;
          }
        }
      }
      slide = this.findSlideById(nearestSlide.id);
      slide.distance = nearestSlide.distance;
      slide.absDistance = nearestSlide.absDistance;
      return slide;
    };

    OysterSlides.prototype.findSlideByIndex = function(index) {
      var i, len, ref, slide;
      ref = this.slides;
      for (i = 0, len = ref.length; i < len; i++) {
        slide = ref[i];
        if (slide.index === index) {
          return slide;
        }
      }
    };

    OysterSlides.prototype.findSlideById = function(id) {
      var i, len, ref, slide;
      ref = this.slides;
      for (i = 0, len = ref.length; i < len; i++) {
        slide = ref[i];
        if (slide.id === id) {
          return slide;
        }
      }
    };

    return OysterSlides;

  })();

  this.exportModule('oyster', 'OysterSlides', OysterSlides);

}).call(this);

(function() {
  var embedOyster;

  embedOyster = (function(_this) {
    return function(selector, options) {
      var loader, oyster, path;
      if (options == null) {
        options = {};
      }
      loader = new DynamicLoader(window);
      path = loader.getScriptPath(['oyster-combined-deps.js', 'oyster-combined-deps.min.js']);
      loader.loadStylesheet(path + "mediaelementplayer.min.css");
      loader.loadStylesheet(path + "oyster.css");
      loader.loadStylesheet(path + "syntax_highlight.css");
      if ($(selector).find('math').length) {
        loader.loadScript("https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML");
      }
      oyster = new u.oyster.Oyster(selector, options);
      oyster.initialize();
      if (u.oyster.instances == null) {
        _this.exportModule('oyster', 'instances', []);
      }
      return u.oyster.instances.push(oyster);
    };
  })(this);

  this.exportModule('oyster', 'embedOyster', embedOyster);

}).call(this);

(function() {
  var KenBurns,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  KenBurns = (function() {
    KenBurns.start_time = null;

    KenBurns.update_time = null;

    KenBurns.time_passed = null;

    KenBurns.interval_id = null;

    KenBurns.image = null;

    KenBurns.$canvas = null;

    KenBurns.ctx = null;

    KenBurns.width = null;

    KenBurns.height = null;

    KenBurns.display_time = null;

    KenBurns.frames_per_second = null;

    KenBurns.frame_time = null;

    KenBurns.zoom_level = null;

    KenBurns.zoom_direction = null;

    KenBurns.x_direction = null;

    KenBurns.y_direction = null;

    KenBurns.clear_color = null;

    function KenBurns(canvas, options) {
      this.startEffect = bind(this.startEffect, this);
      this.$canvas = canvas;
      this.ctx = canvas[0].getContext("2d");
      this.width = this.$canvas.attr('width');
      this.height = this.$canvas.attr('height');
      this.display_time = options.display_time || 7000;
      this.time_passed = 0;
      this.frames_per_second = options.frames_per_second || 30;
      this.frame_time = (1 / this.frames_per_second) * 1000;
      this.zoom_level = 1 / (options.zoom || 1.2);
      this.zoom_direction = options.zoom_direction != null ? options.zoom_direction : Math.floor(Math.random() * 2);
      this.x_direction = options.x_direction != null ? options.x_direction : Math.floor(Math.random() * 3) - 1;
      this.y_direction = options.y_direction != null ? options.y_direction : Math.floor(Math.random() * 3) - 1;
      this.clear_color = options.background_color || "#000000";
      this.image = {
        path: options.image,
        initialized: false,
        loaded: false
      };
    }

    KenBurns.prototype.get_time = function() {
      var d;
      d = new Date();
      return d.getTime() - this.start_time;
    };

    KenBurns.prototype.interpolate_point = function(x1, y1, x2, y2, i) {
      return {
        x: x1 + (x2 - x1) * i,
        y: y1 + (y2 - y1) * i
      };
    };

    KenBurns.prototype.interpolate_rect = function(r1, r2, i) {
      var p1, p2;
      p1 = this.interpolate_point(r1[0], r1[1], r2[0], r2[1], i);
      p2 = this.interpolate_point(r1[2], r1[3], r2[2], r2[3], i);
      return [p1.x, p1.y, p2.x, p2.y];
    };

    KenBurns.prototype.scale_rect = function(r, scale) {
      var cx, cy, h, scaleh, scalew, w;
      w = r[2] - r[0];
      h = r[3] - r[1];
      cx = (r[2] + r[0]) / 2;
      cy = (r[3] + r[1]) / 2;
      scalew = w * scale;
      scaleh = h * scale;
      return [cx - scalew / 2, cy - scaleh / 2, cx + scalew / 2, cy + scaleh / 2];
    };

    KenBurns.prototype.fit = function(src_w, src_h, dst_w, dst_h) {
      var dst_a, h, src_a, w, x, y;
      src_a = src_w / src_h;
      dst_a = dst_w / dst_h;
      w = src_h * dst_a;
      h = src_h;
      if (w > src_w) {
        w = src_w;
        h = src_w / dst_a;
      }
      x = (src_w - w) / 2;
      y = (src_h - h) / 2;
      return [x, y, x + w, y + h];
    };

    KenBurns.prototype.get_image_info = function(load_callback) {
      var image, image_info;
      image_info = this.image;
      if (!image_info.initialized) {
        image = new Image();
        image_info.image = image;
        image_info.loaded = false;
        image.onload = (function(_this) {
          return function() {
            var align_x, align_y, ih, iw, r1, r2, x, y;
            image_info.loaded = true;
            iw = image.width;
            ih = image.height;
            r1 = _this.fit(iw, ih, _this.width, _this.height);
            r2 = _this.scale_rect(r1, _this.zoom_level);
            align_x = _this.x_direction;
            align_y = _this.y_direction;
            align_x /= 2;
            align_y /= 2;
            x = r2[0];
            r2[0] += x * align_x;
            r2[2] += x * align_x;
            y = r2[1];
            r2[1] += y * align_y;
            r2[3] += y * align_y;
            if (_this.zoom_direction) {
              image_info.r1 = r1;
              image_info.r2 = r2;
            } else {
              image_info.r1 = r2;
              image_info.r2 = r1;
            }
            if (load_callback) {
              return load_callback();
            }
          };
        })(this);
        image_info.initialized = true;
        image.src = image_info.path;
      }
      return image_info;
    };

    KenBurns.prototype.render_image = function(anim) {
      var image_info, r;
      if (anim > 1) {
        return;
      }
      image_info = this.get_image_info();
      if (image_info.loaded) {
        r = this.interpolate_rect(image_info.r1, image_info.r2, anim);
        this.ctx.save();
        this.ctx.globalAlpha = 1;
        this.ctx.drawImage(image_info.image, r[0], r[1], r[2] - r[0], r[3] - r[1], 0, 0, this.width, this.height);
        return this.ctx.restore();
      }
    };

    KenBurns.prototype.clear = function() {
      this.ctx.save();
      this.ctx.globalAlpha = 1;
      this.ctx.fillStyle = this.clear_color;
      this.ctx.fillRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);
      return this.ctx.restore();
    };

    KenBurns.prototype.update = function() {
      this.update_time = this.get_time();
      this.render_image(this.update_time / this.display_time);
      if (this.get_time() >= (this.display_time - this.frames_per_second)) {
        return this.stopEffect(true);
      }
    };

    KenBurns.prototype.startEffect = function() {
      var time;
      time = new Date();
      this.start_time = time.getTime() - this.time_passed;
      clearInterval(this.interval_id);
      return this.interval_id = setInterval((function(_this) {
        return function() {
          return _this.update();
        };
      })(this), this.frame_time);
    };

    KenBurns.prototype.stopEffect = function(animation_over) {
      if (animation_over == null) {
        animation_over = false;
      }
      clearInterval(this.interval_id);
      this.time_passed = 0;
      if (!animation_over) {
        return this.time_passed = this.get_time();
      }
    };

    KenBurns.prototype.setTimePassedInSeconds = function(secondsPassed) {
      return this.time_passed = secondsPassed * 1000;
    };

    return KenBurns;

  })();

  this.exportModule('oyster', 'kenburns', KenBurns);

}).call(this);

var app_module;

app_module = angular.module('formbuilderApp', ['ngResource', 'ngSanitize']);

console.log('forms version', 4);

app_module.constant('FormsAPIBaseURL', '');

app_module.factory('FormsConfiguration', [
  'FormsAPIBaseURL', function(FormsAPIBaseURL) {
    var data;
    data = {};
    data.permissions = {};
    data.permissions.useApi = true;
    data.permissions.apiHostname = FormsAPIBaseURL;
    return data;
  }
]);

var Context;

Context = (function() {
  function Context(window) {
    this.window = window;
  }

  Context.prototype.userId = function() {
    return Number(this.window.i11l.LMSContext.user.id);
  };

  Context.prototype.courseId = function() {
    if (this.window.i11l.LMSContext.course == null) {
      return 0;
    }
    return this.window.i11l.LMSContext.course.id;
  };

  Context.prototype.groupId = function() {
    if (this.window.i11l.LMSContext.course == null) {
      return 0;
    }
    if (this.window.i11l.LMSContext.course.section_id != null) {
      return this.window.i11l.LMSContext.course.section_id;
    } else {
      return 0;
    }
  };

  Context.prototype.firstSectionEnrolled = function() {
    if (this.window.i11l.LMSContext.course.sections_enrolled == null) {
      return 0;
    } else {
      return this.window.i11l.LMSContext.course.sections_enrolled[0];
    }
  };

  Context.prototype.allSectionsEnrolled = function() {
    var sections;
    if (this.isCourseCoordinator()) {
      sections = this.window.i11l.LMSContext.course.sections;
    } else {
      sections = this.window.i11l.LMSContext.course.sections_enrolled;
    }
    return sections;
  };

  Context.prototype.courseRole = function() {
    var ref;
    return (ref = this.window.i11l.LMSContext.course) != null ? ref.role : void 0;
  };

  Context.prototype.isStudent = function() {
    return this.courseRole() === "student";
  };

  Context.prototype.isInstructor = function() {
    return !this.isStudent();
  };

  Context.prototype.isAdmin = function() {
    var ref;
    return (ref = this.window.i11l.LMSContext.user.role) === 'admin' || ref === 'pesadministrator' || ref === 'limitedpesadministrator' || ref === 'programcoordinator' || ref === 'contentadmin';
  };

  Context.prototype.isCourseCoordinator = function() {
    return this.courseRole() === "coursecoordinator";
  };

  Context.prototype.cmsCourseShortName = function() {
    var ref;
    return (ref = this.window.twou.cmsContext.course) != null ? ref.shortName : void 0;
  };

  Context.prototype.courseSections = function() {
    var ref;
    return ((ref = this.window.i11l.LMSContext.course) != null ? ref.sections : void 0) || [];
  };

  return Context;

})();

angular.module('formbuilderApp').factory('Context', [
  '$window', function($window) {
    return new Context($window);
  }
]);

var FormbuilderService;

FormbuilderService = (function() {
  FormbuilderService.$inject = ['$resource', '$log', 'FormsAPIBaseURL'];

  function FormbuilderService(resource, log, FormsAPIBaseURL) {
    this.resource = resource;
    this.log = log;
    this.FormsAPIBaseURL = FormsAPIBaseURL;
    console.log("FormsAPIBaseURL:" + this.FormsAPIBaseURL);
    if (this.FormsAPIBaseURL === '') {
      this.FormsAPIBaseURL = '/api';
    }
    this.formAnswerResource = this.resource(this.FormsAPIBaseURL + '/forms/:formId/course/:courseId/user');
    this.formChartResource = this.resource(this.FormsAPIBaseURL + '/forms/:formId/responses');
  }

  FormbuilderService.prototype.questionsWithAnswers = function(formId, userId, courseId, groupId, successCallback) {
    return this.formAnswerResource.get({
      formId: formId,
      courseId: courseId,
      groupId: groupId
    }, successCallback);
  };

  FormbuilderService.prototype.getResultCharts = function(formId, courseId, sectionEnrolled, data_source_type, result_type) {
    if (result_type == null) {
      result_type = 'pygal_bar_chart';
    }
    return this.formChartResource.get({
      formId: formId,
      result_type: result_type,
      data_source_type: data_source_type,
      courseId: courseId,
      groupId: sectionEnrolled
    });
  };

  FormbuilderService.prototype.getCSVPath = function(formId, courseId, sectionId) {
    var path;
    path = this.apiBaseUrl + ("/forms/" + formId + "/course/" + courseId + "/user?format=csv");
    if (sectionId !== 'all') {
      path += "&groupId=" + sectionId;
    }
    return path;
  };

  FormbuilderService.prototype.save = function(formId, userId, courseId, sectionEnrolled, form, successCallback, failureCallback) {
    return form.$save({
      formId: formId,
      courseId: courseId,
      groupId: sectionEnrolled
    }, successCallback, failureCallback);
  };

  return FormbuilderService;

})();

angular.module('formbuilderApp').service('FormBuilderService', FormbuilderService);

var FormAuthoringService;

FormAuthoringService = (function() {
  FormAuthoringService.$inject = ['$resource', '$log'];

  function FormAuthoringService(resource, log) {
    this.resource = resource;
    this.log = log;
    this.formAnswerResource = this.resource('/api/forms/:formId/user');
    this.publishedFormsResource = this.resource('/api/forms');
    this.publishedFormsQuestionsResource = this.resource('/api/forms/:formId/questions');
    this.publishedFormsResourceById = this.resource('/api/forms/:formId');
    this.editunpublishedFormResource = this.resource('/api/unpublishedForms/:formId');
    this.unpublishedFormResource = this.resource('/api/unpublishedForms');
    this.publishFormsResource = this.resource('/api/unpublishedForms/:formId/publish');
  }

  FormAuthoringService.prototype.allFormsForAuthoring = function(cmsCourseShortName) {
    if (!this.unpublishedForms) {
      this.unpublishedForms = this.unpublishedFormResource.query({
        cmsCourseShortName: cmsCourseShortName
      });
    }
    return this.unpublishedForms;
  };

  FormAuthoringService.prototype.allPublishedForms = function() {
    if (!this.publishedForms) {
      this.publishedForms = this.publishedFormsResource.query();
    }
    return this.publishedForms;
  };

  FormAuthoringService.prototype.allPublishedFormsByCourse = function(cmsCourseShortName) {
    return this.publishedFormsResource.query({
      cmsCourseShortName: cmsCourseShortName
    });
  };

  FormAuthoringService.prototype.questionsForPublishedForm = function(formId) {
    return this.publishedFormsQuestionsResource.query({
      formId: formId
    });
  };

  FormAuthoringService.prototype.newForm = function() {
    return this.resource('/api/unpublishedForms', {
      "name": "",
      "questions": []
    });
  };

  FormAuthoringService.prototype.formById = function(formId) {
    return this.publishedFormsResourceById.get({
      formId: formId
    });
  };

  FormAuthoringService.prototype.unpublishedFormById = function(formId) {
    return this.editunpublishedFormResource.get({
      formId: formId
    });
  };

  FormAuthoringService.prototype.saveForm = function(form, successCallback, failureCallback) {
    console.log(JSON.stringify(form));
    return form.$save({
      formId: form._id
    }, successCallback, failureCallback);
  };

  FormAuthoringService.prototype.createForm = function(form, successCallback, failureCallback) {
    return this.unpublishedFormResource.save(form, successCallback, failureCallback);
  };

  FormAuthoringService.prototype.publishForm = function(form, successCallback, failureCallback) {
    return this.publishFormsResource.save({
      formId: form._id
    }, form, successCallback, failureCallback);
  };

  return FormAuthoringService;

})();

angular.module('formbuilderApp').service('FormAuthoringService', FormAuthoringService);

var AuthoringChoiceCtrl;

AuthoringChoiceCtrl = (function() {
  AuthoringChoiceCtrl.$inject = ['$scope'];

  function AuthoringChoiceCtrl(scope) {
    this.scope = scope;
  }

  AuthoringChoiceCtrl.prototype.newChoice = function(question) {
    return question.choices.push({
      "label": "",
      "value": ""
    });
  };

  AuthoringChoiceCtrl.prototype.deleteChoice = function(question, choiceIndex) {
    console.log(choiceIndex);
    return question.choices.splice(choiceIndex, 1);
  };

  AuthoringChoiceCtrl.prototype.disallowEditing = function(question) {
    return question.published;
  };

  AuthoringChoiceCtrl.prototype.canDeleteChoice = function(question) {
    return question.choices.length > 1 && !this.disallowEditing(question);
  };

  return AuthoringChoiceCtrl;

})();

angular.module('formbuilderApp').controller('AuthoringChoiceCtrl', AuthoringChoiceCtrl);

var CmsPreviewCtrl;

CmsPreviewCtrl = (function() {
  CmsPreviewCtrl.$inject = ['$sce', '$scope', 'FormAuthoringService', '$attrs', '$window', '$http'];

  function CmsPreviewCtrl(sce, scope, formAuthoringService, attrs, $window, $http) {
    this.sce = sce;
    this.scope = scope;
    this.formAuthoringService = formAuthoringService;
    this.attrs = attrs;
    this.formId = this.attrs.formid;
    $http.defaults.headers.common["Api-Key"] = $window.twou_api_key;
    this.currentInputform = this.formAuthoringService.formById(this.formId);
  }

  CmsPreviewCtrl.prototype.getQuestionTextAsTrustedHtml = function(index, question) {
    return this.sce.trustAsHtml((index + 1) + ". &nbsp;" + question.question);
  };

  return CmsPreviewCtrl;

})();

angular.module('formbuilderApp').controller('CmsPreviewCtrl', CmsPreviewCtrl);

var AuthoringCtrl,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

AuthoringCtrl = (function() {
  AuthoringCtrl.$inject = ['FormAuthoringService', '$scope', '$window', '$http', 'Context'];

  function AuthoringCtrl(formBuilderService, scope, $window, $http, context) {
    this.formBuilderService = formBuilderService;
    this.scope = scope;
    this.context = context;
    this.afterSuccessfulPublish = bind(this.afterSuccessfulPublish, this);
    this.afterSuccessfulSave = bind(this.afterSuccessfulSave, this);
    this.selectedFormId = null;
    this.selectedPublishedFormId = null;
    this.currentInputform = null;
    this.newQuestionType = "essay";
    this.newQuestionShowsChart = false;
    this.formsAnswersAreEditable = false;
    this.allForms = null;
    this.publishedId = null;
    $http.defaults.headers.common["Api-Key"] = $window.twou_api_key;
    this.allForms = this.formBuilderService.allFormsForAuthoring(this.context.cmsCourseShortName());
    this.allPublishedForms = this.formBuilderService.allPublishedFormsByCourse(this.context.cmsCourseShortName());
    this.previewMode = false;
    this.cmsSnippet = "";
    this.selectedPublishedFormId = null;
    this.selectedQuestionId = null;
  }

  AuthoringCtrl.prototype.showPublishedFormSnippet = function() {
    this.publishedSnippet = null;
    if (this.selectedPublishedFormId) {
      return this.publishedSnippet = this.lmsSnippet(this.selectedPublishedFormId);
    }
  };

  AuthoringCtrl.prototype.editForm = function() {
    this.publishedId = null;
    this.currentInputform = this.formBuilderService.unpublishedFormById(this.selectedFormId);
    return this.cmsSnippet = this.generateCmsSnippet();
  };

  AuthoringCtrl.prototype.newForm = function() {
    this.publishedId = null;
    return this.currentInputform = {
      "name": "",
      "answers_are_editable": this.formsAnswersAreEditable,
      "questions": [],
      "context": {
        "cms_course_short_name": this.context.cmsCourseShortName()
      }
    };
  };

  AuthoringCtrl.prototype.resetForm = function() {
    this.publishedId = null;
    if (this.selectedFormId) {
      return this.editForm();
    } else {
      return this.newForm();
    }
  };

  AuthoringCtrl.prototype.makeFormsAnswersEditable = function() {
    this.currentInputform["answers_are_editable"] = this.currentInputform["answers_are_editable"] ? false : true;
    return this.formsAnswersAreEditable = this.formsAnswersAreEditable ? false : true;
  };

  AuthoringCtrl.prototype.newQuestion = function() {
    if (this.isChoiceQuestionType(this.newQuestionType)) {
      return this.currentInputform.questions.push({
        "question": "",
        "type": this.newQuestionType,
        "shows_chart": this.newQuestionShowChart,
        "choices": this.getBlankChoicesByType(this.newQuestionType)
      });
    } else {
      return this.currentInputform.questions.push({
        "question": "",
        "type": this.newQuestionType,
        "shows_chart": this.newQuestionShowChart
      });
    }
  };

  AuthoringCtrl.prototype.deleteQuestion = function(questionIndex) {
    return this.currentInputform.questions.splice(questionIndex, 1);
  };

  AuthoringCtrl.prototype.isChoiceQuestionType = function(questionType) {
    return questionType !== "essay";
  };

  AuthoringCtrl.prototype.isChartableQuestionType = function(questionType) {
    return questionType === 'choice' || questionType === 'multiple-selection' || questionType === 'select';
  };

  AuthoringCtrl.prototype.getBlankChoicesByType = function(questionType) {
    if (questionType === "choice") {
      return [
        {
          label: "",
          value: ""
        }, {
          label: "",
          value: ""
        }, {
          label: "",
          value: ""
        }, {
          label: "",
          value: ""
        }
      ];
    } else {
      return [
        {
          label: "",
          value: ""
        }
      ];
    }
  };

  AuthoringCtrl.prototype.existingQuestionSelected = function() {
    var q, question;
    question = [
      (function() {
        var i, len, ref, results;
        ref = this.questionsForSelectedPublishedForm;
        results = [];
        for (i = 0, len = ref.length; i < len; i++) {
          q = ref[i];
          if (q._id === this.selectedQuestionId) {
            results.push(q);
          }
        }
        return results;
      }).call(this)
    ][0][0];
    this.currentInputform.questions.push(question);
    this.selectedQuestionId = null;
    return this.selectedPublishedFormId = null;
  };

  AuthoringCtrl.prototype.updateQuestionsForSelectedPublishedForm = function() {
    if (this.selectedPublishedFormId) {
      return this.questionsForSelectedPublishedForm = this.formBuilderService.questionsForPublishedForm(this.selectedPublishedFormId);
    }
  };

  AuthoringCtrl.prototype.afterSuccessfulSave = function(data) {
    this.currentInputform._id = data["_id"];
    return alert("Saved");
  };

  AuthoringCtrl.prototype.saveForm = function() {
    if (this.currentInputform["_id"] != null) {
      this.formBuilderService.saveForm(this.currentInputform, this.clearFormOnSave, (function() {
        return alert("Could not save");
      }));
    } else {
      this.formBuilderService.createForm(this.currentInputform, this.afterSuccessfulSave, function() {
        return alert("Could not create");
      });
    }
    return this.cmsSnippet = this.generateCmsSnippet();
  };

  AuthoringCtrl.prototype.disallowEditing = function(question) {
    return question.published;
  };

  AuthoringCtrl.prototype.generateCmsSnippet = function() {
    var snippet;
    if ((this.currentInputform != null) && (this.currentInputform["_id"] != null)) {
      snippet = '[inputform formid="' + this.currentInputform["_id"] + '"]';
    } else {
      snippet = '';
    }
    return snippet;
  };

  AuthoringCtrl.prototype.hasNotBeenSaved = function() {
    return !((this.currentInputform != null) && (this.currentInputform._id != null));
  };

  AuthoringCtrl.prototype.showEditor = function() {
    return this.currentInputform && !this.previewMode;
  };

  AuthoringCtrl.prototype.showPreview = function() {
    this.cmsSnippet = this.generateCmsSnippet();
    return this.previewMode = true;
  };

  AuthoringCtrl.prototype.endPreview = function() {
    return this.previewMode = false;
  };

  AuthoringCtrl.prototype.lmsSnippet = function(publishedId) {
    return '<div id="contentwrap"><div inputform="' + publishedId + '"></div>';
  };

  AuthoringCtrl.prototype.afterSuccessfulPublish = function(data) {
    this.currentInputform = null;
    this.selectedFormId = null;
    this.allForms = this.formBuilderService.allFormsForAuthoring();
    this.publishedId = data["_id"];
    return this.snippet = this.lmsSnippet(this.publishedId);
  };

  AuthoringCtrl.prototype.publishForm = function() {
    return this.formBuilderService.publishForm(this.currentInputform, this.afterSuccessfulPublish, function() {
      return alert("Could not publish");
    });
  };

  return AuthoringCtrl;

})();

angular.module('formbuilderApp').controller('AuthoringCtrl', AuthoringCtrl);

var PreviewCtrl;

PreviewCtrl = (function() {
  PreviewCtrl.$inject = ['$sce'];

  function PreviewCtrl(sce) {
    this.sce = sce;
  }

  PreviewCtrl.prototype.getQuestionTextAsTrustedHtml = function(index, question) {
    return this.sce.trustAsHtml((index + 1) + ". &nbsp;" + question.question);
  };

  return PreviewCtrl;

})();

angular.module('formbuilderApp').controller('PreviewCtrl', PreviewCtrl);

var AuthoringShowPreviousAnswerCtrl;

AuthoringShowPreviousAnswerCtrl = (function() {
  AuthoringShowPreviousAnswerCtrl.$inject = ['FormAuthoringService', '$scope', '$attrs'];

  function AuthoringShowPreviousAnswerCtrl(formBuilderService, scope, attrs) {
    this.formBuilderService = formBuilderService;
    this.scope = scope;
    this.attrs = attrs;
    this.allPublishedForms = this.formBuilderService.allPublishedForms();
    this.questionsForSelectedForm = [];
    this.question = this.scope.question;
    if (this.question.show_previous_answer != null) {
      this.selectedFormId = this.question.show_previous_answer.form_id;
      this.selectedQuestionId = this.question.show_previous_answer.question_id;
    } else {
      this.selectedFormId = null;
      this.selectedQuestionId = null;
      this.includePreviousAnswer = false;
    }
    this.updateQuestionsForSelectedForm();
  }

  AuthoringShowPreviousAnswerCtrl.prototype.hasAllDataForPreviousAnswer = function() {
    return this.selectedFormId && this.selectedQuestionId;
  };

  AuthoringShowPreviousAnswerCtrl.prototype.updateQuestionsForSelectedForm = function() {
    if (this.selectedFormId) {
      this.questionsForSelectedForm = this.formBuilderService.questionsForPublishedForm(this.selectedFormId);
    }
    return this.update();
  };

  AuthoringShowPreviousAnswerCtrl.prototype.update = function() {
    if (this.hasAllDataForPreviousAnswer()) {
      return this.question.show_previous_answer = {
        "form_id": this.selectedFormId,
        "question_id": this.selectedQuestionId
      };
    } else {
      return this.question.show_previous_answer = null;
    }
  };

  AuthoringShowPreviousAnswerCtrl.prototype.disallowEditing = function() {
    return this.question.published;
  };

  return AuthoringShowPreviousAnswerCtrl;

})();

angular.module('formbuilderApp').controller('AuthoringShowPreviousAnswerCtrl', AuthoringShowPreviousAnswerCtrl);

var InputFormMainCtrl,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

InputFormMainCtrl = (function() {
  var hasOwnProperty, isEmpty;

  InputFormMainCtrl.$inject = ['$scope', '$rootScope', 'Context', 'FormBuilderService', '$attrs', '$sce', '$timeout', '$window'];

  function InputFormMainCtrl(scope, rootScope, context, formBuilderService, attrs, sce, timeout, window) {
    this.scope = scope;
    this.rootScope = rootScope;
    this.context = context;
    this.formBuilderService = formBuilderService;
    this.attrs = attrs;
    this.sce = sce;
    this.timeout = timeout;
    this.window = window;
    this.savedFailure = bind(this.savedFailure, this);
    this.savedSuccess = bind(this.savedSuccess, this);
    this.afterLoadingQwithA = bind(this.afterLoadingQwithA, this);
    this.afterSave = bind(this.afterSave, this);
    this.processFormIdChange = bind(this.processFormIdChange, this);
    this.userId = this.context.userId();
    this.selectedGroup = null;
    this.selectedStudent = null;
    this.selectedQuestion = null;
    this.showGraph = false;
    this.isLoaded = false;
    if (this.scope.inheritedInputFormId != null) {
      this.formId = this.scope.inheritedInputFormId;
      this.scope.$watch('inheritedInputFormId', this.processFormIdChange);
    } else {
      this.formId = this.attrs.inputform;
    }
    this.load();
  }

  InputFormMainCtrl.prototype.processFormIdChange = function(newValue, oldValue) {
    if ((this.scope.inputFormMainCtrl != null) && (newValue !== oldValue)) {
      this.formId = this.scope.inheritedInputFormId;
      return this.load();
    }
  };

  InputFormMainCtrl.prototype.load = function() {
    if (this.getsStudentView()) {
      this.charts = this.formBuilderService.getResultCharts(this.formId, this.context.courseId(), this.context.firstSectionEnrolled(), 'aggregate_by_section');
      return this.form_data = this.formBuilderService.questionsWithAnswers(this.formId, this.userId, this.context.courseId(), [], this.afterLoadingQwithA);
    } else {
      this.allSections = this.context.courseSections();
      this.allSectionsEnrolled = this.context.allSectionsEnrolled();
      this.scope.allEnrolledSectionDetails = this.getAllEnrolledSectionDetails(this.allSections, this.allSectionsEnrolled);
      this.scope.allEnrolledSectionDetailsPlusAll = this.getAllEnrolledSectionDetailsPlusAll(this.allSections, this.allSectionsEnrolled);
      this.selectedGroup = this.getAllEnrolledSectionDetails(this.allSections, this.allSectionsEnrolled)[0];
      this.charts = this.formBuilderService.getResultCharts(this.formId, this.context.courseId(), this.selectedGroup.id, 'aggregate_by_section');
      return this.group_answers = this.formBuilderService.questionsWithAnswers(this.formId, this.userId, this.context.courseId(), this.selectedGroup.id);
    }
  };

  InputFormMainCtrl.prototype.name = function() {
    if (this.getsStudentView()) {
      return this.form_data.name;
    } else {
      return this.group_answers.name;
    }
  };

  InputFormMainCtrl.prototype.getAllEnrolledSectionDetails = function(allSections, allSectionsEnrolled) {
    var i, len, ref, section, sections_to_return;
    sections_to_return = [];
    for (i = 0, len = allSections.length; i < len; i++) {
      section = allSections[i];
      if (this.isCourseCoordinator()) {
        sections_to_return.push(section);
      } else if (ref = section.id, indexOf.call(allSectionsEnrolled, ref) >= 0) {
        sections_to_return.push(section);
      }
    }
    return sections_to_return;
  };

  InputFormMainCtrl.prototype.getAllEnrolledSectionDetailsPlusAll = function(allSections, allSectionsEnrolled) {
    var all_section, sections_to_return;
    sections_to_return = this.getAllEnrolledSectionDetails(allSections, allSectionsEnrolled);
    if (sections_to_return.length > 1) {
      all_section = {
        id: 'all',
        name: 'all'
      };
      sections_to_return.unshift(all_section);
    }
    return sections_to_return;
  };

  InputFormMainCtrl.prototype.change_group = function() {
    this.charts = this.formBuilderService.getResultCharts(this.formId, this.context.courseId(), this.selectedGroup.id, 'aggregate_by_section');
    this.group_answers = this.formBuilderService.questionsWithAnswers(this.formId, this.userId, this.context.courseId(), this.selectedGroup.id);
    this.selectedStudent = null;
    return this.selectedQuestion = null;
  };

  InputFormMainCtrl.prototype.exportSelectedGroup = function() {
    var csvEndpoint;
    csvEndpoint = this.formBuilderService.getCSVPath(this.formId, this.context.courseId(), this.selectedGroupForExport.id);
    console.log("Opening " + csvEndpoint + " in a new window");
    this.window.open(csvEndpoint);
    return null;
  };

  InputFormMainCtrl.prototype.isSelectedStudent = function(student) {
    if (this.selectedStudent === null) {
      return true;
    }
    if (this.selectedStudent.user === student) {
      return true;
    }
    return false;
  };

  InputFormMainCtrl.prototype.studentSelected = function() {
    if (this.selectedStudent === null) {
      return false;
    }
    return true;
  };

  InputFormMainCtrl.prototype.isSelectedQuestion = function(question_id) {
    if (this.selectedQuestion === null) {
      return true;
    }
    if (this.selectedQuestion._id === question_id) {
      return true;
    }
    return false;
  };

  InputFormMainCtrl.prototype.getQuestionTextAsTrustedHtml = function(index, question) {
    return this.sce.trustAsHtml(question.question);
  };

  InputFormMainCtrl.prototype.getChartAsTrustedHtml = function(chart) {
    pygal_js_start();
    return this.sce.trustAsHtml(chart);
  };

  InputFormMainCtrl.prototype.resizeCharts = function() {
    return pygal_js_start();
  };

  InputFormMainCtrl.prototype.getQuestionText = function(question_id) {
    var form_question, i, len, ref, results;
    ref = this.group_answers.questions;
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      form_question = ref[i];
      if (form_question._id === question_id) {
        results.push(form_question.question);
      }
    }
    return results;
  };

  InputFormMainCtrl.prototype.getAnswer = function(user_answer, question) {
    var answer;
    return [
      (function() {
        var i, len, ref, results;
        ref = user_answer.answers;
        results = [];
        for (i = 0, len = ref.length; i < len; i++) {
          answer = ref[i];
          if (answer.question_id === question._id) {
            results.push(answer.answer);
          }
        }
        return results;
      })()
    ][0][0];
  };

  InputFormMainCtrl.prototype.isStudent = function() {
    return this.context.isStudent();
  };

  InputFormMainCtrl.prototype.isInstructor = function() {
    return this.context.isInstructor();
  };

  InputFormMainCtrl.prototype.getsStudentView = function() {
    return this.context.isStudent() || this.context.isAdmin();
  };

  InputFormMainCtrl.prototype.isCourseCoordinator = function() {
    return this.context.isCourseCoordinator();
  };

  InputFormMainCtrl.prototype.save = function() {
    if (this.canSave()) {
      return this.formBuilderService.save(this.formId, this.userId, this.context.courseId(), this.context.firstSectionEnrolled(), this.form_data, this.afterSave, this.savedFailure);
    }
  };

  InputFormMainCtrl.prototype.afterSave = function() {
    this.rootScope.$broadcast('inputFormSaved');
    this.savedSuccess();
    this.form_data.answered = true;
    this.charts = this.formBuilderService.getResultCharts(this.formId, this.context.courseId(), this.context.firstSectionEnrolled(), 'aggregate_by_section');
    return this.showGraph = this.userHasAnswers();
  };

  InputFormMainCtrl.prototype.getQuestionWithAnswer = function(user_answer, question, afterLoadingQwithA) {
    var answer;
    this.afterLoadingQwithA = afterLoadingQwithA;
    answer = this.getAnswer(user_answer, question);
    question.answer = answer;
    return question;
  };

  InputFormMainCtrl.prototype.afterLoadingQwithA = function() {
    this.showGraph = this.userHasAnswers();
    this.isLoaded = true;
    if (this.userHasAnswers()) {
      return this.rootScope.$broadcast('inputFormSaved');
    }
  };

  InputFormMainCtrl.prototype.userHasAnswers = function() {
    return this.form_data.answered;
  };

  InputFormMainCtrl.prototype.canSave = function() {
    var result;
    if (this.context.isStudent()) {
      if (this.form_data.answers_are_editable) {
        result = true;
      } else {
        if (this.form_data.answered) {
          result = false;
        } else {
          result = true;
        }
      }
    } else {
      result = false;
    }
    return result;
  };

  hasOwnProperty = Object.prototype.hasOwnProperty;

  isEmpty = function(obj) {
    var key;
    if (obj == null) {
      return true;
    }
    if (obj.length > 0) {
      return false;
    }
    if (obj.length === 0) {
      return true;
    }
    for (key in obj) {
      if (hasOwnProperty.call(obj, key)) {
        return false;
      }
    }
    return true;
  };

  InputFormMainCtrl.prototype.savedSuccess = function() {
    this.saved_success = true;
    this.saved_success_fadein = true;
    this.timeout(((function(_this) {
      return function() {
        return _this.saved_success_fadein = false;
      };
    })(this)), 3000);
    return this.timeout(((function(_this) {
      return function() {
        return _this.saved_success = false;
      };
    })(this)), 5000);
  };

  InputFormMainCtrl.prototype.savedFailure = function() {
    this.saved_failure = true;
    this.saved_failure_fadein = true;
    this.timeout(((function(_this) {
      return function() {
        return _this.saved_failure_fadein = false;
      };
    })(this)), 3000);
    return this.timeout(((function(_this) {
      return function() {
        return _this.saved_failure = false;
      };
    })(this)), 5000);
  };

  return InputFormMainCtrl;

})();

angular.module('formbuilderApp').controller('InputFormMainCtrl', InputFormMainCtrl);

angular.module('formbuilderApp').directive('choiceQuestion', [
  '$sce', function($sce) {
    return {
      restrict: 'E',
      require: 'ngModel',
      scope: {
        question: '=',
        cansave: '='
      },
      templateUrl: $sce.trustAsResourceUrl('/forms/choice_question.html')
    };
  }
]);

angular.module('formbuilderApp').directive('essayQuestion', [
  '$sce', function($sce) {
    return {
      restrict: 'E',
      require: 'ngModel',
      scope: {
        question: '=',
        cansave: '='
      },
      templateUrl: $sce.trustAsResourceUrl('/forms/essay_question.html')
    };
  }
]);

angular.module('formbuilderApp').directive('multipleSelectionQuestion', [
  '$sce', function($sce) {
    return {
      restrict: 'E',
      require: 'ngModel',
      scope: {
        question: '=',
        cansave: '='
      },
      templateUrl: $sce.trustAsResourceUrl('/forms/multiple_selection_question.html')
    };
  }
]);

angular.module('formbuilderApp').directive('selectQuestion', [
  '$sce', function($sce) {
    return {
      restrict: 'E',
      require: 'ngModel',
      scope: {
        question: '=',
        cansave: '='
      },
      templateUrl: $sce.trustAsResourceUrl('/forms/select_question.html')
    };
  }
]);

angular.module('formbuilderApp').directive('inputform', [
  '$sce', function($sce) {
    return {
      restrict: 'A',
      controller: "InputFormMainCtrl as inputFormMainCtrl",
      templateUrl: $sce.trustAsResourceUrl('/forms/input_form_main.html')
    };
  }
]);

angular.module('formbuilderApp').directive('studentAnswers', [
  '$sce', function($sce) {
    return {
      restrict: 'A',
      templateUrl: $sce.trustAsResourceUrl('/forms/instructor_view.html')
    };
  }
]);

angular.module('formbuilderApp').directive('inputformAuthoring', [
  function() {
    return {
      restrict: 'A',
      controller: "AuthoringCtrl as authoringCtrl",
      templateUrl: '/forms/authoring/main.html'
    };
  }
]);

angular.module('formbuilderApp').directive('editInputform', [
  function() {
    return {
      restrict: 'A',
      controller: "AuthoringCtrl as authoringCtrl",
      templateUrl: '/forms/authoring/editForm.html'
    };
  }
]);

angular.module('formbuilderApp').directive('editChoices', [
  function() {
    return {
      restrict: 'A',
      controller: "AuthoringChoiceCtrl as authoringChoiceCtrl",
      require: 'ngModel',
      scope: {
        question: '='
      },
      templateUrl: '/forms/authoring/editChoices.html'
    };
  }
]);

angular.module('formbuilderApp').directive('showPreviousAnswer', [
  function() {
    return {
      restrict: 'A',
      controller: "AuthoringShowPreviousAnswerCtrl as authoringShowPreviousAnswerCtrl",
      require: 'ngModel',
      scope: {
        question: '='
      },
      templateUrl: '/forms/authoring/showPreviousAnswer.html'
    };
  }
]);

angular.module('formbuilderApp').directive('previewInputForm', [
  function() {
    return {
      restrict: 'A',
      controller: "PreviewCtrl as previewCtrl",
      templateUrl: '/forms/authoring/preview.html'
    };
  }
]);

angular.module('formbuilderApp').directive('cmsPreviewInputForm', [
  function() {
    return {
      restrict: 'A',
      controller: "CmsPreviewCtrl as cmsPreviewCtrl",
      templateUrl: '/forms/authoring/cmspreview.html'
    };
  }
]);

angular.module('formbuilderApp').filter('previous_answer', function() {
  return function(input) {
    var ans, list;
    if (typeof input === 'string') {
      ans = input;
    } else {
      list = Object.keys(input);
      ans = list.toString();
    }
    return ans;
  };
});

angular.module('formbuilderApp').run(['$templateCache', function($templateCache) {
  'use strict';

  $templateCache.put('/forms/authoring/cmspreview.html',
    "<div class=twou-inputform><h3>{{ cmsPreviewCtrl.currentInputform.name }}</h3><div class=twou-inputform id=questionsContainer ng-repeat=\"question in cmsPreviewCtrl.currentInputform.questions\"><div ng-switch on=question.type><div ng-bind-html=\"cmsPreviewCtrl.getQuestionTextAsTrustedHtml($index, question)\"></div><div ng-switch-when=choice><choice-question question=question></choice-question></div><div ng-switch-when=essay><essay-question question=question></essay-question></div><div ng-switch-when=multiple-selection><multiple-selection-question question=question></multiple-selection-question></div><div ng-switch-when=select><select-question question=question></select-question></div></div></div><div><button>Submit</button></div></div>"
  );


  $templateCache.put('/forms/authoring/editChoices.html',
    "<div class=api-form-authoring-add-choice-container><div class=api-form-authoring-add-choice><button ng-disabled=authoringChoiceCtrl.disallowEditing(question) ng-click=authoringChoiceCtrl.newChoice(question)>Add a choice</button></div><div class=api-form-authoring-choice-container><div class=api-form-authoring-choice ng-repeat=\"choice in question.choices\"><label class=api-form-authoring-choice-label>Label: <input ng-disabled=authoringChoiceCtrl.disallowEditing(question) ng-model=choice.label></label><label class=api-form-authoring-choice-value>Value: <input ng-disabled=authoringChoiceCtrl.disallowEditing(question) ng-model=choice.value></label><button ng-show=authoringChoiceCtrl.canDeleteChoice(question) ng-click=\"authoringChoiceCtrl.deleteChoice(question, $index)\" class=api-form-authoring-delete-question>Delete</button></div></div></div>"
  );


  $templateCache.put('/forms/authoring/main.html',
    "<div class=api-form-authoring><div class=api-form-authoring-header><button ng-click=authoringCtrl.newForm() class=api-form-new-form>New Form</button> Select form to edit:<select ng-model=authoringCtrl.selectedFormId class=api-form-edit-select ng-options=\"form._id as form.name for form in authoringCtrl.allForms\"><option value=\"\">----</option></select><button ng-click=authoringCtrl.editForm() class=api-form-edit-form>Edit</button></div><div class=api-form-authoring-header>Select published form to generate snippet for:<select ng-model=authoringCtrl.selectedPublishedFormId class=api-form-snippet-select ng-options=\"form._id as form.name for form in authoringCtrl.allPublishedForms\" ng-change=authoringCtrl.showPublishedFormSnippet()><option value=\"\">----</option></select><div class=api-form-authoring-snippet><pre>{{ authoringCtrl.publishedSnippet }}</pre></div></div><hr><div class=api-form-authoring-editor ng-show=authoringCtrl.showEditor()><form name=formForm><label class=api-form-authoring-form-name>Form name: <input ng-model=authoringCtrl.currentInputform.name></label><br><label class=api-form-authoring-is-editable>Forms Answers are Editable: <input ng-click=authoringCtrl.makeFormsAnswersEditable() type=checkbox></label><div class=\"twou-inputform api-form-authoring-questions-container\" ng-repeat=\"question in authoringCtrl.currentInputform.questions\"><div class=api-form-authoring-form-info><div class=api-form-authoring-question-type>Question {{ $index + 1 }} - {{ question.type }} question</div><textarea ng-disabled=authoringCtrl.disallowEditing(question) rows=6 ng-model=question.question class=api-form-authoring-question-text></textarea><button ng-show=\"authoringCtrl.currentInputform.questions.length > 0\" ng-click=authoringCtrl.deleteQuestion($index) class=api-form-delete-question>Delete Question</button></div><div ng-show=authoringCtrl.isChartableQuestionType(question.type)><input ng-model=question.shows_chart type=checkbox> Chart This Question</div><div show-previous-answer question=question class=api-form-authoring-previous-answer></div><div ng-switch on=question.type><div ng-switch-when=choice><div edit-choices question=question></div></div><div ng-switch-when=multiple-selection><div edit-choices question=question></div></div><div ng-switch-when=select><div edit-choices question=question></div></div></div><div class=api-form-authoring-clear></div></div></form><div class=api-form-add-question>Add a question:<select ng-model=authoringCtrl.newQuestionType><option value=essay>Essay</option><option value=choice>Multiple Choice</option><option value=select>Drop-down Choice</option><option value=multiple-selection>Multiple Select</option></select><button ng-click=authoringCtrl.newQuestion()>+</button><div class=api-form-add-existing-question>Select existing question:<label>Form:</label><select ng-model=authoringCtrl.selectedPublishedFormId ng-options=\"form._id as form.name for form in\n" +
    "                                 authoringCtrl.allPublishedForms\" ng-change=authoringCtrl.updateQuestionsForSelectedPublishedForm()><option value=\"\">----</option></select><label>Question:</label><select ng-model=authoringCtrl.selectedQuestionId ng-options=\"q._id as q.question for q in\n" +
    "                                 authoringCtrl.questionsForSelectedPublishedForm\"><option value=\"\">----</option></select><button ng-click=authoringCtrl.existingQuestionSelected()>+</button></div></div><div class=api-form-form-actions><button ng-click=authoringCtrl.saveForm() class=api-form-save-button>Save</button> <button ng-click=authoringCtrl.resetForm() class=api-form-clear-changes>Clear Changes</button> <button ng-disabled=authoringCtrl.hasNotBeenSaved() class=api-form-publish-button ng-click=authoringCtrl.publishForm()>Publish</button> <button ng-click=authoringCtrl.showPreview() class=api-form-preview-button>Preview</button></div></div><div ng-show=authoringCtrl.previewMode class=api-form-preview-form><div preview-input-form formtopreview=authoringCtrl.currentInputform></div>CMS Snippet:<pre>{{ authoringCtrl.cmsSnippet }}</pre><button ng-click=authoringCtrl.endPreview()>Back to editing</button></div><div ng-show=authoringCtrl.publishedId class=api-form-snippet><p>Paste this snippet in the LMS:</p><pre>{{ authoringCtrl.snippet }}</pre></div></div>"
  );


  $templateCache.put('/forms/authoring/preview.html',
    "<div class=twou-inputform><h3>{{ authoringCtrl.currentInputform.name }}</h3><div class=twou-inputform id=questionsContainer ng-repeat=\"question in authoringCtrl.currentInputform.questions\"><div ng-switch on=question.type><div ng-bind-html=\"previewCtrl.getQuestionTextAsTrustedHtml($index, question)\"></div><div ng-switch-when=choice><choice-question question=question></choice-question></div><div ng-switch-when=essay><essay-question question=question></essay-question></div><div ng-switch-when=multiple-selection><multiple-selection-question question=question></multiple-selection-question></div><div ng-switch-when=select><select-question question=question></select-question></div></div></div><div><button>Submit</button></div></div>"
  );


  $templateCache.put('/forms/authoring/showPreviousAnswer.html',
    "<div>You can refer to an answer that the student has previously provided. To do so, select the previous form, question in previous form.</div><div><label>Form:</label><select ng-disabled=authoringShowPreviousAnswerCtrl.disallowEditing() ng-model=authoringShowPreviousAnswerCtrl.selectedFormId ng-options=\"form._id as form.name for form in\n" +
    "                                 authoringShowPreviousAnswerCtrl.allPublishedForms\" ng-change=authoringShowPreviousAnswerCtrl.updateQuestionsForSelectedForm()><option value=\"\">----</option></select></div><div><label>Question:</label><select ng-disabled=authoringShowPreviousAnswerCtrl.disallowEditing() ng-model=authoringShowPreviousAnswerCtrl.selectedQuestionId ng-options=\"q._id as q.question for q in\n" +
    "                                 authoringShowPreviousAnswerCtrl.questionsForSelectedForm\" ng-change=authoringShowPreviousAnswerCtrl.update()><option value=\"\">----</option></select></div>"
  );


  $templateCache.put('/forms/choice_question.html',
    "<div class=response><div class=choices><div ng-repeat=\"choice in question.choices\"><input ng-disabled=\"! cansave\" type=radio ng-value=choice.value ng-model=question.answer> <span class=small>{{ choice.label }}</span></div></div></div>"
  );


  $templateCache.put('/forms/essay_question.html',
    "<div class=response><textarea ng-readonly=\"! cansave\" rows=5 cols=50 ng-model=question.answer ng-maxlength=2000 placeholder=\"Type your answer here..\"></textarea></div>"
  );


  $templateCache.put('/forms/input_form_main.html',
    "<div class=input-forms><div class=header><h2>{{ inputFormMainCtrl.name() }}</h2></div><div ng-show=inputFormMainCtrl.getsStudentView()><form novalidate name=inputFormMain><div class=inquiry id=questionsContainer ng-repeat=\"question in inputFormMainCtrl.form_data.questions\"><div ng-switch on=question.type><div class=number>{{$index+1}}.</div><div class=question ng-bind-html=\"inputFormMainCtrl.getQuestionTextAsTrustedHtml($index, question)\"></div><div class=answer ng-if=question.previous_answer><div class=last-time><span>Last time you answered:</span> {{question.previous_answer | previous_answer }}</div></div><div ng-switch-when=choice><choice-question question=question cansave=inputFormMainCtrl.canSave()></choice-question></div><div ng-switch-when=essay><essay-question question=question cansave=inputFormMainCtrl.canSave()></essay-question></div><div ng-switch-when=multiple-selection><multiple-selection-question question=question cansave=inputFormMainCtrl.canSave()></multiple-selection-question></div><div ng-switch-when=select><select-question question=question cansave=inputFormMainCtrl.canSave()></select-question></div><div><div class=results-chart-row ng-repeat=\"chart in inputFormMainCtrl.charts.charts\" ng-if=inputFormMainCtrl.showGraph><div ng-if=\"question._id == chart.question_id\"><label ng-if=chart.chart>Section Responses</label><div class=chart ng-bind-html=inputFormMainCtrl.getChartAsTrustedHtml(chart.chart)></div></div><br ng-if=chart.chart></div></div></div></div><div ng-show=inputFormMainCtrl.saved_success class=\"alert alert-success\" role=alert ng-class=\"{'fadein': inputFormMainCtrl.saved_success_fadein}\">Response Submitted</div><div ng-show=inputFormMainCtrl.saved_failure class=\"alert alert-danger\" role=alert ng-class=\"{'fadein': inputFormMainCtrl.saved_failure_fadein}\">Error Submitting Response!</div><div ng-show=\"inputFormMainCtrl.canSave() && inputFormMainCtrl.isLoaded\"><button class=\"button large green\" ng-click=inputFormMainCtrl.save() ng-disabled=inputFormMain.$invalid>Submit the Response</button></div></form></div><div student-answers ng-show=inputFormMainCtrl.isInstructor()></div></div>"
  );


  $templateCache.put('/forms/instructor_view.html',
    "<div class=container-fluid ng-if=!inputFormMainCtrl.getsStudentView()><div class=bootstrap-row><div ng-if=\"inputFormMainCtrl.allSectionsEnrolled.length > 1\" class=col-md-6><select ng-model=inputFormMainCtrl.selectedGroup ng-change=inputFormMainCtrl.change_group() ng-options=\"section.name for section in allEnrolledSectionDetails\"></select></div></div><div class=\"filters bootstrap-row\"><div class=col-md-5><div class=bootstrap-row><!--EXPORT CSV --><label class=label-sm>Export to CSV</label><select ng-model=inputFormMainCtrl.selectedGroupForExport ng-options=\"section.name for section in allEnrolledSectionDetailsPlusAll\"></select><button ng-click=inputFormMainCtrl.exportSelectedGroup() type=button class=\"btn btn-default active\">Export</button></div><div class=bootstrap-row><!--GROUP BY --><label class=label-sm>Group By</label><div class=\"btn-group btn-block\"><button ng-show=\"! student_view\" ng-click=\"student_view = ! student_view\" type=button class=\"btn btn-default active\">Students</button> <button ng-show=student_view type=button class=\"btn btn-default\">Students</button> <button ng-show=student_view ng-click=\"student_view = ! student_view\" type=button class=\"btn btn-default active\">Questions</button> <button ng-show=\"! student_view\" type=button class=\"btn btn-default\">Questions</button></div></div></div><!-- FILTERS --><div class=col-md-7><label class=label-sm>Filter</label><select ng-model=inputFormMainCtrl.selectedStudent ng-change=inputFormMainCtrl.resizeCharts() ng-options=\"student.user.fullName for student in inputFormMainCtrl.group_answers.user_answers\"><option value=\"\">All</option></select><select ng-model=inputFormMainCtrl.selectedQuestion ng-change=inputFormMainCtrl.isSelectedQuestion() ng-options=\"questions.question for questions in inputFormMainCtrl.group_answers.questions\"><option value=\"\">All</option></select></div></div><div class=\"filters bootstrap-row\"><!--STUDENT VIEW SECTION --><div ng-if=student_view ng-repeat=\"user_answer in inputFormMainCtrl.group_answers.user_answers\" class=student-block><div class=\"first-row bootstrap-row\" ng-show=inputFormMainCtrl.isSelectedStudent(user_answer.user)><div class=col-md-2><img ng-src=\"{{ user_answer.user.thumbnail }}\" alt=\"\" class=\"img-responsive profile-image\"><p class=student-name>{{ user_answer.user.fullName }}</p></div><div class=col-md-10><div class=\"student-question-response bootstrap-row\" ng-repeat=\"question in inputFormMainCtrl.group_answers.questions\"><div ng-if=inputFormMainCtrl.isSelectedQuestion(question._id)><label>Q{{ $index + 1}}:<div ng-bind-html=question.question></label><div ng-switch on=question.type><div ng-switch-when=choice><choice-question question=\"inputFormMainCtrl.getQuestionWithAnswer(user_answer, question)\"></choice-question></div><div ng-switch-when=multiple-selection><multiple-selection-question question=\"inputFormMainCtrl.getQuestionWithAnswer(user_answer, question)\"></multiple-selection-question></div><div ng-switch-when=select><choice-question question=\"inputFormMainCtrl.getQuestionWithAnswer(user_answer, question)\"></choice-question></div><div ng-switch-default><textarea class=form-control readonly rows=5>{{ inputFormMainCtrl.getAnswer(user_answer, question) }}</textarea></div></div></div></div></div></div></div></div><div class=\"filters bootstrap-row\"><!-- QUESTION VIEW SECTION --><div ng-if=\"! student_view\" ng-repeat=\"question in inputFormMainCtrl.group_answers.questions\" class=question-block><div ng-if=inputFormMainCtrl.isSelectedQuestion(question._id)><h3>Q{{ $index + 1}}:<div ng-bind-html=question.question></h3><div class=\"first-row bootstrap-row\"><div ng-class=\"{ 'col-md-6': question.shows_chart, 'col-md-12': ! question.shows_chart }\"><div class=student-question-response ng-repeat=\"user_answer in inputFormMainCtrl.group_answers.user_answers\"><div ng-if=inputFormMainCtrl.isSelectedStudent(user_answer.user)><label><img ng-src=\"{{ user_answer.user.thumbnail }}\" alt=\"\"> {{ user_answer.user.fullName }}</label><div ng-repeat=\"answer in user_answer.answers\"><div ng-if=\"answer.question_id == question._id\"><div ng-switch on=question.type><div ng-switch-when=choice><choice-question question=\"inputFormMainCtrl.getQuestionWithAnswer(user_answer, question)\" cansave=inputFormMainCtrl.canSave()></choice-question></div><div ng-switch-when=multiple-selection><multiple-selection-question question=\"inputFormMainCtrl.getQuestionWithAnswer(user_answer, question)\" cansave=inputFormMainCtrl.canSave()></multiple-selection-question></div><div ng-switch-when=select><choice-question question=\"inputFormMainCtrl.getQuestionWithAnswer(user_answer, question)\" cansave=inputFormMainCtrl.canSave()></choice-question></div><div ng-switch-default><textarea class=form-control rows=5 readonly>{{ inputFormMainCtrl.getAnswer(user_answer, question) }}</textarea></div></div></div></div></div></div></div><!-- CHARTS --><div class=col-md-6 ng-if=question.shows_chart ng-repeat=\"chart in inputFormMainCtrl.charts.charts\"><label ng-hide=inputFormMainCtrl.studentSelected() ng-show=inputFormMainCtrl.isSelectedQuestion(chart.question_id) ng-if=\"question._id == chart.question_id\">Question {{$index + 1 }}: Responses by frequency</label><div ng-hide=inputFormMainCtrl.studentSelected() ng-show=inputFormMainCtrl.isSelectedQuestion(chart.question_id)><div ng-if=\"question._id == chart.question_id\"><div class=chart ng-bind-html=inputFormMainCtrl.getChartAsTrustedHtml(chart.chart)></div></div></div></div><!-- END OF CHARTS --></div></div></div><!-- END OF QUESTION VIEW --></div></div>"
  );


  $templateCache.put('/forms/multiple_selection_question.html',
    "<div><div class=response><div ng-repeat=\"choice in question.choices\"><input ng-disabled=\"! cansave\" type=checkbox name={{question._id}} ng-model=question.answer[choice.value]> <span class=small>{{ choice.label }}</span></div></div></div>"
  );


  $templateCache.put('/forms/select_question.html',
    "<div class=response><select ng-if=cansave ng-model=question.answer ng-options=\"choice.value as choice.label for choice in question.choices\"><option value=\"\">----</option></select><div ng-if=\"! cansave\"><div class=choices><div ng-repeat=\"choice in question.choices\"><input disabled type=radio ng-value=choice.value ng-model=question.answer> <span class=small>{{ choice.label }}</span></div></div></div></div>"
  );

}]);

/*!
 * jQuery JavaScript Library v1.7.2 modified by Florian Mounier to work with SVG
 * http://jquery.com/
 *
 * Copyright 2011, John Resig
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 * Copyright 2011, The Dojo Foundation
 * Released under the MIT, BSD, and GPL Licenses.
 *
 * Date: Wed Mar 21 12:46:34 2012 -0700
 */
(function( window, undefined ) {

// Use the correct document accordingly with window argument (sandbox)
var document = window.document,
    navigator = window.navigator,
    location = window.location;
var jQuery = (function() {

// Define a local copy of jQuery
var jQuery = function( selector, context ) {
        // The jQuery object is actually just the init constructor 'enhanced'
        return new jQuery.fn.init( selector, context, rootjQuery );
    },

    // Map over jQuery in case of overwrite
    _jQuery = window.jQuery,

    // Map over the $ in case of overwrite
    _$ = window.$,

    // A central reference to the root jQuery(document)
    rootjQuery,

    // A simple way to check for HTML strings or ID strings
    // Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
    quickExpr = /^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,

    // Check if a string has a non-whitespace character in it
    rnotwhite = /\S/,

    // Used for trimming whitespace
    trimLeft = /^\s+/,
    trimRight = /\s+$/,

    // Match a standalone tag
    rsingleTag = /^<(\w+)\s*\/?>(?:<\/\1>)?$/,

    // JSON RegExp
    rvalidchars = /^[\],:{}\s]*$/,
    rvalidescape = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,
    rvalidtokens = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,
    rvalidbraces = /(?:^|:|,)(?:\s*\[)+/g,

    // Useragent RegExp
    rwebkit = /(webkit)[ \/]([\w.]+)/,
    ropera = /(opera)(?:.*version)?[ \/]([\w.]+)/,
    rmsie = /(msie) ([\w.]+)/,
    rmozilla = /(mozilla)(?:.*? rv:([\w.]+))?/,

    // Matches dashed string for camelizing
    rdashAlpha = /-([a-z]|[0-9])/ig,
    rmsPrefix = /^-ms-/,

    // Used by jQuery.camelCase as callback to replace()
    fcamelCase = function( all, letter ) {
        return ( letter + "" ).toUpperCase();
    },

    // Keep a UserAgent string for use with jQuery.browser
    userAgent = navigator.userAgent,

    // For matching the engine and version of the browser
    browserMatch,

    // The deferred used on DOM ready
    readyList,

    // The ready event handler
    DOMContentLoaded,

    // Save a reference to some core methods
    toString = Object.prototype.toString,
    hasOwn = Object.prototype.hasOwnProperty,
    push = Array.prototype.push,
    slice = Array.prototype.slice,
    trim = String.prototype.trim,
    indexOf = Array.prototype.indexOf,

    // [[Class]] -> type pairs
    class2type = {};

jQuery.fn = jQuery.prototype = {
    constructor: jQuery,
    init: function( selector, context, rootjQuery ) {
        var match, elem, ret, doc;

        // Handle $(""), $(null), or $(undefined)
        if ( !selector ) {
            return this;
        }

        // Handle $(DOMElement)
        if ( selector.nodeType ) {
            this.context = this[0] = selector;
            this.length = 1;
            return this;
        }

        // The body element only exists once, optimize finding it
        if ( selector === "body" && !context && document.body ) {
            this.context = document;
            this[0] = document.body;
            this.selector = selector;
            this.length = 1;
            return this;
        }

        // Handle HTML strings
        if ( typeof selector === "string" ) {
            // Are we dealing with HTML string or an ID?
            if ( selector.charAt(0) === "<" && selector.charAt( selector.length - 1 ) === ">" && selector.length >= 3 ) {
                // Assume that strings that start and end with <> are HTML and skip the regex check
                match = [ null, selector, null ];

            } else {
                match = quickExpr.exec( selector );
            }

            // Verify a match, and that no context was specified for #id
            if ( match && (match[1] || !context) ) {

                // HANDLE: $(html) -> $(array)
                if ( match[1] ) {
                    context = context instanceof jQuery ? context[0] : context;
                    doc = ( context ? context.ownerDocument || context : document );

                    // If a single string is passed in and it's a single tag
                    // just do a createElement and skip the rest
                    ret = rsingleTag.exec( selector );

                    if ( ret ) {
                        if ( jQuery.isPlainObject( context ) ) {
                            selector = [ document.createElementNS( 'http://www.w3.org/2000/svg', ret[1] ) ];
                            jQuery.fn.attr.call( selector, context, true );

                        } else {
                            selector = [ doc.createElementNS( 'http://www.w3.org/2000/svg', ret[1] ) ];
                        }

                    } else {
                        ret = jQuery.buildFragment( [ match[1] ], [ doc ] );
                        selector = ( ret.cacheable ? jQuery.clone(ret.fragment) : ret.fragment ).childNodes;
                    }

                    return jQuery.merge( this, selector );

                // HANDLE: $("#id")
                } else {
                    elem = document.getElementById( match[2] );

                    // Check parentNode to catch when Blackberry 4.6 returns
                    // nodes that are no longer in the document #6963
                    if ( elem && elem.parentNode ) {
                        // Handle the case where IE and Opera return items
                        // by name instead of ID
                        if ( elem.id !== match[2] ) {
                            return rootjQuery.find( selector );
                        }

                        // Otherwise, we inject the element directly into the jQuery object
                        this.length = 1;
                        this[0] = elem;
                    }

                    this.context = document;
                    this.selector = selector;
                    return this;
                }

            // HANDLE: $(expr, $(...))
            } else if ( !context || context.jquery ) {
                return ( context || rootjQuery ).find( selector );

            // HANDLE: $(expr, context)
            // (which is just equivalent to: $(context).find(expr)
            } else {
                return this.constructor( context ).find( selector );
            }

        // HANDLE: $(function)
        // Shortcut for document ready
        } else if ( jQuery.isFunction( selector ) ) {
            return rootjQuery.ready( selector );
        }

        if ( selector.selector !== undefined ) {
            this.selector = selector.selector;
            this.context = selector.context;
        }

        return jQuery.makeArray( selector, this );
    },

    // Start with an empty selector
    selector: "",

    // The current version of jQuery being used
    jquery: "1.7.2",

    // The default length of a jQuery object is 0
    length: 0,

    // The number of elements contained in the matched element set
    size: function() {
        return this.length;
    },

    toArray: function() {
        return slice.call( this, 0 );
    },

    // Get the Nth element in the matched element set OR
    // Get the whole matched element set as a clean array
    get: function( num ) {
        return num == null ?

            // Return a 'clean' array
            this.toArray() :

            // Return just the object
            ( num < 0 ? this[ this.length + num ] : this[ num ] );
    },

    // Take an array of elements and push it onto the stack
    // (returning the new matched element set)
    pushStack: function( elems, name, selector ) {
        // Build a new jQuery matched element set
        var ret = this.constructor();

        if ( jQuery.isArray( elems ) ) {
            push.apply( ret, elems );

        } else {
            jQuery.merge( ret, elems );
        }

        // Add the old object onto the stack (as a reference)
        ret.prevObject = this;

        ret.context = this.context;

        if ( name === "find" ) {
            ret.selector = this.selector + ( this.selector ? " " : "" ) + selector;
        } else if ( name ) {
            ret.selector = this.selector + "." + name + "(" + selector + ")";
        }

        // Return the newly-formed element set
        return ret;
    },

    // Execute a callback for every element in the matched set.
    // (You can seed the arguments with an array of args, but this is
    // only used internally.)
    each: function( callback, args ) {
        return jQuery.each( this, callback, args );
    },

    ready: function( fn ) {
        // Attach the listeners
        jQuery.bindReady();

        // Add the callback
        readyList.add( fn );

        return this;
    },

    eq: function( i ) {
        i = +i;
        return i === -1 ?
            this.slice( i ) :
            this.slice( i, i + 1 );
    },

    first: function() {
        return this.eq( 0 );
    },

    last: function() {
        return this.eq( -1 );
    },

    slice: function() {
        return this.pushStack( slice.apply( this, arguments ),
            "slice", slice.call(arguments).join(",") );
    },

    map: function( callback ) {
        return this.pushStack( jQuery.map(this, function( elem, i ) {
            return callback.call( elem, i, elem );
        }));
    },

    end: function() {
        return this.prevObject || this.constructor(null);
    },

    // For internal use only.
    // Behaves like an Array's method, not like a jQuery method.
    push: push,
    sort: [].sort,
    splice: [].splice
};

// Give the init function the jQuery prototype for later instantiation
jQuery.fn.init.prototype = jQuery.fn;

jQuery.extend = jQuery.fn.extend = function() {
    var options, name, src, copy, copyIsArray, clone,
        target = arguments[0] || {},
        i = 1,
        length = arguments.length,
        deep = false;

    // Handle a deep copy situation
    if ( typeof target === "boolean" ) {
        deep = target;
        target = arguments[1] || {};
        // skip the boolean and the target
        i = 2;
    }

    // Handle case when target is a string or something (possible in deep copy)
    if ( typeof target !== "object" && !jQuery.isFunction(target) ) {
        target = {};
    }

    // extend jQuery itself if only one argument is passed
    if ( length === i ) {
        target = this;
        --i;
    }

    for ( ; i < length; i++ ) {
        // Only deal with non-null/undefined values
        if ( (options = arguments[ i ]) != null ) {
            // Extend the base object
            for ( name in options ) {
                src = target[ name ];
                copy = options[ name ];

                // Prevent never-ending loop
                if ( target === copy ) {
                    continue;
                }

                // Recurse if we're merging plain objects or arrays
                if ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {
                    if ( copyIsArray ) {
                        copyIsArray = false;
                        clone = src && jQuery.isArray(src) ? src : [];

                    } else {
                        clone = src && jQuery.isPlainObject(src) ? src : {};
                    }

                    // Never move original objects, clone them
                    target[ name ] = jQuery.extend( deep, clone, copy );

                // Don't bring in undefined values
                } else if ( copy !== undefined ) {
                    target[ name ] = copy;
                }
            }
        }
    }

    // Return the modified object
    return target;
};

jQuery.extend({
    noConflict: function( deep ) {
        if ( window.$ === jQuery ) {
            window.$ = _$;
        }

        if ( deep && window.jQuery === jQuery ) {
            window.jQuery = _jQuery;
        }

        return jQuery;
    },

    // Is the DOM ready to be used? Set to true once it occurs.
    isReady: false,

    // A counter to track how many items to wait for before
    // the ready event fires. See #6781
    readyWait: 1,

    // Hold (or release) the ready event
    holdReady: function( hold ) {
        if ( hold ) {
            jQuery.readyWait++;
        } else {
            jQuery.ready( true );
        }
    },

    // Handle when the DOM is ready
    ready: function( wait ) {
        // Either a released hold or an DOMready/load event and not yet ready
        if ( (wait === true && !--jQuery.readyWait) || (wait !== true && !jQuery.isReady) ) {
            // Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).
          //    if ( !document.body ) {
          //        return setTimeout( jQuery.ready, 1 );
          //    }

            // Remember that the DOM is ready
            jQuery.isReady = true;

            // If a normal DOM Ready event fired, decrement, and wait if need be
            if ( wait !== true && --jQuery.readyWait > 0 ) {
                return;
            }

            // If there are functions bound, to execute
            readyList.fireWith( document, [ jQuery ] );

            // Trigger any bound ready events
            if ( jQuery.fn.trigger ) {
                jQuery( document ).trigger( "ready" ).off( "ready" );
            }
        }
    },

    bindReady: function() {
        if ( readyList ) {
            return;
        }

        readyList = jQuery.Callbacks( "once memory" );

        // Catch cases where $(document).ready() is called after the
        // browser event has already occurred.
        if ( document.readyState === "complete" ) {
            // Handle it asynchronously to allow scripts the opportunity to delay ready
            return setTimeout( jQuery.ready, 1 );
        }

        // Mozilla, Opera and webkit nightlies currently support this event
        if ( document.addEventListener ) {
            // Use the handy event callback
            document.addEventListener( "DOMContentLoaded", DOMContentLoaded, false );

            // A fallback to window.onload, that will always work
            window.addEventListener( "load", jQuery.ready, false );

        // If IE event model is used
        } else if ( document.attachEvent ) {
            // ensure firing before onload,
            // maybe late but safe also for iframes
            document.attachEvent( "onreadystatechange", DOMContentLoaded );

            // A fallback to window.onload, that will always work
            window.attachEvent( "onload", jQuery.ready );

            // If IE and not a frame
            // continually check to see if the document is ready
            var toplevel = false;

            try {
                toplevel = window.frameElement == null;
            } catch(e) {}

            if ( document.documentElement.doScroll && toplevel ) {
                doScrollCheck();
            }
        }
    },

    // See test/unit/core.js for details concerning isFunction.
    // Since version 1.3, DOM methods and functions like alert
    // aren't supported. They return false on IE (#2968).
    isFunction: function( obj ) {
        return jQuery.type(obj) === "function";
    },

    isArray: Array.isArray || function( obj ) {
        return jQuery.type(obj) === "array";
    },

    isWindow: function( obj ) {
        return obj != null && obj == obj.window;
    },

    isNumeric: function( obj ) {
        return !isNaN( parseFloat(obj) ) && isFinite( obj );
    },

    type: function( obj ) {
        return obj == null ?
            String( obj ) :
            class2type[ toString.call(obj) ] || "object";
    },

    isPlainObject: function( obj ) {
        // Must be an Object.
        // Because of IE, we also have to check the presence of the constructor property.
        // Make sure that DOM nodes and window objects don't pass through, as well
        if ( !obj || jQuery.type(obj) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
            return false;
        }

        try {
            // Not own constructor property must be Object
            if ( obj.constructor &&
                !hasOwn.call(obj, "constructor") &&
                !hasOwn.call(obj.constructor.prototype, "isPrototypeOf") ) {
                return false;
            }
        } catch ( e ) {
            // IE8,9 Will throw exceptions on certain host objects #9897
            return false;
        }

        // Own properties are enumerated firstly, so to speed up,
        // if last one is own, then all properties are own.

        var key;
        for ( key in obj ) {}

        return key === undefined || hasOwn.call( obj, key );
    },

    isEmptyObject: function( obj ) {
        for ( var name in obj ) {
            return false;
        }
        return true;
    },

    error: function( msg ) {
        throw new Error( msg );
    },

    parseJSON: function( data ) {
        if ( typeof data !== "string" || !data ) {
            return null;
        }

        // Make sure leading/trailing whitespace is removed (IE can't handle it)
        data = jQuery.trim( data );

        // Attempt to parse using the native JSON parser first
        if ( window.JSON && window.JSON.parse ) {
            return window.JSON.parse( data );
        }

        // Make sure the incoming data is actual JSON
        // Logic borrowed from http://json.org/json2.js
        if ( rvalidchars.test( data.replace( rvalidescape, "@" )
            .replace( rvalidtokens, "]" )
            .replace( rvalidbraces, "")) ) {

            return ( new Function( "return " + data ) )();

        }
        jQuery.error( "Invalid JSON: " + data );
    },

    // Cross-browser xml parsing
    parseXML: function( data ) {
        if ( typeof data !== "string" || !data ) {
            return null;
        }
        var xml, tmp;
        try {
            if ( window.DOMParser ) { // Standard
                tmp = new DOMParser();
                xml = tmp.parseFromString( data , "text/xml" );
            } else { // IE
                xml = new ActiveXObject( "Microsoft.XMLDOM" );
                xml.async = "false";
                xml.loadXML( data );
            }
        } catch( e ) {
            xml = undefined;
        }
        if ( !xml || !xml.documentElement || xml.getElementsByTagName( "parsererror" ).length ) {
            jQuery.error( "Invalid XML: " + data );
        }
        return xml;
    },

    noop: function() {},

    // Evaluates a script in a global context
    // Workarounds based on findings by Jim Driscoll
    // http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context
    globalEval: function( data ) {
        if ( data && rnotwhite.test( data ) ) {
            // We use execScript on Internet Explorer
            // We use an anonymous function so that context is window
            // rather than jQuery in Firefox
            ( window.execScript || function( data ) {
                window[ "eval" ].call( window, data );
            } )( data );
        }
    },

    // Convert dashed to camelCase; used by the css and data modules
    // Microsoft forgot to hump their vendor prefix (#9572)
    camelCase: function( string ) {
        return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
    },

    nodeName: function( elem, name ) {
        return elem.nodeName && elem.nodeName.toUpperCase() === name.toUpperCase();
    },

    // args is for internal usage only
    each: function( object, callback, args ) {
        var name, i = 0,
            length = object.length,
            isObj = length === undefined || jQuery.isFunction( object );

        if ( args ) {
            if ( isObj ) {
                for ( name in object ) {
                    if ( callback.apply( object[ name ], args ) === false ) {
                        break;
                    }
                }
            } else {
                for ( ; i < length; ) {
                    if ( callback.apply( object[ i++ ], args ) === false ) {
                        break;
                    }
                }
            }

        // A special, fast, case for the most common use of each
        } else {
            if ( isObj ) {
                for ( name in object ) {
                    if ( callback.call( object[ name ], name, object[ name ] ) === false ) {
                        break;
                    }
                }
            } else {
                for ( ; i < length; ) {
                    if ( callback.call( object[ i ], i, object[ i++ ] ) === false ) {
                        break;
                    }
                }
            }
        }

        return object;
    },

    // Use native String.trim function wherever possible
    trim: trim ?
        function( text ) {
            return text == null ?
                "" :
                trim.call( text );
        } :

        // Otherwise use our own trimming functionality
        function( text ) {
            return text == null ?
                "" :
                text.toString().replace( trimLeft, "" ).replace( trimRight, "" );
        },

    // results is for internal usage only
    makeArray: function( array, results ) {
        var ret = results || [];

        if ( array != null ) {
            // The window, strings (and functions) also have 'length'
            // Tweaked logic slightly to handle Blackberry 4.7 RegExp issues #6930
            var type = jQuery.type( array );

            if ( array.length == null || type === "string" || type === "function" || type === "regexp" || jQuery.isWindow( array ) ) {
                push.call( ret, array );
            } else {
                jQuery.merge( ret, array );
            }
        }

        return ret;
    },

    inArray: function( elem, array, i ) {
        var len;

        if ( array ) {
            if ( indexOf ) {
                return indexOf.call( array, elem, i );
            }

            len = array.length;
            i = i ? i < 0 ? Math.max( 0, len + i ) : i : 0;

            for ( ; i < len; i++ ) {
                // Skip accessing in sparse arrays
                if ( i in array && array[ i ] === elem ) {
                    return i;
                }
            }
        }

        return -1;
    },

    merge: function( first, second ) {
        var i = first.length,
            j = 0;

        if ( typeof second.length === "number" ) {
            for ( var l = second.length; j < l; j++ ) {
                first[ i++ ] = second[ j ];
            }

        } else {
            while ( second[j] !== undefined ) {
                first[ i++ ] = second[ j++ ];
            }
        }

        first.length = i;

        return first;
    },

    grep: function( elems, callback, inv ) {
        var ret = [], retVal;
        inv = !!inv;

        // Go through the array, only saving the items
        // that pass the validator function
        for ( var i = 0, length = elems.length; i < length; i++ ) {
            retVal = !!callback( elems[ i ], i );
            if ( inv !== retVal ) {
                ret.push( elems[ i ] );
            }
        }

        return ret;
    },

    // arg is for internal usage only
    map: function( elems, callback, arg ) {
        var value, key, ret = [],
            i = 0,
            length = elems.length,
            // jquery objects are treated as arrays
            isArray = elems instanceof jQuery || length !== undefined && typeof length === "number" && ( ( length > 0 && elems[ 0 ] && elems[ length -1 ] ) || length === 0 || jQuery.isArray( elems ) ) ;

        // Go through the array, translating each of the items to their
        if ( isArray ) {
            for ( ; i < length; i++ ) {
                value = callback( elems[ i ], i, arg );

                if ( value != null ) {
                    ret[ ret.length ] = value;
                }
            }

        // Go through every key on the object,
        } else {
            for ( key in elems ) {
                value = callback( elems[ key ], key, arg );

                if ( value != null ) {
                    ret[ ret.length ] = value;
                }
            }
        }

        // Flatten any nested arrays
        return ret.concat.apply( [], ret );
    },

    // A global GUID counter for objects
    guid: 1,

    // Bind a function to a context, optionally partially applying any
    // arguments.
    proxy: function( fn, context ) {
        if ( typeof context === "string" ) {
            var tmp = fn[ context ];
            context = fn;
            fn = tmp;
        }

        // Quick check to determine if target is callable, in the spec
        // this throws a TypeError, but we will just return undefined.
        if ( !jQuery.isFunction( fn ) ) {
            return undefined;
        }

        // Simulated bind
        var args = slice.call( arguments, 2 ),
            proxy = function() {
                return fn.apply( context, args.concat( slice.call( arguments ) ) );
            };

        // Set the guid of unique handler to the same of original handler, so it can be removed
        proxy.guid = fn.guid = fn.guid || proxy.guid || jQuery.guid++;

        return proxy;
    },

    // Mutifunctional method to get and set values to a collection
    // The value/s can optionally be executed if it's a function
    access: function( elems, fn, key, value, chainable, emptyGet, pass ) {
        var exec,
            bulk = key == null,
            i = 0,
            length = elems.length;

        // Sets many values
        if ( key && typeof key === "object" ) {
            for ( i in key ) {
                jQuery.access( elems, fn, i, key[i], 1, emptyGet, value );
            }
            chainable = 1;

        // Sets one value
        } else if ( value !== undefined ) {
            // Optionally, function values get executed if exec is true
            exec = pass === undefined && jQuery.isFunction( value );

            if ( bulk ) {
                // Bulk operations only iterate when executing function values
                if ( exec ) {
                    exec = fn;
                    fn = function( elem, key, value ) {
                        return exec.call( jQuery( elem ), value );
                    };

                // Otherwise they run against the entire set
                } else {
                    fn.call( elems, value );
                    fn = null;
                }
            }

            if ( fn ) {
                for (; i < length; i++ ) {
                    fn( elems[i], key, exec ? value.call( elems[i], i, fn( elems[i], key ) ) : value, pass );
                }
            }

            chainable = 1;
        }

        return chainable ?
            elems :

            // Gets
            bulk ?
                fn.call( elems ) :
                length ? fn( elems[0], key ) : emptyGet;
    },

    now: function() {
        return ( new Date() ).getTime();
    },

    // Use of jQuery.browser is frowned upon.
    // More details: http://docs.jquery.com/Utilities/jQuery.browser
    uaMatch: function( ua ) {
        ua = ua.toLowerCase();

        var match = rwebkit.exec( ua ) ||
            ropera.exec( ua ) ||
            rmsie.exec( ua ) ||
            ua.indexOf("compatible") < 0 && rmozilla.exec( ua ) ||
            [];

        return { browser: match[1] || "", version: match[2] || "0" };
    },

    sub: function() {
        function jQuerySub( selector, context ) {
            return new jQuerySub.fn.init( selector, context );
        }
        jQuery.extend( true, jQuerySub, this );
        jQuerySub.superclass = this;
        jQuerySub.fn = jQuerySub.prototype = this();
        jQuerySub.fn.constructor = jQuerySub;
        jQuerySub.sub = this.sub;
        jQuerySub.fn.init = function init( selector, context ) {
            if ( context && context instanceof jQuery && !(context instanceof jQuerySub) ) {
                context = jQuerySub( context );
            }

            return jQuery.fn.init.call( this, selector, context, rootjQuerySub );
        };
        jQuerySub.fn.init.prototype = jQuerySub.fn;
        var rootjQuerySub = jQuerySub(document);
        return jQuerySub;
    },

    browser: {}
});

// Populate the class2type map
jQuery.each("Boolean Number String Function Array Date RegExp Object".split(" "), function(i, name) {
    class2type[ "[object " + name + "]" ] = name.toLowerCase();
});

browserMatch = jQuery.uaMatch( userAgent );
if ( browserMatch.browser ) {
    jQuery.browser[ browserMatch.browser ] = true;
    jQuery.browser.version = browserMatch.version;
}

// Deprecated, use jQuery.browser.webkit instead
if ( jQuery.browser.webkit ) {
    jQuery.browser.safari = true;
}

// IE doesn't match non-breaking spaces with \s
if ( rnotwhite.test( "\xA0" ) ) {
    trimLeft = /^[\s\xA0]+/;
    trimRight = /[\s\xA0]+$/;
}

// All jQuery objects should point back to these
rootjQuery = jQuery(document);

// Cleanup functions for the document ready method
if ( document.addEventListener ) {
    DOMContentLoaded = function() {
        document.removeEventListener( "DOMContentLoaded", DOMContentLoaded, false );
        jQuery.ready();
    };

} else if ( document.attachEvent ) {
    DOMContentLoaded = function() {
        // Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).
        if ( document.readyState === "complete" ) {
            document.detachEvent( "onreadystatechange", DOMContentLoaded );
            jQuery.ready();
        }
    };
}

// The DOM ready check for Internet Explorer
function doScrollCheck() {
    if ( jQuery.isReady ) {
        return;
    }

    try {
        // If IE is used, use the trick by Diego Perini
        // http://javascript.nwbox.com/IEContentLoaded/
        document.documentElement.doScroll("left");
    } catch(e) {
        setTimeout( doScrollCheck, 1 );
        return;
    }

    // and execute any waiting functions
    jQuery.ready();
}

return jQuery;

})();


// String to Object flags format cache
var flagsCache = {};

// Convert String-formatted flags into Object-formatted ones and store in cache
function createFlags( flags ) {
    var object = flagsCache[ flags ] = {},
        i, length;
    flags = flags.split( /\s+/ );
    for ( i = 0, length = flags.length; i < length; i++ ) {
        object[ flags[i] ] = true;
    }
    return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *  flags:  an optional list of space-separated flags that will change how
 *          the callback list behaves
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible flags:
 *
 *  once:           will ensure the callback list can only be fired once (like a Deferred)
 *
 *  memory:         will keep track of previous values and will call any callback added
 *                  after the list has been fired right away with the latest "memorized"
 *                  values (like a Deferred)
 *
 *  unique:         will ensure a callback can only be added once (no duplicate in the list)
 *
 *  stopOnFalse:    interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( flags ) {

    // Convert flags from String-formatted to Object-formatted
    // (we check in cache first)
    flags = flags ? ( flagsCache[ flags ] || createFlags( flags ) ) : {};

    var // Actual callback list
        list = [],
        // Stack of fire calls for repeatable lists
        stack = [],
        // Last fire value (for non-forgettable lists)
        memory,
        // Flag to know if list was already fired
        fired,
        // Flag to know if list is currently firing
        firing,
        // First callback to fire (used internally by add and fireWith)
        firingStart,
        // End of the loop when firing
        firingLength,
        // Index of currently firing callback (modified by remove if needed)
        firingIndex,
        // Add one or several callbacks to the list
        add = function( args ) {
            var i,
                length,
                elem,
                type,
                actual;
            for ( i = 0, length = args.length; i < length; i++ ) {
                elem = args[ i ];
                type = jQuery.type( elem );
                if ( type === "array" ) {
                    // Inspect recursively
                    add( elem );
                } else if ( type === "function" ) {
                    // Add if not in unique mode and callback is not in
                    if ( !flags.unique || !self.has( elem ) ) {
                        list.push( elem );
                    }
                }
            }
        },
        // Fire callbacks
        fire = function( context, args ) {
            args = args || [];
            memory = !flags.memory || [ context, args ];
            fired = true;
            firing = true;
            firingIndex = firingStart || 0;
            firingStart = 0;
            firingLength = list.length;
            for ( ; list && firingIndex < firingLength; firingIndex++ ) {
                if ( list[ firingIndex ].apply( context, args ) === false && flags.stopOnFalse ) {
                    memory = true; // Mark as halted
                    break;
                }
            }
            firing = false;
            if ( list ) {
                if ( !flags.once ) {
                    if ( stack && stack.length ) {
                        memory = stack.shift();
                        self.fireWith( memory[ 0 ], memory[ 1 ] );
                    }
                } else if ( memory === true ) {
                    self.disable();
                } else {
                    list = [];
                }
            }
        },
        // Actual Callbacks object
        self = {
            // Add a callback or a collection of callbacks to the list
            add: function() {
                if ( list ) {
                    var length = list.length;
                    add( arguments );
                    // Do we need to add the callbacks to the
                    // current firing batch?
                    if ( firing ) {
                        firingLength = list.length;
                    // With memory, if we're not firing then
                    // we should call right away, unless previous
                    // firing was halted (stopOnFalse)
                    } else if ( memory && memory !== true ) {
                        firingStart = length;
                        fire( memory[ 0 ], memory[ 1 ] );
                    }
                }
                return this;
            },
            // Remove a callback from the list
            remove: function() {
                if ( list ) {
                    var args = arguments,
                        argIndex = 0,
                        argLength = args.length;
                    for ( ; argIndex < argLength ; argIndex++ ) {
                        for ( var i = 0; i < list.length; i++ ) {
                            if ( args[ argIndex ] === list[ i ] ) {
                                // Handle firingIndex and firingLength
                                if ( firing ) {
                                    if ( i <= firingLength ) {
                                        firingLength--;
                                        if ( i <= firingIndex ) {
                                            firingIndex--;
                                        }
                                    }
                                }
                                // Remove the element
                                list.splice( i--, 1 );
                                // If we have some unicity property then
                                // we only need to do this once
                                if ( flags.unique ) {
                                    break;
                                }
                            }
                        }
                    }
                }
                return this;
            },
            // Control if a given callback is in the list
            has: function( fn ) {
                if ( list ) {
                    var i = 0,
                        length = list.length;
                    for ( ; i < length; i++ ) {
                        if ( fn === list[ i ] ) {
                            return true;
                        }
                    }
                }
                return false;
            },
            // Remove all callbacks from the list
            empty: function() {
                list = [];
                return this;
            },
            // Have the list do nothing anymore
            disable: function() {
                list = stack = memory = undefined;
                return this;
            },
            // Is it disabled?
            disabled: function() {
                return !list;
            },
            // Lock the list in its current state
            lock: function() {
                stack = undefined;
                if ( !memory || memory === true ) {
                    self.disable();
                }
                return this;
            },
            // Is it locked?
            locked: function() {
                return !stack;
            },
            // Call all callbacks with the given context and arguments
            fireWith: function( context, args ) {
                if ( stack ) {
                    if ( firing ) {
                        if ( !flags.once ) {
                            stack.push( [ context, args ] );
                        }
                    } else if ( !( flags.once && memory ) ) {
                        fire( context, args );
                    }
                }
                return this;
            },
            // Call all the callbacks with the given arguments
            fire: function() {
                self.fireWith( this, arguments );
                return this;
            },
            // To know if the callbacks have already been called at least once
            fired: function() {
                return !!fired;
            }
        };

    return self;
};




var // Static reference to slice
    sliceDeferred = [].slice;

jQuery.extend({

    Deferred: function( func ) {
        var doneList = jQuery.Callbacks( "once memory" ),
            failList = jQuery.Callbacks( "once memory" ),
            progressList = jQuery.Callbacks( "memory" ),
            state = "pending",
            lists = {
                resolve: doneList,
                reject: failList,
                notify: progressList
            },
            promise = {
                done: doneList.add,
                fail: failList.add,
                progress: progressList.add,

                state: function() {
                    return state;
                },

                // Deprecated
                isResolved: doneList.fired,
                isRejected: failList.fired,

                then: function( doneCallbacks, failCallbacks, progressCallbacks ) {
                    deferred.done( doneCallbacks ).fail( failCallbacks ).progress( progressCallbacks );
                    return this;
                },
                always: function() {
                    deferred.done.apply( deferred, arguments ).fail.apply( deferred, arguments );
                    return this;
                },
                pipe: function( fnDone, fnFail, fnProgress ) {
                    return jQuery.Deferred(function( newDefer ) {
                        jQuery.each( {
                            done: [ fnDone, "resolve" ],
                            fail: [ fnFail, "reject" ],
                            progress: [ fnProgress, "notify" ]
                        }, function( handler, data ) {
                            var fn = data[ 0 ],
                                action = data[ 1 ],
                                returned;
                            if ( jQuery.isFunction( fn ) ) {
                                deferred[ handler ](function() {
                                    returned = fn.apply( this, arguments );
                                    if ( returned && jQuery.isFunction( returned.promise ) ) {
                                        returned.promise().then( newDefer.resolve, newDefer.reject, newDefer.notify );
                                    } else {
                                        newDefer[ action + "With" ]( this === deferred ? newDefer : this, [ returned ] );
                                    }
                                });
                            } else {
                                deferred[ handler ]( newDefer[ action ] );
                            }
                        });
                    }).promise();
                },
                // Get a promise for this deferred
                // If obj is provided, the promise aspect is added to the object
                promise: function( obj ) {
                    if ( obj == null ) {
                        obj = promise;
                    } else {
                        for ( var key in promise ) {
                            obj[ key ] = promise[ key ];
                        }
                    }
                    return obj;
                }
            },
            deferred = promise.promise({}),
            key;

        for ( key in lists ) {
            deferred[ key ] = lists[ key ].fire;
            deferred[ key + "With" ] = lists[ key ].fireWith;
        }

        // Handle state
        deferred.done( function() {
            state = "resolved";
        }, failList.disable, progressList.lock ).fail( function() {
            state = "rejected";
        }, doneList.disable, progressList.lock );

        // Call given func if any
        if ( func ) {
            func.call( deferred, deferred );
        }

        // All done!
        return deferred;
    },

    // Deferred helper
    when: function( firstParam ) {
        var args = sliceDeferred.call( arguments, 0 ),
            i = 0,
            length = args.length,
            pValues = new Array( length ),
            count = length,
            pCount = length,
            deferred = length <= 1 && firstParam && jQuery.isFunction( firstParam.promise ) ?
                firstParam :
                jQuery.Deferred(),
            promise = deferred.promise();
        function resolveFunc( i ) {
            return function( value ) {
                args[ i ] = arguments.length > 1 ? sliceDeferred.call( arguments, 0 ) : value;
                if ( !( --count ) ) {
                    deferred.resolveWith( deferred, args );
                }
            };
        }
        function progressFunc( i ) {
            return function( value ) {
                pValues[ i ] = arguments.length > 1 ? sliceDeferred.call( arguments, 0 ) : value;
                deferred.notifyWith( promise, pValues );
            };
        }
        if ( length > 1 ) {
            for ( ; i < length; i++ ) {
                if ( args[ i ] && args[ i ].promise && jQuery.isFunction( args[ i ].promise ) ) {
                    args[ i ].promise().then( resolveFunc(i), deferred.reject, progressFunc(i) );
                } else {
                    --count;
                }
            }
            if ( !count ) {
                deferred.resolveWith( deferred, args );
            }
        } else if ( deferred !== firstParam ) {
            deferred.resolveWith( deferred, length ? [ firstParam ] : [] );
        }
        return promise;
    }
});




jQuery.support = {
        // IE strips leading whitespace when .innerHTML is used
        leadingWhitespace: true,

        // Make sure that tbody elements aren't automatically inserted
        // IE will insert them into empty tables
        tbody: false,

        // Make sure that link elements get serialized correctly by innerHTML
        // This requires a wrapper element in IE
        htmlSerialize: true,

        // Get the style information from getAttribute
        // (IE uses .cssText instead)
        style: true,

        // Make sure that URLs aren't manipulated
        // (IE normalizes it by default)
        hrefNormalized: true,

        // Make sure that element opacity exists
        // (IE uses filter instead)
        // Use a regex to work around a WebKit issue. See #5145
        opacity: true,

        // Verify style float existence
        // (IE uses styleFloat instead of cssFloat)
        cssFloat: true,

        // Make sure that if no value is specified for a checkbox
        // that it defaults to "on".
        // (WebKit defaults to "" instead)
        checkOn: true,

        // Make sure that a selected-by-default option has a working selected property.
        // (WebKit defaults to false instead of true, IE too, if it's in an optgroup)
        optSelected: true,

        // Test setAttribute on camelCase class. If it works, we need attrFixes when doing get/setAttribute (ie6/7)
        getSetAttribute: true,

        // Tests for enctype support on a form(#6743)
        enctype: true,

        // Makes sure cloning an html5 element does not cause problems
        // Where outerHTML is undefined, this still works
        html5Clone: true,

        // Will be defined later
        submitBubbles: true,
        changeBubbles: true,
        focusinBubbles: false,
        deleteExpando: true,
        noCloneEvent: true,
        inlineBlockNeedsLayout: false,
        shrinkWrapBlocks: false,
        reliableMarginRight: true,
        pixelMargin: true
    };



var rbrace = /^(?:\{.*\}|\[.*\])$/,
    rmultiDash = /([A-Z])/g;

jQuery.extend({
    cache: {},

    // Please use with caution
    uuid: 0,

    // Unique for each copy of jQuery on the page
    // Non-digits removed to match rinlinejQuery
    expando: "jQuery" + ( jQuery.fn.jquery + Math.random() ).replace( /\D/g, "" ),

    // The following elements throw uncatchable exceptions if you
    // attempt to add expando properties to them.
    noData: {
        "embed": true,
        // Ban all objects except for Flash (which handle expandos)
        "object": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",
        "applet": true
    },

    hasData: function( elem ) {
        elem = elem.nodeType ? jQuery.cache[ elem[jQuery.expando] ] : elem[ jQuery.expando ];
        return !!elem && !isEmptyDataObject( elem );
    },

    data: function( elem, name, data, pvt /* Internal Use Only */ ) {
        if ( !jQuery.acceptData( elem ) ) {
            return;
        }

        var privateCache, thisCache, ret,
            internalKey = jQuery.expando,
            getByName = typeof name === "string",

            // We have to handle DOM nodes and JS objects differently because IE6-7
            // can't GC object references properly across the DOM-JS boundary
            isNode = elem.nodeType,

            // Only DOM nodes need the global jQuery cache; JS object data is
            // attached directly to the object so GC can occur automatically
            cache = isNode ? jQuery.cache : elem,

            // Only defining an ID for JS objects if its cache already exists allows
            // the code to shortcut on the same path as a DOM node with no cache
            id = isNode ? elem[ internalKey ] : elem[ internalKey ] && internalKey,
            isEvents = name === "events";

        // Avoid doing any more work than we need to when trying to get data on an
        // object that has no data at all
        if ( (!id || !cache[id] || (!isEvents && !pvt && !cache[id].data)) && getByName && data === undefined ) {
            return;
        }

        if ( !id ) {
            // Only DOM nodes need a new unique ID for each element since their data
            // ends up in the global cache
            if ( isNode ) {
                elem[ internalKey ] = id = ++jQuery.uuid;
            } else {
                id = internalKey;
            }
        }

        if ( !cache[ id ] ) {
            cache[ id ] = {};

            // Avoids exposing jQuery metadata on plain JS objects when the object
            // is serialized using JSON.stringify
            if ( !isNode ) {
                cache[ id ].toJSON = jQuery.noop;
            }
        }

        // An object can be passed to jQuery.data instead of a key/value pair; this gets
        // shallow copied over onto the existing cache
        if ( typeof name === "object" || typeof name === "function" ) {
            if ( pvt ) {
                cache[ id ] = jQuery.extend( cache[ id ], name );
            } else {
                cache[ id ].data = jQuery.extend( cache[ id ].data, name );
            }
        }

        privateCache = thisCache = cache[ id ];

        // jQuery data() is stored in a separate object inside the object's internal data
        // cache in order to avoid key collisions between internal data and user-defined
        // data.
        if ( !pvt ) {
            if ( !thisCache.data ) {
                thisCache.data = {};
            }

            thisCache = thisCache.data;
        }

        if ( data !== undefined ) {
            thisCache[ jQuery.camelCase( name ) ] = data;
        }

        // Users should not attempt to inspect the internal events object using jQuery.data,
        // it is undocumented and subject to change. But does anyone listen? No.
        if ( isEvents && !thisCache[ name ] ) {
            return privateCache.events;
        }

        // Check for both converted-to-camel and non-converted data property names
        // If a data property was specified
        if ( getByName ) {

            // First Try to find as-is property data
            ret = thisCache[ name ];

            // Test for null|undefined property data
            if ( ret == null ) {

                // Try to find the camelCased property
                ret = thisCache[ jQuery.camelCase( name ) ];
            }
        } else {
            ret = thisCache;
        }

        return ret;
    },

    removeData: function( elem, name, pvt /* Internal Use Only */ ) {
        if ( !jQuery.acceptData( elem ) ) {
            return;
        }

        var thisCache, i, l,

            // Reference to internal data cache key
            internalKey = jQuery.expando,

            isNode = elem.nodeType,

            // See jQuery.data for more information
            cache = isNode ? jQuery.cache : elem,

            // See jQuery.data for more information
            id = isNode ? elem[ internalKey ] : internalKey;

        // If there is already no cache entry for this object, there is no
        // purpose in continuing
        if ( !cache[ id ] ) {
            return;
        }

        if ( name ) {

            thisCache = pvt ? cache[ id ] : cache[ id ].data;

            if ( thisCache ) {

                // Support array or space separated string names for data keys
                if ( !jQuery.isArray( name ) ) {

                    // try the string as a key before any manipulation
                    if ( name in thisCache ) {
                        name = [ name ];
                    } else {

                        // split the camel cased version by spaces unless a key with the spaces exists
                        name = jQuery.camelCase( name );
                        if ( name in thisCache ) {
                            name = [ name ];
                        } else {
                            name = name.split( " " );
                        }
                    }
                }

                for ( i = 0, l = name.length; i < l; i++ ) {
                    delete thisCache[ name[i] ];
                }

                // If there is no data left in the cache, we want to continue
                // and let the cache object itself get destroyed
                if ( !( pvt ? isEmptyDataObject : jQuery.isEmptyObject )( thisCache ) ) {
                    return;
                }
            }
        }

        // See jQuery.data for more information
        if ( !pvt ) {
            delete cache[ id ].data;

            // Don't destroy the parent cache unless the internal data object
            // had been the only thing left in it
            if ( !isEmptyDataObject(cache[ id ]) ) {
                return;
            }
        }

        // Browsers that fail expando deletion also refuse to delete expandos on
        // the window, but it will allow it on all other JS objects; other browsers
        // don't care
        // Ensure that `cache` is not a window object #10080
        if ( jQuery.support.deleteExpando || !cache.setInterval ) {
            delete cache[ id ];
        } else {
            cache[ id ] = null;
        }

        // We destroyed the cache and need to eliminate the expando on the node to avoid
        // false lookups in the cache for entries that no longer exist
        if ( isNode ) {
            // IE does not allow us to delete expando properties from nodes,
            // nor does it have a removeAttribute function on Document nodes;
            // we must handle all of these cases
            if ( jQuery.support.deleteExpando ) {
                delete elem[ internalKey ];
            } else if ( elem.removeAttribute ) {
                elem.removeAttribute( internalKey );
            } else {
                elem[ internalKey ] = null;
            }
        }
    },

    // For internal use only.
    _data: function( elem, name, data ) {
        return jQuery.data( elem, name, data, true );
    },

    // A method for determining if a DOM node can handle the data expando
    acceptData: function( elem ) {
        if ( elem.nodeName ) {
            var match = jQuery.noData[ elem.nodeName.toLowerCase() ];

            if ( match ) {
                return !(match === true || elem.getAttribute("classid") !== match);
            }
        }

        return true;
    }
});

jQuery.fn.extend({
    data: function( key, value ) {
        var parts, part, attr, name, l,
            elem = this[0],
            i = 0,
            data = null;

        // Gets all values
        if ( key === undefined ) {
            if ( this.length ) {
                data = jQuery.data( elem );

                if ( elem.nodeType === 1 && !jQuery._data( elem, "parsedAttrs" ) ) {
                    attr = elem.attributes;
                    for ( l = attr.length; i < l; i++ ) {
                        name = attr[i].name;

                        if ( name.indexOf( "data-" ) === 0 ) {
                            name = jQuery.camelCase( name.substring(5) );

                            dataAttr( elem, name, data[ name ] );
                        }
                    }
                    jQuery._data( elem, "parsedAttrs", true );
                }
            }

            return data;
        }

        // Sets multiple values
        if ( typeof key === "object" ) {
            return this.each(function() {
                jQuery.data( this, key );
            });
        }

        parts = key.split( ".", 2 );
        parts[1] = parts[1] ? "." + parts[1] : "";
        part = parts[1] + "!";

        return jQuery.access( this, function( value ) {

            if ( value === undefined ) {
                data = this.triggerHandler( "getData" + part, [ parts[0] ] );

                // Try to fetch any internally stored data first
                if ( data === undefined && elem ) {
                    data = jQuery.data( elem, key );
                    data = dataAttr( elem, key, data );
                }

                return data === undefined && parts[1] ?
                    this.data( parts[0] ) :
                    data;
            }

            parts[1] = value;
            this.each(function() {
                var self = jQuery( this );

                self.triggerHandler( "setData" + part, parts );
                jQuery.data( this, key, value );
                self.triggerHandler( "changeData" + part, parts );
            });
        }, null, value, arguments.length > 1, null, false );
    },

    removeData: function( key ) {
        return this.each(function() {
            jQuery.removeData( this, key );
        });
    }
});

function dataAttr( elem, key, data ) {
    // If nothing was found internally, try to fetch any
    // data from the HTML5 data-* attribute
    if ( data === undefined && elem.nodeType === 1 ) {

        var name = "data-" + key.replace( rmultiDash, "-$1" ).toLowerCase();

        data = elem.getAttribute( name );

        if ( typeof data === "string" ) {
            try {
                data = data === "true" ? true :
                data === "false" ? false :
                data === "null" ? null :
                jQuery.isNumeric( data ) ? +data :
                    rbrace.test( data ) ? jQuery.parseJSON( data ) :
                    data;
            } catch( e ) {}

            // Make sure we set the data so it isn't changed later
            jQuery.data( elem, key, data );

        } else {
            data = undefined;
        }
    }

    return data;
}

// checks a cache object for emptiness
function isEmptyDataObject( obj ) {
    for ( var name in obj ) {

        // if the public data object is empty, the private is still empty
        if ( name === "data" && jQuery.isEmptyObject( obj[name] ) ) {
            continue;
        }
        if ( name !== "toJSON" ) {
            return false;
        }
    }

    return true;
}




function handleQueueMarkDefer( elem, type, src ) {
    var deferDataKey = type + "defer",
        queueDataKey = type + "queue",
        markDataKey = type + "mark",
        defer = jQuery._data( elem, deferDataKey );
    if ( defer &&
        ( src === "queue" || !jQuery._data(elem, queueDataKey) ) &&
        ( src === "mark" || !jQuery._data(elem, markDataKey) ) ) {
        // Give room for hard-coded callbacks to fire first
        // and eventually mark/queue something else on the element
        setTimeout( function() {
            if ( !jQuery._data( elem, queueDataKey ) &&
                !jQuery._data( elem, markDataKey ) ) {
                jQuery.removeData( elem, deferDataKey, true );
                defer.fire();
            }
        }, 0 );
    }
}

jQuery.extend({

    _mark: function( elem, type ) {
        if ( elem ) {
            type = ( type || "fx" ) + "mark";
            jQuery._data( elem, type, (jQuery._data( elem, type ) || 0) + 1 );
        }
    },

    _unmark: function( force, elem, type ) {
        if ( force !== true ) {
            type = elem;
            elem = force;
            force = false;
        }
        if ( elem ) {
            type = type || "fx";
            var key = type + "mark",
                count = force ? 0 : ( (jQuery._data( elem, key ) || 1) - 1 );
            if ( count ) {
                jQuery._data( elem, key, count );
            } else {
                jQuery.removeData( elem, key, true );
                handleQueueMarkDefer( elem, type, "mark" );
            }
        }
    },

    queue: function( elem, type, data ) {
        var q;
        if ( elem ) {
            type = ( type || "fx" ) + "queue";
            q = jQuery._data( elem, type );

            // Speed up dequeue by getting out quickly if this is just a lookup
            if ( data ) {
                if ( !q || jQuery.isArray(data) ) {
                    q = jQuery._data( elem, type, jQuery.makeArray(data) );
                } else {
                    q.push( data );
                }
            }
            return q || [];
        }
    },

    dequeue: function( elem, type ) {
        type = type || "fx";

        var queue = jQuery.queue( elem, type ),
            fn = queue.shift(),
            hooks = {};

        // If the fx queue is dequeued, always remove the progress sentinel
        if ( fn === "inprogress" ) {
            fn = queue.shift();
        }

        if ( fn ) {
            // Add a progress sentinel to prevent the fx queue from being
            // automatically dequeued
            if ( type === "fx" ) {
                queue.unshift( "inprogress" );
            }

            jQuery._data( elem, type + ".run", hooks );
            fn.call( elem, function() {
                jQuery.dequeue( elem, type );
            }, hooks );
        }

        if ( !queue.length ) {
            jQuery.removeData( elem, type + "queue " + type + ".run", true );
            handleQueueMarkDefer( elem, type, "queue" );
        }
    }
});

jQuery.fn.extend({
    queue: function( type, data ) {
        var setter = 2;

        if ( typeof type !== "string" ) {
            data = type;
            type = "fx";
            setter--;
        }

        if ( arguments.length < setter ) {
            return jQuery.queue( this[0], type );
        }

        return data === undefined ?
            this :
            this.each(function() {
                var queue = jQuery.queue( this, type, data );

                if ( type === "fx" && queue[0] !== "inprogress" ) {
                    jQuery.dequeue( this, type );
                }
            });
    },
    dequeue: function( type ) {
        return this.each(function() {
            jQuery.dequeue( this, type );
        });
    },
    // Based off of the plugin by Clint Helfers, with permission.
    // http://blindsignals.com/index.php/2009/07/jquery-delay/
    delay: function( time, type ) {
        time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
        type = type || "fx";

        return this.queue( type, function( next, hooks ) {
            var timeout = setTimeout( next, time );
            hooks.stop = function() {
                clearTimeout( timeout );
            };
        });
    },
    clearQueue: function( type ) {
        return this.queue( type || "fx", [] );
    },
    // Get a promise resolved when queues of a certain type
    // are emptied (fx is the type by default)
    promise: function( type, object ) {
        if ( typeof type !== "string" ) {
            object = type;
            type = undefined;
        }
        type = type || "fx";
        var defer = jQuery.Deferred(),
            elements = this,
            i = elements.length,
            count = 1,
            deferDataKey = type + "defer",
            queueDataKey = type + "queue",
            markDataKey = type + "mark",
            tmp;
        function resolve() {
            if ( !( --count ) ) {
                defer.resolveWith( elements, [ elements ] );
            }
        }
        while( i-- ) {
            if (( tmp = jQuery.data( elements[ i ], deferDataKey, undefined, true ) ||
                    ( jQuery.data( elements[ i ], queueDataKey, undefined, true ) ||
                        jQuery.data( elements[ i ], markDataKey, undefined, true ) ) &&
                    jQuery.data( elements[ i ], deferDataKey, jQuery.Callbacks( "once memory" ), true ) )) {
                count++;
                tmp.add( resolve );
            }
        }
        resolve();
        return defer.promise( object );
    }
});




var rclass = /[\n\t\r]/g,
    rspace = /\s+/,
    rreturn = /\r/g,
    rtype = /^(?:button|input)$/i,
    rfocusable = /^(?:button|input|object|select|textarea)$/i,
    rclickable = /^a(?:rea)?$/i,
    rboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,
    getSetAttribute = jQuery.support.getSetAttribute,
    nodeHook, boolHook, fixSpecified;

jQuery.fn.extend({
    attr: function( name, value ) {
        return jQuery.access( this, jQuery.attr, name, value, arguments.length > 1 );
    },

    removeAttr: function( name ) {
        return this.each(function() {
            jQuery.removeAttr( this, name );
        });
    },

    prop: function( name, value ) {
        return jQuery.access( this, jQuery.prop, name, value, arguments.length > 1 );
    },

    removeProp: function( name ) {
        name = jQuery.propFix[ name ] || name;
        return this.each(function() {
            // try/catch handles cases where IE balks (such as removing a property on window)
            try {
                this[ name ] = undefined;
                delete this[ name ];
            } catch( e ) {}
        });
    },

    addClass: function( value ) {
        var classNames, i, l, elem,
            setClass, c, cl;

        if ( jQuery.isFunction( value ) ) {
            return this.each(function( j ) {
                jQuery( this ).addClass( value.call(this, j, this.className.baseVal) );
            });
        }

        if ( value && typeof value === "string" ) {
            classNames = value.split( rspace );

            for ( i = 0, l = this.length; i < l; i++ ) {
                elem = this[ i ];

                if ( elem.nodeType === 1 ) {
                    if ( !elem.className.baseVal && classNames.length === 1 ) {
                        elem.className.baseVal = value;

                    } else {
                        setClass = " " + elem.className.baseVal + " ";

                        for ( c = 0, cl = classNames.length; c < cl; c++ ) {
                            if ( !~setClass.indexOf( " " + classNames[ c ] + " " ) ) {
                                setClass += classNames[ c ] + " ";
                            }
                        }
                        elem.className.baseVal = jQuery.trim( setClass );
                    }
                }
            }
        }

        return this;
    },

    removeClass: function( value ) {
        var classNames, i, l, elem, className, c, cl;

        if ( jQuery.isFunction( value ) ) {
            return this.each(function( j ) {
                jQuery( this ).removeClass( value.call(this, j, this.className.baseVal) );
            });
        }

        if ( (value && typeof value === "string") || value === undefined ) {
            classNames = ( value || "" ).split( rspace );

            for ( i = 0, l = this.length; i < l; i++ ) {
                elem = this[ i ];

                if ( elem.nodeType === 1 && elem.className.baseVal ) {
                    if ( value ) {
                        className = (" " + elem.className.baseVal + " ").replace( rclass, " " );
                        for ( c = 0, cl = classNames.length; c < cl; c++ ) {
                            className = className.replace(" " + classNames[ c ] + " ", " ");
                        }
                        elem.className.baseVal = jQuery.trim( className );

                    } else {
                        elem.className.baseVal = "";
                    }
                }
            }
        }

        return this;
    },

    toggleClass: function( value, stateVal ) {
        var type = typeof value,
            isBool = typeof stateVal === "boolean";

        if ( jQuery.isFunction( value ) ) {
            return this.each(function( i ) {
                jQuery( this ).toggleClass( value.call(this, i, this.className.baseVal, stateVal), stateVal );
            });
        }

        return this.each(function() {
            if ( type === "string" ) {
                // toggle individual class names
                var className,
                    i = 0,
                    self = jQuery( this ),
                    state = stateVal,
                    classNames = value.split( rspace );

                while ( (className = classNames[ i++ ]) ) {
                    // check each className given, space seperated list
                    state = isBool ? state : !self.hasClass( className );
                    self[ state ? "addClass" : "removeClass" ]( className );
                }

            } else if ( type === "undefined" || type === "boolean" ) {
                if ( this.className.baseVal ) {
                    // store className if set
                    jQuery._data( this, "__className__", this.className.baseVal );
                }

                // toggle whole className
                this.className.baseVal = this.className.baseVal || value === false ? "" : jQuery._data( this, "__className__" ) || "";
            }
        });
    },

    hasClass: function( selector ) {
        var className = " " + selector + " ",
            i = 0,
            l = this.length;
        for ( ; i < l; i++ ) {
            if ( this[i].nodeType === 1 && (" " + this[i].className.baseVal + " ").replace(rclass, " ").indexOf( className ) > -1 ) {
                return true;
            }
        }

        return false;
    },

    val: function( value ) {
        var hooks, ret, isFunction,
            elem = this[0];

        if ( !arguments.length ) {
            if ( elem ) {
                hooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];

                if ( hooks && "get" in hooks && (ret = hooks.get( elem, "value" )) !== undefined ) {
                    return ret;
                }

                ret = elem.value;

                return typeof ret === "string" ?
                    // handle most common string cases
                    ret.replace(rreturn, "") :
                    // handle cases where value is null/undef or number
                    ret == null ? "" : ret;
            }

            return;
        }

        isFunction = jQuery.isFunction( value );

        return this.each(function( i ) {
            var self = jQuery(this), val;

            if ( this.nodeType !== 1 ) {
                return;
            }

            if ( isFunction ) {
                val = value.call( this, i, self.val() );
            } else {
                val = value;
            }

            // Treat null/undefined as ""; convert numbers to string
            if ( val == null ) {
                val = "";
            } else if ( typeof val === "number" ) {
                val += "";
            } else if ( jQuery.isArray( val ) ) {
                val = jQuery.map(val, function ( value ) {
                    return value == null ? "" : value + "";
                });
            }

            hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

            // If set returns undefined, fall back to normal setting
            if ( !hooks || !("set" in hooks) || hooks.set( this, val, "value" ) === undefined ) {
                this.value = val;
            }
        });
    }
});

jQuery.extend({
    valHooks: {
        option: {
            get: function( elem ) {
                // attributes.value is undefined in Blackberry 4.7 but
                // uses .value. See #6932
                var val = elem.attributes.value;
                return !val || val.specified ? elem.value : elem.text;
            }
        },
        select: {
            get: function( elem ) {
                var value, i, max, option,
                    index = elem.selectedIndex,
                    values = [],
                    options = elem.options,
                    one = elem.type === "select-one";

                // Nothing was selected
                if ( index < 0 ) {
                    return null;
                }

                // Loop through all the selected options
                i = one ? index : 0;
                max = one ? index + 1 : options.length;
                for ( ; i < max; i++ ) {
                    option = options[ i ];

                    // Don't return options that are disabled or in a disabled optgroup
                    if ( option.selected && (jQuery.support.optDisabled ? !option.disabled : option.getAttribute("disabled") === null) &&
                            (!option.parentNode.disabled || !jQuery.nodeName( option.parentNode, "optgroup" )) ) {

                        // Get the specific value for the option
                        value = jQuery( option ).val();

                        // We don't need an array for one selects
                        if ( one ) {
                            return value;
                        }

                        // Multi-Selects return an array
                        values.push( value );
                    }
                }

                // Fixes Bug #2551 -- select.val() broken in IE after form.reset()
                if ( one && !values.length && options.length ) {
                    return jQuery( options[ index ] ).val();
                }

                return values;
            },

            set: function( elem, value ) {
                var values = jQuery.makeArray( value );

                jQuery(elem).find("option").each(function() {
                    this.selected = jQuery.inArray( jQuery(this).val(), values ) >= 0;
                });

                if ( !values.length ) {
                    elem.selectedIndex = -1;
                }
                return values;
            }
        }
    },

    attrFn: {
        val: true,
        css: true,
        html: true,
        text: true,
        data: true,
        width: true,
        height: true,
        offset: true
    },

    attr: function( elem, name, value, pass ) {
        var ret, hooks, notxml,
            nType = elem.nodeType;

        // don't get/set attributes on text, comment and attribute nodes
        if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
            return;
        }

        if ( pass && name in jQuery.attrFn ) {
            return jQuery( elem )[ name ]( value );
        }

        // Fallback to prop when attributes are not supported
        if ( typeof elem.getAttribute === "undefined" ) {
            return jQuery.prop( elem, name, value );
        }

        notxml = nType !== 1 || !jQuery.isXMLDoc( elem );

        // All attributes are lowercase
        // Grab necessary hook if one is defined
        if ( notxml ) {
            name = name.toLowerCase();
            hooks = jQuery.attrHooks[ name ] || ( rboolean.test( name ) ? boolHook : nodeHook );
        }

        if ( value !== undefined ) {

            if ( value === null ) {
                jQuery.removeAttr( elem, name );
                return;

            } else if ( hooks && "set" in hooks && notxml && (ret = hooks.set( elem, value, name )) !== undefined ) {
                return ret;

            } else {
                if (name == 'href') {
                    elem.setAttributeNS( 'http://www.w3.org/1999/xlink', name, "" + value );
                } else {
                    elem.setAttribute( name, "" + value );
                }
                return value;
            }

        } else if ( hooks && "get" in hooks && notxml && (ret = hooks.get( elem, name )) !== null ) {
            return ret;

        } else {

            ret = elem.getAttribute( name );

            // Non-existent attributes return null, we normalize to undefined
            return ret === null ?
                undefined :
                ret;
        }
    },

    removeAttr: function( elem, value ) {
        var propName, attrNames, name, l, isBool,
            i = 0;

        if ( value && elem.nodeType === 1 ) {
            attrNames = value.toLowerCase().split( rspace );
            l = attrNames.length;

            for ( ; i < l; i++ ) {
                name = attrNames[ i ];

                if ( name ) {
                    propName = jQuery.propFix[ name ] || name;
                    isBool = rboolean.test( name );

                    // See #9699 for explanation of this approach (setting first, then removal)
                    // Do not do this for boolean attributes (see #10870)
                    if ( !isBool ) {
                        jQuery.attr( elem, name, "" );
                    }
                    elem.removeAttribute( getSetAttribute ? name : propName );

                    // Set corresponding property to false for boolean attributes
                    if ( isBool && propName in elem ) {
                        elem[ propName ] = false;
                    }
                }
            }
        }
    },

    attrHooks: {
        type: {
            set: function( elem, value ) {
                // We can't allow the type property to be changed (since it causes problems in IE)
                if ( rtype.test( elem.nodeName ) && elem.parentNode ) {
                    jQuery.error( "type property can't be changed" );
                } else if ( !jQuery.support.radioValue && value === "radio" && jQuery.nodeName(elem, "input") ) {
                    // Setting the type on a radio button after the value resets the value in IE6-9
                    // Reset value to it's default in case type is set after value
                    // This is for element creation
                    var val = elem.value;
                    elem.setAttribute( "type", value );
                    if ( val ) {
                        elem.value = val;
                    }
                    return value;
                }
            }
        },
        // Use the value property for back compat
        // Use the nodeHook for button elements in IE6/7 (#1954)
        value: {
            get: function( elem, name ) {
                if ( nodeHook && jQuery.nodeName( elem, "button" ) ) {
                    return nodeHook.get( elem, name );
                }
                return name in elem ?
                    elem.value :
                    null;
            },
            set: function( elem, value, name ) {
                if ( nodeHook && jQuery.nodeName( elem, "button" ) ) {
                    return nodeHook.set( elem, value, name );
                }
                // Does not return so that setAttribute is also used
                elem.value = value;
            }
        }
    },

    propFix: {
        tabindex: "tabIndex",
        readonly: "readOnly",
        "for": "htmlFor",
        "class": "className",
        maxlength: "maxLength",
        cellspacing: "cellSpacing",
        cellpadding: "cellPadding",
        rowspan: "rowSpan",
        colspan: "colSpan",
        usemap: "useMap",
        frameborder: "frameBorder",
        contenteditable: "contentEditable"
    },

    prop: function( elem, name, value ) {
        var ret, hooks, notxml,
            nType = elem.nodeType;

        // don't get/set properties on text, comment and attribute nodes
        if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
            return;
        }

        notxml = nType !== 1 || !jQuery.isXMLDoc( elem );

        if ( notxml ) {
            // Fix name and attach hooks
            name = jQuery.propFix[ name ] || name;
            hooks = jQuery.propHooks[ name ];
        }

        if ( value !== undefined ) {
            if ( hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {
                return ret;

            } else {
                return ( elem[ name ] = value );
            }

        } else {
            if ( hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ) {
                return ret;

            } else {
                return elem[ name ];
            }
        }
    },

    propHooks: {
        tabIndex: {
            get: function( elem ) {
                // elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set
                // http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
                var attributeNode = elem.getAttributeNode("tabindex");

                return attributeNode && attributeNode.specified ?
                    parseInt( attributeNode.value, 10 ) :
                    rfocusable.test( elem.nodeName ) || rclickable.test( elem.nodeName ) && elem.href ?
                        0 :
                        undefined;
            }
        }
    }
});

// Add the tabIndex propHook to attrHooks for back-compat (different case is intentional)
jQuery.attrHooks.tabindex = jQuery.propHooks.tabIndex;

// Hook for boolean attributes
boolHook = {
    get: function( elem, name ) {
        // Align boolean attributes with corresponding properties
        // Fall back to attribute presence where some booleans are not supported
        var attrNode,
            property = jQuery.prop( elem, name );
        return property === true || typeof property !== "boolean" && ( attrNode = elem.getAttributeNode(name) ) && attrNode.nodeValue !== false ?
            name.toLowerCase() :
            undefined;
    },
    set: function( elem, value, name ) {
        var propName;
        if ( value === false ) {
            // Remove boolean attributes when set to false
            jQuery.removeAttr( elem, name );
        } else {
            // value is true since we know at this point it's type boolean and not false
            // Set boolean attributes to the same name and set the DOM property
            propName = jQuery.propFix[ name ] || name;
            if ( propName in elem ) {
                // Only set the IDL specifically if it already exists on the element
                elem[ propName ] = true;
            }

            elem.setAttribute( name, name.toLowerCase() );
        }
        return name;
    }
};

// IE6/7 do not support getting/setting some attributes with get/setAttribute
if ( !getSetAttribute ) {

    fixSpecified = {
        name: true,
        id: true,
        coords: true
    };

    // Use this for any attribute in IE6/7
    // This fixes almost every IE6/7 issue
    nodeHook = jQuery.valHooks.button = {
        get: function( elem, name ) {
            var ret;
            ret = elem.getAttributeNode( name );
            return ret && ( fixSpecified[ name ] ? ret.nodeValue !== "" : ret.specified ) ?
                ret.nodeValue :
                undefined;
        },
        set: function( elem, value, name ) {
            // Set the existing or create a new attribute node
            var ret = elem.getAttributeNode( name );
            if ( !ret ) {
                ret = document.createAttribute( name );
                elem.setAttributeNode( ret );
            }
            return ( ret.nodeValue = value + "" );
        }
    };

    // Apply the nodeHook to tabindex
    jQuery.attrHooks.tabindex.set = nodeHook.set;

    // Set width and height to auto instead of 0 on empty string( Bug #8150 )
    // This is for removals
    jQuery.each([ "width", "height" ], function( i, name ) {
        jQuery.attrHooks[ name ] = jQuery.extend( jQuery.attrHooks[ name ], {
            set: function( elem, value ) {
                if ( value === "" ) {
                    elem.setAttribute( name, "auto" );
                    return value;
                }
            }
        });
    });

    // Set contenteditable to false on removals(#10429)
    // Setting to empty string throws an error as an invalid value
    jQuery.attrHooks.contenteditable = {
        get: nodeHook.get,
        set: function( elem, value, name ) {
            if ( value === "" ) {
                value = "false";
            }
            nodeHook.set( elem, value, name );
        }
    };
}


// Some attributes require a special call on IE
if ( !jQuery.support.hrefNormalized ) {
    jQuery.each([ "href", "src", "width", "height" ], function( i, name ) {
        jQuery.attrHooks[ name ] = jQuery.extend( jQuery.attrHooks[ name ], {
            get: function( elem ) {
                var ret = elem.getAttribute( name, 2 );
                return ret === null ? undefined : ret;
            }
        });
    });
}

if ( !jQuery.support.style ) {
    jQuery.attrHooks.style = {
        get: function( elem ) {
            // Return undefined in the case of empty string
            // Normalize to lowercase since IE uppercases css property names
            return elem.style.cssText.toLowerCase() || undefined;
        },
        set: function( elem, value ) {
            return ( elem.style.cssText = "" + value );
        }
    };
}

// Safari mis-reports the default selected property of an option
// Accessing the parent's selectedIndex property fixes it
if ( !jQuery.support.optSelected ) {
    jQuery.propHooks.selected = jQuery.extend( jQuery.propHooks.selected, {
        get: function( elem ) {
            var parent = elem.parentNode;

            if ( parent ) {
                parent.selectedIndex;

                // Make sure that it also works with optgroups, see #5701
                if ( parent.parentNode ) {
                    parent.parentNode.selectedIndex;
                }
            }
            return null;
        }
    });
}

// IE6/7 call enctype encoding
if ( !jQuery.support.enctype ) {
    jQuery.propFix.enctype = "encoding";
}

// Radios and checkboxes getter/setter
if ( !jQuery.support.checkOn ) {
    jQuery.each([ "radio", "checkbox" ], function() {
        jQuery.valHooks[ this ] = {
            get: function( elem ) {
                // Handle the case where in Webkit "" is returned instead of "on" if a value isn't specified
                return elem.getAttribute("value") === null ? "on" : elem.value;
            }
        };
    });
}
jQuery.each([ "radio", "checkbox" ], function() {
    jQuery.valHooks[ this ] = jQuery.extend( jQuery.valHooks[ this ], {
        set: function( elem, value ) {
            if ( jQuery.isArray( value ) ) {
                return ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );
            }
        }
    });
});




var rformElems = /^(?:textarea|input|select)$/i,
    rtypenamespace = /^([^\.]*)?(?:\.(.+))?$/,
    rhoverHack = /(?:^|\s)hover(\.\S+)?\b/,
    rkeyEvent = /^key/,
    rmouseEvent = /^(?:mouse|contextmenu)|click/,
    rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
    rquickIs = /^(\w*)(?:#([\w\-]+))?(?:\.([\w\-]+))?$/,
    quickParse = function( selector ) {
        var quick = rquickIs.exec( selector );
        if ( quick ) {
            //   0  1    2   3
            // [ _, tag, id, class ]
            quick[1] = ( quick[1] || "" ).toLowerCase();
            quick[3] = quick[3] && new RegExp( "(?:^|\\s)" + quick[3] + "(?:\\s|$)" );
        }
        return quick;
    },
    quickIs = function( elem, m ) {
        var attrs = elem.attributes || {};
        return (
            (!m[1] || elem.nodeName.toLowerCase() === m[1]) &&
            (!m[2] || (attrs.id || {}).value === m[2]) &&
            (!m[3] || m[3].test( (attrs[ "class" ] || {}).value ))
        );
    },
    hoverHack = function( events ) {
        return jQuery.event.special.hover ? events : events.replace( rhoverHack, "mouseenter$1 mouseleave$1" );
    };

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

    add: function( elem, types, handler, data, selector ) {

        var elemData, eventHandle, events,
            t, tns, type, namespaces, handleObj,
            handleObjIn, quick, handlers, special;

        // Don't attach events to noData or text/comment nodes (allow plain objects tho)
        if ( elem.nodeType === 3 || elem.nodeType === 8 || !types || !handler || !(elemData = jQuery._data( elem )) ) {
            return;
        }

        // Caller can pass in an object of custom data in lieu of the handler
        if ( handler.handler ) {
            handleObjIn = handler;
            handler = handleObjIn.handler;
            selector = handleObjIn.selector;
        }

        // Make sure that the handler has a unique ID, used to find/remove it later
        if ( !handler.guid ) {
            handler.guid = jQuery.guid++;
        }

        // Init the element's event structure and main handler, if this is the first
        events = elemData.events;
        if ( !events ) {
            elemData.events = events = {};
        }
        eventHandle = elemData.handle;
        if ( !eventHandle ) {
            elemData.handle = eventHandle = function( e ) {
                // Discard the second event of a jQuery.event.trigger() and
                // when an event is called after a page has unloaded
                return typeof jQuery !== "undefined" && (!e || jQuery.event.triggered !== e.type) ?
                    jQuery.event.dispatch.apply( eventHandle.elem, arguments ) :
                    undefined;
            };
            // Add elem as a property of the handle fn to prevent a memory leak with IE non-native events
            eventHandle.elem = elem;
        }

        // Handle multiple events separated by a space
        // jQuery(...).bind("mouseover mouseout", fn);
        types = jQuery.trim( hoverHack(types) ).split( " " );
        for ( t = 0; t < types.length; t++ ) {

            tns = rtypenamespace.exec( types[t] ) || [];
            type = tns[1];
            namespaces = ( tns[2] || "" ).split( "." ).sort();

            // If event changes its type, use the special event handlers for the changed type
            special = jQuery.event.special[ type ] || {};

            // If selector defined, determine special event api type, otherwise given type
            type = ( selector ? special.delegateType : special.bindType ) || type;

            // Update special based on newly reset type
            special = jQuery.event.special[ type ] || {};

            // handleObj is passed to all event handlers
            handleObj = jQuery.extend({
                type: type,
                origType: tns[1],
                data: data,
                handler: handler,
                guid: handler.guid,
                selector: selector,
                quick: selector && quickParse( selector ),
                namespace: namespaces.join(".")
            }, handleObjIn );

            // Init the event handler queue if we're the first
            handlers = events[ type ];
            if ( !handlers ) {
                handlers = events[ type ] = [];
                handlers.delegateCount = 0;

                // Only use addEventListener/attachEvent if the special events handler returns false
                if ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {
                    // Bind the global event handler to the element
                    if ( elem.addEventListener ) {
                        elem.addEventListener( type, eventHandle, false );

                    } else if ( elem.attachEvent ) {
                        elem.attachEvent( "on" + type, eventHandle );
                    }
                }
            }

            if ( special.add ) {
                special.add.call( elem, handleObj );

                if ( !handleObj.handler.guid ) {
                    handleObj.handler.guid = handler.guid;
                }
            }

            // Add to the element's handler list, delegates in front
            if ( selector ) {
                handlers.splice( handlers.delegateCount++, 0, handleObj );
            } else {
                handlers.push( handleObj );
            }

            // Keep track of which events have ever been used, for event optimization
            jQuery.event.global[ type ] = true;
        }

        // Nullify elem to prevent memory leaks in IE
        elem = null;
    },

    global: {},

    // Detach an event or set of events from an element
    remove: function( elem, types, handler, selector, mappedTypes ) {

        var elemData = jQuery.hasData( elem ) && jQuery._data( elem ),
            t, tns, type, origType, namespaces, origCount,
            j, events, special, handle, eventType, handleObj;

        if ( !elemData || !(events = elemData.events) ) {
            return;
        }

        // Once for each type.namespace in types; type may be omitted
        types = jQuery.trim( hoverHack( types || "" ) ).split(" ");
        for ( t = 0; t < types.length; t++ ) {
            tns = rtypenamespace.exec( types[t] ) || [];
            type = origType = tns[1];
            namespaces = tns[2];

            // Unbind all events (on this namespace, if provided) for the element
            if ( !type ) {
                for ( type in events ) {
                    jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
                }
                continue;
            }

            special = jQuery.event.special[ type ] || {};
            type = ( selector? special.delegateType : special.bindType ) || type;
            eventType = events[ type ] || [];
            origCount = eventType.length;
            namespaces = namespaces ? new RegExp("(^|\\.)" + namespaces.split(".").sort().join("\\.(?:.*\\.)?") + "(\\.|$)") : null;

            // Remove matching events
            for ( j = 0; j < eventType.length; j++ ) {
                handleObj = eventType[ j ];

                if ( ( mappedTypes || origType === handleObj.origType ) &&
                     ( !handler || handler.guid === handleObj.guid ) &&
                     ( !namespaces || namespaces.test( handleObj.namespace ) ) &&
                     ( !selector || selector === handleObj.selector || selector === "**" && handleObj.selector ) ) {
                    eventType.splice( j--, 1 );

                    if ( handleObj.selector ) {
                        eventType.delegateCount--;
                    }
                    if ( special.remove ) {
                        special.remove.call( elem, handleObj );
                    }
                }
            }

            // Remove generic event handler if we removed something and no more handlers exist
            // (avoids potential for endless recursion during removal of special event handlers)
            if ( eventType.length === 0 && origCount !== eventType.length ) {
                if ( !special.teardown || special.teardown.call( elem, namespaces ) === false ) {
                    jQuery.removeEvent( elem, type, elemData.handle );
                }

                delete events[ type ];
            }
        }

        // Remove the expando if it's no longer used
        if ( jQuery.isEmptyObject( events ) ) {
            handle = elemData.handle;
            if ( handle ) {
                handle.elem = null;
            }

            // removeData also checks for emptiness and clears the expando if empty
            // so use it instead of delete
            jQuery.removeData( elem, [ "events", "handle" ], true );
        }
    },

    // Events that are safe to short-circuit if no handlers are attached.
    // Native DOM events should not be added, they may have inline handlers.
    customEvent: {
        "getData": true,
        "setData": true,
        "changeData": true
    },

    trigger: function( event, data, elem, onlyHandlers ) {
        // Don't do events on text and comment nodes
        if ( elem && (elem.nodeType === 3 || elem.nodeType === 8) ) {
            return;
        }

        // Event object or event type
        var type = event.type || event,
            namespaces = [],
            cache, exclusive, i, cur, old, ontype, special, handle, eventPath, bubbleType;

        // focus/blur morphs to focusin/out; ensure we're not firing them right now
        if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
            return;
        }

        if ( type.indexOf( "!" ) >= 0 ) {
            // Exclusive events trigger only for the exact event (no namespaces)
            type = type.slice(0, -1);
            exclusive = true;
        }

        if ( type.indexOf( "." ) >= 0 ) {
            // Namespaced trigger; create a regexp to match event type in handle()
            namespaces = type.split(".");
            type = namespaces.shift();
            namespaces.sort();
        }

        if ( (!elem || jQuery.event.customEvent[ type ]) && !jQuery.event.global[ type ] ) {
            // No jQuery handlers for this event type, and it can't have inline handlers
            return;
        }

        // Caller can pass in an Event, Object, or just an event type string
        event = typeof event === "object" ?
            // jQuery.Event object
            event[ jQuery.expando ] ? event :
            // Object literal
            new jQuery.Event( type, event ) :
            // Just the event type (string)
            new jQuery.Event( type );

        event.type = type;
        event.isTrigger = true;
        event.exclusive = exclusive;
        event.namespace = namespaces.join( "." );
        event.namespace_re = event.namespace? new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.)?") + "(\\.|$)") : null;
        ontype = type.indexOf( ":" ) < 0 ? "on" + type : "";

        // Handle a global trigger
        if ( !elem ) {

            // TODO: Stop taunting the data cache; remove global events and always attach to document
            cache = jQuery.cache;
            for ( i in cache ) {
                if ( cache[ i ].events && cache[ i ].events[ type ] ) {
                    jQuery.event.trigger( event, data, cache[ i ].handle.elem, true );
                }
            }
            return;
        }

        // Clean up the event in case it is being reused
        event.result = undefined;
        if ( !event.target ) {
            event.target = elem;
        }

        // Clone any incoming data and prepend the event, creating the handler arg list
        data = data != null ? jQuery.makeArray( data ) : [];
        data.unshift( event );

        // Allow special events to draw outside the lines
        special = jQuery.event.special[ type ] || {};
        if ( special.trigger && special.trigger.apply( elem, data ) === false ) {
            return;
        }

        // Determine event propagation path in advance, per W3C events spec (#9951)
        // Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
        eventPath = [[ elem, special.bindType || type ]];
        if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

            bubbleType = special.delegateType || type;
            cur = rfocusMorph.test( bubbleType + type ) ? elem : elem.parentNode;
            old = null;
            for ( ; cur; cur = cur.parentNode ) {
                eventPath.push([ cur, bubbleType ]);
                old = cur;
            }

            // Only add window if we got to document (e.g., not plain obj or detached DOM)
            if ( old && old === elem.ownerDocument ) {
                eventPath.push([ old.defaultView || old.parentWindow || window, bubbleType ]);
            }
        }

        // Fire handlers on the event path
        for ( i = 0; i < eventPath.length && !event.isPropagationStopped(); i++ ) {

            cur = eventPath[i][0];
            event.type = eventPath[i][1];

            handle = ( jQuery._data( cur, "events" ) || {} )[ event.type ] && jQuery._data( cur, "handle" );
            if ( handle ) {
                handle.apply( cur, data );
            }
            // Note that this is a bare JS function and not a jQuery handler
            handle = ontype && cur[ ontype ];
            if ( handle && jQuery.acceptData( cur ) && handle.apply( cur, data ) === false ) {
                event.preventDefault();
            }
        }
        event.type = type;

        // If nobody prevented the default action, do it now
        if ( !onlyHandlers && !event.isDefaultPrevented() ) {

            if ( (!special._default || special._default.apply( elem.ownerDocument, data ) === false) &&
                !(type === "click" && jQuery.nodeName( elem, "a" )) && jQuery.acceptData( elem ) ) {

                // Call a native DOM method on the target with the same name name as the event.
                // Can't use an .isFunction() check here because IE6/7 fails that test.
                // Don't do default actions on window, that's where global variables be (#6170)
                // IE<9 dies on focus/blur to hidden element (#1486)
                if ( ontype && elem[ type ] && ((type !== "focus" && type !== "blur") || event.target.offsetWidth !== 0) && !jQuery.isWindow( elem ) ) {

                    // Don't re-trigger an onFOO event when we call its FOO() method
                    old = elem[ ontype ];

                    if ( old ) {
                        elem[ ontype ] = null;
                    }

                    // Prevent re-triggering of the same event, since we already bubbled it above
                    jQuery.event.triggered = type;
                    elem[ type ]();
                    jQuery.event.triggered = undefined;

                    if ( old ) {
                        elem[ ontype ] = old;
                    }
                }
            }
        }

        return event.result;
    },

    dispatch: function( event ) {

        // Make a writable jQuery.Event from the native event object
        event = jQuery.event.fix( event || window.event );

        var handlers = ( (jQuery._data( this, "events" ) || {} )[ event.type ] || []),
            delegateCount = handlers.delegateCount,
            args = [].slice.call( arguments, 0 ),
            run_all = !event.exclusive && !event.namespace,
            special = jQuery.event.special[ event.type ] || {},
            handlerQueue = [],
            i, j, cur, jqcur, ret, selMatch, matched, matches, handleObj, sel, related;

        // Use the fix-ed jQuery.Event rather than the (read-only) native event
        args[0] = event;
        event.delegateTarget = this;

        // Call the preDispatch hook for the mapped type, and let it bail if desired
        if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
            return;
        }

        // Determine handlers that should run if there are delegated events
        // Avoid non-left-click bubbling in Firefox (#3861)
        if ( delegateCount && !(event.button && event.type === "click") ) {

            // Pregenerate a single jQuery object for reuse with .is()
            jqcur = jQuery(this);
            jqcur.context = this.ownerDocument || this;

            for ( cur = event.target; cur != this; cur = cur.parentNode || this ) {

                // Don't process events on disabled elements (#6911, #8165)
                if ( cur.disabled !== true ) {
                    selMatch = {};
                    matches = [];
                    jqcur[0] = cur;
                    for ( i = 0; i < delegateCount; i++ ) {
                        handleObj = handlers[ i ];
                        sel = handleObj.selector;

                        if ( selMatch[ sel ] === undefined ) {
                            selMatch[ sel ] = (
                                handleObj.quick ? quickIs( cur, handleObj.quick ) : jqcur.is( sel )
                            );
                        }
                        if ( selMatch[ sel ] ) {
                            matches.push( handleObj );
                        }
                    }
                    if ( matches.length ) {
                        handlerQueue.push({ elem: cur, matches: matches });
                    }
                }
            }
        }

        // Add the remaining (directly-bound) handlers
        if ( handlers.length > delegateCount ) {
            handlerQueue.push({ elem: this, matches: handlers.slice( delegateCount ) });
        }

        // Run delegates first; they may want to stop propagation beneath us
        for ( i = 0; i < handlerQueue.length && !event.isPropagationStopped(); i++ ) {
            matched = handlerQueue[ i ];
            event.currentTarget = matched.elem;

            for ( j = 0; j < matched.matches.length && !event.isImmediatePropagationStopped(); j++ ) {
                handleObj = matched.matches[ j ];

                // Triggered event must either 1) be non-exclusive and have no namespace, or
                // 2) have namespace(s) a subset or equal to those in the bound event (both can have no namespace).
                if ( run_all || (!event.namespace && !handleObj.namespace) || event.namespace_re && event.namespace_re.test( handleObj.namespace ) ) {

                    event.data = handleObj.data;
                    event.handleObj = handleObj;

                    ret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )
                            .apply( matched.elem, args );

                    if ( ret !== undefined ) {
                        event.result = ret;
                        if ( ret === false ) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                    }
                }
            }
        }

        // Call the postDispatch hook for the mapped type
        if ( special.postDispatch ) {
            special.postDispatch.call( this, event );
        }

        return event.result;
    },

    // Includes some event props shared by KeyEvent and MouseEvent
    // *** attrChange attrName relatedNode srcElement  are not normalized, non-W3C, deprecated, will be removed in 1.8 ***
    props: "attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),

    fixHooks: {},

    keyHooks: {
        props: "char charCode key keyCode".split(" "),
        filter: function( event, original ) {

            // Add which for key events
            if ( event.which == null ) {
                event.which = original.charCode != null ? original.charCode : original.keyCode;
            }

            return event;
        }
    },

    mouseHooks: {
        props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
        filter: function( event, original ) {
            var eventDoc, doc, body,
                button = original.button,
                fromElement = original.fromElement;

            // Calculate pageX/Y if missing and clientX/Y available
            if ( event.pageX == null && original.clientX != null ) {
                eventDoc = event.target.ownerDocument || document;
                doc = eventDoc.documentElement;
                body = eventDoc.body;

                event.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );
                event.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );
            }

            // Add relatedTarget, if necessary
            if ( !event.relatedTarget && fromElement ) {
                event.relatedTarget = fromElement === event.target ? original.toElement : fromElement;
            }

            // Add which for click: 1 === left; 2 === middle; 3 === right
            // Note: button is not normalized, so don't use it
            if ( !event.which && button !== undefined ) {
                event.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );
            }

            return event;
        }
    },

    fix: function( event ) {
        if ( event[ jQuery.expando ] ) {
            return event;
        }

        // Create a writable copy of the event object and normalize some properties
        var i, prop,
            originalEvent = event,
            fixHook = jQuery.event.fixHooks[ event.type ] || {},
            copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;

        event = jQuery.Event( originalEvent );

        for ( i = copy.length; i; ) {
            prop = copy[ --i ];
            event[ prop ] = originalEvent[ prop ];
        }

        // Fix target property, if necessary (#1925, IE 6/7/8 & Safari2)
        if ( !event.target ) {
            event.target = originalEvent.srcElement || document;
        }

        // Target should not be a text node (#504, Safari)
        if ( event.target.nodeType === 3 ) {
            event.target = event.target.parentNode;
        }

        // For mouse/key events; add metaKey if it's not there (#3368, IE6/7/8)
        if ( event.metaKey === undefined ) {
            event.metaKey = event.ctrlKey;
        }

        return fixHook.filter? fixHook.filter( event, originalEvent ) : event;
    },

    special: {
        ready: {
            // Make sure the ready event is setup
            setup: jQuery.bindReady
        },

        load: {
            // Prevent triggered image.load events from bubbling to window.load
            noBubble: true
        },

        focus: {
            delegateType: "focusin"
        },
        blur: {
            delegateType: "focusout"
        },

        beforeunload: {
            setup: function( data, namespaces, eventHandle ) {
                // We only want to do this special case on windows
                if ( jQuery.isWindow( this ) ) {
                    this.onbeforeunload = eventHandle;
                }
            },

            teardown: function( namespaces, eventHandle ) {
                if ( this.onbeforeunload === eventHandle ) {
                    this.onbeforeunload = null;
                }
            }
        }
    },

    simulate: function( type, elem, event, bubble ) {
        // Piggyback on a donor event to simulate a different one.
        // Fake originalEvent to avoid donor's stopPropagation, but if the
        // simulated event prevents default then we do the same on the donor.
        var e = jQuery.extend(
            new jQuery.Event(),
            event,
            { type: type,
                isSimulated: true,
                originalEvent: {}
            }
        );
        if ( bubble ) {
            jQuery.event.trigger( e, null, elem );
        } else {
            jQuery.event.dispatch.call( elem, e );
        }
        if ( e.isDefaultPrevented() ) {
            event.preventDefault();
        }
    }
};

// Some plugins are using, but it's undocumented/deprecated and will be removed.
// The 1.7 special event interface should provide all the hooks needed now.
jQuery.event.handle = jQuery.event.dispatch;

jQuery.removeEvent = document.removeEventListener ?
    function( elem, type, handle ) {
        if ( elem.removeEventListener ) {
            elem.removeEventListener( type, handle, false );
        }
    } :
    function( elem, type, handle ) {
        if ( elem.detachEvent ) {
            elem.detachEvent( "on" + type, handle );
        }
    };

jQuery.Event = function( src, props ) {
    // Allow instantiation without the 'new' keyword
    if ( !(this instanceof jQuery.Event) ) {
        return new jQuery.Event( src, props );
    }

    // Event object
    if ( src && src.type ) {
        this.originalEvent = src;
        this.type = src.type;

        // Events bubbling up the document may have been marked as prevented
        // by a handler lower down the tree; reflect the correct value.
        this.isDefaultPrevented = ( src.defaultPrevented || src.returnValue === false ||
            src.getPreventDefault && src.getPreventDefault() ) ? returnTrue : returnFalse;

    // Event type
    } else {
        this.type = src;
    }

    // Put explicitly provided properties onto the event object
    if ( props ) {
        jQuery.extend( this, props );
    }

    // Create a timestamp if incoming event doesn't have one
    this.timeStamp = src && src.timeStamp || jQuery.now();

    // Mark it as fixed
    this[ jQuery.expando ] = true;
};

function returnFalse() {
    return false;
}
function returnTrue() {
    return true;
}

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
    preventDefault: function() {
        this.isDefaultPrevented = returnTrue;

        var e = this.originalEvent;
        if ( !e ) {
            return;
        }

        // if preventDefault exists run it on the original event
        if ( e.preventDefault ) {
            e.preventDefault();

        // otherwise set the returnValue property of the original event to false (IE)
        } else {
            e.returnValue = false;
        }
    },
    stopPropagation: function() {
        this.isPropagationStopped = returnTrue;

        var e = this.originalEvent;
        if ( !e ) {
            return;
        }
        // if stopPropagation exists run it on the original event
        if ( e.stopPropagation ) {
            e.stopPropagation();
        }
        // otherwise set the cancelBubble property of the original event to true (IE)
        e.cancelBubble = true;
    },
    stopImmediatePropagation: function() {
        this.isImmediatePropagationStopped = returnTrue;
        this.stopPropagation();
    },
    isDefaultPrevented: returnFalse,
    isPropagationStopped: returnFalse,
    isImmediatePropagationStopped: returnFalse
};

// Create mouseenter/leave events using mouseover/out and event-time checks
jQuery.each({
    mouseenter: "mouseover",
    mouseleave: "mouseout"
}, function( orig, fix ) {
    jQuery.event.special[ orig ] = {
        delegateType: fix,
        bindType: fix,

        handle: function( event ) {
            var target = this,
                related = event.relatedTarget,
                handleObj = event.handleObj,
                selector = handleObj.selector,
                ret;

            // For mousenter/leave call the handler if related is outside the target.
            // NB: No relatedTarget if the mouse left/entered the browser window
            if ( !related || (related !== target && !jQuery.contains( target, related )) ) {
                event.type = handleObj.origType;
                ret = handleObj.handler.apply( this, arguments );
                event.type = fix;
            }
            return ret;
        }
    };
});

// IE submit delegation
if ( !jQuery.support.submitBubbles ) {

    jQuery.event.special.submit = {
        setup: function() {
            // Only need this for delegated form submit events
            if ( jQuery.nodeName( this, "form" ) ) {
                return false;
            }

            // Lazy-add a submit handler when a descendant form may potentially be submitted
            jQuery.event.add( this, "click._submit keypress._submit", function( e ) {
                // Node name check avoids a VML-related crash in IE (#9807)
                var elem = e.target,
                    form = jQuery.nodeName( elem, "input" ) || jQuery.nodeName( elem, "button" ) ? elem.form : undefined;
                if ( form && !form._submit_attached ) {
                    jQuery.event.add( form, "submit._submit", function( event ) {
                        event._submit_bubble = true;
                    });
                    form._submit_attached = true;
                }
            });
            // return undefined since we don't need an event listener
        },

        postDispatch: function( event ) {
            // If form was submitted by the user, bubble the event up the tree
            if ( event._submit_bubble ) {
                delete event._submit_bubble;
                if ( this.parentNode && !event.isTrigger ) {
                    jQuery.event.simulate( "submit", this.parentNode, event, true );
                }
            }
        },

        teardown: function() {
            // Only need this for delegated form submit events
            if ( jQuery.nodeName( this, "form" ) ) {
                return false;
            }

            // Remove delegated handlers; cleanData eventually reaps submit handlers attached above
            jQuery.event.remove( this, "._submit" );
        }
    };
}

// IE change delegation and checkbox/radio fix
if ( !jQuery.support.changeBubbles ) {

    jQuery.event.special.change = {

        setup: function() {

            if ( rformElems.test( this.nodeName ) ) {
                // IE doesn't fire change on a check/radio until blur; trigger it on click
                // after a propertychange. Eat the blur-change in special.change.handle.
                // This still fires onchange a second time for check/radio after blur.
                if ( this.type === "checkbox" || this.type === "radio" ) {
                    jQuery.event.add( this, "propertychange._change", function( event ) {
                        if ( event.originalEvent.propertyName === "checked" ) {
                            this._just_changed = true;
                        }
                    });
                    jQuery.event.add( this, "click._change", function( event ) {
                        if ( this._just_changed && !event.isTrigger ) {
                            this._just_changed = false;
                            jQuery.event.simulate( "change", this, event, true );
                        }
                    });
                }
                return false;
            }
            // Delegated event; lazy-add a change handler on descendant inputs
            jQuery.event.add( this, "beforeactivate._change", function( e ) {
                var elem = e.target;

                if ( rformElems.test( elem.nodeName ) && !elem._change_attached ) {
                    jQuery.event.add( elem, "change._change", function( event ) {
                        if ( this.parentNode && !event.isSimulated && !event.isTrigger ) {
                            jQuery.event.simulate( "change", this.parentNode, event, true );
                        }
                    });
                    elem._change_attached = true;
                }
            });
        },

        handle: function( event ) {
            var elem = event.target;

            // Swallow native change events from checkbox/radio, we already triggered them above
            if ( this !== elem || event.isSimulated || event.isTrigger || (elem.type !== "radio" && elem.type !== "checkbox") ) {
                return event.handleObj.handler.apply( this, arguments );
            }
        },

        teardown: function() {
            jQuery.event.remove( this, "._change" );

            return rformElems.test( this.nodeName );
        }
    };
}

// Create "bubbling" focus and blur events
if ( !jQuery.support.focusinBubbles ) {
    jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {

        // Attach a single capturing handler while someone wants focusin/focusout
        var attaches = 0,
            handler = function( event ) {
                jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );
            };

        jQuery.event.special[ fix ] = {
            setup: function() {
                if ( attaches++ === 0 ) {
                    document.addEventListener( orig, handler, true );
                }
            },
            teardown: function() {
                if ( --attaches === 0 ) {
                    document.removeEventListener( orig, handler, true );
                }
            }
        };
    });
}

jQuery.fn.extend({

    on: function( types, selector, data, fn, /*INTERNAL*/ one ) {
        var origFn, type;

        // Types can be a map of types/handlers
        if ( typeof types === "object" ) {
            // ( types-Object, selector, data )
            if ( typeof selector !== "string" ) { // && selector != null
                // ( types-Object, data )
                data = data || selector;
                selector = undefined;
            }
            for ( type in types ) {
                this.on( type, selector, data, types[ type ], one );
            }
            return this;
        }

        if ( data == null && fn == null ) {
            // ( types, fn )
            fn = selector;
            data = selector = undefined;
        } else if ( fn == null ) {
            if ( typeof selector === "string" ) {
                // ( types, selector, fn )
                fn = data;
                data = undefined;
            } else {
                // ( types, data, fn )
                fn = data;
                data = selector;
                selector = undefined;
            }
        }
        if ( fn === false ) {
            fn = returnFalse;
        } else if ( !fn ) {
            return this;
        }

        if ( one === 1 ) {
            origFn = fn;
            fn = function( event ) {
                // Can use an empty set, since event contains the info
                jQuery().off( event );
                return origFn.apply( this, arguments );
            };
            // Use same guid so caller can remove using origFn
            fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
        }
        return this.each( function() {
            jQuery.event.add( this, types, fn, data, selector );
        });
    },
    one: function( types, selector, data, fn ) {
        return this.on( types, selector, data, fn, 1 );
    },
    off: function( types, selector, fn ) {
        if ( types && types.preventDefault && types.handleObj ) {
            // ( event )  dispatched jQuery.Event
            var handleObj = types.handleObj;
            jQuery( types.delegateTarget ).off(
                handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType,
                handleObj.selector,
                handleObj.handler
            );
            return this;
        }
        if ( typeof types === "object" ) {
            // ( types-object [, selector] )
            for ( var type in types ) {
                this.off( type, selector, types[ type ] );
            }
            return this;
        }
        if ( selector === false || typeof selector === "function" ) {
            // ( types [, fn] )
            fn = selector;
            selector = undefined;
        }
        if ( fn === false ) {
            fn = returnFalse;
        }
        return this.each(function() {
            jQuery.event.remove( this, types, fn, selector );
        });
    },

    bind: function( types, data, fn ) {
        return this.on( types, null, data, fn );
    },
    unbind: function( types, fn ) {
        return this.off( types, null, fn );
    },

    live: function( types, data, fn ) {
        jQuery( this.context ).on( types, this.selector, data, fn );
        return this;
    },
    die: function( types, fn ) {
        jQuery( this.context ).off( types, this.selector || "**", fn );
        return this;
    },

    delegate: function( selector, types, data, fn ) {
        return this.on( types, selector, data, fn );
    },
    undelegate: function( selector, types, fn ) {
        // ( namespace ) or ( selector, types [, fn] )
        return arguments.length == 1? this.off( selector, "**" ) : this.off( types, selector, fn );
    },

    trigger: function( type, data ) {
        return this.each(function() {
            jQuery.event.trigger( type, data, this );
        });
    },
    triggerHandler: function( type, data ) {
        if ( this[0] ) {
            return jQuery.event.trigger( type, data, this[0], true );
        }
    },

    toggle: function( fn ) {
        // Save reference to arguments for access in closure
        var args = arguments,
            guid = fn.guid || jQuery.guid++,
            i = 0,
            toggler = function( event ) {
                // Figure out which function to execute
                var lastToggle = ( jQuery._data( this, "lastToggle" + fn.guid ) || 0 ) % i;
                jQuery._data( this, "lastToggle" + fn.guid, lastToggle + 1 );

                // Make sure that clicks stop
                event.preventDefault();

                // and execute the function
                return args[ lastToggle ].apply( this, arguments ) || false;
            };

        // link all the functions, so any of them can unbind this click handler
        toggler.guid = guid;
        while ( i < args.length ) {
            args[ i++ ].guid = guid;
        }

        return this.click( toggler );
    },

    hover: function( fnOver, fnOut ) {
        return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
    }
});

jQuery.each( ("blur focus focusin focusout load resize scroll unload click dblclick " +
    "mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
    "change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {

    // Handle event binding
    jQuery.fn[ name ] = function( data, fn ) {
        if ( fn == null ) {
            fn = data;
            data = null;
        }

        return arguments.length > 0 ?
            this.on( name, null, data, fn ) :
            this.trigger( name );
    };

    if ( jQuery.attrFn ) {
        jQuery.attrFn[ name ] = true;
    }

    if ( rkeyEvent.test( name ) ) {
        jQuery.event.fixHooks[ name ] = jQuery.event.keyHooks;
    }

    if ( rmouseEvent.test( name ) ) {
        jQuery.event.fixHooks[ name ] = jQuery.event.mouseHooks;
    }
});



/*!
 * Sizzle CSS Selector Engine
 *  Copyright 2011, The Dojo Foundation
 *  Released under the MIT, BSD, and GPL Licenses.
 *  More information: http://sizzlejs.com/
 */
(function(){

var chunker = /((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,
    expando = "sizcache" + (Math.random() + '').replace('.', ''),
    done = 0,
    toString = Object.prototype.toString,
    hasDuplicate = false,
    baseHasDuplicate = true,
    rBackslash = /\\/g,
    rReturn = /\r\n/g,
    rNonWord = /\W/;

// Here we check if the JavaScript engine is using some sort of
// optimization where it does not always call our comparision
// function. If that is the case, discard the hasDuplicate value.
//   Thus far that includes Google Chrome.
[0, 0].sort(function() {
    baseHasDuplicate = false;
    return 0;
});

var Sizzle = function( selector, context, results, seed ) {
    results = results || [];
    context = context || document;

    var origContext = context;

    if ( context.nodeType !== 1 && context.nodeType !== 9 ) {
        return [];
    }

    if ( !selector || typeof selector !== "string" ) {
        return results;
    }

    var m, set, checkSet, extra, ret, cur, pop, i,
        prune = true,
        contextXML = Sizzle.isXML( context ),
        parts = [],
        soFar = selector;

    // Reset the position of the chunker regexp (start from head)
    do {
        chunker.exec( "" );
        m = chunker.exec( soFar );

        if ( m ) {
            soFar = m[3];

            parts.push( m[1] );

            if ( m[2] ) {
                extra = m[3];
                break;
            }
        }
    } while ( m );

    if ( parts.length > 1 && origPOS.exec( selector ) ) {

        if ( parts.length === 2 && Expr.relative[ parts[0] ] ) {
            set = posProcess( parts[0] + parts[1], context, seed );

        } else {
            set = Expr.relative[ parts[0] ] ?
                [ context ] :
                Sizzle( parts.shift(), context );

            while ( parts.length ) {
                selector = parts.shift();

                if ( Expr.relative[ selector ] ) {
                    selector += parts.shift();
                }

                set = posProcess( selector, set, seed );
            }
        }

    } else {
        // Take a shortcut and set the context if the root selector is an ID
        // (but not if it'll be faster if the inner selector is an ID)
        if ( !seed && parts.length > 1 && context.nodeType === 9 && !contextXML &&
                Expr.match.ID.test(parts[0]) && !Expr.match.ID.test(parts[parts.length - 1]) ) {

            ret = Sizzle.find( parts.shift(), context, contextXML );
            context = ret.expr ?
                Sizzle.filter( ret.expr, ret.set )[0] :
                ret.set[0];
        }

        if ( context ) {
            ret = seed ?
                { expr: parts.pop(), set: makeArray(seed) } :
                Sizzle.find( parts.pop(), parts.length === 1 && (parts[0] === "~" || parts[0] === "+") && context.parentNode ? context.parentNode : context, contextXML );

            set = ret.expr ?
                Sizzle.filter( ret.expr, ret.set ) :
                ret.set;

            if ( parts.length > 0 ) {
                checkSet = makeArray( set );

            } else {
                prune = false;
            }

            while ( parts.length ) {
                cur = parts.pop();
                pop = cur;

                if ( !Expr.relative[ cur ] ) {
                    cur = "";
                } else {
                    pop = parts.pop();
                }

                if ( pop == null ) {
                    pop = context;
                }

                Expr.relative[ cur ]( checkSet, pop, contextXML );
            }

        } else {
            checkSet = parts = [];
        }
    }

    if ( !checkSet ) {
        checkSet = set;
    }

    if ( !checkSet ) {
        Sizzle.error( cur || selector );
    }

    if ( toString.call(checkSet) === "[object Array]" ) {
        if ( !prune ) {
            results.push.apply( results, checkSet );

        } else if ( context && context.nodeType === 1 ) {
            for ( i = 0; checkSet[i] != null; i++ ) {
                if ( checkSet[i] && (checkSet[i] === true || checkSet[i].nodeType === 1 && Sizzle.contains(context, checkSet[i])) ) {
                    results.push( set[i] );
                }
            }

        } else {
            for ( i = 0; checkSet[i] != null; i++ ) {
                if ( checkSet[i] && checkSet[i].nodeType === 1 ) {
                    results.push( set[i] );
                }
            }
        }

    } else {
        makeArray( checkSet, results );
    }

    if ( extra ) {
        Sizzle( extra, origContext, results, seed );
        Sizzle.uniqueSort( results );
    }

    return results;
};

Sizzle.uniqueSort = function( results ) {
    if ( sortOrder ) {
        hasDuplicate = baseHasDuplicate;
        results.sort( sortOrder );

        if ( hasDuplicate ) {
            for ( var i = 1; i < results.length; i++ ) {
                if ( results[i] === results[ i - 1 ] ) {
                    results.splice( i--, 1 );
                }
            }
        }
    }

    return results;
};

Sizzle.matches = function( expr, set ) {
    return Sizzle( expr, null, null, set );
};

Sizzle.matchesSelector = function( node, expr ) {
    return Sizzle( expr, null, null, [node] ).length > 0;
};

Sizzle.find = function( expr, context, isXML ) {
    var set, i, len, match, type, left;

    if ( !expr ) {
        return [];
    }

    for ( i = 0, len = Expr.order.length; i < len; i++ ) {
        type = Expr.order[i];

        if ( (match = Expr.leftMatch[ type ].exec( expr )) ) {
            left = match[1];
            match.splice( 1, 1 );

            if ( left.substr( left.length - 1 ) !== "\\" ) {
                match[1] = (match[1] || "").replace( rBackslash, "" );
                set = Expr.find[ type ]( match, context, isXML );

                if ( set != null ) {
                    expr = expr.replace( Expr.match[ type ], "" );
                    break;
                }
            }
        }
    }

    if ( !set ) {
        set = typeof context.getElementsByTagName !== "undefined" ?
            context.getElementsByTagName( "*" ) :
            [];
    }

    return { set: set, expr: expr };
};

Sizzle.filter = function( expr, set, inplace, not ) {
    var match, anyFound,
        type, found, item, filter, left,
        i, pass,
        old = expr,
        result = [],
        curLoop = set,
        isXMLFilter = set && set[0] && Sizzle.isXML( set[0] );

    while ( expr && set.length ) {
        for ( type in Expr.filter ) {
            if ( (match = Expr.leftMatch[ type ].exec( expr )) != null && match[2] ) {
                filter = Expr.filter[ type ];
                left = match[1];

                anyFound = false;

                match.splice(1,1);

                if ( left.substr( left.length - 1 ) === "\\" ) {
                    continue;
                }

                if ( curLoop === result ) {
                    result = [];
                }

                if ( Expr.preFilter[ type ] ) {
                    match = Expr.preFilter[ type ]( match, curLoop, inplace, result, not, isXMLFilter );

                    if ( !match ) {
                        anyFound = found = true;

                    } else if ( match === true ) {
                        continue;
                    }
                }

                if ( match ) {
                    for ( i = 0; (item = curLoop[i]) != null; i++ ) {
                        if ( item ) {
                            found = filter( item, match, i, curLoop );
                            pass = not ^ found;

                            if ( inplace && found != null ) {
                                if ( pass ) {
                                    anyFound = true;

                                } else {
                                    curLoop[i] = false;
                                }

                            } else if ( pass ) {
                                result.push( item );
                                anyFound = true;
                            }
                        }
                    }
                }

                if ( found !== undefined ) {
                    if ( !inplace ) {
                        curLoop = result;
                    }

                    expr = expr.replace( Expr.match[ type ], "" );

                    if ( !anyFound ) {
                        return [];
                    }

                    break;
                }
            }
        }

        // Improper expression
        if ( expr === old ) {
            if ( anyFound == null ) {
                Sizzle.error( expr );

            } else {
                break;
            }
        }

        old = expr;
    }

    return curLoop;
};

Sizzle.error = function( msg ) {
    throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Utility function for retreiving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
var getText = Sizzle.getText = function( elem ) {
    var i, node,
        nodeType = elem.nodeType,
        ret = "";

    if ( nodeType ) {
        if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
            // Use textContent || innerText for elements
            if ( typeof elem.textContent === 'string' ) {
                return elem.textContent;
            } else if ( typeof elem.innerText === 'string' ) {
                // Replace IE's carriage returns
                return elem.innerText.replace( rReturn, '' );
            } else {
                // Traverse it's children
                for ( elem = elem.firstChild; elem; elem = elem.nextSibling) {
                    ret += getText( elem );
                }
            }
        } else if ( nodeType === 3 || nodeType === 4 ) {
            return elem.nodeValue;
        }
    } else {

        // If no nodeType, this is expected to be an array
        for ( i = 0; (node = elem[i]); i++ ) {
            // Do not traverse comment nodes
            if ( node.nodeType !== 8 ) {
                ret += getText( node );
            }
        }
    }
    return ret;
};

var Expr = Sizzle.selectors = {
    order: [ "ID", "NAME", "TAG" ],

    match: {
        ID: /#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,
        CLASS: /\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,
        NAME: /\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,
        ATTR: /\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,
        TAG: /^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,
        CHILD: /:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,
        POS: /:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,
        PSEUDO: /:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/
    },

    leftMatch: {},

    attrMap: {
        "class": "className",
        "for": "htmlFor"
    },

    attrHandle: {
        href: function( elem ) {
            return elem.getAttribute( "href" );
        },
        type: function( elem ) {
            return elem.getAttribute( "type" );
        }
    },

    relative: {
        "+": function(checkSet, part){
            var isPartStr = typeof part === "string",
                isTag = isPartStr && !rNonWord.test( part ),
                isPartStrNotTag = isPartStr && !isTag;

            if ( isTag ) {
                part = part.toLowerCase();
            }

            for ( var i = 0, l = checkSet.length, elem; i < l; i++ ) {
                if ( (elem = checkSet[i]) ) {
                    while ( (elem = elem.previousSibling) && elem.nodeType !== 1 ) {}

                    checkSet[i] = isPartStrNotTag || elem && elem.nodeName.toLowerCase() === part ?
                        elem || false :
                        elem === part;
                }
            }

            if ( isPartStrNotTag ) {
                Sizzle.filter( part, checkSet, true );
            }
        },

        ">": function( checkSet, part ) {
            var elem,
                isPartStr = typeof part === "string",
                i = 0,
                l = checkSet.length;

            if ( isPartStr && !rNonWord.test( part ) ) {
                part = part.toLowerCase();

                for ( ; i < l; i++ ) {
                    elem = checkSet[i];

                    if ( elem ) {
                        var parent = elem.parentNode;
                        checkSet[i] = parent.nodeName.toLowerCase() === part ? parent : false;
                    }
                }

            } else {
                for ( ; i < l; i++ ) {
                    elem = checkSet[i];

                    if ( elem ) {
                        checkSet[i] = isPartStr ?
                            elem.parentNode :
                            elem.parentNode === part;
                    }
                }

                if ( isPartStr ) {
                    Sizzle.filter( part, checkSet, true );
                }
            }
        },

        "": function(checkSet, part, isXML){
            var nodeCheck,
                doneName = done++,
                checkFn = dirCheck;

            if ( typeof part === "string" && !rNonWord.test( part ) ) {
                part = part.toLowerCase();
                nodeCheck = part;
                checkFn = dirNodeCheck;
            }

            checkFn( "parentNode", part, doneName, checkSet, nodeCheck, isXML );
        },

        "~": function( checkSet, part, isXML ) {
            var nodeCheck,
                doneName = done++,
                checkFn = dirCheck;

            if ( typeof part === "string" && !rNonWord.test( part ) ) {
                part = part.toLowerCase();
                nodeCheck = part;
                checkFn = dirNodeCheck;
            }

            checkFn( "previousSibling", part, doneName, checkSet, nodeCheck, isXML );
        }
    },

    find: {
        ID: function( match, context, isXML ) {
            if ( typeof context.getElementById !== "undefined" && !isXML ) {
                var m = context.getElementById(match[1]);
                // Check parentNode to catch when Blackberry 4.6 returns
                // nodes that are no longer in the document #6963
                return m && m.parentNode ? [m] : [];
            }
        },

        NAME: function( match, context ) {
            if ( typeof context.getElementsByName !== "undefined" ) {
                var ret = [],
                    results = context.getElementsByName( match[1] );

                for ( var i = 0, l = results.length; i < l; i++ ) {
                    if ( results[i].getAttribute("name") === match[1] ) {
                        ret.push( results[i] );
                    }
                }

                return ret.length === 0 ? null : ret;
            }
        },

        TAG: function( match, context ) {
            if ( typeof context.getElementsByTagName !== "undefined" ) {
                return context.getElementsByTagName( match[1] );
            }
        }
    },
    preFilter: {
        CLASS: function( match, curLoop, inplace, result, not, isXML ) {
            match = " " + match[1].replace( rBackslash, "" ) + " ";

            if ( isXML ) {
                return match;
            }

            for ( var i = 0, elem; (elem = curLoop[i]) != null; i++ ) {
                if ( elem ) {
                    if ( not ^ (elem.className && elem.className.baseVal && (" " + elem.className.baseVal + " ").replace(/[\t\n\r]/g, " ").indexOf(match) >= 0) ) {
                        if ( !inplace ) {
                            result.push( elem );
                        }

                    } else if ( inplace ) {
                        curLoop[i] = false;
                    }
                }
            }

            return false;
        },

        ID: function( match ) {
            return match[1].replace( rBackslash, "" );
        },

        TAG: function( match, curLoop ) {
            return match[1].replace( rBackslash, "" ).toLowerCase();
        },

        CHILD: function( match ) {
            if ( match[1] === "nth" ) {
                if ( !match[2] ) {
                    Sizzle.error( match[0] );
                }

                match[2] = match[2].replace(/^\+|\s*/g, '');

                // parse equations like 'even', 'odd', '5', '2n', '3n+2', '4n-1', '-n+6'
                var test = /(-?)(\d*)(?:n([+\-]?\d*))?/.exec(
                    match[2] === "even" && "2n" || match[2] === "odd" && "2n+1" ||
                    !/\D/.test( match[2] ) && "0n+" + match[2] || match[2]);

                // calculate the numbers (first)n+(last) including if they are negative
                match[2] = (test[1] + (test[2] || 1)) - 0;
                match[3] = test[3] - 0;
            }
            else if ( match[2] ) {
                Sizzle.error( match[0] );
            }

            // TODO: Move to normal caching system
            match[0] = done++;

            return match;
        },

        ATTR: function( match, curLoop, inplace, result, not, isXML ) {
            var name = match[1] = match[1].replace( rBackslash, "" );

            if ( !isXML && Expr.attrMap[name] ) {
                match[1] = Expr.attrMap[name];
            }

            // Handle if an un-quoted value was used
            match[4] = ( match[4] || match[5] || "" ).replace( rBackslash, "" );

            if ( match[2] === "~=" ) {
                match[4] = " " + match[4] + " ";
            }

            return match;
        },

        PSEUDO: function( match, curLoop, inplace, result, not ) {
            if ( match[1] === "not" ) {
                // If we're dealing with a complex expression, or a simple one
                if ( ( chunker.exec(match[3]) || "" ).length > 1 || /^\w/.test(match[3]) ) {
                    match[3] = Sizzle(match[3], null, null, curLoop);

                } else {
                    var ret = Sizzle.filter(match[3], curLoop, inplace, true ^ not);

                    if ( !inplace ) {
                        result.push.apply( result, ret );
                    }

                    return false;
                }

            } else if ( Expr.match.POS.test( match[0] ) || Expr.match.CHILD.test( match[0] ) ) {
                return true;
            }

            return match;
        },

        POS: function( match ) {
            match.unshift( true );

            return match;
        }
    },

    filters: {
        enabled: function( elem ) {
            return elem.disabled === false && elem.type !== "hidden";
        },

        disabled: function( elem ) {
            return elem.disabled === true;
        },

        checked: function( elem ) {
            return elem.checked === true;
        },

        selected: function( elem ) {
            // Accessing this property makes selected-by-default
            // options in Safari work properly
            if ( elem.parentNode ) {
                elem.parentNode.selectedIndex;
            }

            return elem.selected === true;
        },

        parent: function( elem ) {
            return !!elem.firstChild;
        },

        empty: function( elem ) {
            return !elem.firstChild;
        },

        has: function( elem, i, match ) {
            return !!Sizzle( match[3], elem ).length;
        },

        header: function( elem ) {
            return (/h\d/i).test( elem.nodeName );
        },

        text: function( elem ) {
            var attr = elem.getAttribute( "type" ), type = elem.type;
            // IE6 and 7 will map elem.type to 'text' for new HTML5 types (search, etc)
            // use getAttribute instead to test this case
            return elem.nodeName.toLowerCase() === "input" && "text" === type && ( attr === type || attr === null );
        },

        radio: function( elem ) {
            return elem.nodeName.toLowerCase() === "input" && "radio" === elem.type;
        },

        checkbox: function( elem ) {
            return elem.nodeName.toLowerCase() === "input" && "checkbox" === elem.type;
        },

        file: function( elem ) {
            return elem.nodeName.toLowerCase() === "input" && "file" === elem.type;
        },

        password: function( elem ) {
            return elem.nodeName.toLowerCase() === "input" && "password" === elem.type;
        },

        submit: function( elem ) {
            var name = elem.nodeName.toLowerCase();
            return (name === "input" || name === "button") && "submit" === elem.type;
        },

        image: function( elem ) {
            return elem.nodeName.toLowerCase() === "input" && "image" === elem.type;
        },

        reset: function( elem ) {
            var name = elem.nodeName.toLowerCase();
            return (name === "input" || name === "button") && "reset" === elem.type;
        },

        button: function( elem ) {
            var name = elem.nodeName.toLowerCase();
            return name === "input" && "button" === elem.type || name === "button";
        },

        input: function( elem ) {
            return (/input|select|textarea|button/i).test( elem.nodeName );
        },

        focus: function( elem ) {
            return elem === elem.ownerDocument.activeElement;
        }
    },
    setFilters: {
        first: function( elem, i ) {
            return i === 0;
        },

        last: function( elem, i, match, array ) {
            return i === array.length - 1;
        },

        even: function( elem, i ) {
            return i % 2 === 0;
        },

        odd: function( elem, i ) {
            return i % 2 === 1;
        },

        lt: function( elem, i, match ) {
            return i < match[3] - 0;
        },

        gt: function( elem, i, match ) {
            return i > match[3] - 0;
        },

        nth: function( elem, i, match ) {
            return match[3] - 0 === i;
        },

        eq: function( elem, i, match ) {
            return match[3] - 0 === i;
        }
    },
    filter: {
        PSEUDO: function( elem, match, i, array ) {
            var name = match[1],
                filter = Expr.filters[ name ];

            if ( filter ) {
                return filter( elem, i, match, array );

            } else if ( name === "contains" ) {
                return (elem.textContent || elem.innerText || getText([ elem ]) || "").indexOf(match[3]) >= 0;

            } else if ( name === "not" ) {
                var not = match[3];

                for ( var j = 0, l = not.length; j < l; j++ ) {
                    if ( not[j] === elem ) {
                        return false;
                    }
                }

                return true;

            } else {
                Sizzle.error( name );
            }
        },

        CHILD: function( elem, match ) {
            var first, last,
                doneName, parent, cache,
                count, diff,
                type = match[1],
                node = elem;

            switch ( type ) {
                case "only":
                case "first":
                    while ( (node = node.previousSibling) ) {
                        if ( node.nodeType === 1 ) {
                            return false;
                        }
                    }

                    if ( type === "first" ) {
                        return true;
                    }

                    node = elem;

                    /* falls through */
                case "last":
                    while ( (node = node.nextSibling) ) {
                        if ( node.nodeType === 1 ) {
                            return false;
                        }
                    }

                    return true;

                case "nth":
                    first = match[2];
                    last = match[3];

                    if ( first === 1 && last === 0 ) {
                        return true;
                    }

                    doneName = match[0];
                    parent = elem.parentNode;

                    if ( parent && (parent[ expando ] !== doneName || !elem.nodeIndex) ) {
                        count = 0;

                        for ( node = parent.firstChild; node; node = node.nextSibling ) {
                            if ( node.nodeType === 1 ) {
                                node.nodeIndex = ++count;
                            }
                        }

                        parent[ expando ] = doneName;
                    }

                    diff = elem.nodeIndex - last;

                    if ( first === 0 ) {
                        return diff === 0;

                    } else {
                        return ( diff % first === 0 && diff / first >= 0 );
                    }
            }
        },

        ID: function( elem, match ) {
            return elem.nodeType === 1 && elem.getAttribute("id") === match;
        },

        TAG: function( elem, match ) {
            return (match === "*" && elem.nodeType === 1) || !!elem.nodeName && elem.nodeName.toLowerCase() === match;
        },

        CLASS: function( elem, match ) {
            return (" " + ((elem.className && elem.className.baseVal) || elem.getAttribute("class")) + " ")
                .indexOf( match ) > -1;
        },

        ATTR: function( elem, match ) {
            var name = match[1],
                result = Sizzle.attr ?
                    Sizzle.attr( elem, name ) :
                    Expr.attrHandle[ name ] ?
                    Expr.attrHandle[ name ]( elem ) :
                    elem[ name ] != null ?
                        elem[ name ] :
                        elem.getAttribute( name ),
                value = result + "",
                type = match[2],
                check = match[4];

            return result == null ?
                type === "!=" :
                !type && Sizzle.attr ?
                result != null :
                type === "=" ?
                value === check :
                type === "*=" ?
                value.indexOf(check) >= 0 :
                type === "~=" ?
                (" " + value + " ").indexOf(check) >= 0 :
                !check ?
                value && result !== false :
                type === "!=" ?
                value !== check :
                type === "^=" ?
                value.indexOf(check) === 0 :
                type === "$=" ?
                value.substr(value.length - check.length) === check :
                type === "|=" ?
                value === check || value.substr(0, check.length + 1) === check + "-" :
                false;
        },

        POS: function( elem, match, i, array ) {
            var name = match[2],
                filter = Expr.setFilters[ name ];

            if ( filter ) {
                return filter( elem, i, match, array );
            }
        }
    }
};

var origPOS = Expr.match.POS,
    fescape = function(all, num){
        return "\\" + (num - 0 + 1);
    };

for ( var type in Expr.match ) {
    Expr.match[ type ] = new RegExp( Expr.match[ type ].source + (/(?![^\[]*\])(?![^\(]*\))/.source) );
    Expr.leftMatch[ type ] = new RegExp( /(^(?:.|\r|\n)*?)/.source + Expr.match[ type ].source.replace(/\\(\d+)/g, fescape) );
}
// Expose origPOS
// "global" as in regardless of relation to brackets/parens
Expr.match.globalPOS = origPOS;

var makeArray = function( array, results ) {
    array = Array.prototype.slice.call( array, 0 );

    if ( results ) {
        results.push.apply( results, array );
        return results;
    }

    return array;
};

// Perform a simple check to determine if the browser is capable of
// converting a NodeList to an array using builtin methods.
// Also verifies that the returned array holds DOM nodes
// (which is not the case in the Blackberry browser)
try {
    Array.prototype.slice.call( document.documentElement.childNodes, 0 )[0].nodeType;

// Provide a fallback method if it does not work
} catch( e ) {
    makeArray = function( array, results ) {
        var i = 0,
            ret = results || [];

        if ( toString.call(array) === "[object Array]" ) {
            Array.prototype.push.apply( ret, array );

        } else {
            if ( typeof array.length === "number" ) {
                for ( var l = array.length; i < l; i++ ) {
                    ret.push( array[i] );
                }

            } else {
                for ( ; array[i]; i++ ) {
                    ret.push( array[i] );
                }
            }
        }

        return ret;
    };
}

var sortOrder, siblingCheck;

if ( document.documentElement.compareDocumentPosition ) {
    sortOrder = function( a, b ) {
        if ( a === b ) {
            hasDuplicate = true;
            return 0;
        }

        if ( !a.compareDocumentPosition || !b.compareDocumentPosition ) {
            return a.compareDocumentPosition ? -1 : 1;
        }

        return a.compareDocumentPosition(b) & 4 ? -1 : 1;
    };

} else {
    sortOrder = function( a, b ) {
        // The nodes are identical, we can exit early
        if ( a === b ) {
            hasDuplicate = true;
            return 0;

        // Fallback to using sourceIndex (in IE) if it's available on both nodes
        } else if ( a.sourceIndex && b.sourceIndex ) {
            return a.sourceIndex - b.sourceIndex;
        }

        var al, bl,
            ap = [],
            bp = [],
            aup = a.parentNode,
            bup = b.parentNode,
            cur = aup;

        // If the nodes are siblings (or identical) we can do a quick check
        if ( aup === bup ) {
            return siblingCheck( a, b );

        // If no parents were found then the nodes are disconnected
        } else if ( !aup ) {
            return -1;

        } else if ( !bup ) {
            return 1;
        }

        // Otherwise they're somewhere else in the tree so we need
        // to build up a full list of the parentNodes for comparison
        while ( cur ) {
            ap.unshift( cur );
            cur = cur.parentNode;
        }

        cur = bup;

        while ( cur ) {
            bp.unshift( cur );
            cur = cur.parentNode;
        }

        al = ap.length;
        bl = bp.length;

        // Start walking down the tree looking for a discrepancy
        for ( var i = 0; i < al && i < bl; i++ ) {
            if ( ap[i] !== bp[i] ) {
                return siblingCheck( ap[i], bp[i] );
            }
        }

        // We ended someplace up the tree so do a sibling check
        return i === al ?
            siblingCheck( a, bp[i], -1 ) :
            siblingCheck( ap[i], b, 1 );
    };

    siblingCheck = function( a, b, ret ) {
        if ( a === b ) {
            return ret;
        }

        var cur = a.nextSibling;

        while ( cur ) {
            if ( cur === b ) {
                return -1;
            }

            cur = cur.nextSibling;
        }

        return 1;
    };
}

// Check to see if the browser returns elements by name when
// querying by getElementById (and provide a workaround)
(function(){
    // We're going to inject a fake input element with a specified name
    var form = document.createElement("div"),
        id = "script" + (new Date()).getTime(),
        root = document.documentElement;

    form.innerHTML = "<a name='" + id + "'/>";

    // Inject it into the root element, check its status, and remove it quickly
    root.insertBefore( form, root.firstChild );

    // The workaround has to do additional checks after a getElementById
    // Which slows things down for other browsers (hence the branching)
    if ( document.getElementById( id ) ) {
        Expr.find.ID = function( match, context, isXML ) {
            if ( typeof context.getElementById !== "undefined" && !isXML ) {
                var m = context.getElementById(match[1]);

                return m ?
                    m.id === match[1] || typeof m.getAttributeNode !== "undefined" && m.getAttributeNode("id").nodeValue === match[1] ?
                        [m] :
                        undefined :
                    [];
            }
        };

        Expr.filter.ID = function( elem, match ) {
            var node = typeof elem.getAttributeNode !== "undefined" && elem.getAttributeNode("id");

            return elem.nodeType === 1 && node && node.nodeValue === match;
        };
    }

    root.removeChild( form );

    // release memory in IE
    root = form = null;
})();

(function(){
    // Check to see if the browser returns only elements
    // when doing getElementsByTagName("*")

    // Create a fake element
    var div = document.createElement("div");
    div.appendChild( document.createComment("") );

    // Make sure no comments are found
    if ( div.getElementsByTagName("*").length > 0 ) {
        Expr.find.TAG = function( match, context ) {
            var results = context.getElementsByTagName( match[1] );

            // Filter out possible comments
            if ( match[1] === "*" ) {
                var tmp = [];

                for ( var i = 0; results[i]; i++ ) {
                    if ( results[i].nodeType === 1 ) {
                        tmp.push( results[i] );
                    }
                }

                results = tmp;
            }

            return results;
        };
    }

    // Check to see if an attribute returns normalized href attributes
    div.innerHTML = "<a href='#'></a>";

    if ( div.firstChild && typeof div.firstChild.getAttribute !== "undefined" &&
            div.firstChild.getAttribute("href") !== "#" ) {

        Expr.attrHandle.href = function( elem ) {
            return elem.getAttribute( "href", 2 );
        };
    }

    // release memory in IE
    div = null;
})();

if ( document.querySelectorAll ) {
    (function(){
        var oldSizzle = Sizzle,
            div = document.createElement("div"),
            id = "__sizzle__";

        div.innerHTML = "<p class='TEST'></p>";

        // Safari can't handle uppercase or unicode characters when
        // in quirks mode.
        if ( div.querySelectorAll && div.querySelectorAll(".TEST").length === 0 ) {
            return;
        }

        Sizzle = function( query, context, extra, seed ) {
            context = context || document;

            // Only use querySelectorAll on non-XML documents
            // (ID selectors don't work in non-HTML documents)
            if ( !seed && !Sizzle.isXML(context) ) {
                // See if we find a selector to speed up
                var match = /^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec( query );

                if ( match && (context.nodeType === 1 || context.nodeType === 9) ) {
                    // Speed-up: Sizzle("TAG")
                    if ( match[1] ) {
                        return makeArray( context.getElementsByTagName( query ), extra );

                    // Speed-up: Sizzle(".CLASS")
                    } else if ( match[2] && Expr.find.CLASS && context.getElementsByClassName ) {
                        return makeArray( context.getElementsByClassName( match[2] ), extra );
                    }
                }

                if ( context.nodeType === 9 ) {
                    // Speed-up: Sizzle("body")
                    // The body element only exists once, optimize finding it
                    if ( query === "body" && context.body ) {
                        return makeArray( [ context.body ], extra );

                    // Speed-up: Sizzle("#ID")
                    } else if ( match && match[3] ) {
                        var elem = context.getElementById( match[3] );

                        // Check parentNode to catch when Blackberry 4.6 returns
                        // nodes that are no longer in the document #6963
                        if ( elem && elem.parentNode ) {
                            // Handle the case where IE and Opera return items
                            // by name instead of ID
                            if ( elem.id === match[3] ) {
                                return makeArray( [ elem ], extra );
                            }

                        } else {
                            return makeArray( [], extra );
                        }
                    }

                    try {
                        return makeArray( context.querySelectorAll(query), extra );
                    } catch(qsaError) {}

                // qSA works strangely on Element-rooted queries
                // We can work around this by specifying an extra ID on the root
                // and working up from there (Thanks to Andrew Dupont for the technique)
                // IE 8 doesn't work on object elements
                } else if ( context.nodeType === 1 && context.nodeName.toLowerCase() !== "object" ) {
                    var oldContext = context,
                        old = context.getAttribute( "id" ),
                        nid = old || id,
                        hasParent = context.parentNode,
                        relativeHierarchySelector = /^\s*[+~]/.test( query );

                    if ( !old ) {
                        context.setAttribute( "id", nid );
                    } else {
                        nid = nid.replace( /'/g, "\\$&" );
                    }
                    if ( relativeHierarchySelector && hasParent ) {
                        context = context.parentNode;
                    }

                    try {
                        if ( !relativeHierarchySelector || hasParent ) {
                            return makeArray( context.querySelectorAll( "[id='" + nid + "'] " + query ), extra );
                        }

                    } catch(pseudoError) {
                    } finally {
                        if ( !old ) {
                            oldContext.removeAttribute( "id" );
                        }
                    }
                }
            }

            return oldSizzle(query, context, extra, seed);
        };

        for ( var prop in oldSizzle ) {
            Sizzle[ prop ] = oldSizzle[ prop ];
        }

        // release memory in IE
        div = null;
    })();
}

(function(){
    var html = document.documentElement,
        matches = html.matchesSelector || html.mozMatchesSelector || html.webkitMatchesSelector || html.msMatchesSelector;

    if ( matches ) {
        // Check to see if it's possible to do matchesSelector
        // on a disconnected node (IE 9 fails this)
        var disconnectedMatch = !matches.call( document.createElement( "div" ), "div" ),
            pseudoWorks = false;

        try {
            // This should fail with an exception
            // Gecko does not error, returns false instead
            matches.call( document.documentElement, "[test!='']:sizzle" );

        } catch( pseudoError ) {
            pseudoWorks = true;
        }

        Sizzle.matchesSelector = function( node, expr ) {
            // Make sure that attribute selectors are quoted
            expr = expr.replace(/\=\s*([^'"\]]*)\s*\]/g, "='$1']");

            if ( !Sizzle.isXML( node ) ) {
                try {
                    if ( pseudoWorks || !Expr.match.PSEUDO.test( expr ) && !/!=/.test( expr ) ) {
                        var ret = matches.call( node, expr );

                        // IE 9's matchesSelector returns false on disconnected nodes
                        if ( ret || !disconnectedMatch ||
                                // As well, disconnected nodes are said to be in a document
                                // fragment in IE 9, so check for that
                                node.document && node.document.nodeType !== 11 ) {
                            return ret;
                        }
                    }
                } catch(e) {}
            }

            return Sizzle(expr, null, null, [node]).length > 0;
        };
    }
})();

(function(){
    var div = document.createElement("div");

    div.innerHTML = "<div class='test e'></div><div class='test'></div>";

    // Opera can't find a second classname (in 9.6)
    // Also, make sure that getElementsByClassName actually exists
    if ( !div.getElementsByClassName || div.getElementsByClassName("e").length === 0 ) {
        return;
    }

    // Safari caches class attributes, doesn't catch changes (in 3.2)
    div.lastChild.className.baseVal = "e";

    if ( div.getElementsByClassName("e").length === 1 ) {
        return;
    }

    Expr.order.splice(1, 0, "CLASS");
    Expr.find.CLASS = function( match, context, isXML ) {
        if ( typeof context.getElementsByClassName !== "undefined" && !isXML ) {
            return context.getElementsByClassName(match[1]);
        }
    };

    // release memory in IE
    div = null;
})();

function dirNodeCheck( dir, cur, doneName, checkSet, nodeCheck, isXML ) {
    for ( var i = 0, l = checkSet.length; i < l; i++ ) {
        var elem = checkSet[i];

        if ( elem ) {
            var match = false;

            elem = elem[dir];

            while ( elem ) {
                if ( elem[ expando ] === doneName ) {
                    match = checkSet[elem.sizset];
                    break;
                }

                if ( elem.nodeType === 1 && !isXML ){
                    elem[ expando ] = doneName;
                    elem.sizset = i;
                }

                if ( elem.nodeName.toLowerCase() === cur ) {
                    match = elem;
                    break;
                }

                elem = elem[dir];
            }

            checkSet[i] = match;
        }
    }
}

function dirCheck( dir, cur, doneName, checkSet, nodeCheck, isXML ) {
    for ( var i = 0, l = checkSet.length; i < l; i++ ) {
        var elem = checkSet[i];

        if ( elem ) {
            var match = false;

            elem = elem[dir];

            while ( elem ) {
                if ( elem[ expando ] === doneName ) {
                    match = checkSet[elem.sizset];
                    break;
                }

                if ( elem.nodeType === 1 ) {
                    if ( !isXML ) {
                        elem[ expando ] = doneName;
                        elem.sizset = i;
                    }

                    if ( typeof cur !== "string" ) {
                        if ( elem === cur ) {
                            match = true;
                            break;
                        }

                    } else if ( Sizzle.filter( cur, [elem] ).length > 0 ) {
                        match = elem;
                        break;
                    }
                }

                elem = elem[dir];
            }

            checkSet[i] = match;
        }
    }
}

if ( document.documentElement.contains ) {
    Sizzle.contains = function( a, b ) {
        return a !== b && (a.contains ? a.contains(b) : true);
    };

} else if ( document.documentElement.compareDocumentPosition ) {
    Sizzle.contains = function( a, b ) {
        return !!(a.compareDocumentPosition(b) & 16);
    };

} else {
    Sizzle.contains = function() {
        return false;
    };
}

Sizzle.isXML = function( elem ) {
    // documentElement is verified for cases where it doesn't yet exist
    // (such as loading iframes in IE - #4833)
    var documentElement = (elem ? elem.ownerDocument || elem : 0).documentElement;

    return documentElement ? documentElement.nodeName !== "HTML" : false;
};

var posProcess = function( selector, context, seed ) {
    var match,
        tmpSet = [],
        later = "",
        root = context.nodeType ? [context] : context;

    // Position selectors must be done after the filter
    // And so must :not(positional) so we move all PSEUDOs to the end
    while ( (match = Expr.match.PSEUDO.exec( selector )) ) {
        later += match[0];
        selector = selector.replace( Expr.match.PSEUDO, "" );
    }

    selector = Expr.relative[selector] ? selector + "*" : selector;

    for ( var i = 0, l = root.length; i < l; i++ ) {
        Sizzle( selector, root[i], tmpSet, seed );
    }

    return Sizzle.filter( later, tmpSet );
};

// EXPOSE
// Override sizzle attribute retrieval
Sizzle.attr = jQuery.attr;
Sizzle.selectors.attrMap = {};
jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;
jQuery.expr[":"] = jQuery.expr.filters;
jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;


})();


var runtil = /Until$/,
    rparentsprev = /^(?:parents|prevUntil|prevAll)/,
    // Note: This RegExp should be improved, or likely pulled from Sizzle
    rmultiselector = /,/,
    isSimple = /^.[^:#\[\.,]*$/,
    slice = Array.prototype.slice,
    POS = jQuery.expr.match.globalPOS,
    // methods guaranteed to produce a unique set when starting from a unique set
    guaranteedUnique = {
        children: true,
        contents: true,
        next: true,
        prev: true
    };

jQuery.fn.extend({
    find: function( selector ) {
        var self = this,
            i, l;

        if ( typeof selector !== "string" ) {
            return jQuery( selector ).filter(function() {
                for ( i = 0, l = self.length; i < l; i++ ) {
                    if ( jQuery.contains( self[ i ], this ) ) {
                        return true;
                    }
                }
            });
        }

        var ret = this.pushStack( "", "find", selector ),
            length, n, r;

        for ( i = 0, l = this.length; i < l; i++ ) {
            length = ret.length;
            jQuery.find( selector, this[i], ret );

            if ( i > 0 ) {
                // Make sure that the results are unique
                for ( n = length; n < ret.length; n++ ) {
                    for ( r = 0; r < length; r++ ) {
                        if ( ret[r] === ret[n] ) {
                            ret.splice(n--, 1);
                            break;
                        }
                    }
                }
            }
        }

        return ret;
    },

    has: function( target ) {
        var targets = jQuery( target );
        return this.filter(function() {
            for ( var i = 0, l = targets.length; i < l; i++ ) {
                if ( jQuery.contains( this, targets[i] ) ) {
                    return true;
                }
            }
        });
    },

    not: function( selector ) {
        return this.pushStack( winnow(this, selector, false), "not", selector);
    },

    filter: function( selector ) {
        return this.pushStack( winnow(this, selector, true), "filter", selector );
    },

    is: function( selector ) {
        return !!selector && (
            typeof selector === "string" ?
                // If this is a positional selector, check membership in the returned set
                // so $("p:first").is("p:last") won't return true for a doc with two "p".
                POS.test( selector ) ?
                    jQuery( selector, this.context ).index( this[0] ) >= 0 :
                    jQuery.filter( selector, this ).length > 0 :
                this.filter( selector ).length > 0 );
    },

    closest: function( selectors, context ) {
        var ret = [], i, l, cur = this[0];

        // Array (deprecated as of jQuery 1.7)
        if ( jQuery.isArray( selectors ) ) {
            var level = 1;

            while ( cur && cur.ownerDocument && cur !== context ) {
                for ( i = 0; i < selectors.length; i++ ) {

                    if ( jQuery( cur ).is( selectors[ i ] ) ) {
                        ret.push({ selector: selectors[ i ], elem: cur, level: level });
                    }
                }

                cur = cur.parentNode;
                level++;
            }

            return ret;
        }

        // String
        var pos = POS.test( selectors ) || typeof selectors !== "string" ?
                jQuery( selectors, context || this.context ) :
                0;

        for ( i = 0, l = this.length; i < l; i++ ) {
            cur = this[i];

            while ( cur ) {
                if ( pos ? pos.index(cur) > -1 : jQuery.find.matchesSelector(cur, selectors) ) {
                    ret.push( cur );
                    break;

                } else {
                    cur = cur.parentNode;
                    if ( !cur || !cur.ownerDocument || cur === context || cur.nodeType === 11 ) {
                        break;
                    }
                }
            }
        }

        ret = ret.length > 1 ? jQuery.unique( ret ) : ret;

        return this.pushStack( ret, "closest", selectors );
    },

    // Determine the position of an element within
    // the matched set of elements
    index: function( elem ) {

        // No argument, return index in parent
        if ( !elem ) {
            return ( this[0] && this[0].parentNode ) ? this.prevAll().length : -1;
        }

        // index in selector
        if ( typeof elem === "string" ) {
            return jQuery.inArray( this[0], jQuery( elem ) );
        }

        // Locate the position of the desired element
        return jQuery.inArray(
            // If it receives a jQuery object, the first element is used
            elem.jquery ? elem[0] : elem, this );
    },

    add: function( selector, context ) {
        var set = typeof selector === "string" ?
                jQuery( selector, context ) :
                jQuery.makeArray( selector && selector.nodeType ? [ selector ] : selector ),
            all = jQuery.merge( this.get(), set );

        return this.pushStack( isDisconnected( set[0] ) || isDisconnected( all[0] ) ?
            all :
            jQuery.unique( all ) );
    },

    andSelf: function() {
        return this.add( this.prevObject );
    }
});

// A painfully simple check to see if an element is disconnected
// from a document (should be improved, where feasible).
function isDisconnected( node ) {
    return !node || !node.parentNode || node.parentNode.nodeType === 11;
}

jQuery.each({
    parent: function( elem ) {
        var parent = elem.parentNode;
        return parent && parent.nodeType !== 11 ? parent : null;
    },
    parents: function( elem ) {
        return jQuery.dir( elem, "parentNode" );
    },
    parentsUntil: function( elem, i, until ) {
        return jQuery.dir( elem, "parentNode", until );
    },
    next: function( elem ) {
        return jQuery.nth( elem, 2, "nextSibling" );
    },
    prev: function( elem ) {
        return jQuery.nth( elem, 2, "previousSibling" );
    },
    nextAll: function( elem ) {
        return jQuery.dir( elem, "nextSibling" );
    },
    prevAll: function( elem ) {
        return jQuery.dir( elem, "previousSibling" );
    },
    nextUntil: function( elem, i, until ) {
        return jQuery.dir( elem, "nextSibling", until );
    },
    prevUntil: function( elem, i, until ) {
        return jQuery.dir( elem, "previousSibling", until );
    },
    siblings: function( elem ) {
        return jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );
    },
    children: function( elem ) {
        return jQuery.sibling( elem.firstChild );
    },
    contents: function( elem ) {
        return jQuery.nodeName( elem, "iframe" ) ?
            elem.contentDocument || elem.contentWindow.document :
            jQuery.makeArray( elem.childNodes );
    }
}, function( name, fn ) {
    jQuery.fn[ name ] = function( until, selector ) {
        var ret = jQuery.map( this, fn, until );

        if ( !runtil.test( name ) ) {
            selector = until;
        }

        if ( selector && typeof selector === "string" ) {
            ret = jQuery.filter( selector, ret );
        }

        ret = this.length > 1 && !guaranteedUnique[ name ] ? jQuery.unique( ret ) : ret;

        if ( (this.length > 1 || rmultiselector.test( selector )) && rparentsprev.test( name ) ) {
            ret = ret.reverse();
        }

        return this.pushStack( ret, name, slice.call( arguments ).join(",") );
    };
});

jQuery.extend({
    filter: function( expr, elems, not ) {
        if ( not ) {
            expr = ":not(" + expr + ")";
        }

        return elems.length === 1 ?
            jQuery.find.matchesSelector(elems[0], expr) ? [ elems[0] ] : [] :
            jQuery.find.matches(expr, elems);
    },

    dir: function( elem, dir, until ) {
        var matched = [],
            cur = elem[ dir ];

        while ( cur && cur.nodeType !== 9 && (until === undefined || cur.nodeType !== 1 || !jQuery( cur ).is( until )) ) {
            if ( cur.nodeType === 1 ) {
                matched.push( cur );
            }
            cur = cur[dir];
        }
        return matched;
    },

    nth: function( cur, result, dir, elem ) {
        result = result || 1;
        var num = 0;

        for ( ; cur; cur = cur[dir] ) {
            if ( cur.nodeType === 1 && ++num === result ) {
                break;
            }
        }

        return cur;
    },

    sibling: function( n, elem ) {
        var r = [];

        for ( ; n; n = n.nextSibling ) {
            if ( n.nodeType === 1 && n !== elem ) {
                r.push( n );
            }
        }

        return r;
    }
});

// Implement the identical functionality for filter and not
function winnow( elements, qualifier, keep ) {

    // Can't pass null or undefined to indexOf in Firefox 4
    // Set to 0 to skip string check
    qualifier = qualifier || 0;

    if ( jQuery.isFunction( qualifier ) ) {
        return jQuery.grep(elements, function( elem, i ) {
            var retVal = !!qualifier.call( elem, i, elem );
            return retVal === keep;
        });

    } else if ( qualifier.nodeType ) {
        return jQuery.grep(elements, function( elem, i ) {
            return ( elem === qualifier ) === keep;
        });

    } else if ( typeof qualifier === "string" ) {
        var filtered = jQuery.grep(elements, function( elem ) {
            return elem.nodeType === 1;
        });

        if ( isSimple.test( qualifier ) ) {
            return jQuery.filter(qualifier, filtered, !keep);
        } else {
            qualifier = jQuery.filter( qualifier, filtered );
        }
    }

    return jQuery.grep(elements, function( elem, i ) {
        return ( jQuery.inArray( elem, qualifier ) >= 0 ) === keep;
    });
}




function createSafeFragment( document ) {
    var list = nodeNames.split( "|" ),
    safeFrag = document.createDocumentFragment();

    if ( safeFrag.createElement ) {
        while ( list.length ) {
            safeFrag.createElement(
                list.pop()
            );
        }
    }
    return safeFrag;
}

var nodeNames = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|" +
        "header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",
    rinlinejQuery = / jQuery\d+="(?:\d+|null)"/g,
    rleadingWhitespace = /^\s+/,
    rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,
    rtagName = /<([\w:]+)/,
    rtbody = /<tbody/i,
    rhtml = /<|&#?\w+;/,
    rnoInnerhtml = /<(?:script|style)/i,
    rnocache = /<(?:script|object|embed|option|style)/i,
    rnoshimcache = new RegExp("<(?:" + nodeNames + ")[\\s/>]", "i"),
    // checked="checked" or checked
    rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
    rscriptType = /\/(java|ecma)script/i,
    rcleanScript = /^\s*<!(?:\[CDATA\[|\-\-)/,
    wrapMap = {
        option: [ 1, "<select multiple='multiple'>", "</select>" ],
        legend: [ 1, "<fieldset>", "</fieldset>" ],
        thead: [ 1, "<table>", "</table>" ],
        tr: [ 2, "<table><tbody>", "</tbody></table>" ],
        td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],
        col: [ 2, "<table><tbody></tbody><colgroup>", "</colgroup></table>" ],
        area: [ 1, "<map>", "</map>" ],
        _default: [ 0, "", "" ]
    },
    safeFragment = createSafeFragment( document );

wrapMap.optgroup = wrapMap.option;
wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;

// IE can't serialize <link> and <script> tags normally
if ( !jQuery.support.htmlSerialize ) {
    wrapMap._default = [ 1, "div<div>", "</div>" ];
}

jQuery.fn.extend({
    text: function( value ) {
        return jQuery.access( this, function( value ) {
            return value === undefined ?
                jQuery.text( this ) :
                this.empty().append( ( this[0] && this[0].ownerDocument || document ).createTextNode( value ) );
        }, null, value, arguments.length );
    },

    wrapAll: function( html ) {
        if ( jQuery.isFunction( html ) ) {
            return this.each(function(i) {
                jQuery(this).wrapAll( html.call(this, i) );
            });
        }

        if ( this[0] ) {
            // The elements to wrap the target around
            var wrap = jQuery( html, this[0].ownerDocument ).eq(0).clone(true);

            if ( this[0].parentNode ) {
                wrap.insertBefore( this[0] );
            }

            wrap.map(function() {
                var elem = this;

                while ( elem.firstChild && elem.firstChild.nodeType === 1 ) {
                    elem = elem.firstChild;
                }

                return elem;
            }).append( this );
        }

        return this;
    },

    wrapInner: function( html ) {
        if ( jQuery.isFunction( html ) ) {
            return this.each(function(i) {
                jQuery(this).wrapInner( html.call(this, i) );
            });
        }

        return this.each(function() {
            var self = jQuery( this ),
                contents = self.contents();

            if ( contents.length ) {
                contents.wrapAll( html );

            } else {
                self.append( html );
            }
        });
    },

    wrap: function( html ) {
        var isFunction = jQuery.isFunction( html );

        return this.each(function(i) {
            jQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );
        });
    },

    unwrap: function() {
        return this.parent().each(function() {
            if ( !jQuery.nodeName( this, "body" ) ) {
                jQuery( this ).replaceWith( this.childNodes );
            }
        }).end();
    },

    append: function() {
        return this.domManip(arguments, true, function( elem ) {
            if ( this.nodeType === 1 ) {
                this.appendChild( elem );
            }
        });
    },

    prepend: function() {
        return this.domManip(arguments, true, function( elem ) {
            if ( this.nodeType === 1 ) {
                this.insertBefore( elem, this.firstChild );
            }
        });
    },

    before: function() {
        if ( this[0] && this[0].parentNode ) {
            return this.domManip(arguments, false, function( elem ) {
                this.parentNode.insertBefore( elem, this );
            });
        } else if ( arguments.length ) {
            var set = jQuery.clean( arguments );
            set.push.apply( set, this.toArray() );
            return this.pushStack( set, "before", arguments );
        }
    },

    after: function() {
        if ( this[0] && this[0].parentNode ) {
            return this.domManip(arguments, false, function( elem ) {
                this.parentNode.insertBefore( elem, this.nextSibling );
            });
        } else if ( arguments.length ) {
            var set = this.pushStack( this, "after", arguments );
            set.push.apply( set, jQuery.clean(arguments) );
            return set;
        }
    },

    // keepData is for internal use only--do not document
    remove: function( selector, keepData ) {
        for ( var i = 0, elem; (elem = this[i]) != null; i++ ) {
            if ( !selector || jQuery.filter( selector, [ elem ] ).length ) {
                if ( !keepData && elem.nodeType === 1 ) {
                    jQuery.cleanData( elem.getElementsByTagName("*") );
                    jQuery.cleanData( [ elem ] );
                }

                if ( elem.parentNode ) {
                    elem.parentNode.removeChild( elem );
                }
            }
        }

        return this;
    },

    empty: function() {
        for ( var i = 0, elem; (elem = this[i]) != null; i++ ) {
            // Remove element nodes and prevent memory leaks
            if ( elem.nodeType === 1 ) {
                jQuery.cleanData( elem.getElementsByTagName("*") );
            }

            // Remove any remaining nodes
            while ( elem.firstChild ) {
                elem.removeChild( elem.firstChild );
            }
        }

        return this;
    },

    clone: function( dataAndEvents, deepDataAndEvents ) {
        dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
        deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

        return this.map( function () {
            return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
        });
    },

    html: function( value ) {
        return jQuery.access( this, function( value ) {
            var elem = this[0] || {},
                i = 0,
                l = this.length;

            if ( value === undefined ) {
                return elem.nodeType === 1 ?
                    elem.innerHTML.replace( rinlinejQuery, "" ) :
                    null;
            }


            if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
                ( jQuery.support.leadingWhitespace || !rleadingWhitespace.test( value ) ) &&
                !wrapMap[ ( rtagName.exec( value ) || ["", ""] )[1].toLowerCase() ] ) {

                value = value.replace( rxhtmlTag, "<$1></$2>" );

                try {
                    for (; i < l; i++ ) {
                        // Remove element nodes and prevent memory leaks
                        elem = this[i] || {};
                        if ( elem.nodeType === 1 ) {
                            jQuery.cleanData( elem.getElementsByTagName( "*" ) );
                            elem.innerHTML = value;
                        }
                    }

                    elem = 0;

                // If using innerHTML throws an exception, use the fallback method
                } catch(e) {}
            }

            if ( elem ) {
                this.empty().append( value );
            }
        }, null, value, arguments.length );
    },

    replaceWith: function( value ) {
        if ( this[0] && this[0].parentNode ) {
            // Make sure that the elements are removed from the DOM before they are inserted
            // this can help fix replacing a parent with child elements
            if ( jQuery.isFunction( value ) ) {
                return this.each(function(i) {
                    var self = jQuery(this), old = self.html();
                    self.replaceWith( value.call( this, i, old ) );
                });
            }

            if ( typeof value !== "string" ) {
                value = jQuery( value ).detach();
            }

            return this.each(function() {
                var next = this.nextSibling,
                    parent = this.parentNode;

                jQuery( this ).remove();

                if ( next ) {
                    jQuery(next).before( value );
                } else {
                    jQuery(parent).append( value );
                }
            });
        } else {
            return this.length ?
                this.pushStack( jQuery(jQuery.isFunction(value) ? value() : value), "replaceWith", value ) :
                this;
        }
    },

    detach: function( selector ) {
        return this.remove( selector, true );
    },

    domManip: function( args, table, callback ) {
        var results, first, fragment, parent,
            value = args[0],
            scripts = [];

        // We can't cloneNode fragments that contain checked, in WebKit
        if ( !jQuery.support.checkClone && arguments.length === 3 && typeof value === "string" && rchecked.test( value ) ) {
            return this.each(function() {
                jQuery(this).domManip( args, table, callback, true );
            });
        }

        if ( jQuery.isFunction(value) ) {
            return this.each(function(i) {
                var self = jQuery(this);
                args[0] = value.call(this, i, table ? self.html() : undefined);
                self.domManip( args, table, callback );
            });
        }

        if ( this[0] ) {
            parent = value && value.parentNode;

            // If we're in a fragment, just use that instead of building a new one
            if ( jQuery.support.parentNode && parent && parent.nodeType === 11 && parent.childNodes.length === this.length ) {
                results = { fragment: parent };

            } else {
                results = jQuery.buildFragment( args, this, scripts );
            }

            fragment = results.fragment;

            if ( fragment.childNodes.length === 1 ) {
                first = fragment = fragment.firstChild;
            } else {
                first = fragment.firstChild;
            }

            if ( first ) {
                table = table && jQuery.nodeName( first, "tr" );

                for ( var i = 0, l = this.length, lastIndex = l - 1; i < l; i++ ) {
                    callback.call(
                        table ?
                            root(this[i], first) :
                            this[i],
                        // Make sure that we do not leak memory by inadvertently discarding
                        // the original fragment (which might have attached data) instead of
                        // using it; in addition, use the original fragment object for the last
                        // item instead of first because it can end up being emptied incorrectly
                        // in certain situations (Bug #8070).
                        // Fragments from the fragment cache must always be cloned and never used
                        // in place.
                        results.cacheable || ( l > 1 && i < lastIndex ) ?
                            jQuery.clone( fragment, true, true ) :
                            fragment
                    );
                }
            }

            if ( scripts.length ) {
                jQuery.each( scripts, function( i, elem ) {
                    if ( elem.src ) {
                        jQuery.ajax({
                            type: "GET",
                            global: false,
                            url: elem.src,
                            async: false,
                            dataType: "script"
                        });
                    } else {
                        jQuery.globalEval( ( elem.text || elem.textContent || elem.innerHTML || "" ).replace( rcleanScript, "/*$0*/" ) );
                    }

                    if ( elem.parentNode ) {
                        elem.parentNode.removeChild( elem );
                    }
                });
            }
        }

        return this;
    }
});

function root( elem, cur ) {
    return jQuery.nodeName(elem, "table") ?
        (elem.getElementsByTagName("tbody")[0] ||
        elem.appendChild(elem.ownerDocument.createElement("tbody"))) :
        elem;
}

function cloneCopyEvent( src, dest ) {

    if ( dest.nodeType !== 1 || !jQuery.hasData( src ) ) {
        return;
    }

    var type, i, l,
        oldData = jQuery._data( src ),
        curData = jQuery._data( dest, oldData ),
        events = oldData.events;

    if ( events ) {
        delete curData.handle;
        curData.events = {};

        for ( type in events ) {
            for ( i = 0, l = events[ type ].length; i < l; i++ ) {
                jQuery.event.add( dest, type, events[ type ][ i ] );
            }
        }
    }

    // make the cloned public data object a copy from the original
    if ( curData.data ) {
        curData.data = jQuery.extend( {}, curData.data );
    }
}

function cloneFixAttributes( src, dest ) {
    var nodeName;

    // We do not need to do anything for non-Elements
    if ( dest.nodeType !== 1 ) {
        return;
    }

    // clearAttributes removes the attributes, which we don't want,
    // but also removes the attachEvent events, which we *do* want
    if ( dest.clearAttributes ) {
        dest.clearAttributes();
    }

    // mergeAttributes, in contrast, only merges back on the
    // original attributes, not the events
    if ( dest.mergeAttributes ) {
        dest.mergeAttributes( src );
    }

    nodeName = dest.nodeName.toLowerCase();

    // IE6-8 fail to clone children inside object elements that use
    // the proprietary classid attribute value (rather than the type
    // attribute) to identify the type of content to display
    if ( nodeName === "object" ) {
        dest.outerHTML = src.outerHTML;

    } else if ( nodeName === "input" && (src.type === "checkbox" || src.type === "radio") ) {
        // IE6-8 fails to persist the checked state of a cloned checkbox
        // or radio button. Worse, IE6-7 fail to give the cloned element
        // a checked appearance if the defaultChecked value isn't also set
        if ( src.checked ) {
            dest.defaultChecked = dest.checked = src.checked;
        }

        // IE6-7 get confused and end up setting the value of a cloned
        // checkbox/radio button to an empty string instead of "on"
        if ( dest.value !== src.value ) {
            dest.value = src.value;
        }

    // IE6-8 fails to return the selected option to the default selected
    // state when cloning options
    } else if ( nodeName === "option" ) {
        dest.selected = src.defaultSelected;

    // IE6-8 fails to set the defaultValue to the correct value when
    // cloning other types of input fields
    } else if ( nodeName === "input" || nodeName === "textarea" ) {
        dest.defaultValue = src.defaultValue;

    // IE blanks contents when cloning scripts
    } else if ( nodeName === "script" && dest.text !== src.text ) {
        dest.text = src.text;
    }

    // Event data gets referenced instead of copied if the expando
    // gets copied too
    dest.removeAttribute( jQuery.expando );

    // Clear flags for bubbling special change/submit events, they must
    // be reattached when the newly cloned events are first activated
    dest.removeAttribute( "_submit_attached" );
    dest.removeAttribute( "_change_attached" );
}

jQuery.buildFragment = function( args, nodes, scripts ) {
    var fragment, cacheable, cacheresults, doc,
    first = args[ 0 ];

    // nodes may contain either an explicit document object,
    // a jQuery collection or context object.
    // If nodes[0] contains a valid object to assign to doc
    if ( nodes && nodes[0] ) {
        doc = nodes[0].ownerDocument || nodes[0];
    }

    // Ensure that an attr object doesn't incorrectly stand in as a document object
    // Chrome and Firefox seem to allow this to occur and will throw exception
    // Fixes #8950
    if ( !doc.createDocumentFragment ) {
        doc = document;
    }

    // Only cache "small" (1/2 KB) HTML strings that are associated with the main document
    // Cloning options loses the selected state, so don't cache them
    // IE 6 doesn't like it when you put <object> or <embed> elements in a fragment
    // Also, WebKit does not clone 'checked' attributes on cloneNode, so don't cache
    // Lastly, IE6,7,8 will not correctly reuse cached fragments that were created from unknown elems #10501
    if ( args.length === 1 && typeof first === "string" && first.length < 512 && doc === document &&
        first.charAt(0) === "<" && !rnocache.test( first ) &&
        (jQuery.support.checkClone || !rchecked.test( first )) &&
        (jQuery.support.html5Clone || !rnoshimcache.test( first )) ) {

        cacheable = true;

        cacheresults = jQuery.fragments[ first ];
        if ( cacheresults && cacheresults !== 1 ) {
            fragment = cacheresults;
        }
    }

    if ( !fragment ) {
        fragment = doc.createDocumentFragment();
        jQuery.clean( args, doc, fragment, scripts );
    }

    if ( cacheable ) {
        jQuery.fragments[ first ] = cacheresults ? fragment : 1;
    }

    return { fragment: fragment, cacheable: cacheable };
};

jQuery.fragments = {};

jQuery.each({
    appendTo: "append",
    prependTo: "prepend",
    insertBefore: "before",
    insertAfter: "after",
    replaceAll: "replaceWith"
}, function( name, original ) {
    jQuery.fn[ name ] = function( selector ) {
        var ret = [],
            insert = jQuery( selector ),
            parent = this.length === 1 && this[0].parentNode;

        if ( parent && parent.nodeType === 11 && parent.childNodes.length === 1 && insert.length === 1 ) {
            insert[ original ]( this[0] );
            return this;

        } else {
            for ( var i = 0, l = insert.length; i < l; i++ ) {
                var elems = ( i > 0 ? this.clone(true) : this ).get();
                jQuery( insert[i] )[ original ]( elems );
                ret = ret.concat( elems );
            }

            return this.pushStack( ret, name, insert.selector );
        }
    };
});

function getAll( elem ) {
    if ( typeof elem.getElementsByTagName !== "undefined" ) {
        return elem.getElementsByTagName( "*" );

    } else if ( typeof elem.querySelectorAll !== "undefined" ) {
        return elem.querySelectorAll( "*" );

    } else {
        return [];
    }
}

// Used in clean, fixes the defaultChecked property
function fixDefaultChecked( elem ) {
    if ( elem.type === "checkbox" || elem.type === "radio" ) {
        elem.defaultChecked = elem.checked;
    }
}
// Finds all inputs and passes them to fixDefaultChecked
function findInputs( elem ) {
    var nodeName = ( elem.nodeName || "" ).toLowerCase();
    if ( nodeName === "input" ) {
        fixDefaultChecked( elem );
    // Skip scripts, get other children
    } else if ( nodeName !== "script" && typeof elem.getElementsByTagName !== "undefined" ) {
        jQuery.grep( elem.getElementsByTagName("input"), fixDefaultChecked );
    }
}

// Derived From: http://www.iecss.com/shimprove/javascript/shimprove.1-0-1.js
function shimCloneNode( elem ) {
    var div = document.createElement( "div" );
    safeFragment.appendChild( div );

    div.innerHTML = elem.outerHTML;
    return div.firstChild;
}

jQuery.extend({
    clone: function( elem, dataAndEvents, deepDataAndEvents ) {
        var srcElements,
            destElements,
            i,
            // IE<=8 does not properly clone detached, unknown element nodes
            clone = jQuery.support.html5Clone || jQuery.isXMLDoc(elem) || !rnoshimcache.test( "<" + elem.nodeName + ">" ) ?
                elem.cloneNode( true ) :
                shimCloneNode( elem );

        if ( (!jQuery.support.noCloneEvent || !jQuery.support.noCloneChecked) &&
                (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem) ) {
            // IE copies events bound via attachEvent when using cloneNode.
            // Calling detachEvent on the clone will also remove the events
            // from the original. In order to get around this, we use some
            // proprietary methods to clear the events. Thanks to MooTools
            // guys for this hotness.

            cloneFixAttributes( elem, clone );

            // Using Sizzle here is crazy slow, so we use getElementsByTagName instead
            srcElements = getAll( elem );
            destElements = getAll( clone );

            // Weird iteration because IE will replace the length property
            // with an element if you are cloning the body and one of the
            // elements on the page has a name or id of "length"
            for ( i = 0; srcElements[i]; ++i ) {
                // Ensure that the destination node is not null; Fixes #9587
                if ( destElements[i] ) {
                    cloneFixAttributes( srcElements[i], destElements[i] );
                }
            }
        }

        // Copy the events from the original to the clone
        if ( dataAndEvents ) {
            cloneCopyEvent( elem, clone );

            if ( deepDataAndEvents ) {
                srcElements = getAll( elem );
                destElements = getAll( clone );

                for ( i = 0; srcElements[i]; ++i ) {
                    cloneCopyEvent( srcElements[i], destElements[i] );
                }
            }
        }

        srcElements = destElements = null;

        // Return the cloned set
        return clone;
    },

    clean: function( elems, context, fragment, scripts ) {
        var checkScriptType, script, j,
                ret = [];

        context = context || document;

        // !context.createElement fails in IE with an error but returns typeof 'object'
        if ( typeof context.createElement === "undefined" ) {
            context = context.ownerDocument || context[0] && context[0].ownerDocument || document;
        }

        for ( var i = 0, elem; (elem = elems[i]) != null; i++ ) {
            if ( typeof elem === "number" ) {
                elem += "";
            }

            if ( !elem ) {
                continue;
            }

            // Convert html string into DOM nodes
            if ( typeof elem === "string" ) {
                if ( !rhtml.test( elem ) ) {
                    elem = context.createTextNode( elem );
                } else {
                    // Fix "XHTML"-style tags in all browsers
                    elem = elem.replace(rxhtmlTag, "<$1></$2>");

                    // Trim whitespace, otherwise indexOf won't work as expected
                    var tag = ( rtagName.exec( elem ) || ["", ""] )[1].toLowerCase(),
                        wrap = wrapMap[ tag ] || wrapMap._default,
                        depth = wrap[0],
                        div = context.createElement("div"),
                        safeChildNodes = safeFragment.childNodes,
                        remove;

                    // Append wrapper element to unknown element safe doc fragment
                    if ( context === document ) {
                        // Use the fragment we've already created for this document
                        safeFragment.appendChild( div );
                    } else {
                        // Use a fragment created with the owner document
                        createSafeFragment( context ).appendChild( div );
                    }

                    // Go to html and back, then peel off extra wrappers
                    div.innerHTML = wrap[1] + elem + wrap[2];

                    // Move to the right depth
                    while ( depth-- ) {
                        div = div.lastChild;
                    }

                    // Remove IE's autoinserted <tbody> from table fragments
                    if ( !jQuery.support.tbody ) {

                        // String was a <table>, *may* have spurious <tbody>
                        var hasBody = rtbody.test(elem),
                            tbody = tag === "table" && !hasBody ?
                                div.firstChild && div.firstChild.childNodes :

                                // String was a bare <thead> or <tfoot>
                                wrap[1] === "<table>" && !hasBody ?
                                    div.childNodes :
                                    [];

                        for ( j = tbody.length - 1; j >= 0 ; --j ) {
                            if ( jQuery.nodeName( tbody[ j ], "tbody" ) && !tbody[ j ].childNodes.length ) {
                                tbody[ j ].parentNode.removeChild( tbody[ j ] );
                            }
                        }
                    }

                    // IE completely kills leading whitespace when innerHTML is used
                    if ( !jQuery.support.leadingWhitespace && rleadingWhitespace.test( elem ) ) {
                        div.insertBefore( context.createTextNode( rleadingWhitespace.exec(elem)[0] ), div.firstChild );
                    }

                    elem = div.childNodes;

                    // Clear elements from DocumentFragment (safeFragment or otherwise)
                    // to avoid hoarding elements. Fixes #11356
                    if ( div ) {
                        div.parentNode.removeChild( div );

                        // Guard against -1 index exceptions in FF3.6
                        if ( safeChildNodes.length > 0 ) {
                            remove = safeChildNodes[ safeChildNodes.length - 1 ];

                            if ( remove && remove.parentNode ) {
                                remove.parentNode.removeChild( remove );
                            }
                        }
                    }
                }
            }

            // Resets defaultChecked for any radios and checkboxes
            // about to be appended to the DOM in IE 6/7 (#8060)
            var len;
            if ( !jQuery.support.appendChecked ) {
                if ( elem[0] && typeof (len = elem.length) === "number" ) {
                    for ( j = 0; j < len; j++ ) {
                        findInputs( elem[j] );
                    }
                } else {
                    findInputs( elem );
                }
            }

            if ( elem.nodeType ) {
                ret.push( elem );
            } else {
                ret = jQuery.merge( ret, elem );
            }
        }

        if ( fragment ) {
            checkScriptType = function( elem ) {
                return !elem.type || rscriptType.test( elem.type );
            };
            for ( i = 0; ret[i]; i++ ) {
                script = ret[i];
                if ( scripts && jQuery.nodeName( script, "script" ) && (!script.type || rscriptType.test( script.type )) ) {
                    scripts.push( script.parentNode ? script.parentNode.removeChild( script ) : script );

                } else {
                    if ( script.nodeType === 1 ) {
                        var jsTags = jQuery.grep( script.getElementsByTagName( "script" ), checkScriptType );

                        ret.splice.apply( ret, [i + 1, 0].concat( jsTags ) );
                    }
                    fragment.appendChild( script );
                }
            }
        }

        return ret;
    },

    cleanData: function( elems ) {
        var data, id,
            cache = jQuery.cache,
            special = jQuery.event.special,
            deleteExpando = jQuery.support.deleteExpando;

        for ( var i = 0, elem; (elem = elems[i]) != null; i++ ) {
            if ( elem.nodeName && jQuery.noData[elem.nodeName.toLowerCase()] ) {
                continue;
            }

            id = elem[ jQuery.expando ];

            if ( id ) {
                data = cache[ id ];

                if ( data && data.events ) {
                    for ( var type in data.events ) {
                        if ( special[ type ] ) {
                            jQuery.event.remove( elem, type );

                        // This is a shortcut to avoid jQuery.event.remove's overhead
                        } else {
                            jQuery.removeEvent( elem, type, data.handle );
                        }
                    }

                    // Null the DOM reference to avoid IE6/7/8 leak (#7054)
                    if ( data.handle ) {
                        data.handle.elem = null;
                    }
                }

                if ( deleteExpando ) {
                    delete elem[ jQuery.expando ];

                } else if ( elem.removeAttribute ) {
                    elem.removeAttribute( jQuery.expando );
                }

                delete cache[ id ];
            }
        }
    }
});




var ralpha = /alpha\([^)]*\)/i,
    ropacity = /opacity=([^)]*)/,
    // fixed for IE9, see #8346
    rupper = /([A-Z]|^ms)/g,
    rnum = /^[\-+]?(?:\d*\.)?\d+$/i,
    rnumnonpx = /^-?(?:\d*\.)?\d+(?!px)[^\d\s]+$/i,
    rrelNum = /^([\-+])=([\-+.\de]+)/,
    rmargin = /^margin/,

    cssShow = { position: "absolute", visibility: "hidden", display: "block" },

    // order is important!
    cssExpand = [ "Top", "Right", "Bottom", "Left" ],

    curCSS,

    getComputedStyle,
    currentStyle;

jQuery.fn.css = function( name, value ) {
    return jQuery.access( this, function( elem, name, value ) {
        return value !== undefined ?
            jQuery.style( elem, name, value ) :
            jQuery.css( elem, name );
    }, name, value, arguments.length > 1 );
};

jQuery.extend({
    // Add in style property hooks for overriding the default
    // behavior of getting and setting a style property
    cssHooks: {
        opacity: {
            get: function( elem, computed ) {
                if ( computed ) {
                    // We should always get a number back from opacity
                    var ret = curCSS( elem, "opacity" );
                    return ret === "" ? "1" : ret;

                } else {
                    return elem.style.opacity;
                }
            }
        }
    },

    // Exclude the following css properties to add px
    cssNumber: {
        "fillOpacity": true,
        "fontWeight": true,
        "lineHeight": true,
        "opacity": true,
        "orphans": true,
        "widows": true,
        "zIndex": true,
        "zoom": true
    },

    // Add in properties whose names you wish to fix before
    // setting or getting the value
    cssProps: {
        // normalize float css property
        "float": jQuery.support.cssFloat ? "cssFloat" : "styleFloat"
    },

    // Get and set the style property on a DOM Node
    style: function( elem, name, value, extra ) {
        // Don't set styles on text and comment nodes
        if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
            return;
        }

        // Make sure that we're working with the right name
        var ret, type, origName = jQuery.camelCase( name ),
            style = elem.style, hooks = jQuery.cssHooks[ origName ];

        name = jQuery.cssProps[ origName ] || origName;

        // Check if we're setting a value
        if ( value !== undefined ) {
            type = typeof value;

            // convert relative number strings (+= or -=) to relative numbers. #7345
            if ( type === "string" && (ret = rrelNum.exec( value )) ) {
                value = ( +( ret[1] + 1) * +ret[2] ) + parseFloat( jQuery.css( elem, name ) );
                // Fixes bug #9237
                type = "number";
            }

            // Make sure that NaN and null values aren't set. See: #7116
            if ( value == null || type === "number" && isNaN( value ) ) {
                return;
            }

            // If a number was passed in, add 'px' to the (except for certain CSS properties)
            if ( type === "number" && !jQuery.cssNumber[ origName ] ) {
                value += "px";
            }

            // If a hook was provided, use that value, otherwise just set the specified value
            if ( !hooks || !("set" in hooks) || (value = hooks.set( elem, value )) !== undefined ) {
                // Wrapped to prevent IE from throwing errors when 'invalid' values are provided
                // Fixes bug #5509
                try {
                    style[ name ] = value;
                } catch(e) {}
            }

        } else {
            // If a hook was provided get the non-computed value from there
            if ( hooks && "get" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {
                return ret;
            }

            // Otherwise just get the value from the style object
            return style[ name ];
        }
    },

    css: function( elem, name, extra ) {
        var ret, hooks;

        // Make sure that we're working with the right name
        name = jQuery.camelCase( name );
        hooks = jQuery.cssHooks[ name ];
        name = jQuery.cssProps[ name ] || name;

        // cssFloat needs a special treatment
        if ( name === "cssFloat" ) {
            name = "float";
        }

        // If a hook was provided get the computed value from there
        if ( hooks && "get" in hooks && (ret = hooks.get( elem, true, extra )) !== undefined ) {
            return ret;

        // Otherwise, if a way to get the computed value exists, use that
        } else if ( curCSS ) {
            return curCSS( elem, name );
        }
    },

    // A method for quickly swapping in/out CSS properties to get correct calculations
    swap: function( elem, options, callback ) {
        var old = {},
            ret, name;

        // Remember the old values, and insert the new ones
        for ( name in options ) {
            old[ name ] = elem.style[ name ];
            elem.style[ name ] = options[ name ];
        }

        ret = callback.call( elem );

        // Revert the old values
        for ( name in options ) {
            elem.style[ name ] = old[ name ];
        }

        return ret;
    }
});

// DEPRECATED in 1.3, Use jQuery.css() instead
jQuery.curCSS = jQuery.css;

if ( document.defaultView && document.defaultView.getComputedStyle ) {
    getComputedStyle = function( elem, name ) {
        var ret, defaultView, computedStyle, width,
            style = elem.style;

        name = name.replace( rupper, "-$1" ).toLowerCase();

        if ( (defaultView = elem.ownerDocument.defaultView) &&
                (computedStyle = defaultView.getComputedStyle( elem, null )) ) {

            ret = computedStyle.getPropertyValue( name );
            if ( ret === "" && !jQuery.contains( elem.ownerDocument.documentElement, elem ) ) {
                ret = jQuery.style( elem, name );
            }
        }

        // A tribute to the "awesome hack by Dean Edwards"
        // WebKit uses "computed value (percentage if specified)" instead of "used value" for margins
        // which is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values
        if ( !jQuery.support.pixelMargin && computedStyle && rmargin.test( name ) && rnumnonpx.test( ret ) ) {
            width = style.width;
            style.width = ret;
            ret = computedStyle.width;
            style.width = width;
        }

        return ret;
    };
}

if ( document.documentElement.currentStyle ) {
    currentStyle = function( elem, name ) {
        var left, rsLeft, uncomputed,
            ret = elem.currentStyle && elem.currentStyle[ name ],
            style = elem.style;

        // Avoid setting ret to empty string here
        // so we don't default to auto
        if ( ret == null && style && (uncomputed = style[ name ]) ) {
            ret = uncomputed;
        }

        // From the awesome hack by Dean Edwards
        // http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291

        // If we're not dealing with a regular pixel number
        // but a number that has a weird ending, we need to convert it to pixels
        if ( rnumnonpx.test( ret ) ) {

            // Remember the original values
            left = style.left;
            rsLeft = elem.runtimeStyle && elem.runtimeStyle.left;

            // Put in the new values to get a computed value out
            if ( rsLeft ) {
                elem.runtimeStyle.left = elem.currentStyle.left;
            }
            style.left = name === "fontSize" ? "1em" : ret;
            ret = style.pixelLeft + "px";

            // Revert the changed values
            style.left = left;
            if ( rsLeft ) {
                elem.runtimeStyle.left = rsLeft;
            }
        }

        return ret === "" ? "auto" : ret;
    };
}

curCSS = getComputedStyle || currentStyle;

function getWidthOrHeight( elem, name, extra ) {

    // Start with offset property
    var val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
        i = name === "width" ? 1 : 0,
        len = 4;
    if (val === undefined) {
        val = name === "width" ? elem.getBBox().width : elem.getBBox().height;
    }
    if ( val > 0 ) {
        if ( extra !== "border" ) {
            for ( ; i < len; i += 2 ) {
                if ( !extra ) {
                    val -= parseFloat( jQuery.css( elem, "padding" + cssExpand[ i ] ) ) || 0;
                }
                if ( extra === "margin" ) {
                    val += parseFloat( jQuery.css( elem, extra + cssExpand[ i ] ) ) || 0;
                } else {
                    val -= parseFloat( jQuery.css( elem, "border" + cssExpand[ i ] + "Width" ) ) || 0;
                }
            }
        }

        return val + "px";
    }

    // Fall back to computed then uncomputed css if necessary
    val = curCSS( elem, name );
    if ( val < 0 || val == null ) {
        val = elem.style[ name ];
    }

    // Computed unit is not pixels. Stop here and return.
    if ( rnumnonpx.test(val) ) {
        return val;
    }

    // Normalize "", auto, and prepare for extra
    val = parseFloat( val ) || 0;

    // Add padding, border, margin
    if ( extra ) {
        for ( ; i < len; i += 2 ) {
            val += parseFloat( jQuery.css( elem, "padding" + cssExpand[ i ] ) ) || 0;
            if ( extra !== "padding" ) {
                val += parseFloat( jQuery.css( elem, "border" + cssExpand[ i ] + "Width" ) ) || 0;
            }
            if ( extra === "margin" ) {
                val += parseFloat( jQuery.css( elem, extra + cssExpand[ i ]) ) || 0;
            }
        }
    }

    return val + "px";
}

jQuery.each([ "height", "width" ], function( i, name ) {
    jQuery.cssHooks[ name ] = {
        get: function( elem, computed, extra ) {
            if ( computed ) {
                if ( elem.offsetWidth !== 0 ) {
                    return getWidthOrHeight( elem, name, extra );
                } else {
                    return jQuery.swap( elem, cssShow, function() {
                        return getWidthOrHeight( elem, name, extra );
                    });
                }
            }
        },

        set: function( elem, value ) {
            return rnum.test( value ) ?
                value + "px" :
                value;
        }
    };
});

if ( !jQuery.support.opacity ) {
    jQuery.cssHooks.opacity = {
        get: function( elem, computed ) {
            // IE uses filters for opacity
            return ropacity.test( (computed && elem.currentStyle ? elem.currentStyle.filter : elem.style.filter) || "" ) ?
                ( parseFloat( RegExp.$1 ) / 100 ) + "" :
                computed ? "1" : "";
        },

        set: function( elem, value ) {
            var style = elem.style,
                currentStyle = elem.currentStyle,
                opacity = jQuery.isNumeric( value ) ? "alpha(opacity=" + value * 100 + ")" : "",
                filter = currentStyle && currentStyle.filter || style.filter || "";

            // IE has trouble with opacity if it does not have layout
            // Force it by setting the zoom level
            // style.zoom = 1;

            // if setting opacity to 1, and no other filters exist - attempt to remove filter attribute #6652
          //    if ( value >= 1 && jQuery.trim( filter.replace( ralpha, "" ) ) === "" ) {

          //        // Setting style.filter to null, "" & " " still leave "filter:" in the cssText
          //        // if "filter:" is present at all, clearType is disabled, we want to avoid this
          //        // style.removeAttribute is IE Only, but so apparently is this code path...
          //        style.removeAttribute( "filter" );

          //        // if there there is no filter style applied in a css rule, we are done
          //        if ( currentStyle && !currentStyle.filter ) {
          //            return;
          //        }
          //    }

            // otherwise, set new filter values
            style.filter = ralpha.test( filter ) ?
                filter.replace( ralpha, opacity ) :
                filter + " " + opacity;
        }
    };
}

jQuery(function() {
    // This hook cannot be added until DOM ready because the support test
    // for it is not run until after DOM ready
    if ( !jQuery.support.reliableMarginRight ) {
        jQuery.cssHooks.marginRight = {
            get: function( elem, computed ) {
                // WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
                // Work around by temporarily setting element display to inline-block
                return jQuery.swap( elem, { "display": "inline-block" }, function() {
                    if ( computed ) {
                        return curCSS( elem, "margin-right" );
                    } else {
                        return elem.style.marginRight;
                    }
                });
            }
        };
    }
});

if ( jQuery.expr && jQuery.expr.filters ) {
    jQuery.expr.filters.hidden = function( elem ) {
        var width = elem.offsetWidth,
            height = elem.offsetHeight;

        return ( width === 0 && height === 0 ) || (!jQuery.support.reliableHiddenOffsets && ((elem.style && elem.style.display) || jQuery.css( elem, "display" )) === "none");
    };

    jQuery.expr.filters.visible = function( elem ) {
        return !jQuery.expr.filters.hidden( elem );
    };
}

// These hooks are used by animate to expand properties
jQuery.each({
    margin: "",
    padding: "",
    border: "Width"
}, function( prefix, suffix ) {

    jQuery.cssHooks[ prefix + suffix ] = {
        expand: function( value ) {
            var i,

                // assumes a single number if not a string
                parts = typeof value === "string" ? value.split(" ") : [ value ],
                expanded = {};

            for ( i = 0; i < 4; i++ ) {
                expanded[ prefix + cssExpand[ i ] + suffix ] =
                    parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
            }

            return expanded;
        }
    };
});




var r20 = /%20/g,
    rbracket = /\[\]$/,
    rCRLF = /\r?\n/g,
    rhash = /#.*$/,
    rheaders = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg, // IE leaves an \r character at EOL
    rinput = /^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,
    // #7653, #8125, #8152: local protocol detection
    rlocalProtocol = /^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,
    rnoContent = /^(?:GET|HEAD)$/,
    rprotocol = /^\/\//,
    rquery = /\?/,
    rscript = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,
    rselectTextarea = /^(?:select|textarea)/i,
    rspacesAjax = /\s+/,
    rts = /([?&])_=[^&]*/,
    rurl = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,

    // Keep a copy of the old load method
    _load = jQuery.fn.load,

    /* Prefilters
     * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
     * 2) These are called:
     *    - BEFORE asking for a transport
     *    - AFTER param serialization (s.data is a string if s.processData is true)
     * 3) key is the dataType
     * 4) the catchall symbol "*" can be used
     * 5) execution will start with transport dataType and THEN continue down to "*" if needed
     */
    prefilters = {},

    /* Transports bindings
     * 1) key is the dataType
     * 2) the catchall symbol "*" can be used
     * 3) selection will start with transport dataType and THEN go to "*" if needed
     */
    transports = {},

    // Document location
    ajaxLocation,

    // Document location segments
    ajaxLocParts,

    // Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
    allTypes = ["*/"] + ["*"];

// #8138, IE may throw an exception when accessing
// a field from window.location if document.domain has been set
try {
    ajaxLocation = location.href;
} catch( e ) {
    // Use the href attribute of an A element
    // since IE will modify it given document.location
    ajaxLocation = document.createElement( "a" );
    ajaxLocation.href = "";
    ajaxLocation = ajaxLocation.href;
}

// Segment location into parts
ajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

    // dataTypeExpression is optional and defaults to "*"
    return function( dataTypeExpression, func ) {

        if ( typeof dataTypeExpression !== "string" ) {
            func = dataTypeExpression;
            dataTypeExpression = "*";
        }

        if ( jQuery.isFunction( func ) ) {
            var dataTypes = dataTypeExpression.toLowerCase().split( rspacesAjax ),
                i = 0,
                length = dataTypes.length,
                dataType,
                list,
                placeBefore;

            // For each dataType in the dataTypeExpression
            for ( ; i < length; i++ ) {
                dataType = dataTypes[ i ];
                // We control if we're asked to add before
                // any existing element
                placeBefore = /^\+/.test( dataType );
                if ( placeBefore ) {
                    dataType = dataType.substr( 1 ) || "*";
                }
                list = structure[ dataType ] = structure[ dataType ] || [];
                // then we add to the structure accordingly
                list[ placeBefore ? "unshift" : "push" ]( func );
            }
        }
    };
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR,
        dataType /* internal */, inspected /* internal */ ) {

    dataType = dataType || options.dataTypes[ 0 ];
    inspected = inspected || {};

    inspected[ dataType ] = true;

    var list = structure[ dataType ],
        i = 0,
        length = list ? list.length : 0,
        executeOnly = ( structure === prefilters ),
        selection;

    for ( ; i < length && ( executeOnly || !selection ); i++ ) {
        selection = list[ i ]( options, originalOptions, jqXHR );
        // If we got redirected to another dataType
        // we try there if executing only and not done already
        if ( typeof selection === "string" ) {
            if ( !executeOnly || inspected[ selection ] ) {
                selection = undefined;
            } else {
                options.dataTypes.unshift( selection );
                selection = inspectPrefiltersOrTransports(
                        structure, options, originalOptions, jqXHR, selection, inspected );
            }
        }
    }
    // If we're only executing or nothing was selected
    // we try the catchall dataType if not done already
    if ( ( executeOnly || !selection ) && !inspected[ "*" ] ) {
        selection = inspectPrefiltersOrTransports(
                structure, options, originalOptions, jqXHR, "*", inspected );
    }
    // unnecessary when only executing (prefilters)
    // but it'll be ignored by the caller in that case
    return selection;
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
    var key, deep,
        flatOptions = jQuery.ajaxSettings.flatOptions || {};
    for ( key in src ) {
        if ( src[ key ] !== undefined ) {
            ( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
        }
    }
    if ( deep ) {
        jQuery.extend( true, target, deep );
    }
}

jQuery.fn.extend({
    load: function( url, params, callback ) {
        if ( typeof url !== "string" && _load ) {
            return _load.apply( this, arguments );

        // Don't do a request if no elements are being requested
        } else if ( !this.length ) {
            return this;
        }

        var off = url.indexOf( " " );
        if ( off >= 0 ) {
            var selector = url.slice( off, url.length );
            url = url.slice( 0, off );
        }

        // Default to a GET request
        var type = "GET";

        // If the second parameter was provided
        if ( params ) {
            // If it's a function
            if ( jQuery.isFunction( params ) ) {
                // We assume that it's the callback
                callback = params;
                params = undefined;

            // Otherwise, build a param string
            } else if ( typeof params === "object" ) {
                params = jQuery.param( params, jQuery.ajaxSettings.traditional );
                type = "POST";
            }
        }

        var self = this;

        // Request the remote document
        jQuery.ajax({
            url: url,
            type: type,
            dataType: "html",
            data: params,
            // Complete callback (responseText is used internally)
            complete: function( jqXHR, status, responseText ) {
                // Store the response as specified by the jqXHR object
                responseText = jqXHR.responseText;
                // If successful, inject the HTML into all the matched elements
                if ( jqXHR.isResolved() ) {
                    // #4825: Get the actual response in case
                    // a dataFilter is present in ajaxSettings
                    jqXHR.done(function( r ) {
                        responseText = r;
                    });
                    // See if a selector was specified
                    self.html( selector ?
                        // Create a dummy div to hold the results
                        jQuery("<div>")
                            // inject the contents of the document in, removing the scripts
                            // to avoid any 'Permission Denied' errors in IE
                            .append(responseText.replace(rscript, ""))

                            // Locate the specified elements
                            .find(selector) :

                        // If not, just inject the full result
                        responseText );
                }

                if ( callback ) {
                    self.each( callback, [ responseText, status, jqXHR ] );
                }
            }
        });

        return this;
    },

    serialize: function() {
        return jQuery.param( this.serializeArray() );
    },

    serializeArray: function() {
        return this.map(function(){
            return this.elements ? jQuery.makeArray( this.elements ) : this;
        })
        .filter(function(){
            return this.name && !this.disabled &&
                ( this.checked || rselectTextarea.test( this.nodeName ) ||
                    rinput.test( this.type ) );
        })
        .map(function( i, elem ){
            var val = jQuery( this ).val();

            return val == null ?
                null :
                jQuery.isArray( val ) ?
                    jQuery.map( val, function( val, i ){
                        return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
                    }) :
                    { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
        }).get();
    }
});

// Attach a bunch of functions for handling common AJAX events
jQuery.each( "ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split( " " ), function( i, o ){
    jQuery.fn[ o ] = function( f ){
        return this.on( o, f );
    };
});

jQuery.each( [ "get", "post" ], function( i, method ) {
    jQuery[ method ] = function( url, data, callback, type ) {
        // shift arguments if data argument was omitted
        if ( jQuery.isFunction( data ) ) {
            type = type || callback;
            callback = data;
            data = undefined;
        }

        return jQuery.ajax({
            type: method,
            url: url,
            data: data,
            success: callback,
            dataType: type
        });
    };
});

jQuery.extend({

    getScript: function( url, callback ) {
        return jQuery.get( url, undefined, callback, "script" );
    },

    getJSON: function( url, data, callback ) {
        return jQuery.get( url, data, callback, "json" );
    },

    // Creates a full fledged settings object into target
    // with both ajaxSettings and settings fields.
    // If target is omitted, writes into ajaxSettings.
    ajaxSetup: function( target, settings ) {
        if ( settings ) {
            // Building a settings object
            ajaxExtend( target, jQuery.ajaxSettings );
        } else {
            // Extending ajaxSettings
            settings = target;
            target = jQuery.ajaxSettings;
        }
        ajaxExtend( target, settings );
        return target;
    },

    ajaxSettings: {
        url: ajaxLocation,
        isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),
        global: true,
        type: "GET",
        contentType: "application/x-www-form-urlencoded; charset=UTF-8",
        processData: true,
        async: true,
        /*
        timeout: 0,
        data: null,
        dataType: null,
        username: null,
        password: null,
        cache: null,
        traditional: false,
        headers: {},
        */

        accepts: {
            xml: "application/xml, text/xml",
            html: "text/html",
            text: "text/plain",
            json: "application/json, text/javascript",
            "*": allTypes
        },

        contents: {
            xml: /xml/,
            html: /html/,
            json: /json/
        },

        responseFields: {
            xml: "responseXML",
            text: "responseText"
        },

        // List of data converters
        // 1) key format is "source_type destination_type" (a single space in-between)
        // 2) the catchall symbol "*" can be used for source_type
        converters: {

            // Convert anything to text
            "* text": window.String,

            // Text to html (true = no transformation)
            "text html": true,

            // Evaluate text as a json expression
            "text json": jQuery.parseJSON,

            // Parse text as xml
            "text xml": jQuery.parseXML
        },

        // For options that shouldn't be deep extended:
        // you can add your own custom options here if
        // and when you create one that shouldn't be
        // deep extended (see ajaxExtend)
        flatOptions: {
            context: true,
            url: true
        }
    },

    ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
    ajaxTransport: addToPrefiltersOrTransports( transports ),

    // Main method
    ajax: function( url, options ) {

        // If url is an object, simulate pre-1.5 signature
        if ( typeof url === "object" ) {
            options = url;
            url = undefined;
        }

        // Force options to be an object
        options = options || {};

        var // Create the final options object
            s = jQuery.ajaxSetup( {}, options ),
            // Callbacks context
            callbackContext = s.context || s,
            // Context for global events
            // It's the callbackContext if one was provided in the options
            // and if it's a DOM node or a jQuery collection
            globalEventContext = callbackContext !== s &&
                ( callbackContext.nodeType || callbackContext instanceof jQuery ) ?
                        jQuery( callbackContext ) : jQuery.event,
            // Deferreds
            deferred = jQuery.Deferred(),
            completeDeferred = jQuery.Callbacks( "once memory" ),
            // Status-dependent callbacks
            statusCode = s.statusCode || {},
            // ifModified key
            ifModifiedKey,
            // Headers (they are sent all at once)
            requestHeaders = {},
            requestHeadersNames = {},
            // Response headers
            responseHeadersString,
            responseHeaders,
            // transport
            transport,
            // timeout handle
            timeoutTimer,
            // Cross-domain detection vars
            parts,
            // The jqXHR state
            state = 0,
            // To know if global events are to be dispatched
            fireGlobals,
            // Loop variable
            i,
            // Fake xhr
            jqXHR = {

                readyState: 0,

                // Caches the header
                setRequestHeader: function( name, value ) {
                    if ( !state ) {
                        var lname = name.toLowerCase();
                        name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;
                        requestHeaders[ name ] = value;
                    }
                    return this;
                },

                // Raw string
                getAllResponseHeaders: function() {
                    return state === 2 ? responseHeadersString : null;
                },

                // Builds headers hashtable if needed
                getResponseHeader: function( key ) {
                    var match;
                    if ( state === 2 ) {
                        if ( !responseHeaders ) {
                            responseHeaders = {};
                            while( ( match = rheaders.exec( responseHeadersString ) ) ) {
                                responseHeaders[ match[1].toLowerCase() ] = match[ 2 ];
                            }
                        }
                        match = responseHeaders[ key.toLowerCase() ];
                    }
                    return match === undefined ? null : match;
                },

                // Overrides response content-type header
                overrideMimeType: function( type ) {
                    if ( !state ) {
                        s.mimeType = type;
                    }
                    return this;
                },

                // Cancel the request
                abort: function( statusText ) {
                    statusText = statusText || "abort";
                    if ( transport ) {
                        transport.abort( statusText );
                    }
                    done( 0, statusText );
                    return this;
                }
            };

        // Callback for when everything is done
        // It is defined here because jslint complains if it is declared
        // at the end of the function (which would be more logical and readable)
        function done( status, nativeStatusText, responses, headers ) {

            // Called once
            if ( state === 2 ) {
                return;
            }

            // State is "done" now
            state = 2;

            // Clear timeout if it exists
            if ( timeoutTimer ) {
                clearTimeout( timeoutTimer );
            }

            // Dereference transport for early garbage collection
            // (no matter how long the jqXHR object will be used)
            transport = undefined;

            // Cache response headers
            responseHeadersString = headers || "";

            // Set readyState
            jqXHR.readyState = status > 0 ? 4 : 0;

            var isSuccess,
                success,
                error,
                statusText = nativeStatusText,
                response = responses ? ajaxHandleResponses( s, jqXHR, responses ) : undefined,
                lastModified,
                etag;

            // If successful, handle type chaining
            if ( status >= 200 && status < 300 || status === 304 ) {

                // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
                if ( s.ifModified ) {

                    if ( ( lastModified = jqXHR.getResponseHeader( "Last-Modified" ) ) ) {
                        jQuery.lastModified[ ifModifiedKey ] = lastModified;
                    }
                    if ( ( etag = jqXHR.getResponseHeader( "Etag" ) ) ) {
                        jQuery.etag[ ifModifiedKey ] = etag;
                    }
                }

                // If not modified
                if ( status === 304 ) {

                    statusText = "notmodified";
                    isSuccess = true;

                // If we have data
                } else {

                    try {
                        success = ajaxConvert( s, response );
                        statusText = "success";
                        isSuccess = true;
                    } catch(e) {
                        // We have a parsererror
                        statusText = "parsererror";
                        error = e;
                    }
                }
            } else {
                // We extract error from statusText
                // then normalize statusText and status for non-aborts
                error = statusText;
                if ( !statusText || status ) {
                    statusText = "error";
                    if ( status < 0 ) {
                        status = 0;
                    }
                }
            }

            // Set data for the fake xhr object
            jqXHR.status = status;
            jqXHR.statusText = "" + ( nativeStatusText || statusText );

            // Success/Error
            if ( isSuccess ) {
                deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
            } else {
                deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
            }

            // Status-dependent callbacks
            jqXHR.statusCode( statusCode );
            statusCode = undefined;

            if ( fireGlobals ) {
                globalEventContext.trigger( "ajax" + ( isSuccess ? "Success" : "Error" ),
                        [ jqXHR, s, isSuccess ? success : error ] );
            }

            // Complete
            completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

            if ( fireGlobals ) {
                globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );
                // Handle the global AJAX counter
                if ( !( --jQuery.active ) ) {
                    jQuery.event.trigger( "ajaxStop" );
                }
            }
        }

        // Attach deferreds
        deferred.promise( jqXHR );
        jqXHR.success = jqXHR.done;
        jqXHR.error = jqXHR.fail;
        jqXHR.complete = completeDeferred.add;

        // Status-dependent callbacks
        jqXHR.statusCode = function( map ) {
            if ( map ) {
                var tmp;
                if ( state < 2 ) {
                    for ( tmp in map ) {
                        statusCode[ tmp ] = [ statusCode[tmp], map[tmp] ];
                    }
                } else {
                    tmp = map[ jqXHR.status ];
                    jqXHR.then( tmp, tmp );
                }
            }
            return this;
        };

        // Remove hash character (#7531: and string promotion)
        // Add protocol if not provided (#5866: IE7 issue with protocol-less urls)
        // We also use the url parameter if available
        s.url = ( ( url || s.url ) + "" ).replace( rhash, "" ).replace( rprotocol, ajaxLocParts[ 1 ] + "//" );

        // Extract dataTypes list
        s.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().split( rspacesAjax );

        // Determine if a cross-domain request is in order
        if ( s.crossDomain == null ) {
            parts = rurl.exec( s.url.toLowerCase() );
            s.crossDomain = !!( parts &&
                ( parts[ 1 ] != ajaxLocParts[ 1 ] || parts[ 2 ] != ajaxLocParts[ 2 ] ||
                    ( parts[ 3 ] || ( parts[ 1 ] === "http:" ? 80 : 443 ) ) !=
                        ( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === "http:" ? 80 : 443 ) ) )
            );
        }

        // Convert data if not already a string
        if ( s.data && s.processData && typeof s.data !== "string" ) {
            s.data = jQuery.param( s.data, s.traditional );
        }

        // Apply prefilters
        inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

        // If request was aborted inside a prefilter, stop there
        if ( state === 2 ) {
            return false;
        }

        // We can fire global events as of now if asked to
        fireGlobals = s.global;

        // Uppercase the type
        s.type = s.type.toUpperCase();

        // Determine if request has content
        s.hasContent = !rnoContent.test( s.type );

        // Watch for a new set of requests
        if ( fireGlobals && jQuery.active++ === 0 ) {
            jQuery.event.trigger( "ajaxStart" );
        }

        // More options handling for requests with no content
        if ( !s.hasContent ) {

            // If data is available, append data to url
            if ( s.data ) {
                s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.data;
                // #9682: remove data so that it's not used in an eventual retry
                delete s.data;
            }

            // Get ifModifiedKey before adding the anti-cache parameter
            ifModifiedKey = s.url;

            // Add anti-cache in url if needed
            if ( s.cache === false ) {

                var ts = jQuery.now(),
                    // try replacing _= if it is there
                    ret = s.url.replace( rts, "$1_=" + ts );

                // if nothing was replaced, add timestamp to the end
                s.url = ret + ( ( ret === s.url ) ? ( rquery.test( s.url ) ? "&" : "?" ) + "_=" + ts : "" );
            }
        }

        // Set the correct header, if data is being sent
        if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
            jqXHR.setRequestHeader( "Content-Type", s.contentType );
        }

        // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
        if ( s.ifModified ) {
            ifModifiedKey = ifModifiedKey || s.url;
            if ( jQuery.lastModified[ ifModifiedKey ] ) {
                jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ ifModifiedKey ] );
            }
            if ( jQuery.etag[ ifModifiedKey ] ) {
                jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ ifModifiedKey ] );
            }
        }

        // Set the Accepts header for the server, depending on the dataType
        jqXHR.setRequestHeader(
            "Accept",
            s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?
                s.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
                s.accepts[ "*" ]
        );

        // Check for headers option
        for ( i in s.headers ) {
            jqXHR.setRequestHeader( i, s.headers[ i ] );
        }

        // Allow custom headers/mimetypes and early abort
        if ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {
                // Abort if not done already
                jqXHR.abort();
                return false;

        }

        // Install callbacks on deferreds
        for ( i in { success: 1, error: 1, complete: 1 } ) {
            jqXHR[ i ]( s[ i ] );
        }

        // Get transport
        transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

        // If no transport, we auto-abort
        if ( !transport ) {
            done( -1, "No Transport" );
        } else {
            jqXHR.readyState = 1;
            // Send global event
            if ( fireGlobals ) {
                globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
            }
            // Timeout
            if ( s.async && s.timeout > 0 ) {
                timeoutTimer = setTimeout( function(){
                    jqXHR.abort( "timeout" );
                }, s.timeout );
            }

            try {
                state = 1;
                transport.send( requestHeaders, done );
            } catch (e) {
                // Propagate exception as error if not done
                if ( state < 2 ) {
                    done( -1, e );
                // Simply rethrow otherwise
                } else {
                    throw e;
                }
            }
        }

        return jqXHR;
    },

    // Serialize an array of form elements or a set of
    // key/values into a query string
    param: function( a, traditional ) {
        var s = [],
            add = function( key, value ) {
                // If value is a function, invoke it and return its value
                value = jQuery.isFunction( value ) ? value() : value;
                s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );
            };

        // Set traditional to true for jQuery <= 1.3.2 behavior.
        if ( traditional === undefined ) {
            traditional = jQuery.ajaxSettings.traditional;
        }

        // If an array was passed in, assume that it is an array of form elements.
        if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {
            // Serialize the form elements
            jQuery.each( a, function() {
                add( this.name, this.value );
            });

        } else {
            // If traditional, encode the "old" way (the way 1.3.2 or older
            // did it), otherwise encode params recursively.
            for ( var prefix in a ) {
                buildParams( prefix, a[ prefix ], traditional, add );
            }
        }

        // Return the resulting serialization
        return s.join( "&" ).replace( r20, "+" );
    }
});

function buildParams( prefix, obj, traditional, add ) {
    if ( jQuery.isArray( obj ) ) {
        // Serialize array item.
        jQuery.each( obj, function( i, v ) {
            if ( traditional || rbracket.test( prefix ) ) {
                // Treat each array item as a scalar.
                add( prefix, v );

            } else {
                // If array item is non-scalar (array or object), encode its
                // numeric index to resolve deserialization ambiguity issues.
                // Note that rack (as of 1.0.0) can't currently deserialize
                // nested arrays properly, and attempting to do so may cause
                // a server error. Possible fixes are to modify rack's
                // deserialization algorithm or to provide an option or flag
                // to force array serialization to be shallow.
                buildParams( prefix + "[" + ( typeof v === "object" ? i : "" ) + "]", v, traditional, add );
            }
        });

    } else if ( !traditional && jQuery.type( obj ) === "object" ) {
        // Serialize object item.
        for ( var name in obj ) {
            buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
        }

    } else {
        // Serialize scalar item.
        add( prefix, obj );
    }
}

// This is still on the jQuery object... for now
// Want to move this to jQuery.ajax some day
jQuery.extend({

    // Counter for holding the number of active queries
    active: 0,

    // Last-Modified header cache for next request
    lastModified: {},
    etag: {}

});

/* Handles responses to an ajax request:
 * - sets all responseXXX fields accordingly
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

    var contents = s.contents,
        dataTypes = s.dataTypes,
        responseFields = s.responseFields,
        ct,
        type,
        finalDataType,
        firstDataType;

    // Fill responseXXX fields
    for ( type in responseFields ) {
        if ( type in responses ) {
            jqXHR[ responseFields[type] ] = responses[ type ];
        }
    }

    // Remove auto dataType and get content-type in the process
    while( dataTypes[ 0 ] === "*" ) {
        dataTypes.shift();
        if ( ct === undefined ) {
            ct = s.mimeType || jqXHR.getResponseHeader( "content-type" );
        }
    }

    // Check if we're dealing with a known content-type
    if ( ct ) {
        for ( type in contents ) {
            if ( contents[ type ] && contents[ type ].test( ct ) ) {
                dataTypes.unshift( type );
                break;
            }
        }
    }

    // Check to see if we have a response for the expected dataType
    if ( dataTypes[ 0 ] in responses ) {
        finalDataType = dataTypes[ 0 ];
    } else {
        // Try convertible dataTypes
        for ( type in responses ) {
            if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[0] ] ) {
                finalDataType = type;
                break;
            }
            if ( !firstDataType ) {
                firstDataType = type;
            }
        }
        // Or just use first one
        finalDataType = finalDataType || firstDataType;
    }

    // If we found a dataType
    // We add the dataType to the list if needed
    // and return the corresponding response
    if ( finalDataType ) {
        if ( finalDataType !== dataTypes[ 0 ] ) {
            dataTypes.unshift( finalDataType );
        }
        return responses[ finalDataType ];
    }
}

// Chain conversions given the request and the original response
function ajaxConvert( s, response ) {

    // Apply the dataFilter if provided
    if ( s.dataFilter ) {
        response = s.dataFilter( response, s.dataType );
    }

    var dataTypes = s.dataTypes,
        converters = {},
        i,
        key,
        length = dataTypes.length,
        tmp,
        // Current and previous dataTypes
        current = dataTypes[ 0 ],
        prev,
        // Conversion expression
        conversion,
        // Conversion function
        conv,
        // Conversion functions (transitive conversion)
        conv1,
        conv2;

    // For each dataType in the chain
    for ( i = 1; i < length; i++ ) {

        // Create converters map
        // with lowercased keys
        if ( i === 1 ) {
            for ( key in s.converters ) {
                if ( typeof key === "string" ) {
                    converters[ key.toLowerCase() ] = s.converters[ key ];
                }
            }
        }

        // Get the dataTypes
        prev = current;
        current = dataTypes[ i ];

        // If current is auto dataType, update it to prev
        if ( current === "*" ) {
            current = prev;
        // If no auto and dataTypes are actually different
        } else if ( prev !== "*" && prev !== current ) {

            // Get the converter
            conversion = prev + " " + current;
            conv = converters[ conversion ] || converters[ "* " + current ];

            // If there is no direct converter, search transitively
            if ( !conv ) {
                conv2 = undefined;
                for ( conv1 in converters ) {
                    tmp = conv1.split( " " );
                    if ( tmp[ 0 ] === prev || tmp[ 0 ] === "*" ) {
                        conv2 = converters[ tmp[1] + " " + current ];
                        if ( conv2 ) {
                            conv1 = converters[ conv1 ];
                            if ( conv1 === true ) {
                                conv = conv2;
                            } else if ( conv2 === true ) {
                                conv = conv1;
                            }
                            break;
                        }
                    }
                }
            }
            // If we found no converter, dispatch an error
            if ( !( conv || conv2 ) ) {
                jQuery.error( "No conversion from " + conversion.replace(" "," to ") );
            }
            // If found converter is not an equivalence
            if ( conv !== true ) {
                // Convert with 1 or 2 converters accordingly
                response = conv ? conv( response ) : conv2( conv1(response) );
            }
        }
    }
    return response;
}




var jsc = jQuery.now(),
    jsre = /(\=)\?(&|$)|\?\?/i;

// Default jsonp settings
jQuery.ajaxSetup({
    jsonp: "callback",
    jsonpCallback: function() {
        return jQuery.expando + "_" + ( jsc++ );
    }
});

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

    var inspectData = ( typeof s.data === "string" ) && /^application\/x\-www\-form\-urlencoded/.test( s.contentType );

    if ( s.dataTypes[ 0 ] === "jsonp" ||
        s.jsonp !== false && ( jsre.test( s.url ) ||
                inspectData && jsre.test( s.data ) ) ) {

        var responseContainer,
            jsonpCallback = s.jsonpCallback =
                jQuery.isFunction( s.jsonpCallback ) ? s.jsonpCallback() : s.jsonpCallback,
            previous = window[ jsonpCallback ],
            url = s.url,
            data = s.data,
            replace = "$1" + jsonpCallback + "$2";

        if ( s.jsonp !== false ) {
            url = url.replace( jsre, replace );
            if ( s.url === url ) {
                if ( inspectData ) {
                    data = data.replace( jsre, replace );
                }
                if ( s.data === data ) {
                    // Add callback manually
                    url += (/\?/.test( url ) ? "&" : "?") + s.jsonp + "=" + jsonpCallback;
                }
            }
        }

        s.url = url;
        s.data = data;

        // Install callback
        window[ jsonpCallback ] = function( response ) {
            responseContainer = [ response ];
        };

        // Clean-up function
        jqXHR.always(function() {
            // Set callback back to previous value
            window[ jsonpCallback ] = previous;
            // Call if it was a function and we have a response
            if ( responseContainer && jQuery.isFunction( previous ) ) {
                window[ jsonpCallback ]( responseContainer[ 0 ] );
            }
        });

        // Use data converter to retrieve json after script execution
        s.converters["script json"] = function() {
            if ( !responseContainer ) {
                jQuery.error( jsonpCallback + " was not called" );
            }
            return responseContainer[ 0 ];
        };

        // force json dataType
        s.dataTypes[ 0 ] = "json";

        // Delegate to script
        return "script";
    }
});




// Install script dataType
jQuery.ajaxSetup({
    accepts: {
        script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
    },
    contents: {
        script: /javascript|ecmascript/
    },
    converters: {
        "text script": function( text ) {
            jQuery.globalEval( text );
            return text;
        }
    }
});

// Handle cache's special case and global
jQuery.ajaxPrefilter( "script", function( s ) {
    if ( s.cache === undefined ) {
        s.cache = false;
    }
    if ( s.crossDomain ) {
        s.type = "GET";
        s.global = false;
    }
});

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function(s) {

    // This transport only deals with cross domain requests
    if ( s.crossDomain ) {

        var script,
            head = document.head || document.getElementsByTagName( "head" )[0] || document.documentElement;

        return {

            send: function( _, callback ) {

                script = document.createElement( "script" );

                script.async = "async";

                if ( s.scriptCharset ) {
                    script.charset = s.scriptCharset;
                }

                script.src = s.url;

                // Attach handlers for all browsers
                script.onload = script.onreadystatechange = function( _, isAbort ) {

                    if ( isAbort || !script.readyState || /loaded|complete/.test( script.readyState ) ) {

                        // Handle memory leak in IE
                        script.onload = script.onreadystatechange = null;

                        // Remove the script
                        if ( head && script.parentNode ) {
                            head.removeChild( script );
                        }

                        // Dereference the script
                        script = undefined;

                        // Callback if not abort
                        if ( !isAbort ) {
                            callback( 200, "success" );
                        }
                    }
                };
                // Use insertBefore instead of appendChild  to circumvent an IE6 bug.
                // This arises when a base node is used (#2709 and #4378).
                head.insertBefore( script, head.firstChild );
            },

            abort: function() {
                if ( script ) {
                    script.onload( 0, 1 );
                }
            }
        };
    }
});




var // #5280: Internet Explorer will keep connections alive if we don't abort on unload
    xhrOnUnloadAbort = window.ActiveXObject ? function() {
        // Abort all pending requests
        for ( var key in xhrCallbacks ) {
            xhrCallbacks[ key ]( 0, 1 );
        }
    } : false,
    xhrId = 0,
    xhrCallbacks;

// Functions to create xhrs
function createStandardXHR() {
    try {
        return new window.XMLHttpRequest();
    } catch( e ) {}
}

function createActiveXHR() {
    try {
        return new window.ActiveXObject( "Microsoft.XMLHTTP" );
    } catch( e ) {}
}

// Create the request object
// (This is still attached to ajaxSettings for backward compatibility)
jQuery.ajaxSettings.xhr = window.ActiveXObject ?
    /* Microsoft failed to properly
     * implement the XMLHttpRequest in IE7 (can't request local files),
     * so we use the ActiveXObject when it is available
     * Additionally XMLHttpRequest can be disabled in IE7/IE8 so
     * we need a fallback.
     */
    function() {
        return !this.isLocal && createStandardXHR() || createActiveXHR();
    } :
    // For all other browsers, use the standard XMLHttpRequest object
    createStandardXHR;

// Determine support properties
(function( xhr ) {
    jQuery.extend( jQuery.support, {
        ajax: !!xhr,
        cors: !!xhr && ( "withCredentials" in xhr )
    });
})( jQuery.ajaxSettings.xhr() );

// Create transport if the browser can provide an xhr
if ( jQuery.support.ajax ) {

    jQuery.ajaxTransport(function( s ) {
        // Cross domain only allowed if supported through XMLHttpRequest
        if ( !s.crossDomain || jQuery.support.cors ) {

            var callback;

            return {
                send: function( headers, complete ) {

                    // Get a new xhr
                    var xhr = s.xhr(),
                        handle,
                        i;

                    // Open the socket
                    // Passing null username, generates a login popup on Opera (#2865)
                    if ( s.username ) {
                        xhr.open( s.type, s.url, s.async, s.username, s.password );
                    } else {
                        xhr.open( s.type, s.url, s.async );
                    }

                    // Apply custom fields if provided
                    if ( s.xhrFields ) {
                        for ( i in s.xhrFields ) {
                            xhr[ i ] = s.xhrFields[ i ];
                        }
                    }

                    // Override mime type if needed
                    if ( s.mimeType && xhr.overrideMimeType ) {
                        xhr.overrideMimeType( s.mimeType );
                    }

                    // X-Requested-With header
                    // For cross-domain requests, seeing as conditions for a preflight are
                    // akin to a jigsaw puzzle, we simply never set it to be sure.
                    // (it can always be set on a per-request basis or even using ajaxSetup)
                    // For same-domain requests, won't change header if already provided.
                    if ( !s.crossDomain && !headers["X-Requested-With"] ) {
                        headers[ "X-Requested-With" ] = "XMLHttpRequest";
                    }

                    // Need an extra try/catch for cross domain requests in Firefox 3
                    try {
                        for ( i in headers ) {
                            xhr.setRequestHeader( i, headers[ i ] );
                        }
                    } catch( _ ) {}

                    // Do send the request
                    // This may raise an exception which is actually
                    // handled in jQuery.ajax (so no try/catch here)
                    xhr.send( ( s.hasContent && s.data ) || null );

                    // Listener
                    callback = function( _, isAbort ) {

                        var status,
                            statusText,
                            responseHeaders,
                            responses,
                            xml;

                        // Firefox throws exceptions when accessing properties
                        // of an xhr when a network error occured
                        // http://helpful.knobs-dials.com/index.php/Component_returned_failure_code:_0x80040111_(NS_ERROR_NOT_AVAILABLE)
                        try {

                            // Was never called and is aborted or complete
                            if ( callback && ( isAbort || xhr.readyState === 4 ) ) {

                                // Only called once
                                callback = undefined;

                                // Do not keep as active anymore
                                if ( handle ) {
                                    xhr.onreadystatechange = jQuery.noop;
                                    if ( xhrOnUnloadAbort ) {
                                        delete xhrCallbacks[ handle ];
                                    }
                                }

                                // If it's an abort
                                if ( isAbort ) {
                                    // Abort it manually if needed
                                    if ( xhr.readyState !== 4 ) {
                                        xhr.abort();
                                    }
                                } else {
                                    status = xhr.status;
                                    responseHeaders = xhr.getAllResponseHeaders();
                                    responses = {};
                                    xml = xhr.responseXML;

                                    // Construct response list
                                    if ( xml && xml.documentElement /* #4958 */ ) {
                                        responses.xml = xml;
                                    }

                                    // When requesting binary data, IE6-9 will throw an exception
                                    // on any attempt to access responseText (#11426)
                                    try {
                                        responses.text = xhr.responseText;
                                    } catch( _ ) {
                                    }

                                    // Firefox throws an exception when accessing
                                    // statusText for faulty cross-domain requests
                                    try {
                                        statusText = xhr.statusText;
                                    } catch( e ) {
                                        // We normalize with Webkit giving an empty statusText
                                        statusText = "";
                                    }

                                    // Filter status for non standard behaviors

                                    // If the request is local and we have data: assume a success
                                    // (success with no data won't get notified, that's the best we
                                    // can do given current implementations)
                                    if ( !status && s.isLocal && !s.crossDomain ) {
                                        status = responses.text ? 200 : 404;
                                    // IE - #1450: sometimes returns 1223 when it should be 204
                                    } else if ( status === 1223 ) {
                                        status = 204;
                                    }
                                }
                            }
                        } catch( firefoxAccessException ) {
                            if ( !isAbort ) {
                                complete( -1, firefoxAccessException );
                            }
                        }

                        // Call complete if needed
                        if ( responses ) {
                            complete( status, statusText, responses, responseHeaders );
                        }
                    };

                    // if we're in sync mode or it's in cache
                    // and has been retrieved directly (IE6 & IE7)
                    // we need to manually fire the callback
                    if ( !s.async || xhr.readyState === 4 ) {
                        callback();
                    } else {
                        handle = ++xhrId;
                        if ( xhrOnUnloadAbort ) {
                            // Create the active xhrs callbacks list if needed
                            // and attach the unload handler
                            if ( !xhrCallbacks ) {
                                xhrCallbacks = {};
                                jQuery( window ).unload( xhrOnUnloadAbort );
                            }
                            // Add to list of active xhrs callbacks
                            xhrCallbacks[ handle ] = callback;
                        }
                        xhr.onreadystatechange = callback;
                    }
                },

                abort: function() {
                    if ( callback ) {
                        callback(0,1);
                    }
                }
            };
        }
    });
}




var elemdisplay = {},
    iframe, iframeDoc,
    rfxtypes = /^(?:toggle|show|hide)$/,
    rfxnum = /^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i,
    timerId,
    fxAttrs = [
        // height animations
        [ "height", "marginTop", "marginBottom", "paddingTop", "paddingBottom" ],
        // width animations
        [ "width", "marginLeft", "marginRight", "paddingLeft", "paddingRight" ],
        // opacity animations
        [ "opacity" ]
    ],
    fxNow;

jQuery.fn.extend({
    show: function( speed, easing, callback ) {
        var elem, display;

        if ( speed || speed === 0 ) {
            return this.animate( genFx("show", 3), speed, easing, callback );

        } else {
            for ( var i = 0, j = this.length; i < j; i++ ) {
                elem = this[ i ];

                if ( elem.style ) {
                    display = elem.style.display;

                    // Reset the inline display of this element to learn if it is
                    // being hidden by cascaded rules or not
                    if ( !jQuery._data(elem, "olddisplay") && display === "none" ) {
                        display = elem.style.display = "";
                    }

                    // Set elements which have been overridden with display: none
                    // in a stylesheet to whatever the default browser style is
                    // for such an element
                    if ( (display === "" && jQuery.css(elem, "display") === "none") ||
                        !jQuery.contains( elem.ownerDocument.documentElement, elem ) ) {
                        jQuery._data( elem, "olddisplay", defaultDisplay(elem.nodeName) );
                    }
                }
            }

            // Set the display of most of the elements in a second loop
            // to avoid the constant reflow
            for ( i = 0; i < j; i++ ) {
                elem = this[ i ];

                if ( elem.style ) {
                    display = elem.style.display;

                    if ( display === "" || display === "none" ) {
                        elem.style.display = jQuery._data( elem, "olddisplay" ) || "";
                    }
                }
            }

            return this;
        }
    },

    hide: function( speed, easing, callback ) {
        if ( speed || speed === 0 ) {
            return this.animate( genFx("hide", 3), speed, easing, callback);

        } else {
            var elem, display,
                i = 0,
                j = this.length;

            for ( ; i < j; i++ ) {
                elem = this[i];
                if ( elem.style ) {
                    display = jQuery.css( elem, "display" );

                    if ( display !== "none" && !jQuery._data( elem, "olddisplay" ) ) {
                        jQuery._data( elem, "olddisplay", display );
                    }
                }
            }

            // Set the display of the elements in a second loop
            // to avoid the constant reflow
            for ( i = 0; i < j; i++ ) {
                if ( this[i].style ) {
                    this[i].style.display = "none";
                }
            }

            return this;
        }
    },

    // Save the old toggle function
    _toggle: jQuery.fn.toggle,

    toggle: function( fn, fn2, callback ) {
        var bool = typeof fn === "boolean";

        if ( jQuery.isFunction(fn) && jQuery.isFunction(fn2) ) {
            this._toggle.apply( this, arguments );

        } else if ( fn == null || bool ) {
            this.each(function() {
                var state = bool ? fn : jQuery(this).is(":hidden");
                jQuery(this)[ state ? "show" : "hide" ]();
            });

        } else {
            this.animate(genFx("toggle", 3), fn, fn2, callback);
        }

        return this;
    },

    fadeTo: function( speed, to, easing, callback ) {
        return this.filter(":hidden").css("opacity", 0).show().end()
                    .animate({opacity: to}, speed, easing, callback);
    },

    animate: function( prop, speed, easing, callback ) {
        var optall = jQuery.speed( speed, easing, callback );

        if ( jQuery.isEmptyObject( prop ) ) {
            return this.each( optall.complete, [ false ] );
        }

        // Do not change referenced properties as per-property easing will be lost
        prop = jQuery.extend( {}, prop );

        function doAnimation() {
            // XXX 'this' does not always have a nodeName when running the
            // test suite

            if ( optall.queue === false ) {
                jQuery._mark( this );
            }

            var opt = jQuery.extend( {}, optall ),
                isElement = this.nodeType === 1,
                hidden = isElement && jQuery(this).is(":hidden"),
                name, val, p, e, hooks, replace,
                parts, start, end, unit,
                method;

            // will store per property easing and be used to determine when an animation is complete
            opt.animatedProperties = {};

            // first pass over propertys to expand / normalize
            for ( p in prop ) {
                name = jQuery.camelCase( p );
                if ( p !== name ) {
                    prop[ name ] = prop[ p ];
                    delete prop[ p ];
                }

                if ( ( hooks = jQuery.cssHooks[ name ] ) && "expand" in hooks ) {
                    replace = hooks.expand( prop[ name ] );
                    delete prop[ name ];

                    // not quite $.extend, this wont overwrite keys already present.
                    // also - reusing 'p' from above because we have the correct "name"
                    for ( p in replace ) {
                        if ( ! ( p in prop ) ) {
                            prop[ p ] = replace[ p ];
                        }
                    }
                }
            }

            for ( name in prop ) {
                val = prop[ name ];
                // easing resolution: per property > opt.specialEasing > opt.easing > 'swing' (default)
                if ( jQuery.isArray( val ) ) {
                    opt.animatedProperties[ name ] = val[ 1 ];
                    val = prop[ name ] = val[ 0 ];
                } else {
                    opt.animatedProperties[ name ] = opt.specialEasing && opt.specialEasing[ name ] || opt.easing || 'swing';
                }

                if ( val === "hide" && hidden || val === "show" && !hidden ) {
                    return opt.complete.call( this );
                }

                if ( isElement && ( name === "height" || name === "width" ) ) {
                    // Make sure that nothing sneaks out
                    // Record all 3 overflow attributes because IE does not
                    // change the overflow attribute when overflowX and
                    // overflowY are set to the same value
                    opt.overflow = [ this.style.overflow, this.style.overflowX, this.style.overflowY ];

                    // Set display property to inline-block for height/width
                    // animations on inline elements that are having width/height animated
                    if ( jQuery.css( this, "display" ) === "inline" &&
                            jQuery.css( this, "float" ) === "none" ) {

                        // inline-level elements accept inline-block;
                        // block-level elements need to be inline with layout
                        if ( !jQuery.support.inlineBlockNeedsLayout || defaultDisplay( this.nodeName ) === "inline" ) {
                            this.style.display = "inline-block";

                        } else {
                            this.style.zoom = 1;
                        }
                    }
                }
            }

            if ( opt.overflow != null ) {
                this.style.overflow = "hidden";
            }

            for ( p in prop ) {
                e = new jQuery.fx( this, opt, p );
                val = prop[ p ];

                if ( rfxtypes.test( val ) ) {

                    // Tracks whether to show or hide based on private
                    // data attached to the element
                    method = jQuery._data( this, "toggle" + p ) || ( val === "toggle" ? hidden ? "show" : "hide" : 0 );
                    if ( method ) {
                        jQuery._data( this, "toggle" + p, method === "show" ? "hide" : "show" );
                        e[ method ]();
                    } else {
                        e[ val ]();
                    }

                } else {
                    parts = rfxnum.exec( val );
                    start = e.cur();

                    if ( parts ) {
                        end = parseFloat( parts[2] );
                        unit = parts[3] || ( jQuery.cssNumber[ p ] ? "" : "px" );

                        // We need to compute starting value
                        if ( unit !== "px" ) {
                            jQuery.style( this, p, (end || 1) + unit);
                            start = ( (end || 1) / e.cur() ) * start;
                            jQuery.style( this, p, start + unit);
                        }

                        // If a +=/-= token was provided, we're doing a relative animation
                        if ( parts[1] ) {
                            end = ( (parts[ 1 ] === "-=" ? -1 : 1) * end ) + start;
                        }

                        e.custom( start, end, unit );

                    } else {
                        e.custom( start, val, "" );
                    }
                }
            }

            // For JS strict compliance
            return true;
        }

        return optall.queue === false ?
            this.each( doAnimation ) :
            this.queue( optall.queue, doAnimation );
    },

    stop: function( type, clearQueue, gotoEnd ) {
        if ( typeof type !== "string" ) {
            gotoEnd = clearQueue;
            clearQueue = type;
            type = undefined;
        }
        if ( clearQueue && type !== false ) {
            this.queue( type || "fx", [] );
        }

        return this.each(function() {
            var index,
                hadTimers = false,
                timers = jQuery.timers,
                data = jQuery._data( this );

            // clear marker counters if we know they won't be
            if ( !gotoEnd ) {
                jQuery._unmark( true, this );
            }

            function stopQueue( elem, data, index ) {
                var hooks = data[ index ];
                jQuery.removeData( elem, index, true );
                hooks.stop( gotoEnd );
            }

            if ( type == null ) {
                for ( index in data ) {
                    if ( data[ index ] && data[ index ].stop && index.indexOf(".run") === index.length - 4 ) {
                        stopQueue( this, data, index );
                    }
                }
            } else if ( data[ index = type + ".run" ] && data[ index ].stop ){
                stopQueue( this, data, index );
            }

            for ( index = timers.length; index--; ) {
                if ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {
                    if ( gotoEnd ) {

                        // force the next step to be the last
                        timers[ index ]( true );
                    } else {
                        timers[ index ].saveState();
                    }
                    hadTimers = true;
                    timers.splice( index, 1 );
                }
            }

            // start the next in the queue if the last step wasn't forced
            // timers currently will call their complete callbacks, which will dequeue
            // but only if they were gotoEnd
            if ( !( gotoEnd && hadTimers ) ) {
                jQuery.dequeue( this, type );
            }
        });
    }

});

// Animations created synchronously will run synchronously
function createFxNow() {
    setTimeout( clearFxNow, 0 );
    return ( fxNow = jQuery.now() );
}

function clearFxNow() {
    fxNow = undefined;
}

// Generate parameters to create a standard animation
function genFx( type, num ) {
    var obj = {};

    jQuery.each( fxAttrs.concat.apply([], fxAttrs.slice( 0, num )), function() {
        obj[ this ] = type;
    });

    return obj;
}

// Generate shortcuts for custom animations
jQuery.each({
    slideDown: genFx( "show", 1 ),
    slideUp: genFx( "hide", 1 ),
    slideToggle: genFx( "toggle", 1 ),
    fadeIn: { opacity: "show" },
    fadeOut: { opacity: "hide" },
    fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
    jQuery.fn[ name ] = function( speed, easing, callback ) {
        return this.animate( props, speed, easing, callback );
    };
});

jQuery.extend({
    speed: function( speed, easing, fn ) {
        var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
            complete: fn || !fn && easing ||
                jQuery.isFunction( speed ) && speed,
            duration: speed,
            easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
        };

        opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration :
            opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;

        // normalize opt.queue - true/undefined/null -> "fx"
        if ( opt.queue == null || opt.queue === true ) {
            opt.queue = "fx";
        }

        // Queueing
        opt.old = opt.complete;

        opt.complete = function( noUnmark ) {
            if ( jQuery.isFunction( opt.old ) ) {
                opt.old.call( this );
            }

            if ( opt.queue ) {
                jQuery.dequeue( this, opt.queue );
            } else if ( noUnmark !== false ) {
                jQuery._unmark( this );
            }
        };

        return opt;
    },

    easing: {
        linear: function( p ) {
            return p;
        },
        swing: function( p ) {
            return ( -Math.cos( p*Math.PI ) / 2 ) + 0.5;
        }
    },

    timers: [],

    fx: function( elem, options, prop ) {
        this.options = options;
        this.elem = elem;
        this.prop = prop;

        options.orig = options.orig || {};
    }

});

jQuery.fx.prototype = {
    // Simple function for setting a style value
    update: function() {
        if ( this.options.step ) {
            this.options.step.call( this.elem, this.now, this );
        }

        ( jQuery.fx.step[ this.prop ] || jQuery.fx.step._default )( this );
    },

    // Get the current size
    cur: function() {
        if ( this.elem[ this.prop ] != null && (!this.elem.style || this.elem.style[ this.prop ] == null) ) {
              if (this.elem[ this.prop ].baseVal) {
            return this.elem[ this.prop ].baseVal.value;
              }
            return this.elem[ this.prop ];
        }

        var parsed,
            r = jQuery.css( this.elem, this.prop );
        // Empty strings, null, undefined and "auto" are converted to 0,
        // complex values such as "rotate(1rad)" are returned as is,
        // simple values such as "10px" are parsed to Float.
        return isNaN( parsed = parseFloat( r ) ) ? !r || r === "auto" ? 0 : r : parsed;
    },

    // Start an animation from one number to another
    custom: function( from, to, unit ) {
        var self = this,
            fx = jQuery.fx;

        this.startTime = fxNow || createFxNow();
        this.end = to;
        this.now = this.start = from;
        this.pos = this.state = 0;
        this.unit = unit || this.unit || ( jQuery.cssNumber[ this.prop ] ? "" : "px" );

        function t( gotoEnd ) {
            return self.step( gotoEnd );
        }

        t.queue = this.options.queue;
        t.elem = this.elem;
        t.saveState = function() {
            if ( jQuery._data( self.elem, "fxshow" + self.prop ) === undefined ) {
                if ( self.options.hide ) {
                    jQuery._data( self.elem, "fxshow" + self.prop, self.start );
                } else if ( self.options.show ) {
                    jQuery._data( self.elem, "fxshow" + self.prop, self.end );
                }
            }
        };

        if ( t() && jQuery.timers.push(t) && !timerId ) {
            timerId = setInterval( fx.tick, fx.interval );
        }
    },

    // Simple 'show' function
    show: function() {
        var dataShow = jQuery._data( this.elem, "fxshow" + this.prop );

        // Remember where we started, so that we can go back to it later
        this.options.orig[ this.prop ] = dataShow || jQuery.style( this.elem, this.prop );
        this.options.show = true;

        // Begin the animation
        // Make sure that we start at a small width/height to avoid any flash of content
        if ( dataShow !== undefined ) {
            // This show is picking up where a previous hide or show left off
            this.custom( this.cur(), dataShow );
        } else {
            this.custom( this.prop === "width" || this.prop === "height" ? 1 : 0, this.cur() );
        }

        // Start by showing the element
        jQuery( this.elem ).show();
    },

    // Simple 'hide' function
    hide: function() {
        // Remember where we started, so that we can go back to it later
        this.options.orig[ this.prop ] = jQuery._data( this.elem, "fxshow" + this.prop ) || jQuery.style( this.elem, this.prop );
        this.options.hide = true;

        // Begin the animation
        this.custom( this.cur(), 0 );
    },

    // Each step of an animation
    step: function( gotoEnd ) {
        var p, n, complete,
            t = fxNow || createFxNow(),
            done = true,
            elem = this.elem,
            options = this.options;

        if ( gotoEnd || t >= options.duration + this.startTime ) {
            this.now = this.end;
            this.pos = this.state = 1;
            this.update();

            options.animatedProperties[ this.prop ] = true;

            for ( p in options.animatedProperties ) {
                if ( options.animatedProperties[ p ] !== true ) {
                    done = false;
                }
            }

            if ( done ) {
                // Reset the overflow
                if ( options.overflow != null && !jQuery.support.shrinkWrapBlocks ) {

                    jQuery.each( [ "", "X", "Y" ], function( index, value ) {
                        elem.style[ "overflow" + value ] = options.overflow[ index ];
                    });
                }

                // Hide the element if the "hide" operation was done
                if ( options.hide ) {
                    jQuery( elem ).hide();
                }

                // Reset the properties, if the item has been hidden or shown
                if ( options.hide || options.show ) {
                    for ( p in options.animatedProperties ) {
                        jQuery.style( elem, p, options.orig[ p ] );
                        jQuery.removeData( elem, "fxshow" + p, true );
                        // Toggle data is no longer needed
                        jQuery.removeData( elem, "toggle" + p, true );
                    }
                }

                // Execute the complete function
                // in the event that the complete function throws an exception
                // we must ensure it won't be called twice. #5684

                complete = options.complete;
                if ( complete ) {

                    options.complete = false;
                    complete.call( elem );
                }
            }

            return false;

        } else {
            // classical easing cannot be used with an Infinity duration
            if ( options.duration == Infinity ) {
                this.now = t;
            } else {
                n = t - this.startTime;
                this.state = n / options.duration;

                // Perform the easing function, defaults to swing
                this.pos = jQuery.easing[ options.animatedProperties[this.prop] ]( this.state, n, 0, 1, options.duration );
                this.now = this.start + ( (this.end - this.start) * this.pos );
            }
            // Perform the next step of the animation
            this.update();
        }

        return true;
    }
};

jQuery.extend( jQuery.fx, {
    tick: function() {
        var timer,
            timers = jQuery.timers,
            i = 0;

        for ( ; i < timers.length; i++ ) {
            timer = timers[ i ];
            // Checks the timer has not already been removed
            if ( !timer() && timers[ i ] === timer ) {
                timers.splice( i--, 1 );
            }
        }

        if ( !timers.length ) {
            jQuery.fx.stop();
        }
    },

    interval: 13,

    stop: function() {
        clearInterval( timerId );
        timerId = null;
    },

    speeds: {
        slow: 600,
        fast: 200,
        // Default speed
        _default: 400
    },

    step: {
        opacity: function( fx ) {
            jQuery.style( fx.elem, "opacity", fx.now );
        },

        _default: function( fx ) {
            if ( fx.elem.style && fx.elem.style[ fx.prop ] != null ) {
                fx.elem.style[ fx.prop ] = fx.now + fx.unit;
            } else {
                fx.elem[ fx.prop ] = fx.now;
            }
        }
    }
});

// Ensure props that can't be negative don't go there on undershoot easing
jQuery.each( fxAttrs.concat.apply( [], fxAttrs ), function( i, prop ) {
    // exclude marginTop, marginLeft, marginBottom and marginRight from this list
    if ( prop.indexOf( "margin" ) ) {
        jQuery.fx.step[ prop ] = function( fx ) {
            jQuery.style( fx.elem, prop, Math.max(0, fx.now) + fx.unit );
        };
    }
});

if ( jQuery.expr && jQuery.expr.filters ) {
    jQuery.expr.filters.animated = function( elem ) {
        return jQuery.grep(jQuery.timers, function( fn ) {
            return elem === fn.elem;
        }).length;
    };
}

// Try to restore the default display value of an element
function defaultDisplay( nodeName ) {

    if ( !elemdisplay[ nodeName ] ) {

        var body = document.body,
            elem = jQuery( "<" + nodeName + ">" ).appendTo( body ),
            display = elem.css( "display" );
        elem.remove();

        // If the simple way fails,
        // get element's real default display by attaching it to a temp iframe
        if ( display === "none" || display === "" ) {
            // No iframe to use yet, so create it
            if ( !iframe ) {
                iframe = document.createElement( "iframe" );
                iframe.frameBorder = iframe.width = iframe.height = 0;
            }

            body.appendChild( iframe );

            // Create a cacheable copy of the iframe document on first call.
            // IE and Opera will allow us to reuse the iframeDoc without re-writing the fake HTML
            // document to it; WebKit & Firefox won't allow reusing the iframe document.
            if ( !iframeDoc || !iframe.createElement ) {
                iframeDoc = ( iframe.contentWindow || iframe.contentDocument ).document;
                iframeDoc.write( ( jQuery.support.boxModel ? "<!doctype html>" : "" ) + "<html><body>" );
                iframeDoc.close();
            }

            elem = iframeDoc.createElement( nodeName );

            iframeDoc.body.appendChild( elem );

            display = jQuery.css( elem, "display" );
            body.removeChild( iframe );
        }

        // Store the correct default display
        elemdisplay[ nodeName ] = display;
    }

    return elemdisplay[ nodeName ];
}




var getOffset,
    rtable = /^t(?:able|d|h)$/i,
    rroot = /^(?:body|html)$/i;

if ( "getBoundingClientRect" in document.documentElement ) {
    getOffset = function( elem, doc, docElem, box ) {
        try {
            box = elem.getBoundingClientRect();
        } catch(e) {}

        // Make sure we're not dealing with a disconnected DOM node
        if ( !box || !jQuery.contains( docElem, elem ) ) {
            return box ? { top: box.top, left: box.left } : { top: 0, left: 0 };
        }

        var body = doc.body,
            win = getWindow( doc ),
            clientTop  = docElem.clientTop  || body.clientTop  || 0,
            clientLeft = docElem.clientLeft || body.clientLeft || 0,
            scrollTop  = win.pageYOffset || jQuery.support.boxModel && docElem.scrollTop  || body.scrollTop,
            scrollLeft = win.pageXOffset || jQuery.support.boxModel && docElem.scrollLeft || body.scrollLeft,
            top  = box.top  + scrollTop  - clientTop,
            left = box.left + scrollLeft - clientLeft;

        return { top: top, left: left };
    };

} else {
    getOffset = function( elem, doc, docElem ) {
        var computedStyle,
            offsetParent = elem.offsetParent,
            prevOffsetParent = elem,
            body = doc.body,
            defaultView = doc.defaultView,
            prevComputedStyle = defaultView ? defaultView.getComputedStyle( elem, null ) : elem.currentStyle,
            top = elem.offsetTop,
            left = elem.offsetLeft;

        while ( (elem = elem.parentNode) && elem !== body && elem !== docElem ) {
            if ( jQuery.support.fixedPosition && prevComputedStyle.position === "fixed" ) {
                break;
            }

            computedStyle = defaultView ? defaultView.getComputedStyle(elem, null) : elem.currentStyle;
            top  -= elem.scrollTop;
            left -= elem.scrollLeft;

            if ( elem === offsetParent ) {
                top  += elem.offsetTop;
                left += elem.offsetLeft;

                if ( jQuery.support.doesNotAddBorder && !(jQuery.support.doesAddBorderForTableAndCells && rtable.test(elem.nodeName)) ) {
                    top  += parseFloat( computedStyle.borderTopWidth  ) || 0;
                    left += parseFloat( computedStyle.borderLeftWidth ) || 0;
                }

                prevOffsetParent = offsetParent;
                offsetParent = elem.offsetParent;
            }

            if ( jQuery.support.subtractsBorderForOverflowNotVisible && computedStyle.overflow !== "visible" ) {
                top  += parseFloat( computedStyle.borderTopWidth  ) || 0;
                left += parseFloat( computedStyle.borderLeftWidth ) || 0;
            }

            prevComputedStyle = computedStyle;
        }

        if ( prevComputedStyle.position === "relative" || prevComputedStyle.position === "static" ) {
            top  += body.offsetTop;
            left += body.offsetLeft;
        }

        if ( jQuery.support.fixedPosition && prevComputedStyle.position === "fixed" ) {
            top  += Math.max( docElem.scrollTop, body.scrollTop );
            left += Math.max( docElem.scrollLeft, body.scrollLeft );
        }

        return { top: top, left: left };
    };
}

jQuery.fn.offset = function( options ) {
    if ( arguments.length ) {
        return options === undefined ?
            this :
            this.each(function( i ) {
                jQuery.offset.setOffset( this, options, i );
            });
    }

    var elem = this[0],
        doc = elem && elem.ownerDocument;

    if ( !doc ) {
        return null;
    }

    if ( elem === doc.body ) {
        return jQuery.offset.bodyOffset( elem );
    }

    return getOffset( elem, doc, doc.documentElement );
};

jQuery.offset = {

    bodyOffset: function( body ) {
        var top = body.offsetTop,
            left = body.offsetLeft;

        if ( jQuery.support.doesNotIncludeMarginInBodyOffset ) {
            top  += parseFloat( jQuery.css(body, "marginTop") ) || 0;
            left += parseFloat( jQuery.css(body, "marginLeft") ) || 0;
        }

        return { top: top, left: left };
    },

    setOffset: function( elem, options, i ) {
        var position = jQuery.css( elem, "position" );

        // set position first, in-case top/left are set even on static elem
        if ( position === "static" ) {
            elem.style.position = "relative";
        }

        var curElem = jQuery( elem ),
            curOffset = curElem.offset(),
            curCSSTop = jQuery.css( elem, "top" ),
            curCSSLeft = jQuery.css( elem, "left" ),
            calculatePosition = ( position === "absolute" || position === "fixed" ) && jQuery.inArray("auto", [curCSSTop, curCSSLeft]) > -1,
            props = {}, curPosition = {}, curTop, curLeft;

        // need to be able to calculate position if either top or left is auto and position is either absolute or fixed
        if ( calculatePosition ) {
            curPosition = curElem.position();
            curTop = curPosition.top;
            curLeft = curPosition.left;
        } else {
            curTop = parseFloat( curCSSTop ) || 0;
            curLeft = parseFloat( curCSSLeft ) || 0;
        }

        if ( jQuery.isFunction( options ) ) {
            options = options.call( elem, i, curOffset );
        }

        if ( options.top != null ) {
            props.top = ( options.top - curOffset.top ) + curTop;
        }
        if ( options.left != null ) {
            props.left = ( options.left - curOffset.left ) + curLeft;
        }

        if ( "using" in options ) {
            options.using.call( elem, props );
        } else {
            curElem.css( props );
        }
    }
};


jQuery.fn.extend({

    position: function() {
        if ( !this[0] ) {
            return null;
        }

        var elem = this[0],

        // Get *real* offsetParent
        offsetParent = this.offsetParent(),

        // Get correct offsets
        offset       = this.offset(),
        parentOffset = rroot.test(offsetParent[0].nodeName) ? { top: 0, left: 0 } : offsetParent.offset();

        // Subtract element margins
        // note: when an element has margin: auto the offsetLeft and marginLeft
        // are the same in Safari causing offset.left to incorrectly be 0
        offset.top  -= parseFloat( jQuery.css(elem, "marginTop") ) || 0;
        offset.left -= parseFloat( jQuery.css(elem, "marginLeft") ) || 0;

        // Add offsetParent borders
        parentOffset.top  += parseFloat( jQuery.css(offsetParent[0], "borderTopWidth") ) || 0;
        parentOffset.left += parseFloat( jQuery.css(offsetParent[0], "borderLeftWidth") ) || 0;

        // Subtract the two offsets
        return {
            top:  offset.top  - parentOffset.top,
            left: offset.left - parentOffset.left
        };
    },

    offsetParent: function() {
        return this.map(function() {
            var offsetParent = this.offsetParent || document.body;
            while ( offsetParent && (!rroot.test(offsetParent.nodeName) && jQuery.css(offsetParent, "position") === "static") ) {
                offsetParent = offsetParent.offsetParent;
            }
            return offsetParent;
        });
    }
});


// Create scrollLeft and scrollTop methods
jQuery.each( {scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, function( method, prop ) {
    var top = /Y/.test( prop );

    jQuery.fn[ method ] = function( val ) {
        return jQuery.access( this, function( elem, method, val ) {
            var win = getWindow( elem );

            if ( val === undefined ) {
                return win ? (prop in win) ? win[ prop ] :
                    jQuery.support.boxModel && win.document.documentElement[ method ] ||
                        win.document.body[ method ] :
                    elem[ method ];
            }

            if ( win ) {
                win.scrollTo(
                    !top ? val : jQuery( win ).scrollLeft(),
                     top ? val : jQuery( win ).scrollTop()
                );

            } else {
                elem[ method ] = val;
            }
        }, method, val, arguments.length, null );
    };
});

function getWindow( elem ) {
    return jQuery.isWindow( elem ) ?
        elem :
        elem.nodeType === 9 ?
            elem.defaultView || elem.parentWindow :
            false;
}




// Create width, height, innerHeight, innerWidth, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
    var clientProp = "client" + name,
        scrollProp = "scroll" + name,
        offsetProp = "offset" + name;

    // innerHeight and innerWidth
    jQuery.fn[ "inner" + name ] = function() {
        var elem = this[0];
        return elem ?
            elem.style ?
            parseFloat( jQuery.css( elem, type, "padding" ) ) :
            this[ type ]() :
            null;
    };

    // outerHeight and outerWidth
    jQuery.fn[ "outer" + name ] = function( margin ) {
        var elem = this[0];
        return elem ?
            elem.style ?
            parseFloat( jQuery.css( elem, type, margin ? "margin" : "border" ) ) :
            this[ type ]() :
            null;
    };

    jQuery.fn[ type ] = function( value ) {
        return jQuery.access( this, function( elem, type, value ) {
            var doc, docElemProp, orig, ret;

            if ( jQuery.isWindow( elem ) ) {
                // 3rd condition allows Nokia support, as it supports the docElem prop but not CSS1Compat
                doc = elem.document;
                docElemProp = doc.documentElement[ clientProp ];
                return jQuery.support.boxModel && docElemProp ||
                    doc.body && doc.body[ clientProp ] || docElemProp;
            }

            // Get document width or height
            if ( elem.nodeType === 9 ) {
                // Either scroll[Width/Height] or offset[Width/Height], whichever is greater
                doc = elem.documentElement;

                // when a window > document, IE6 reports a offset[Width/Height] > client[Width/Height]
                // so we can't use max, as it'll choose the incorrect offset[Width/Height]
                // instead we use the correct client[Width/Height]
                // support:IE6
                if ( doc[ clientProp ] >= doc[ scrollProp ] ) {
                    return doc[ clientProp ];
                }

                return Math.max(
                    elem.body[ scrollProp ], doc[ scrollProp ],
                    elem.body[ offsetProp ], doc[ offsetProp ]
                );
            }

            // Get width or height on the element
            if ( value === undefined ) {
                orig = jQuery.css( elem, type );
                ret = parseFloat( orig );
                return jQuery.isNumeric( ret ) ? ret : orig;
            }

            // Set the width or height on the element
            jQuery( elem ).css( type, value );
        }, type, value, arguments.length, null );
    };
});




// Expose jQuery to the global object
window.jQuerySvg = window.$vg = jQuery;

// Expose jQuery as an AMD module, but only for AMD loaders that
// understand the issues with loading multiple versions of jQuery
// in a page that all might call define(). The loader will indicate
// they have special allowances for multiple jQuery versions by
// specifying define.amd.jQuery = true. Register as a named module,
// since jQuery can be concatenated with other files that may use define,
// but not use a proper concatenation script that understands anonymous
// AMD modules. A named AMD is safest and most robust way to register.
// Lowercase jquery is used because AMD module names are derived from
// file names, and jQuery is normally delivered in a lowercase file name.
// Do this after creating the global so that if an AMD module wants to call
// noConflict to hide this version of jQuery, it will work.
if ( typeof define === "function" && define.amd && define.amd.jQuery ) {
    define( "jquery", [], function () { return jQuery; } );
}



})( window );
// Generated by CoffeeScript 1.6.3
var pygal_js_start = (function() {
  var get_translation, init, padding, r_translation, tooltip_timeout;
  padding = 5;

  tooltip_timeout = 0;

  r_translation = /translate\((\d+)[ ,]+(\d+)\)/;

  get_translation = function($elt) {
    return (r_translation.exec($elt.attr('transform')) || []).slice(1);
  };

  init = function(ctx) {
    var tooltip, untooltip;
    $vg('.text-overlay .series', ctx).hide();
    $vg('.reactive', ctx).hover((function() {
      return $vg(this).addClass('active');
    }), (function() {
      return $vg(this).removeClass('active');
    }));
    $vg('.activate-serie', ctx).hover((function() {
      var num;
      num = this.id.replace('activate-serie-', '');
      $vg('.text-overlay .serie-' + num, ctx).show();
      return $vg('.serie-' + num + ' .reactive', ctx).addClass('active');
    }), function() {
      var num;
      num = this.id.replace('activate-serie-', '');
      $vg('.text-overlay .serie-' + num, ctx).hide();
      return $vg('.serie-' + num + ' .reactive', ctx).removeClass('active');
    });
    $vg('.tooltip-trigger', ctx).hover((function() {
      return tooltip($vg(this));
    }), (function() {
      return untooltip();
    }));
    tooltip = function($elt) {
      var $label, $rect, $text, $tooltip, $value, current_x, current_y, h, target, w, x, x_elt, xlink, y, y_elt, _ref;
      clearTimeout(tooltip_timeout);
      $tooltip = $vg('#tooltip,.tooltip', ctx).css({
        opacity: 1
      }).show();
      $text = $tooltip.find('text');
      $label = $tooltip.find('tspan.label');
      $value = $tooltip.find('tspan.value');
      $rect = $tooltip.find('rect');
      if ($elt.siblings('.tooltip').size()) {
        $label.text($elt.siblings('.tooltip').text());
        $value.text('');
      } else {
        $label.text($elt.siblings('.label').text());
        $value.text($elt.siblings('.value').text());
      }
      xlink = $elt.siblings('.xlink').text() || null;
      target = $elt.parent().attr('target');
      if (xlink) {
        $tooltip.find('a').attr('href', xlink).attr('target', target);
      }
      $text.attr('x', padding);
      $text.attr('y', padding + this.config.tooltip_font_size);
      $value.attr('x', padding);
      $value.attr('dy', $label.text() ? this.config.tooltip_font_size + padding : 0);
      w = $text.width() + 2 * padding;
      h = $text.height() + 2 * padding;
      $rect.attr('width', w);
      $rect.attr('height', h);
      x_elt = $elt.siblings('.x');
      y_elt = $elt.siblings('.y');
      x = parseInt(x_elt.text());
      if (x_elt.hasClass('centered')) {
        x -= w / 2;
      } else if (x_elt.hasClass('left')) {
        x -= w;
      }
      y = parseInt(y_elt.text());
      if (y_elt.hasClass('centered')) {
        y -= h / 2;
      } else if (y_elt.hasClass('top')) {
        y -= h;
      }
      _ref = get_translation($tooltip), current_x = _ref[0], current_y = _ref[1];
      if (current_x === x && current_y === y) {
        return;
      }
      return $tooltip.attr('transform', "translate(" + x + " " + y + ")");
    };
    return untooltip = function() {
      return tooltip_timeout = setTimeout((function() {
        return $vg('#tooltip,.tooltip', ctx).hide().css({
          opacity: 0
        });
      }), 1000);
    };
  };

  this.init_svg = function(ctx) {
    if (navigator.userAgent.indexOf('Trident') > -1 || navigator.userAgent.indexOf('MSIE') > -1) {
      $vg('.tooltip a').children().unwrap();
    }
    return init($vg(ctx));
  };

  $vg(function() {
    var $charts;
    $charts = $vg('.pygal-chart');
    if ($charts.size()) {
      return $charts.each(function() {
        // Fixes Safari issues with viewBox
        var chart_height
        if(window.sif_pygal_chart_height === undefined) {
          chart_height = $(this).find('g.graph rect.background')[0].getBoundingClientRect().height
          window.sif_pygal_chart_height = chart_height
        } else{
          chart_height = window.sif_pygal_chart_height
        }
        $(this).height(chart_height);
        return init_svg(this);
      });
    } else {
      return init();
    }
  });

});


var pygal_js_resize_charts = (function(){
  $charts = $vg('.pygal-chart');
    if ($charts.size()) {
      return $charts.each(function() {
        $(this).height(sif_pygal_chart_height);
    });
  }
});

(function(global, document) {

  // Popcorn.js does not support archaic browsers
  if ( !document.addEventListener ) {
    global.Popcorn = {
      isSupported: false
    };

    var methods = ( "byId forEach extend effects error guid sizeOf isArray nop position disable enable destroy" +
          "addTrackEvent removeTrackEvent getTrackEvents getTrackEvent getLastTrackEventId " +
          "timeUpdate plugin removePlugin compose effect xhr getJSONP getScript" ).split(/\s+/);

    while ( methods.length ) {
      global.Popcorn[ methods.shift() ] = function() {};
    }
    return;
  }

  var

  AP = Array.prototype,
  OP = Object.prototype,

  forEach = AP.forEach,
  slice = AP.slice,
  hasOwn = OP.hasOwnProperty,
  toString = OP.toString,

  // Copy global Popcorn (may not exist)
  _Popcorn = global.Popcorn,

  //  Ready fn cache
  readyStack = [],
  readyBound = false,
  readyFired = false,

  //  Non-public internal data object
  internal = {
    events: {
      hash: {},
      apis: {}
    }
  },

  //  Non-public `requestAnimFrame`
  //  http://paulirish.com/2011/requestanimationframe-for-smart-animating/
  requestAnimFrame = (function(){
    return global.requestAnimationFrame ||
      global.webkitRequestAnimationFrame ||
      global.mozRequestAnimationFrame ||
      global.oRequestAnimationFrame ||
      global.msRequestAnimationFrame ||
      function( callback, element ) {
        global.setTimeout( callback, 16 );
      };
  }()),

  //  Non-public `getKeys`, return an object's keys as an array
  getKeys = function( obj ) {
    return Object.keys ? Object.keys( obj ) : (function( obj ) {
      var item,
          list = [];

      for ( item in obj ) {
        if ( hasOwn.call( obj, item ) ) {
          list.push( item );
        }
      }
      return list;
    })( obj );
  },

  Abstract = {
    // [[Put]] props from dictionary onto |this|
    // MUST BE CALLED FROM WITHIN A CONSTRUCTOR:
    //  Abstract.put.call( this, dictionary );
    put: function( dictionary ) {
      // For each own property of src, let key be the property key
      // and desc be the property descriptor of the property.
      for ( var key in dictionary ) {
        if ( dictionary.hasOwnProperty( key ) ) {
          this[ key ] = dictionary[ key ];
        }
      }
    }
  },


  //  Declare constructor
  //  Returns an instance object.
  Popcorn = function( entity, options ) {
    //  Return new Popcorn object
    return new Popcorn.p.init( entity, options || null );
  };

  //  Popcorn API version, automatically inserted via build system.
  Popcorn.version = "@VERSION";

  //  Boolean flag allowing a client to determine if Popcorn can be supported
  Popcorn.isSupported = true;

  //  Instance caching
  Popcorn.instances = [];

  //  Declare a shortcut (Popcorn.p) to and a definition of
  //  the new prototype for our Popcorn constructor
  Popcorn.p = Popcorn.prototype = {

    init: function( entity, options ) {

      var matches, nodeName,
          self = this;

      //  Supports Popcorn(function () { /../ })
      //  Originally proposed by Daniel Brooks

      if ( typeof entity === "function" ) {

        //  If document ready has already fired
        if ( document.readyState === "complete" ) {

          entity( document, Popcorn );

          return;
        }
        //  Add `entity` fn to ready stack
        readyStack.push( entity );

        //  This process should happen once per page load
        if ( !readyBound ) {

          //  set readyBound flag
          readyBound = true;

          var DOMContentLoaded  = function() {

            readyFired = true;

            //  Remove global DOM ready listener
            document.removeEventListener( "DOMContentLoaded", DOMContentLoaded, false );

            //  Execute all ready function in the stack
            for ( var i = 0, readyStackLength = readyStack.length; i < readyStackLength; i++ ) {

              readyStack[ i ].call( document, Popcorn );

            }
            //  GC readyStack
            readyStack = null;
          };

          //  Register global DOM ready listener
          document.addEventListener( "DOMContentLoaded", DOMContentLoaded, false );
        }

        return;
      }

      if ( typeof entity === "string" ) {
        try {
          matches = document.querySelector( entity );
        } catch( e ) {
          throw new Error( "Popcorn.js Error: Invalid media element selector: " + entity );
        }
      }

      //  Get media element by id or object reference
      this.media = matches || entity;

      //  inner reference to this media element's nodeName string value
      nodeName = ( this.media.nodeName && this.media.nodeName.toLowerCase() ) || "video";

      //  Create an audio or video element property reference
      this[ nodeName ] = this.media;

      this.options = Popcorn.extend( {}, options ) || {};

      //  Resolve custom ID or default prefixed ID
      this.id = this.options.id || Popcorn.guid( nodeName );

      //  Throw if an attempt is made to use an ID that already exists
      if ( Popcorn.byId( this.id ) ) {
        throw new Error( "Popcorn.js Error: Cannot use duplicate ID (" + this.id + ")" );
      }

      this.isDestroyed = false;

      this.data = {

        // data structure of all
        running: {
          cue: []
        },

        // Executed by either timeupdate event or in rAF loop
        timeUpdate: Popcorn.nop,

        // Allows disabling a plugin per instance
        disabled: {},

        // Stores DOM event queues by type
        events: {},

        // Stores Special event hooks data
        hooks: {},

        // Store track event history data
        history: [],

        // Stores ad-hoc state related data]
        state: {
          volume: this.media.volume
        },

        // Store track event object references by trackId
        trackRefs: {},

        // Playback track event queues
        trackEvents: new TrackEvents( this )
      };

      //  Register new instance
      Popcorn.instances.push( this );

      //  function to fire when video is ready
      var isReady = function() {

        // chrome bug: http://code.google.com/p/chromium/issues/detail?id=119598
        // it is possible the video's time is less than 0
        // this has the potential to call track events more than once, when they should not
        // start: 0, end: 1 will start, end, start again, when it should just start
        // just setting it to 0 if it is below 0 fixes this issue
        if ( self.media.currentTime < 0 ) {

          self.media.currentTime = 0;
        }

        self.media.removeEventListener( "loadedmetadata", isReady, false );

        var duration, videoDurationPlus,
            runningPlugins, runningPlugin, rpLength, rpNatives;

        //  Adding padding to the front and end of the arrays
        //  this is so we do not fall off either end
        duration = self.media.duration;

        //  Check for no duration info (NaN)
        videoDurationPlus = duration != duration ? Number.MAX_VALUE : duration + 1;

        Popcorn.addTrackEvent( self, {
          start: videoDurationPlus,
          end: videoDurationPlus
        });

        if ( !self.isDestroyed ) {
          self.data.durationChange = function() {
            var newDuration = self.media.duration,
                newDurationPlus = newDuration + 1,
                byStart = self.data.trackEvents.byStart,
                byEnd = self.data.trackEvents.byEnd;

            // Remove old padding events
            byStart.pop();
            byEnd.pop();

            // Remove any internal tracking of events that have end times greater than duration
            // otherwise their end events will never be hit.
            for ( var k = byEnd.length - 1; k > 0; k-- ) {
              if ( byEnd[ k ].end > newDuration ) {
                self.removeTrackEvent( byEnd[ k ]._id );
              }
            }

            // Remove any internal tracking of events that have end times greater than duration
            // otherwise their end events will never be hit.
            for ( var i = 0; i < byStart.length; i++ ) {
              if ( byStart[ i ].end > newDuration ) {
                self.removeTrackEvent( byStart[ i ]._id );
              }
            }

            // References to byEnd/byStart are reset, so accessing it this way is
            // forced upon us.
            self.data.trackEvents.byEnd.push({
              start: newDurationPlus,
              end: newDurationPlus
            });

            self.data.trackEvents.byStart.push({
              start: newDurationPlus,
              end: newDurationPlus
            });
          };

          // Listen for duration changes and adjust internal tracking of event timings
          self.media.addEventListener( "durationchange", self.data.durationChange, false );
        }

        if ( self.options.frameAnimation ) {

          //  if Popcorn is created with frameAnimation option set to true,
          //  requestAnimFrame is used instead of "timeupdate" media event.
          //  This is for greater frame time accuracy, theoretically up to
          //  60 frames per second as opposed to ~4 ( ~every 15-250ms)
          self.data.timeUpdate = function () {

            Popcorn.timeUpdate( self, {} );

            // fire frame for each enabled active plugin of every type
            Popcorn.forEach( Popcorn.manifest, function( key, val ) {

              runningPlugins = self.data.running[ val ];

              // ensure there are running plugins on this type on this instance
              if ( runningPlugins ) {

                rpLength = runningPlugins.length;
                for ( var i = 0; i < rpLength; i++ ) {

                  runningPlugin = runningPlugins[ i ];
                  rpNatives = runningPlugin._natives;
                  rpNatives && rpNatives.frame &&
                    rpNatives.frame.call( self, {}, runningPlugin, self.currentTime() );
                }
              }
            });

            self.emit( "timeupdate" );

            !self.isDestroyed && requestAnimFrame( self.data.timeUpdate );
          };

          !self.isDestroyed && requestAnimFrame( self.data.timeUpdate );

        } else {

          self.data.timeUpdate = function( event ) {
            Popcorn.timeUpdate( self, event );
          };

          if ( !self.isDestroyed ) {
            self.media.addEventListener( "timeupdate", self.data.timeUpdate, false );
          }
        }
      };

      self.media.addEventListener( "error", function() {
        self.error = self.media.error;
      }, false );

      // http://www.whatwg.org/specs/web-apps/current-work/#dom-media-readystate
      //
      // If media is in readyState (rS) >= 1, we know the media's duration,
      // which is required before running the isReady function.
      // If rS is 0, attach a listener for "loadedmetadata",
      // ( Which indicates that the media has moved from rS 0 to 1 )
      //
      // This has been changed from a check for rS 2 because
      // in certain conditions, Firefox can enter this code after dropping
      // to rS 1 from a higher state such as 2 or 3. This caused a "loadeddata"
      // listener to be attached to the media object, an event that had
      // already triggered and would not trigger again. This left Popcorn with an
      // instance that could never start a timeUpdate loop.
      if ( self.media.readyState >= 1 ) {

        isReady();
      } else {

        self.media.addEventListener( "loadedmetadata", isReady, false );
      }

      return this;
    }
  };

  //  Extend constructor prototype to instance prototype
  //  Allows chaining methods to instances
  Popcorn.p.init.prototype = Popcorn.p;

  Popcorn.byId = function( str ) {
    var instances = Popcorn.instances,
        length = instances.length,
        i = 0;

    for ( ; i < length; i++ ) {
      if ( instances[ i ].id === str ) {
        return instances[ i ];
      }
    }

    return null;
  };

  Popcorn.forEach = function( obj, fn, context ) {

    if ( !obj || !fn ) {
      return {};
    }

    context = context || this;

    var key, len;

    // Use native whenever possible
    if ( forEach && obj.forEach === forEach ) {
      return obj.forEach( fn, context );
    }

    if ( toString.call( obj ) === "[object NodeList]" ) {
      for ( key = 0, len = obj.length; key < len; key++ ) {
        fn.call( context, obj[ key ], key, obj );
      }
      return obj;
    }

    for ( key in obj ) {
      if ( hasOwn.call( obj, key ) ) {
        fn.call( context, obj[ key ], key, obj );
      }
    }
    return obj;
  };

  Popcorn.extend = function( obj ) {
    var dest = obj, src = slice.call( arguments, 1 );

    Popcorn.forEach( src, function( copy ) {
      for ( var prop in copy ) {
        dest[ prop ] = copy[ prop ];
      }
    });

    return dest;
  };


  // A Few reusable utils, memoized onto Popcorn
  Popcorn.extend( Popcorn, {
    noConflict: function( deep ) {

      if ( deep ) {
        global.Popcorn = _Popcorn;
      }

      return Popcorn;
    },
    error: function( msg ) {
      throw new Error( msg );
    },
    guid: function( prefix ) {
      Popcorn.guid.counter++;
      return  ( prefix ? prefix : "" ) + ( +new Date() + Popcorn.guid.counter );
    },
    sizeOf: function( obj ) {
      var size = 0;

      for ( var prop in obj ) {
        size++;
      }

      return size;
    },
    isArray: Array.isArray || function( array ) {
      return toString.call( array ) === "[object Array]";
    },

    nop: function() {},

    position: function( elem ) {

      if ( !elem.parentNode ) {
        return null;
      }

      var clientRect = elem.getBoundingClientRect(),
          bounds = {},
          doc = elem.ownerDocument,
          docElem = document.documentElement,
          body = document.body,
          clientTop, clientLeft, scrollTop, scrollLeft, top, left;

      //  Determine correct clientTop/Left
      clientTop = docElem.clientTop || body.clientTop || 0;
      clientLeft = docElem.clientLeft || body.clientLeft || 0;

      //  Determine correct scrollTop/Left
      scrollTop = ( global.pageYOffset && docElem.scrollTop || body.scrollTop );
      scrollLeft = ( global.pageXOffset && docElem.scrollLeft || body.scrollLeft );

      //  Temp top/left
      top = Math.ceil( clientRect.top + scrollTop - clientTop );
      left = Math.ceil( clientRect.left + scrollLeft - clientLeft );

      for ( var p in clientRect ) {
        bounds[ p ] = Math.round( clientRect[ p ] );
      }

      return Popcorn.extend({}, bounds, { top: top, left: left });
    },

    disable: function( instance, plugin ) {

      if ( instance.data.disabled[ plugin ] ) {
        return;
      }

      instance.data.disabled[ plugin ] = true;

      if ( plugin in Popcorn.registryByName &&
           instance.data.running[ plugin ] ) {

        for ( var i = instance.data.running[ plugin ].length - 1, event; i >= 0; i-- ) {

          event = instance.data.running[ plugin ][ i ];
          event._natives.end.call( instance, null, event  );

          instance.emit( "trackend",
            Popcorn.extend({}, event, {
              plugin: event.type,
              type: "trackend"
            })
          );
        }
      }

      return instance;
    },
    enable: function( instance, plugin ) {

      if ( !instance.data.disabled[ plugin ] ) {
        return;
      }

      instance.data.disabled[ plugin ] = false;

      if ( plugin in Popcorn.registryByName &&
           instance.data.running[ plugin ] ) {

        for ( var i = instance.data.running[ plugin ].length - 1, event; i >= 0; i-- ) {

          event = instance.data.running[ plugin ][ i ];
          event._natives.start.call( instance, null, event  );

          instance.emit( "trackstart",
            Popcorn.extend({}, event, {
              plugin: event.type,
              type: "trackstart",
              track: event
            })
          );
        }
      }

      return instance;
    },
    destroy: function( instance ) {
      var events = instance.data.events,
          trackEvents = instance.data.trackEvents,
          singleEvent, item, fn, plugin;

      //  Iterate through all events and remove them
      for ( item in events ) {
        singleEvent = events[ item ];
        for ( fn in singleEvent ) {
          delete singleEvent[ fn ];
        }
        events[ item ] = null;
      }

      // remove all plugins off the given instance
      for ( plugin in Popcorn.registryByName ) {
        Popcorn.removePlugin( instance, plugin );
      }

      // Remove all data.trackEvents #1178
      trackEvents.byStart.length = 0;
      trackEvents.byEnd.length = 0;

      if ( !instance.isDestroyed ) {
        instance.data.timeUpdate && instance.media.removeEventListener( "timeupdate", instance.data.timeUpdate, false );
        instance.isDestroyed = true;
      }

      Popcorn.instances.splice( Popcorn.instances.indexOf( instance ), 1 );
    }
  });

  //  Memoized GUID Counter
  Popcorn.guid.counter = 1;

  //  Factory to implement getters, setters and controllers
  //  as Popcorn instance methods. The IIFE will create and return
  //  an object with defined methods
  Popcorn.extend(Popcorn.p, (function() {

      var methods = "load play pause currentTime playbackRate volume duration preload playbackRate " +
                    "autoplay loop controls muted buffered readyState seeking paused played seekable ended",
          ret = {};


      //  Build methods, store in object that is returned and passed to extend
      Popcorn.forEach( methods.split( /\s+/g ), function( name ) {

        ret[ name ] = function( arg ) {
          var previous;

          if ( typeof this.media[ name ] === "function" ) {

            // Support for shorthanded play(n)/pause(n) jump to currentTime
            // If arg is not null or undefined and called by one of the
            // allowed shorthandable methods, then set the currentTime
            // Supports time as seconds or SMPTE
            if ( arg != null && /play|pause/.test( name ) ) {
              this.media.currentTime = Popcorn.util.toSeconds( arg );
            }

            this.media[ name ]();

            return this;
          }

          if ( arg != null ) {
            // Capture the current value of the attribute property
            previous = this.media[ name ];

            // Set the attribute property with the new value
            this.media[ name ] = arg;

            // If the new value is not the same as the old value
            // emit an "attrchanged event"
            if ( previous !== arg ) {
              this.emit( "attrchange", {
                attribute: name,
                previousValue: previous,
                currentValue: arg
              });
            }
            return this;
          }

          return this.media[ name ];
        };
      });

      return ret;

    })()
  );

  Popcorn.forEach( "enable disable".split(" "), function( method ) {
    Popcorn.p[ method ] = function( plugin ) {
      return Popcorn[ method ]( this, plugin );
    };
  });

  Popcorn.extend(Popcorn.p, {

    //  Rounded currentTime
    roundTime: function() {
      return Math.round( this.media.currentTime );
    },

    //  Attach an event to a single point in time
    exec: function( id, time, fn ) {
      var length = arguments.length,
          eventType = "trackadded",
          trackEvent, sec, options;

      // Check if first could possibly be a SMPTE string
      // p.cue( "smpte string", fn );
      // try/catch avoid awful throw in Popcorn.util.toSeconds
      // TODO: Get rid of that, replace with NaN return?
      try {
        sec = Popcorn.util.toSeconds( id );
      } catch ( e ) {}

      // If it can be converted into a number then
      // it's safe to assume that the string was SMPTE
      if ( typeof sec === "number" ) {
        id = sec;
      }

      // Shift arguments based on use case
      //
      // Back compat for:
      // p.cue( time, fn );
      if ( typeof id === "number" && length === 2 ) {
        fn = time;
        time = id;
        id = Popcorn.guid( "cue" );
      } else {
        // Support for new forms

        // p.cue( "empty-cue" );
        if ( length === 1 ) {
          // Set a time for an empty cue. It's not important what
          // the time actually is, because the cue is a no-op
          time = -1;

        } else {

          // Get the TrackEvent that matches the given id.
          trackEvent = this.getTrackEvent( id );

          if ( trackEvent ) {

            // remove existing cue so a new one can be added via trackEvents.add
            this.data.trackEvents.remove( id );
            TrackEvent.end( this, trackEvent );
            // Update track event references
            Popcorn.removeTrackEvent.ref( this, id );

            eventType = "cuechange";

            // p.cue( "my-id", 12 );
            // p.cue( "my-id", function() { ... });
            if ( typeof id === "string" && length === 2 ) {

              // p.cue( "my-id", 12 );
              // The path will update the cue time.
              if ( typeof time === "number" ) {
                // Re-use existing TrackEvent start callback
                fn = trackEvent._natives.start;
              }

              // p.cue( "my-id", function() { ... });
              // The path will update the cue function
              if ( typeof time === "function" ) {
                fn = time;
                // Re-use existing TrackEvent start time
                time = trackEvent.start;
              }
            }
          } else {

            if ( length >= 2 ) {

              // p.cue( "a", "00:00:00");
              if ( typeof time === "string" ) {
                try {
                  sec = Popcorn.util.toSeconds( time );
                } catch ( e ) {}

                time = sec;
              }

              // p.cue( "b", 11 );
              // p.cue( "b", 11, function() {} );
              if ( typeof time === "number" ) {
                fn = fn || Popcorn.nop();
              }

              // p.cue( "c", function() {});
              if ( typeof time === "function" ) {
                fn = time;
                time = -1;
              }
            }
          }
        }
      }

      options = {
        id: id,
        start: time,
        end: time + 1,
        _running: false,
        _natives: {
          start: fn || Popcorn.nop,
          end: Popcorn.nop,
          type: "cue"
        }
      };

      if ( trackEvent ) {
        options = Popcorn.extend( trackEvent, options );
      }

      if ( eventType === "cuechange" ) {

        //  Supports user defined track event id
        options._id = options.id || options._id || Popcorn.guid( options._natives.type );

        this.data.trackEvents.add( options );
        TrackEvent.start( this, options );

        this.timeUpdate( this, null, true );

        // Store references to user added trackevents in ref table
        Popcorn.addTrackEvent.ref( this, options );

        this.emit( eventType, Popcorn.extend({}, options, {
          id: id,
          type: eventType,
          previousValue: {
            time: trackEvent.start,
            fn: trackEvent._natives.start
          },
          currentValue: {
            time: time,
            fn: fn || Popcorn.nop
          },
          track: trackEvent
        }));
      } else {
        //  Creating a one second track event with an empty end
        Popcorn.addTrackEvent( this, options );
      }

      return this;
    },

    // Mute the calling media, optionally toggle
    mute: function( toggle ) {

      var event = toggle == null || toggle === true ? "muted" : "unmuted";

      // If `toggle` is explicitly `false`,
      // unmute the media and restore the volume level
      if ( event === "unmuted" ) {
        this.media.muted = false;
        this.media.volume = this.data.state.volume;
      }

      // If `toggle` is either null or undefined,
      // save the current volume and mute the media element
      if ( event === "muted" ) {
        this.data.state.volume = this.media.volume;
        this.media.muted = true;
      }

      // Trigger either muted|unmuted event
      this.emit( event );

      return this;
    },

    // Convenience method, unmute the calling media
    unmute: function( toggle ) {

      return this.mute( toggle == null ? false : !toggle );
    },

    // Get the client bounding box of an instance element
    position: function() {
      return Popcorn.position( this.media );
    },

    // Toggle a plugin's playback behaviour (on or off) per instance
    toggle: function( plugin ) {
      return Popcorn[ this.data.disabled[ plugin ] ? "enable" : "disable" ]( this, plugin );
    },

    // Set default values for plugin options objects per instance
    defaults: function( plugin, defaults ) {

      // If an array of default configurations is provided,
      // iterate and apply each to this instance
      if ( Popcorn.isArray( plugin ) ) {

        Popcorn.forEach( plugin, function( obj ) {
          for ( var name in obj ) {
            this.defaults( name, obj[ name ] );
          }
        }, this );

        return this;
      }

      if ( !this.options.defaults ) {
        this.options.defaults = {};
      }

      if ( !this.options.defaults[ plugin ] ) {
        this.options.defaults[ plugin ] = {};
      }

      Popcorn.extend( this.options.defaults[ plugin ], defaults );

      return this;
    }
  });

  Popcorn.Events  = {
    UIEvents: "blur focus focusin focusout load resize scroll unload",
    MouseEvents: "mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave click dblclick",
    Events: "loadstart progress suspend emptied stalled play pause error " +
            "loadedmetadata loadeddata waiting playing canplay canplaythrough " +
            "seeking seeked timeupdate ended ratechange durationchange volumechange"
  };

  Popcorn.Events.Natives = Popcorn.Events.UIEvents + " " +
                           Popcorn.Events.MouseEvents + " " +
                           Popcorn.Events.Events;

  internal.events.apiTypes = [ "UIEvents", "MouseEvents", "Events" ];

  // Privately compile events table at load time
  (function( events, data ) {

    var apis = internal.events.apiTypes,
    eventsList = events.Natives.split( /\s+/g ),
    idx = 0, len = eventsList.length, prop;

    for( ; idx < len; idx++ ) {
      data.hash[ eventsList[idx] ] = true;
    }

    apis.forEach(function( val, idx ) {

      data.apis[ val ] = {};

      var apiEvents = events[ val ].split( /\s+/g ),
      len = apiEvents.length,
      k = 0;

      for ( ; k < len; k++ ) {
        data.apis[ val ][ apiEvents[ k ] ] = true;
      }
    });
  })( Popcorn.Events, internal.events );

  Popcorn.events = {

    isNative: function( type ) {
      return !!internal.events.hash[ type ];
    },
    getInterface: function( type ) {

      if ( !Popcorn.events.isNative( type ) ) {
        return false;
      }

      var eventApi = internal.events,
        apis = eventApi.apiTypes,
        apihash = eventApi.apis,
        idx = 0, len = apis.length, api, tmp;

      for ( ; idx < len; idx++ ) {
        tmp = apis[ idx ];

        if ( apihash[ tmp ][ type ] ) {
          api = tmp;
          break;
        }
      }
      return api;
    },
    //  Compile all native events to single array
    all: Popcorn.Events.Natives.split( /\s+/g ),
    //  Defines all Event handling static functions
    fn: {
      trigger: function( type, data ) {
        var eventInterface, evt, clonedEvents,
            events = this.data.events[ type ];

        //  setup checks for custom event system
        if ( events ) {
          eventInterface  = Popcorn.events.getInterface( type );

          if ( eventInterface ) {
            evt = document.createEvent( eventInterface );
            evt.initEvent( type, true, true, global, 1 );

            this.media.dispatchEvent( evt );

            return this;
          }

          // clone events in case callbacks remove callbacks themselves
          clonedEvents = events.slice();

          // iterate through all callbacks
          while ( clonedEvents.length ) {
            clonedEvents.shift().call( this, data );
          }
        }

        return this;
      },
      listen: function( type, fn ) {
        var self = this,
            hasEvents = true,
            eventHook = Popcorn.events.hooks[ type ],
            origType = type,
            clonedEvents,
            tmp;

        if ( typeof fn !== "function" ) {
          throw new Error( "Popcorn.js Error: Listener is not a function" );
        }

        // Setup event registry entry
        if ( !this.data.events[ type ] ) {
          this.data.events[ type ] = [];
          // Toggle if the previous assumption was untrue
          hasEvents = false;
        }

        // Check and setup event hooks
        if ( eventHook ) {
          // Execute hook add method if defined
          if ( eventHook.add ) {
            eventHook.add.call( this, {}, fn );
          }

          // Reassign event type to our piggyback event type if defined
          if ( eventHook.bind ) {
            type = eventHook.bind;
          }

          // Reassign handler if defined
          if ( eventHook.handler ) {
            tmp = fn;

            fn = function wrapper( event ) {
              eventHook.handler.call( self, event, tmp );
            };
          }

          // assume the piggy back event is registered
          hasEvents = true;

          // Setup event registry entry
          if ( !this.data.events[ type ] ) {
            this.data.events[ type ] = [];
            // Toggle if the previous assumption was untrue
            hasEvents = false;
          }
        }

        //  Register event and handler
        this.data.events[ type ].push( fn );

        // only attach one event of any type
        if ( !hasEvents && Popcorn.events.all.indexOf( type ) > -1 ) {
          this.media.addEventListener( type, function( event ) {
            if ( self.data.events[ type ] ) {
              // clone events in case callbacks remove callbacks themselves
              clonedEvents = self.data.events[ type ].slice();

              // iterate through all callbacks
              while ( clonedEvents.length ) {
                clonedEvents.shift().call( self, event );
              }
            }
          }, false );
        }
        return this;
      },
      unlisten: function( type, fn ) {
        var ind,
            events = this.data.events[ type ];

        if ( !events ) {
          return; // no listeners = nothing to do
        }

        if ( typeof fn === "string" ) {
          // legacy support for string-based removal -- not recommended
          for ( var i = 0; i < events.length; i++ ) {
            if ( events[ i ].name === fn ) {
              // decrement i because array length just got smaller
              events.splice( i--, 1 );
            }
          }

          return this;
        } else if ( typeof fn === "function" ) {
          while( ind !== -1 ) {
            ind = events.indexOf( fn );
            if ( ind !== -1 ) {
              events.splice( ind, 1 );
            }
          }

          return this;
        }

        // if we got to this point, we are deleting all functions of this type
        this.data.events[ type ] = null;

        return this;
      }
    },
    hooks: {
      canplayall: {
        bind: "canplaythrough",
        add: function( event, callback ) {

          var state = false;

          if ( this.media.readyState ) {

            // always call canplayall asynchronously
            setTimeout(function() {
              callback.call( this, event );
            }.bind(this), 0 );

            state = true;
          }

          this.data.hooks.canplayall = {
            fired: state
          };
        },
        // declare special handling instructions
        handler: function canplayall( event, callback ) {

          if ( !this.data.hooks.canplayall.fired ) {
            // trigger original user callback once
            callback.call( this, event );

            this.data.hooks.canplayall.fired = true;
          }
        }
      }
    }
  };

  //  Extend Popcorn.events.fns (listen, unlisten, trigger) to all Popcorn instances
  //  Extend aliases (on, off, emit)
  Popcorn.forEach( [ [ "trigger", "emit" ], [ "listen", "on" ], [ "unlisten", "off" ] ], function( key ) {
    Popcorn.p[ key[ 0 ] ] = Popcorn.p[ key[ 1 ] ] = Popcorn.events.fn[ key[ 0 ] ];
  });

  // Internal Only - construct simple "TrackEvent"
  // data type objects
  function TrackEvent( track ) {
    Abstract.put.call( this, track );
  }

  // Determine if a TrackEvent's "start" and "trackstart" must be called.
  TrackEvent.start = function( instance, track ) {

    if ( track.end > instance.media.currentTime &&
        track.start <= instance.media.currentTime && !track._running ) {

      track._running = true;
      instance.data.running[ track._natives.type ].push( track );

      if ( !instance.data.disabled[ track._natives.type ] ) {

        track._natives.start.call( instance, null, track );

        instance.emit( "trackstart",
          Popcorn.extend( {}, track, {
            plugin: track._natives.type,
            type: "trackstart",
            track: track
          })
        );
      }
    }
  };

  // Determine if a TrackEvent's "end" and "trackend" must be called.
  TrackEvent.end = function( instance, track ) {

    var runningPlugins;

    if ( ( track.end <= instance.media.currentTime ||
        track.start > instance.media.currentTime ) && track._running ) {

      runningPlugins = instance.data.running[ track._natives.type ];

      track._running = false;
      runningPlugins.splice( runningPlugins.indexOf( track ), 1 );

      if ( !instance.data.disabled[ track._natives.type ] ) {

        track._natives.end.call( instance, null, track );

        instance.emit( "trackend",
          Popcorn.extend( {}, track, {
            plugin: track._natives.type,
            type: "trackend",
            track: track
          })
        );
      }
    }
  };

  // Internal Only - construct "TrackEvents"
  // data type objects that are used by the Popcorn
  // instance, stored at p.data.trackEvents
  function TrackEvents( parent ) {
    this.parent = parent;

    this.byStart = [{
      start: -1,
      end: -1
    }];

    this.byEnd = [{
      start: -1,
      end: -1
    }];
    this.animating = [];
    this.startIndex = 0;
    this.endIndex = 0;
    this.previousUpdateTime = -1;

    this.count = 1;
  }

  function isMatch( obj, key, value ) {
    return obj[ key ] && obj[ key ] === value;
  }

  TrackEvents.prototype.where = function( params ) {
    return ( this.parent.getTrackEvents() || [] ).filter(function( event ) {
      var key, value;

      // If no explicit params, match all TrackEvents
      if ( !params ) {
        return true;
      }

      // Filter keys in params against both the top level properties
      // and the _natives properties
      for ( key in params ) {
        value = params[ key ];
        if ( isMatch( event, key, value ) || isMatch( event._natives, key, value ) ) {
          return true;
        }
      }
      return false;
    });
  };

  TrackEvents.prototype.add = function( track ) {

    //  Store this definition in an array sorted by times
    var byStart = this.byStart,
        byEnd = this.byEnd,
        startIndex, endIndex;

    //  Push track event ids into the history
    if ( track && track._id ) {
      this.parent.data.history.push( track._id );
    }

    track.start = Popcorn.util.toSeconds( track.start, this.parent.options.framerate );
    track.end   = Popcorn.util.toSeconds( track.end, this.parent.options.framerate );

    for ( startIndex = byStart.length - 1; startIndex >= 0; startIndex-- ) {

      if ( track.start >= byStart[ startIndex ].start ) {
        byStart.splice( startIndex + 1, 0, track );
        break;
      }
    }

    for ( endIndex = byEnd.length - 1; endIndex >= 0; endIndex-- ) {

      if ( track.end > byEnd[ endIndex ].end ) {
        byEnd.splice( endIndex + 1, 0, track );
        break;
      }
    }

    // update startIndex and endIndex
    if ( startIndex <= this.parent.data.trackEvents.startIndex &&
      track.start <= this.parent.data.trackEvents.previousUpdateTime ) {

      this.parent.data.trackEvents.startIndex++;
    }

    if ( endIndex <= this.parent.data.trackEvents.endIndex &&
      track.end < this.parent.data.trackEvents.previousUpdateTime ) {

      this.parent.data.trackEvents.endIndex++;
    }

    this.count++;

  };

  TrackEvents.prototype.remove = function( removeId, state ) {

    if ( removeId instanceof TrackEvent ) {
      removeId = removeId.id;
    }

    if ( typeof removeId === "object" ) {
      // Filter by key=val and remove all matching TrackEvents
      this.where( removeId ).forEach(function( event ) {
        // |this| refers to the calling Popcorn "parent" instance
        this.removeTrackEvent( event._id );
      }, this.parent );

      return this;
    }

    var start, end, animate, historyLen, track,
        length = this.byStart.length,
        index = 0,
        indexWasAt = 0,
        byStart = [],
        byEnd = [],
        animating = [],
        history = [],
        comparable = {};

    state = state || {};

    while ( --length > -1 ) {
      start = this.byStart[ index ];
      end = this.byEnd[ index ];

      // Padding events will not have _id properties.
      // These should be safely pushed onto the front and back of the
      // track event array
      if ( !start._id ) {
        byStart.push( start );
        byEnd.push( end );
      }

      // Filter for user track events (vs system track events)
      if ( start._id ) {

        // If not a matching start event for removal
        if ( start._id !== removeId ) {
          byStart.push( start );
        }

        // If not a matching end event for removal
        if ( end._id !== removeId ) {
          byEnd.push( end );
        }

        // If the _id is matched, capture the current index
        if ( start._id === removeId ) {
          indexWasAt = index;

          // cache the track event being removed
          track = start;
        }
      }
      // Increment the track index
      index++;
    }

    // Reset length to be used by the condition below to determine
    // if animating track events should also be filtered for removal.
    // Reset index below to be used by the reverse while as an
    // incrementing counter
    length = this.animating.length;
    index = 0;

    if ( length ) {
      while ( --length > -1 ) {
        animate = this.animating[ index ];

        // Padding events will not have _id properties.
        // These should be safely pushed onto the front and back of the
        // track event array
        if ( !animate._id ) {
          animating.push( animate );
        }

        // If not a matching animate event for removal
        if ( animate._id && animate._id !== removeId ) {
          animating.push( animate );
        }
        // Increment the track index
        index++;
      }
    }

    //  Update
    if ( indexWasAt <= this.startIndex ) {
      this.startIndex--;
    }

    if ( indexWasAt <= this.endIndex ) {
      this.endIndex--;
    }

    this.byStart = byStart;
    this.byEnd = byEnd;
    this.animating = animating;
    this.count--;

    historyLen = this.parent.data.history.length;

    for ( var i = 0; i < historyLen; i++ ) {
      if ( this.parent.data.history[ i ] !== removeId ) {
        history.push( this.parent.data.history[ i ] );
      }
    }

    // Update ordered history array
    this.parent.data.history = history;

  };

  // Helper function used to retrieve old values of properties that
  // are provided for update.
  function getPreviousProperties( oldOptions, newOptions ) {
    var matchProps = {};

    for ( var prop in oldOptions ) {
      if ( hasOwn.call( newOptions, prop ) && hasOwn.call( oldOptions, prop ) ) {
        matchProps[ prop ] = oldOptions[ prop ];
      }
    }

    return matchProps;
  }

  // Internal Only - Adds track events to the instance object
  Popcorn.addTrackEvent = function( obj, track ) {
    var temp;

    if ( track instanceof TrackEvent ) {
      return;
    }

    track = new TrackEvent( track );

    // Determine if this track has default options set for it
    // If so, apply them to the track object
    if ( track && track._natives && track._natives.type &&
        ( obj.options.defaults && obj.options.defaults[ track._natives.type ] ) ) {

      // To ensure that the TrackEvent Invariant Policy is enforced,
      // First, copy the properties of the newly created track event event
      // to a temporary holder
      temp = Popcorn.extend( {}, track );

      // Next, copy the default onto the newly created trackevent, followed by the
      // temporary holder.
      Popcorn.extend( track, obj.options.defaults[ track._natives.type ], temp );
    }

    if ( track._natives ) {
      //  Supports user defined track event id
      track._id = track.id || track._id || Popcorn.guid( track._natives.type );

      // Trigger _setup method if exists
      if ( track._natives._setup ) {

        track._natives._setup.call( obj, track );

        obj.emit( "tracksetup", Popcorn.extend( {}, track, {
          plugin: track._natives.type,
          type: "tracksetup",
          track: track
        }));
      }
    }

    obj.data.trackEvents.add( track );
    TrackEvent.start( obj, track );

    this.timeUpdate( obj, null, true );

    // Store references to user added trackevents in ref table
    if ( track._id ) {
      Popcorn.addTrackEvent.ref( obj, track );
    }

    obj.emit( "trackadded", Popcorn.extend({}, track,
      track._natives ? { plugin: track._natives.type } : {}, {
        type: "trackadded",
        track: track
    }));
  };

  // Internal Only - Adds track event references to the instance object's trackRefs hash table
  Popcorn.addTrackEvent.ref = function( obj, track ) {
    obj.data.trackRefs[ track._id ] = track;

    return obj;
  };

  Popcorn.removeTrackEvent = function( obj, removeId ) {
    var track = obj.getTrackEvent( removeId );

    if ( !track ) {
      return;
    }

    // If a _teardown function was defined,
    // enforce for track event removals
    if ( track._natives._teardown ) {
      track._natives._teardown.call( obj, track );
    }

    obj.data.trackEvents.remove( removeId );

    // Update track event references
    Popcorn.removeTrackEvent.ref( obj, removeId );

    if ( track._natives ) {

      // Fire a trackremoved event
      obj.emit( "trackremoved", Popcorn.extend({}, track, {
        plugin: track._natives.type,
        type: "trackremoved",
        track: track
      }));
    }
  };

  // Internal Only - Removes track event references from instance object's trackRefs hash table
  Popcorn.removeTrackEvent.ref = function( obj, removeId ) {
    delete obj.data.trackRefs[ removeId ];

    return obj;
  };

  // Return an array of track events bound to this instance object
  Popcorn.getTrackEvents = function( obj ) {

    var trackevents = [],
      refs = obj.data.trackEvents.byStart,
      length = refs.length,
      idx = 0,
      ref;

    for ( ; idx < length; idx++ ) {
      ref = refs[ idx ];
      // Return only user attributed track event references
      if ( ref._id ) {
        trackevents.push( ref );
      }
    }

    return trackevents;
  };

  // Internal Only - Returns an instance object's trackRefs hash table
  Popcorn.getTrackEvents.ref = function( obj ) {
    return obj.data.trackRefs;
  };

  // Return a single track event bound to this instance object
  Popcorn.getTrackEvent = function( obj, trackId ) {
    return obj.data.trackRefs[ trackId ];
  };

  // Internal Only - Returns an instance object's track reference by track id
  Popcorn.getTrackEvent.ref = function( obj, trackId ) {
    return obj.data.trackRefs[ trackId ];
  };

  Popcorn.getLastTrackEventId = function( obj ) {
    return obj.data.history[ obj.data.history.length - 1 ];
  };

  Popcorn.timeUpdate = function( obj, event ) {
    var currentTime = obj.media.currentTime,
        previousTime = obj.data.trackEvents.previousUpdateTime,
        tracks = obj.data.trackEvents,
        end = tracks.endIndex,
        start = tracks.startIndex,
        byStartLen = tracks.byStart.length,
        byEndLen = tracks.byEnd.length,
        registryByName = Popcorn.registryByName,
        trackstart = "trackstart",
        trackend = "trackend",

        byEnd, byStart, byAnimate, natives, type, runningPlugins;

    //  Playbar advancing
    if ( previousTime <= currentTime ) {

      while ( tracks.byEnd[ end ] && tracks.byEnd[ end ].end <= currentTime ) {

        byEnd = tracks.byEnd[ end ];
        natives = byEnd._natives;
        type = natives && natives.type;

        //  If plugin does not exist on this instance, remove it
        if ( !natives ||
            ( !!registryByName[ type ] ||
              !!obj[ type ] ) ) {

          if ( byEnd._running === true ) {

            byEnd._running = false;
            runningPlugins = obj.data.running[ type ];
            runningPlugins.splice( runningPlugins.indexOf( byEnd ), 1 );

            if ( !obj.data.disabled[ type ] ) {

              natives.end.call( obj, event, byEnd );

              obj.emit( trackend,
                Popcorn.extend({}, byEnd, {
                  plugin: type,
                  type: trackend,
                  track: byEnd
                })
              );
            }
          }

          end++;
        } else {
          // remove track event
          Popcorn.removeTrackEvent( obj, byEnd._id );
          return;
        }
      }

      while ( tracks.byStart[ start ] && tracks.byStart[ start ].start <= currentTime ) {

        byStart = tracks.byStart[ start ];
        natives = byStart._natives;
        type = natives && natives.type;
        //  If plugin does not exist on this instance, remove it
        if ( !natives ||
            ( !!registryByName[ type ] ||
              !!obj[ type ] ) ) {
          if ( byStart.end > currentTime &&
                byStart._running === false ) {

            byStart._running = true;
            obj.data.running[ type ].push( byStart );

            if ( !obj.data.disabled[ type ] ) {

              natives.start.call( obj, event, byStart );

              obj.emit( trackstart,
                Popcorn.extend({}, byStart, {
                  plugin: type,
                  type: trackstart,
                  track: byStart
                })
              );
            }
          }
          start++;
        } else {
          // remove track event
          Popcorn.removeTrackEvent( obj, byStart._id );
          return;
        }
      }

    // Playbar receding
    } else if ( previousTime > currentTime ) {

      while ( tracks.byStart[ start ] && tracks.byStart[ start ].start > currentTime ) {

        byStart = tracks.byStart[ start ];
        natives = byStart._natives;
        type = natives && natives.type;

        // if plugin does not exist on this instance, remove it
        if ( !natives ||
            ( !!registryByName[ type ] ||
              !!obj[ type ] ) ) {

          if ( byStart._running === true ) {

            byStart._running = false;
            runningPlugins = obj.data.running[ type ];
            runningPlugins.splice( runningPlugins.indexOf( byStart ), 1 );

            if ( !obj.data.disabled[ type ] ) {

              natives.end.call( obj, event, byStart );

              obj.emit( trackend,
                Popcorn.extend({}, byStart, {
                  plugin: type,
                  type: trackend,
                  track: byStart
                })
              );
            }
          }
          start--;
        } else {
          // remove track event
          Popcorn.removeTrackEvent( obj, byStart._id );
          return;
        }
      }

      while ( tracks.byEnd[ end ] && tracks.byEnd[ end ].end > currentTime ) {

        byEnd = tracks.byEnd[ end ];
        natives = byEnd._natives;
        type = natives && natives.type;

        // if plugin does not exist on this instance, remove it
        if ( !natives ||
            ( !!registryByName[ type ] ||
              !!obj[ type ] ) ) {

          if ( byEnd.start <= currentTime &&
                byEnd._running === false ) {

            byEnd._running = true;
            obj.data.running[ type ].push( byEnd );

            if ( !obj.data.disabled[ type ] ) {

              natives.start.call( obj, event, byEnd );

              obj.emit( trackstart,
                Popcorn.extend({}, byEnd, {
                  plugin: type,
                  type: trackstart,
                  track: byEnd
                })
              );
            }
          }
          end--;
        } else {
          // remove track event
          Popcorn.removeTrackEvent( obj, byEnd._id );
          return;
        }
      }
    }

    tracks.endIndex = end;
    tracks.startIndex = start;
    tracks.previousUpdateTime = currentTime;

    //enforce index integrity if trackRemoved
    tracks.byStart.length < byStartLen && tracks.startIndex--;
    tracks.byEnd.length < byEndLen && tracks.endIndex--;

  };

  //  Map and Extend TrackEvent functions to all Popcorn instances
  Popcorn.extend( Popcorn.p, {

    getTrackEvents: function() {
      return Popcorn.getTrackEvents.call( null, this );
    },

    getTrackEvent: function( id ) {
      return Popcorn.getTrackEvent.call( null, this, id );
    },

    getLastTrackEventId: function() {
      return Popcorn.getLastTrackEventId.call( null, this );
    },

    removeTrackEvent: function( id ) {

      Popcorn.removeTrackEvent.call( null, this, id );
      return this;
    },

    removePlugin: function( name ) {
      Popcorn.removePlugin.call( null, this, name );
      return this;
    },

    timeUpdate: function( event ) {
      Popcorn.timeUpdate.call( null, this, event );
      return this;
    },

    destroy: function() {
      Popcorn.destroy.call( null, this );
      return this;
    }
  });

  //  Plugin manifests
  Popcorn.manifest = {};
  //  Plugins are registered
  Popcorn.registry = [];
  Popcorn.registryByName = {};
  //  An interface for extending Popcorn
  //  with plugin functionality
  Popcorn.plugin = function( name, definition, manifest ) {

    if ( Popcorn.protect.natives.indexOf( name.toLowerCase() ) >= 0 ) {
      Popcorn.error( "'" + name + "' is a protected function name" );
      return;
    }

    //  Provides some sugar, but ultimately extends
    //  the definition into Popcorn.p
    var isfn = typeof definition === "function",
        blacklist = [ "start", "end", "type", "manifest" ],
        methods = [ "_setup", "_teardown", "start", "end", "frame" ],
        plugin = {},
        setup;

    // combines calls of two function calls into one
    var combineFn = function( first, second ) {

      first = first || Popcorn.nop;
      second = second || Popcorn.nop;

      return function() {
        first.apply( this, arguments );
        second.apply( this, arguments );
      };
    };

    //  If `manifest` arg is undefined, check for manifest within the `definition` object
    //  If no `definition.manifest`, an empty object is a sufficient fallback
    Popcorn.manifest[ name ] = manifest = manifest || definition.manifest || {};

    // apply safe, and empty default functions
    methods.forEach(function( method ) {
      definition[ method ] = safeTry( definition[ method ] || Popcorn.nop, name );
    });

    var pluginFn = function( setup, options ) {

      if ( !options ) {
        return this;
      }

      // When the "ranges" property is set and its value is an array, short-circuit
      // the pluginFn definition to recall itself with an options object generated from
      // each range object in the ranges array. (eg. { start: 15, end: 16 } )
      if ( options.ranges && Popcorn.isArray(options.ranges) ) {
        Popcorn.forEach( options.ranges, function( range ) {
          // Create a fresh object, extend with current options
          // and start/end range object's properties
          // Works with in/out as well.
          var opts = Popcorn.extend( {}, options, range );

          // Remove the ranges property to prevent infinitely
          // entering this condition
          delete opts.ranges;

          // Call the plugin with the newly created opts object
          this[ name ]( opts );
        }, this);

        // Return the Popcorn instance to avoid creating an empty track event
        return this;
      }

      //  Storing the plugin natives
      var natives = options._natives = {},
          compose = "",
          originalOpts, manifestOpts;

      Popcorn.extend( natives, setup );

      options._natives.type = options._natives.plugin = name;
      options._running = false;

      natives.start = natives.start || natives[ "in" ];
      natives.end = natives.end || natives[ "out" ];

      if ( options.once ) {
        natives.end = combineFn( natives.end, function() {
          this.removeTrackEvent( options._id );
        });
      }

      // extend teardown to always call end if running
      natives._teardown = combineFn(function() {

        var args = slice.call( arguments ),
            runningPlugins = this.data.running[ natives.type ];

        // end function signature is not the same as teardown,
        // put null on the front of arguments for the event parameter
        args.unshift( null );

        // only call end if event is running
        args[ 1 ]._running &&
          runningPlugins.splice( runningPlugins.indexOf( options ), 1 ) &&
          natives.end.apply( this, args );

        args[ 1 ]._running = false;
        this.emit( "trackend",
          Popcorn.extend( {}, options, {
            plugin: natives.type,
            type: "trackend",
            track: Popcorn.getTrackEvent( this, options.id || options._id )
          })
        );
      }, natives._teardown );

      // extend teardown to always trigger trackteardown after teardown
      natives._teardown = combineFn( natives._teardown, function() {

        this.emit( "trackteardown", Popcorn.extend( {}, options, {
          plugin: name,
          type: "trackteardown",
          track: Popcorn.getTrackEvent( this, options.id || options._id )
        }));
      });

      // default to an empty string if no effect exists
      // split string into an array of effects
      options.compose = options.compose || [];
      if ( typeof options.compose === "string" ) {
        options.compose = options.compose.split( " " );
      }
      options.effect = options.effect || [];
      if ( typeof options.effect === "string" ) {
        options.effect = options.effect.split( " " );
      }

      // join the two arrays together
      options.compose = options.compose.concat( options.effect );

      options.compose.forEach(function( composeOption ) {

        // if the requested compose is garbage, throw it away
        compose = Popcorn.compositions[ composeOption ] || {};

        // extends previous functions with compose function
        methods.forEach(function( method ) {
          natives[ method ] = combineFn( natives[ method ], compose[ method ] );
        });
      });

      //  Ensure a manifest object, an empty object is a sufficient fallback
      options._natives.manifest = manifest;

      //  Checks for expected properties
      if ( !( "start" in options ) ) {
        options.start = options[ "in" ] || 0;
      }

      if ( !options.end && options.end !== 0 ) {
        options.end = options[ "out" ] || Number.MAX_VALUE;
      }

      // Use hasOwn to detect non-inherited toString, since all
      // objects will receive a toString - its otherwise undetectable
      if ( !hasOwn.call( options, "toString" ) ) {
        options.toString = function() {
          var props = [
            "start: " + options.start,
            "end: " + options.end,
            "id: " + (options.id || options._id)
          ];

          // Matches null and undefined, allows: false, 0, "" and truthy
          if ( options.target != null ) {
            props.push( "target: " + options.target );
          }

          return name + " ( " + props.join(", ") + " )";
        };
      }

      // Resolves 239, 241, 242
      if ( !options.target ) {

        //  Sometimes the manifest may be missing entirely
        //  or it has an options object that doesn't have a `target` property
        manifestOpts = "options" in manifest && manifest.options;

        options.target = manifestOpts && "target" in manifestOpts && manifestOpts.target;
      }

      if ( !options._id && options._natives ) {
        // ensure an initial id is there before setup is called
        options._id = Popcorn.guid( options._natives.type );
      }

      if ( options instanceof TrackEvent ) {

        if ( options._natives ) {
          //  Supports user defined track event id
          options._id = options.id || options._id || Popcorn.guid( options._natives.type );

          // Trigger _setup method if exists
          if ( options._natives._setup ) {

            options._natives._setup.call( this, options );

            this.emit( "tracksetup", Popcorn.extend( {}, options, {
              plugin: options._natives.type,
              type: "tracksetup",
              track: options
            }));
          }
        }

        this.data.trackEvents.add( options );
        TrackEvent.start( this, options );

        this.timeUpdate( this, null, true );

        // Store references to user added trackevents in ref table
        if ( options._id ) {
          Popcorn.addTrackEvent.ref( this, options );
        }
      } else {
        // Create new track event for this instance
        Popcorn.addTrackEvent( this, options );
      }

      //  Future support for plugin event definitions
      //  for all of the native events
      Popcorn.forEach( setup, function( callback, type ) {
        // Don't attempt to create events for certain properties:
        // "start", "end", "type", "manifest". Fixes #1365
        if ( blacklist.indexOf( type ) === -1 ) {
          this.on( type, callback );
        }
      }, this );

      return this;
    };

    //  Extend Popcorn.p with new named definition
    //  Assign new named definition
    Popcorn.p[ name ] = plugin[ name ] = function( id, options ) {
      var length = arguments.length,
          trackEvent, defaults, mergedSetupOpts, previousOpts, newOpts;

      // Shift arguments based on use case
      //
      // Back compat for:
      // p.plugin( options );
      if ( id && !options ) {
        options = id;
        id = null;
      } else {

        // Get the trackEvent that matches the given id.
        trackEvent = this.getTrackEvent( id );

        // If the track event does not exist, ensure that the options
        // object has a proper id
        if ( !trackEvent ) {
          options.id = id;

        // If the track event does exist, merge the updated properties
        } else {

          newOpts = options;
          previousOpts = getPreviousProperties( trackEvent, newOpts );

          // Call the plugins defined update method if provided. Allows for
          // custom defined updating for a track event to be defined by the plugin author
          if ( trackEvent._natives._update ) {

            this.data.trackEvents.remove( trackEvent );

            // It's safe to say that the intent of Start/End will never change
            // Update them first before calling update
            if ( hasOwn.call( options, "start" ) ) {
              trackEvent.start = options.start;
            }

            if ( hasOwn.call( options, "end" ) ) {
              trackEvent.end = options.end;
            }

            TrackEvent.end( this, trackEvent );

            if ( isfn ) {
              definition.call( this, trackEvent );
            }

            trackEvent._natives._update.call( this, trackEvent, options );

            this.data.trackEvents.add( trackEvent );
            TrackEvent.start( this, trackEvent );
          } else {
            // This branch is taken when there is no explicitly defined
            // _update method for a plugin. Which will occur either explicitly or
            // as a result of the plugin definition being a function that _returns_
            // a definition object.
            //
            // In either case, this path can ONLY be reached for TrackEvents that
            // already exist.

            // Directly update the TrackEvent instance.
            // This supports TrackEvent invariant enforcement.
            Popcorn.extend( trackEvent, options );

            this.data.trackEvents.remove( id );

            // If a _teardown function was defined,
            // enforce for track event removals
            if ( trackEvent._natives._teardown ) {
              trackEvent._natives._teardown.call( this, trackEvent );
            }

            // Update track event references
            Popcorn.removeTrackEvent.ref( this, id );

            if ( isfn ) {
              pluginFn.call( this, definition.call( this, trackEvent ), trackEvent );
            } else {

              //  Supports user defined track event id
              trackEvent._id = trackEvent.id || trackEvent._id || Popcorn.guid( trackEvent._natives.type );

              if ( trackEvent._natives && trackEvent._natives._setup ) {

                trackEvent._natives._setup.call( this, trackEvent );

                this.emit( "tracksetup", Popcorn.extend( {}, trackEvent, {
                  plugin: trackEvent._natives.type,
                  type: "tracksetup",
                  track: trackEvent
                }));
              }

              this.data.trackEvents.add( trackEvent );
              TrackEvent.start( this, trackEvent );

              this.timeUpdate( this, null, true );

              // Store references to user added trackevents in ref table
              Popcorn.addTrackEvent.ref( this, trackEvent );
            }

            // Fire an event with change information
            this.emit( "trackchange", {
              id: trackEvent.id,
              type: "trackchange",
              previousValue: previousOpts,
              currentValue: trackEvent,
              track: trackEvent
            });

            return this;
          }

          if ( trackEvent._natives.type !== "cue" ) {
            // Fire an event with change information
            this.emit( "trackchange", {
              id: trackEvent.id,
              type: "trackchange",
              previousValue: previousOpts,
              currentValue: newOpts,
              track: trackEvent
            });
          }

          return this;
        }
      }

      this.data.running[ name ] = this.data.running[ name ] || [];

      // Merge with defaults if they exist, make sure per call is prioritized
      defaults = ( this.options.defaults && this.options.defaults[ name ] ) || {};
      mergedSetupOpts = Popcorn.extend( {}, defaults, options );

      pluginFn.call( this, isfn ? definition.call( this, mergedSetupOpts ) : definition,
                                  mergedSetupOpts );

      return this;
    };

    // if the manifest parameter exists we should extend it onto the definition object
    // so that it shows up when calling Popcorn.registry and Popcorn.registryByName
    if ( manifest ) {
      Popcorn.extend( definition, {
        manifest: manifest
      });
    }

    //  Push into the registry
    var entry = {
      fn: plugin[ name ],
      definition: definition,
      base: definition,
      parents: [],
      name: name
    };
    Popcorn.registry.push(
       Popcorn.extend( plugin, entry, {
        type: name
      })
    );
    Popcorn.registryByName[ name ] = entry;

    return plugin;
  };

  // Storage for plugin function errors
  Popcorn.plugin.errors = [];

  // Returns wrapped plugin function
  function safeTry( fn, pluginName ) {
    return function() {

      //  When Popcorn.plugin.debug is true, do not suppress errors
      if ( Popcorn.plugin.debug ) {
        return fn.apply( this, arguments );
      }

      try {
        return fn.apply( this, arguments );
      } catch ( ex ) {

        // Push plugin function errors into logging queue
        Popcorn.plugin.errors.push({
          plugin: pluginName,
          thrown: ex,
          source: fn.toString()
        });

        // Trigger an error that the instance can listen for
        // and react to
        this.emit( "pluginerror", Popcorn.plugin.errors );
      }
    };
  }

  // Debug-mode flag for plugin development
  // True for Popcorn development versions, false for stable/tagged versions
  Popcorn.plugin.debug = ( Popcorn.version === "@" + "VERSION" );

  //  removePlugin( type ) removes all tracks of that from all instances of popcorn
  //  removePlugin( obj, type ) removes all tracks of type from obj, where obj is a single instance of popcorn
  Popcorn.removePlugin = function( obj, name ) {

    //  Check if we are removing plugin from an instance or from all of Popcorn
    if ( !name ) {

      //  Fix the order
      name = obj;
      obj = Popcorn.p;

      if ( Popcorn.protect.natives.indexOf( name.toLowerCase() ) >= 0 ) {
        Popcorn.error( "'" + name + "' is a protected function name" );
        return;
      }

      var registryLen = Popcorn.registry.length,
          registryIdx;

      // remove plugin reference from registry
      for ( registryIdx = 0; registryIdx < registryLen; registryIdx++ ) {
        if ( Popcorn.registry[ registryIdx ].name === name ) {
          Popcorn.registry.splice( registryIdx, 1 );
          delete Popcorn.registryByName[ name ];
          delete Popcorn.manifest[ name ];

          // delete the plugin
          delete obj[ name ];

          // plugin found and removed, stop checking, we are done
          return;
        }
      }

    }

    var byStart = obj.data.trackEvents.byStart,
        byEnd = obj.data.trackEvents.byEnd,
        animating = obj.data.trackEvents.animating,
        idx, sl;

    // remove all trackEvents
    for ( idx = 0, sl = byStart.length; idx < sl; idx++ ) {

      if ( byStart[ idx ] && byStart[ idx ]._natives && byStart[ idx ]._natives.type === name ) {

        byStart[ idx ]._natives._teardown && byStart[ idx ]._natives._teardown.call( obj, byStart[ idx ] );

        byStart.splice( idx, 1 );

        // update for loop if something removed, but keep checking
        idx--; sl--;
        if ( obj.data.trackEvents.startIndex <= idx ) {
          obj.data.trackEvents.startIndex--;
          obj.data.trackEvents.endIndex--;
        }
      }

      // clean any remaining references in the end index
      // we do this seperate from the above check because they might not be in the same order
      if ( byEnd[ idx ] && byEnd[ idx ]._natives && byEnd[ idx ]._natives.type === name ) {

        byEnd.splice( idx, 1 );
      }
    }

    //remove all animating events
    for ( idx = 0, sl = animating.length; idx < sl; idx++ ) {

      if ( animating[ idx ] && animating[ idx ]._natives && animating[ idx ]._natives.type === name ) {

        animating.splice( idx, 1 );

        // update for loop if something removed, but keep checking
        idx--; sl--;
      }
    }

  };

  Popcorn.compositions = {};

  //  Plugin inheritance
  Popcorn.compose = function( name, definition, manifest ) {

    //  If `manifest` arg is undefined, check for manifest within the `definition` object
    //  If no `definition.manifest`, an empty object is a sufficient fallback
    Popcorn.manifest[ name ] = manifest = manifest || definition.manifest || {};

    // register the effect by name
    Popcorn.compositions[ name ] = definition;
  };

  Popcorn.plugin.effect = Popcorn.effect = Popcorn.compose;

  var rnaiveExpr = /^(?:\.|#|\[)/;

  //  Basic DOM utilities and helpers API. See #1037
  Popcorn.dom = {
    debug: false,
    //  Popcorn.dom.find( selector, context )
    //
    //  Returns the first element that matches the specified selector
    //  Optionally provide a context element, defaults to `document`
    //
    //  eg.
    //  Popcorn.dom.find("video") returns the first video element
    //  Popcorn.dom.find("#foo") returns the first element with `id="foo"`
    //  Popcorn.dom.find("foo") returns the first element with `id="foo"`
    //     Note: Popcorn.dom.find("foo") is the only allowed deviation
    //           from valid querySelector selector syntax
    //
    //  Popcorn.dom.find(".baz") returns the first element with `class="baz"`
    //  Popcorn.dom.find("[preload]") returns the first element with `preload="..."`
    //  ...
    //  See https://developer.mozilla.org/En/DOM/Document.querySelector
    //
    //
    find: function( selector, context ) {
      var node = null;

      //  Default context is the `document`
      context = context || document;

      if ( selector ) {

        //  If the selector does not begin with "#", "." or "[",
        //  it could be either a nodeName or ID w/o "#"
        if ( !rnaiveExpr.test( selector ) ) {

          //  Try finding an element that matches by ID first
          node = document.getElementById( selector );

          //  If a match was found by ID, return the element
          if ( node !== null ) {
            return node;
          }
        }
        //  Assume no elements have been found yet
        //  Catch any invalid selector syntax errors and bury them.
        try {
          node = context.querySelector( selector );
        } catch ( e ) {
          if ( Popcorn.dom.debug ) {
            throw new Error(e);
          }
        }
      }
      return node;
    }
  };

  //  Cache references to reused RegExps
  var rparams = /\?/,
  //  XHR Setup object
  setup = {
    ajax: null,
    url: "",
    data: "",
    dataType: "",
    success: Popcorn.nop,
    type: "GET",
    async: true,
    contentType: "application/x-www-form-urlencoded; charset=UTF-8"
  };

  Popcorn.xhr = function( options ) {
    var settings;

    options.dataType = options.dataType && options.dataType.toLowerCase() || null;

    if ( options.dataType &&
         ( options.dataType === "jsonp" || options.dataType === "script" ) ) {

      Popcorn.xhr.getJSONP(
        options.url,
        options.success,
        options.dataType === "script"
      );
      return;
    }

    //  Merge the "setup" defaults and custom "options"
    //  into a new plain object.
    settings = Popcorn.extend( {}, setup, options );

    //  Create new XMLHttpRequest object
    settings.ajax = new XMLHttpRequest();

    if ( settings.ajax ) {

      if ( settings.type === "GET" && settings.data ) {

        //  append query string
        settings.url += ( rparams.test( settings.url ) ? "&" : "?" ) + settings.data;

        //  Garbage collect and reset settings.data
        settings.data = null;
      }

      //  Open the request
      settings.ajax.open( settings.type, settings.url, settings.async );

      //  For POST, set the content-type request header
      if ( settings.type === "POST" ) {
        settings.ajax.setRequestHeader(
          "Content-Type", settings.contentType
        );
      }

      settings.ajax.send( settings.data || null );

      return Popcorn.xhr.httpData( settings );
    }
  };


  Popcorn.xhr.httpData = function( settings ) {

    var data, json = null,
        parser, xml = null;

    settings.ajax.onreadystatechange = function() {

      if ( settings.ajax.readyState === 4 ) {

        try {
          json = JSON.parse( settings.ajax.responseText );
        } catch( e ) {
          //suppress
        }

        data = {
          xml: settings.ajax.responseXML,
          text: settings.ajax.responseText,
          json: json
        };

        // Normalize: data.xml is non-null in IE9 regardless of if response is valid xml
        if ( !data.xml || !data.xml.documentElement ) {
          data.xml = null;

          try {
            parser = new DOMParser();
            xml = parser.parseFromString( settings.ajax.responseText, "text/xml" );

            if ( !xml.getElementsByTagName( "parsererror" ).length ) {
              data.xml = xml;
            }
          } catch ( e ) {
            // data.xml remains null
          }
        }

        //  If a dataType was specified, return that type of data
        if ( settings.dataType ) {
          data = data[ settings.dataType ];
        }


        settings.success.call( settings.ajax, data );

      }
    };
    return data;
  };

  Popcorn.xhr.getJSONP = function( url, success, isScript ) {

    var head = document.head || document.getElementsByTagName( "head" )[ 0 ] || document.documentElement,
      script = document.createElement( "script" ),
      isFired = false,
      params = [],
      rjsonp = /(=)\?(?=&|$)|\?\?/,
      replaceInUrl, prefix, paramStr, callback, callparam;

    if ( !isScript ) {

      // is there a calback already in the url
      callparam = url.match( /(callback=[^&]*)/ );

      if ( callparam !== null && callparam.length ) {

        prefix = callparam[ 1 ].split( "=" )[ 1 ];

        // Since we need to support developer specified callbacks
        // and placeholders in harmony, make sure matches to "callback="
        // aren't just placeholders.
        // We coded ourselves into a corner here.
        // JSONP callbacks should never have been
        // allowed to have developer specified callbacks
        if ( prefix === "?" ) {
          prefix = "jsonp";
        }

        // get the callback name
        callback = Popcorn.guid( prefix );

        // replace existing callback name with unique callback name
        url = url.replace( /(callback=[^&]*)/, "callback=" + callback );
      } else {

        callback = Popcorn.guid( "jsonp" );

        if ( rjsonp.test( url ) ) {
          url = url.replace( rjsonp, "$1" + callback );
        }

        // split on first question mark,
        // this is to capture the query string
        params = url.split( /\?(.+)?/ );

        // rebuild url with callback
        url = params[ 0 ] + "?";
        if ( params[ 1 ] ) {
          url += params[ 1 ] + "&";
        }
        url += "callback=" + callback;
      }

      //  Define the JSONP success callback globally
      window[ callback ] = function( data ) {
        // Fire success callbacks
        success && success( data );
        isFired = true;
      };
    }

    script.addEventListener( "load",  function() {

      //  Handling remote script loading callbacks
      if ( isScript ) {
        //  getScript
        success && success();
      }

      //  Executing for JSONP requests
      if ( isFired ) {
        //  Garbage collect the callback
        delete window[ callback ];
      }
      //  Garbage collect the script resource
      head.removeChild( script );
    }, false );

    script.addEventListener( "error",  function( e ) {
      //  Handling remote script loading callbacks
      success && success( { error: e } );

      //  Executing for JSONP requests
      if ( !isScript ) {
        //  Garbage collect the callback
        delete window[ callback ];
      }
      //  Garbage collect the script resource
      head.removeChild( script );
    }, false );

    script.src = url;
    head.insertBefore( script, head.firstChild );

    return;
  };

  Popcorn.getJSONP = Popcorn.xhr.getJSONP;

  Popcorn.getScript = Popcorn.xhr.getScript = function( url, success ) {

    return Popcorn.xhr.getJSONP( url, success, true );
  };

  Popcorn.util = {
    // Simple function to parse a timestamp into seconds
    // Acceptable formats are:
    // HH:MM:SS.MMM
    // HH:MM:SS;FF
    // Hours and minutes are optional. They default to 0
    toSeconds: function( timeStr, framerate ) {
      // Hours and minutes are optional
      // Seconds must be specified
      // Seconds can be followed by milliseconds OR by the frame information
      var validTimeFormat = /^([0-9]+:){0,2}[0-9]+([.;][0-9]+)?$/,
          errorMessage = "Invalid time format",
          digitPairs, lastIndex, lastPair, firstPair,
          frameInfo, frameTime;

      if ( typeof timeStr === "number" ) {
        return timeStr;
      }

      if ( typeof timeStr === "string" &&
            !validTimeFormat.test( timeStr ) ) {
        Popcorn.error( errorMessage );
      }

      digitPairs = timeStr.split( ":" );
      lastIndex = digitPairs.length - 1;
      lastPair = digitPairs[ lastIndex ];

      // Fix last element:
      if ( lastPair.indexOf( ";" ) > -1 ) {

        frameInfo = lastPair.split( ";" );
        frameTime = 0;

        if ( framerate && ( typeof framerate === "number" ) ) {
          frameTime = parseFloat( frameInfo[ 1 ], 10 ) / framerate;
        }

        digitPairs[ lastIndex ] = parseInt( frameInfo[ 0 ], 10 ) + frameTime;
      }

      firstPair = digitPairs[ 0 ];

      return {

        1: parseFloat( firstPair, 10 ),

        2: ( parseInt( firstPair, 10 ) * 60 ) +
              parseFloat( digitPairs[ 1 ], 10 ),

        3: ( parseInt( firstPair, 10 ) * 3600 ) +
            ( parseInt( digitPairs[ 1 ], 10 ) * 60 ) +
              parseFloat( digitPairs[ 2 ], 10 )

      }[ digitPairs.length || 1 ];
    }
  };

  // alias for exec function
  Popcorn.p.cue = Popcorn.p.exec;

  //  Protected API methods
  Popcorn.protect = {
    natives: getKeys( Popcorn.p ).map(function( val ) {
      return val.toLowerCase();
    })
  };

  // Setup logging for deprecated methods
  Popcorn.forEach({
    // Deprecated: Recommended
    "listen": "on",
    "unlisten": "off",
    "trigger": "emit",
    "exec": "cue"

  }, function( recommend, api ) {
    var original = Popcorn.p[ api ];
    // Override the deprecated api method with a method of the same name
    // that logs a warning and defers to the new recommended method
    Popcorn.p[ api ] = function() {
      if ( typeof console !== "undefined" && console.warn ) {
        console.warn(
          "Deprecated method '" + api + "', " +
          (recommend == null ? "do not use." : "use '" + recommend + "' instead." )
        );

        // Restore api after first warning
        Popcorn.p[ api ] = original;
      }
      return Popcorn.p[ recommend ].apply( this, [].slice.call( arguments ) );
    };
  });


  //  Exposes Popcorn to global context
  global.Popcorn = Popcorn;

})(window, window.document);

/**
 * Binds a TinyMCE widget to <textarea> elements.
 */
angular.module('ui.tinymce', [])
  .value('uiTinymceConfig', {})
  .directive('uiTinymce', ['uiTinymceConfig', function (uiTinymceConfig) {
    uiTinymceConfig = uiTinymceConfig || {};
    var generatedIds = 0;
    return {
      priority: 10,
      require: 'ngModel',
      link: function (scope, elm, attrs, ngModel) {
        var expression, options, tinyInstance,
          updateView = function () {
            ngModel.$setViewValue(elm.val());
            if (scope.$root != undefined && !scope.$root.$$phase) {
              scope.$apply();
            }
            else {
                if (scope.$root == undefined) {
                    console.warn('ui.tinymce: scope.$root is undefined.');
                }
                else if (scope.$root.$$phase) {
                    console.warn('ui.tinymce:  scope.$root.$$phase set.');
                }
            }
          };
        // generate an ID if not present
        if (!attrs.id) {
          attrs.$set('id', 'uiTinymce' + generatedIds++);
        }

        if (attrs.uiTinymce) {
          expression = scope.$eval(attrs.uiTinymce);
        } else {
          expression = {};
        }
        options = {
          // Update model when calling setContent (such as from the source editor popup)
          setup: function (ed) {
            var args;
            ed.on('init', function(args) {
              ngModel.$render();
            });
            // Update model on button click
            ed.on('ExecCommand', function (e) {
              ed.save();
              updateView();
            });
            // Update model on keypress
            ed.on('KeyUp', function (e) {
              ed.save();
              updateView();
            });
            // Update model on change, i.e. copy/pasted text, plugins altering content
            ed.on('SetContent', function (e) {
              if(!e.initial){
                ed.save();
                updateView();
              }
            });
            if (expression.setup) {
              scope.$eval(expression.setup);
              delete expression.setup;
            }
          },
          mode: 'exact',
          elements: attrs.id
        };
        // extend options with initial uiTinymceConfig and options from directive attribute value
        angular.extend(options, uiTinymceConfig, expression);
        tinymce.init(options);


        ngModel.$render = function() {
          if (!tinyInstance) {
            tinyInstance = tinymce.get(attrs.id);
          }
          if (tinyInstance) {
              setTimeout(function() {
                  tinyInstance.setContent(ngModel.$viewValue || '');
              }, 1000);
          }
        };
      }
    };
  }]);

/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _angular = __webpack_require__(1);

	var _angular2 = _interopRequireDefault(_angular);

	var _componentsComponents = __webpack_require__(2);

	var _componentsComponents2 = _interopRequireDefault(_componentsComponents);

	_angular2['default'].module('harmonyUI', [_componentsComponents2['default'].name]);

/***/ },
/* 1 */
/***/ function(module, exports) {

	module.exports = angular;

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _angular = __webpack_require__(1);

	var _angular2 = _interopRequireDefault(_angular);

	var _modalModalComponent = __webpack_require__(3);

	var _modalModalComponent2 = _interopRequireDefault(_modalModalComponent);

	var _harmonySelectHarmonySelectComponent = __webpack_require__(14);

	var _harmonySelectHarmonySelectComponent2 = _interopRequireDefault(_harmonySelectHarmonySelectComponent);

	var _slideboxSlideboxComponent = __webpack_require__(19);

	var _slideboxSlideboxComponent2 = _interopRequireDefault(_slideboxSlideboxComponent);

	var _progressPieProgressPieComponent = __webpack_require__(22);

	var _progressPieProgressPieComponent2 = _interopRequireDefault(_progressPieProgressPieComponent);

	var Components = _angular2['default'].module('harmonyUI.components', [_harmonySelectHarmonySelectComponent2['default'].name, _modalModalComponent2['default'].name, _slideboxSlideboxComponent2['default'].name, _progressPieProgressPieComponent2['default'].name]);

	exports['default'] = Components;
	module.exports = exports['default'];

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _utilitiesMultiMap = __webpack_require__(4);

	var _utilitiesMultiMap2 = _interopRequireDefault(_utilitiesMultiMap);

	var _utilitiesStackMap = __webpack_require__(5);

	var _utilitiesStackMap2 = _interopRequireDefault(_utilitiesStackMap);

	var _modalBackdrop = __webpack_require__(6);

	var _modalBackdrop2 = _interopRequireDefault(_modalBackdrop);

	var _modalStack = __webpack_require__(8);

	var _modalStack2 = _interopRequireDefault(_modalStack);

	var _modalTransclude = __webpack_require__(9);

	var _modalTransclude2 = _interopRequireDefault(_modalTransclude);

	var _modalWindow = __webpack_require__(10);

	var _modalWindow2 = _interopRequireDefault(_modalWindow);

	var _harmonyModal = __webpack_require__(12);

	var _harmonyModal2 = _interopRequireDefault(_harmonyModal);

	var harmonyModalModule = angular.module('harmonyUI.components.modal', []).factory('$$multiMap', _utilitiesMultiMap2['default']).factory('$$stackedMap', _utilitiesStackMap2['default']).provider('$harmonyModal', _harmonyModal2['default']).directive('uibModalBackdrop', _modalBackdrop2['default']).factory('$modalStack', _modalStack2['default']).directive('uibModalTransclude', _modalTransclude2['default']).directive('uibModalWindow', _modalWindow2['default']);

	exports['default'] = harmonyModalModule;
	module.exports = exports['default'];

/***/ },
/* 4 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	exports["default"] = function () {
	  return {
	    createNew: function createNew() {
	      var map = {};

	      return {
	        entries: function entries() {
	          return Object.keys(map).map(function (key) {
	            return {
	              key: key,
	              value: map[key]
	            };
	          });
	        },
	        get: function get(key) {
	          return map[key];
	        },
	        hasKey: function hasKey(key) {
	          return !!map[key];
	        },
	        keys: function keys() {
	          return Object.keys(map);
	        },
	        put: function put(key, value) {
	          if (!map[key]) {
	            map[key] = [];
	          }

	          map[key].push(value);
	        },
	        remove: function remove(key, value) {
	          var values = map[key];

	          if (!values) {
	            return;
	          }

	          var idx = values.indexOf(value);

	          if (idx !== -1) {
	            values.splice(idx, 1);
	          }

	          if (!values.length) {
	            delete map[key];
	          }
	        }
	      };
	    }
	  };
	};

	module.exports = exports["default"];

/***/ },
/* 5 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	exports["default"] = function () {

	  return {

	    createNew: function createNew() {

	      var stack = [];

	      return {

	        add: function add(key, value) {
	          stack.push({
	            key: key,
	            value: value
	          });
	        },

	        get: function get(key) {
	          for (var i = 0; i < stack.length; i++) {
	            if (key == stack[i].key) {
	              return stack[i];
	            }
	          }
	        },

	        keys: function keys() {
	          var keys = [];
	          for (var i = 0; i < stack.length; i++) {
	            keys.push(stack[i].key);
	          }
	          return keys;
	        },

	        top: function top() {
	          return stack[stack.length - 1];
	        },

	        remove: function remove(key) {
	          var idx = -1;
	          for (var i = 0; i < stack.length; i++) {
	            if (key == stack[i].key) {
	              idx = i;
	              break;
	            }
	          }
	          return stack.splice(idx, 1)[0];
	        },

	        removeTop: function removeTop() {
	          return stack.splice(stack.length - 1, 1)[0];
	        },

	        length: function length() {
	          return stack.length;
	        }

	      };
	    }

	  };
	};

	;
	module.exports = exports["default"];

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	/* global $modalStack */
	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _templatesModalBackdropTplHtml = __webpack_require__(7);

	var _templatesModalBackdropTplHtml2 = _interopRequireDefault(_templatesModalBackdropTplHtml);

	exports['default'] = ["$animate", "$injector", "$modalStack", function ($animate, $injector, $modalStack) {

	  'ngInject';

	  var $animateCss = null;

	  if ($injector.has('$animateCss')) {
	    $animateCss = $injector.get('$animateCss');
	  }

	  return {
	    replace: true,
	    templateUrl: _templatesModalBackdropTplHtml2['default'],
	    compile: function compile(tElement, tAttrs) {
	      tElement.addClass(tAttrs.backdropClass);
	      return linkFn;
	    }
	  };

	  function linkFn(scope, element, attrs) {
	    // Temporary fix for prefixing
	    element.addClass('modal-backdrop');

	    if (attrs.modalInClass) {
	      if ($animateCss) {
	        $animateCss(element, {
	          addClass: attrs.modalInClass
	        }).start();
	      } else {
	        $animate.addClass(element, attrs.modalInClass);
	      }

	      scope.$on($modalStack.NOW_CLOSING_EVENT, function (e, setIsAsync) {
	        var done = setIsAsync();
	        if ($animateCss) {
	          $animateCss(element, {
	            removeClass: attrs.modalInClass
	          }).start().then(done);
	        } else {
	          $animate.removeClass(element, attrs.modalInClass).then(done);
	        }
	      });
	    }
	  }
	}];

	module.exports = exports['default'];

/***/ },
/* 7 */
/***/ function(module, exports) {

	var path = 'modal/templates/modal-backdrop.tpl.html';
	var html = "<div uib-modal-animation-class=\"fade\"\n     modal-in-class=\"in\"\n     class=\"modal active\"\n     ng-style=\"{'z-index': 1040 + (index && 1 || 0) + index*10}\">\n</div>";
	window.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);
	module.exports = path;

/***/ },
/* 8 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	exports['default'] = ["$animate", "$timeout", "$document", "$compile", "$rootScope", "$q", "$injector", "$$multiMap", "$$stackedMap", function ($animate, $timeout, $document, $compile, $rootScope, $q, $injector, $$multiMap, $$stackedMap) {
	  'ngInject';

	  var $animateCss = null;

	  if ($injector.has('$animateCss')) {
	    $animateCss = $injector.get('$animateCss');
	  }

	  var OPENED_MODAL_CLASS = 'u--no-scroll';

	  var backdropDomEl, backdropScope;
	  var openedWindows = $$stackedMap.createNew();
	  var openedClasses = $$multiMap.createNew();
	  var $modalStack = {
	    NOW_CLOSING_EVENT: 'modal.stack.now-closing'
	  };

	  //Modal focus behavior
	  var focusableElementList;
	  var focusIndex = 0;
	  var tababbleSelector = 'a[href], area[href], input:not([disabled]), ' + 'button:not([disabled]),select:not([disabled]), textarea:not([disabled]), ' + 'iframe, object, embed, *[tabindex], *[contenteditable=true]';

	  function backdropIndex() {
	    var topBackdropIndex = -1;
	    var opened = openedWindows.keys();
	    for (var i = 0; i < opened.length; i++) {
	      if (openedWindows.get(opened[i]).value.backdrop) {
	        topBackdropIndex = i;
	      }
	    }
	    return topBackdropIndex;
	  }

	  $rootScope.$watch(backdropIndex, function (newBackdropIndex) {
	    if (backdropScope) {
	      backdropScope.index = newBackdropIndex;
	    }
	  });

	  function removeModalWindow(modalInstance, elementToReceiveFocus) {
	    var body = $document.find('body').eq(0);
	    var modalWindow = openedWindows.get(modalInstance).value;

	    //clean up the stack
	    openedWindows.remove(modalInstance);

	    removeAfterAnimate(modalWindow.modalDomEl, modalWindow.modalScope, function () {
	      var modalBodyClass = modalWindow.openedClass || OPENED_MODAL_CLASS;
	      openedClasses.remove(modalBodyClass, modalInstance);
	      body.toggleClass(modalBodyClass, openedClasses.hasKey(modalBodyClass));
	      toggleTopWindowClass(true);
	    });
	    checkRemoveBackdrop();

	    //move focus to specified element if available, or else to body
	    if (elementToReceiveFocus && elementToReceiveFocus.focus) {
	      elementToReceiveFocus.focus();
	    } else {
	      body.focus();
	    }
	  }

	  // Add or remove "windowTopClass" from the top window in the stack
	  function toggleTopWindowClass(toggleSwitch) {
	    var modalWindow;

	    if (openedWindows.length() > 0) {
	      modalWindow = openedWindows.top().value;
	      modalWindow.modalDomEl.toggleClass(modalWindow.windowTopClass || '', toggleSwitch);
	    }
	  }

	  function checkRemoveBackdrop() {
	    //remove backdrop if no longer needed
	    if (backdropDomEl && backdropIndex() == -1) {
	      var backdropScopeRef = backdropScope;
	      removeAfterAnimate(backdropDomEl, backdropScope, function () {
	        backdropScopeRef = null;
	      });
	      backdropDomEl = undefined;
	      backdropScope = undefined;
	    }
	  }

	  function removeAfterAnimate(domEl, scope, done) {
	    var asyncDeferred;
	    var asyncPromise = null;
	    var setIsAsync = function setIsAsync() {
	      if (!asyncDeferred) {
	        asyncDeferred = $q.defer();
	        asyncPromise = asyncDeferred.promise;
	      }

	      return function asyncDone() {
	        asyncDeferred.resolve();
	      };
	    };
	    scope.$broadcast($modalStack.NOW_CLOSING_EVENT, setIsAsync);

	    // Note that it's intentional that asyncPromise might be null.
	    // That's when setIsAsync has not been called during the
	    // NOW_CLOSING_EVENT broadcast.
	    return $q.when(asyncPromise).then(afterAnimating);

	    function afterAnimating() {
	      if (afterAnimating.done) {
	        return;
	      }
	      afterAnimating.done = true;

	      if ($animateCss) {
	        $animateCss(domEl, {
	          event: 'leave'
	        }).start().then(function () {
	          domEl.remove();
	        });
	      } else {
	        $animate.leave(domEl);
	      }
	      scope.$destroy();
	      if (done) {
	        done();
	      }
	    }
	  }

	  $document.bind('keydown', function (evt) {
	    if (evt.isDefaultPrevented()) {
	      return evt;
	    }

	    var modal = openedWindows.top();
	    if (modal && modal.value.keyboard) {
	      switch (evt.which) {
	        case 27:
	          {
	            evt.preventDefault();
	            $rootScope.$apply(function () {
	              $modalStack.dismiss(modal.key, 'escape key press');
	            });
	            break;
	          }
	        case 9:
	          {
	            $modalStack.loadFocusElementList(modal);
	            var focusChanged = false;
	            if (evt.shiftKey) {
	              if ($modalStack.isFocusInFirstItem(evt)) {
	                focusChanged = $modalStack.focusLastFocusableElement();
	              }
	            } else {
	              if ($modalStack.isFocusInLastItem(evt)) {
	                focusChanged = $modalStack.focusFirstFocusableElement();
	              }
	            }

	            if (focusChanged) {
	              evt.preventDefault();
	              evt.stopPropagation();
	            }
	            break;
	          }
	      }
	    }
	  });

	  $modalStack.open = function (modalInstance, modal) {
	    var modalOpener = $document[0].activeElement,
	        modalBodyClass = modal.openedClass || OPENED_MODAL_CLASS;

	    toggleTopWindowClass(false);

	    openedWindows.add(modalInstance, {
	      deferred: modal.deferred,
	      renderDeferred: modal.renderDeferred,
	      modalScope: modal.scope,
	      backdrop: modal.backdrop,
	      keyboard: modal.keyboard,
	      openedClass: modal.openedClass,
	      windowTopClass: modal.windowTopClass
	    });

	    openedClasses.put(modalBodyClass, modalInstance);

	    var body = $document.find('body').eq(0),
	        currBackdropIndex = backdropIndex();

	    if (currBackdropIndex >= 0 && !backdropDomEl) {
	      backdropScope = $rootScope.$new(true);
	      backdropScope.index = currBackdropIndex;
	      var angularBackgroundDomEl = angular.element('<div uib-modal-backdrop="modal-backdrop"></div>');
	      angularBackgroundDomEl.attr('backdrop-class', modal.backdropClass);
	      if (modal.animation) {
	        angularBackgroundDomEl.attr('modal-animation', 'true');
	      }
	      backdropDomEl = $compile(angularBackgroundDomEl)(backdropScope);
	      body.append(backdropDomEl);
	    }

	    var angularDomEl = angular.element('<div uib-modal-window="modal-window"></div>');
	    angularDomEl.attr({
	      'template-url': modal.windowTemplateUrl,
	      'window-class': modal.windowClass,
	      'window-top-class': modal.windowTopClass,
	      'size': modal.size,
	      'index': openedWindows.length() - 1,
	      'animate': 'animate'
	    }).html(modal.content);
	    if (modal.animation) {
	      angularDomEl.attr('modal-animation', 'true');
	    }

	    var modalDomEl = $compile(angularDomEl)(modal.scope);
	    openedWindows.top().value.modalDomEl = modalDomEl;
	    openedWindows.top().value.modalOpener = modalOpener;
	    body.append(modalDomEl);
	    body.addClass(modalBodyClass);

	    $modalStack.clearFocusListCache();
	  };

	  function broadcastClosing(modalWindow, resultOrReason, closing) {
	    return !modalWindow.value.modalScope.$broadcast('modal.closing', resultOrReason, closing).defaultPrevented;
	  }

	  $modalStack.close = function (modalInstance, result) {
	    var modalWindow = openedWindows.get(modalInstance);
	    if (modalWindow && broadcastClosing(modalWindow, result, true)) {
	      modalWindow.value.modalScope.$$uibDestructionScheduled = true;
	      modalWindow.value.deferred.resolve(result);
	      removeModalWindow(modalInstance, modalWindow.value.modalOpener);
	      return true;
	    }
	    return !modalWindow;
	  };

	  $modalStack.dismiss = function (modalInstance, reason) {
	    var modalWindow = openedWindows.get(modalInstance);
	    if (modalWindow && broadcastClosing(modalWindow, reason, false)) {
	      modalWindow.value.modalScope.$$uibDestructionScheduled = true;
	      modalWindow.value.deferred.reject(reason);
	      removeModalWindow(modalInstance, modalWindow.value.modalOpener);
	      return true;
	    }
	    return !modalWindow;
	  };

	  $modalStack.dismissAll = function (reason) {
	    var topModal = this.getTop();
	    while (topModal && this.dismiss(topModal.key, reason)) {
	      topModal = this.getTop();
	    }
	  };

	  $modalStack.getTop = function () {
	    return openedWindows.top();
	  };

	  $modalStack.modalRendered = function (modalInstance) {
	    var modalWindow = openedWindows.get(modalInstance);
	    if (modalWindow) {
	      modalWindow.value.renderDeferred.resolve();
	    }
	  };

	  $modalStack.focusFirstFocusableElement = function () {
	    if (focusableElementList.length > 0) {
	      focusableElementList[0].focus();
	      return true;
	    }
	    return false;
	  };
	  $modalStack.focusLastFocusableElement = function () {
	    if (focusableElementList.length > 0) {
	      focusableElementList[focusableElementList.length - 1].focus();
	      return true;
	    }
	    return false;
	  };

	  $modalStack.isFocusInFirstItem = function (evt) {
	    if (focusableElementList.length > 0) {
	      return (evt.target || evt.srcElement) == focusableElementList[0];
	    }
	    return false;
	  };

	  $modalStack.isFocusInLastItem = function (evt) {
	    if (focusableElementList.length > 0) {
	      return (evt.target || evt.srcElement) == focusableElementList[focusableElementList.length - 1];
	    }
	    return false;
	  };

	  $modalStack.clearFocusListCache = function () {
	    focusableElementList = [];
	    focusIndex = 0;
	  };

	  $modalStack.loadFocusElementList = function (modalWindow) {
	    if (focusableElementList === undefined || !focusableElementList.length) {
	      if (modalWindow) {
	        var modalDomE1 = modalWindow.value.modalDomEl;
	        if (modalDomE1 && modalDomE1.length) {
	          focusableElementList = modalDomE1[0].querySelectorAll(tababbleSelector);
	        }
	      }
	    }
	  };

	  return $modalStack;
	}];

	module.exports = exports['default'];

/***/ },
/* 9 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	exports['default'] = function () {
	  'ngInject';

	  return {
	    link: function link($scope, $element, $attrs, controller, $transclude) {
	      $transclude($scope.$parent, function (clone) {
	        $element.empty();
	        $element.append(clone);
	      });
	    }
	  };
	};

	module.exports = exports['default'];

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _templatesModalWindowTplHtml = __webpack_require__(11);

	var _templatesModalWindowTplHtml2 = _interopRequireDefault(_templatesModalWindowTplHtml);

	exports['default'] = ["$modalStack", "$q", "$animate", "$injector", function ($modalStack, $q, $animate, $injector) {

	  'ngInject';

	  var $animateCss = null;

	  if ($injector.has('$animateCss')) {
	    $animateCss = $injector.get('$animateCss');
	  }

	  return {
	    scope: {
	      index: '@'
	    },
	    replace: true,
	    transclude: true,
	    templateUrl: function templateUrl(tElement, tAttrs) {
	      return tAttrs.templateUrl || _templatesModalWindowTplHtml2['default'];
	    },
	    link: function link(scope, element, attrs) {
	      element.addClass(attrs.windowClass || '');
	      element.addClass(attrs.windowTopClass || '');
	      scope.size = attrs.size;

	      scope.close = function (evt) {
	        var modal = $modalStack.getTop();
	        if (modal && modal.value.backdrop && modal.value.backdrop !== 'static' && evt.target === evt.currentTarget) {
	          evt.preventDefault();
	          evt.stopPropagation();
	          $modalStack.dismiss(modal.key, 'backdrop click');
	        }
	      };

	      // moved from template to fix issue #2280
	      element.on('click', scope.close);

	      // This property is only added to the scope for the purpose of detecting when this directive is rendered.
	      // We can detect that by using this property in the template associated with this directive and then use
	      // {@link Attribute#$observe} on it. For more details please see {@link TableColumnResize}.
	      scope.$isRendered = true;

	      // Deferred object that will be resolved when this modal is render.
	      var modalRenderDeferObj = $q.defer();
	      // Observe function will be called on next digest cycle after compilation, ensuring that the DOM is ready.
	      // In order to use this way of finding whether DOM is ready, we need to observe a scope property used in modal's template.
	      attrs.$observe('modalRender', function (value) {
	        if (value == 'true') {
	          modalRenderDeferObj.resolve();
	        }
	      });

	      modalRenderDeferObj.promise.then(function () {
	        var animationPromise = null;

	        if (attrs.modalInClass) {
	          if ($animateCss) {
	            animationPromise = $animateCss(element, {
	              addClass: attrs.modalInClass
	            }).start();
	          } else {
	            animationPromise = $animate.addClass(element, attrs.modalInClass);
	          }

	          scope.$on($modalStack.NOW_CLOSING_EVENT, function (e, setIsAsync) {
	            var done = setIsAsync();
	            if ($animateCss) {
	              $animateCss(element, {
	                removeClass: attrs.modalInClass
	              }).start().then(done);
	            } else {
	              $animate.removeClass(element, attrs.modalInClass).then(done);
	            }
	          });
	        }

	        $q.when(animationPromise).then(function () {
	          var inputsWithAutofocus = element[0].querySelectorAll('[autofocus]');
	          /**
	           * Auto-focusing of a freshly-opened modal element causes any child elements
	           * with the autofocus attribute to lose focus. This is an issue on touch
	           * based devices which will show and then hide the onscreen keyboard.
	           * Attempts to refocus the autofocus element via JavaScript will not reopen
	           * the onscreen keyboard. Fixed by updated the focusing logic to only autofocus
	           * the modal element if the modal does not contain an autofocus element.
	           */
	          if (inputsWithAutofocus.length) {
	            inputsWithAutofocus[0].focus();
	          } else {
	            element[0].focus();
	          }
	        });

	        // Notify {@link $modalStack} that modal is rendered.
	        var modal = $modalStack.getTop();
	        if (modal) {
	          $modalStack.modalRendered(modal.key);
	        }
	      });
	    }
	  };
	}];

	module.exports = exports['default'];

/***/ },
/* 11 */
/***/ function(module, exports) {

	var path = 'modal/templates/modal-window.tpl.html';
	var html = "<div modal-render=\"{{$isRendered}}\"\n     tabindex=\"-1\"\n     role=\"dialog\"\n     uib-modal-animation-class=\"fade\"\n     modal-in-class=\"in\"\n     class=\"modal\"\n     ng-style=\"{'z-index': 1050 + index*10, display: 'block'}\">\n  <div class=\"modal__content\" uib-modal-transclude></div>\n</div>";
	window.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);
	module.exports = path;

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _templatesModalPredefinedTplHtml = __webpack_require__(13);

	var _templatesModalPredefinedTplHtml2 = _interopRequireDefault(_templatesModalPredefinedTplHtml);

	var $harmonyModalProvider = {

	  options: {
	    animation: true,
	    backdrop: true, //can also be false or 'static'
	    keyboard: true
	  },

	  $get: ["$injector", "$rootScope", "$q", "$templateRequest", "$modalStack", "$controller", function $get($injector, $rootScope, $q, $templateRequest, $modalStack, $controller) {
	    'ngInject';

	    var $harmonyModal = {};

	    function getTemplatePromise(options) {
	      return options.template ? $q.when(options.template) : $templateRequest(angular.isFunction(options.templateUrl) ? options.templateUrl() : options.templateUrl);
	    }

	    function getResolvePromises(resolves) {
	      var promisesArr = [];
	      angular.forEach(resolves, function (value) {
	        if (angular.isFunction(value) || angular.isArray(value)) {
	          promisesArr.push($q.when($injector.invoke(value)));
	        } else if (angular.isString(value)) {
	          promisesArr.push($q.when($injector.get(value)));
	        } else {
	          promisesArr.push($q.when(value));
	        }
	      });
	      return promisesArr;
	    }

	    var promiseChain = null;

	    $harmonyModal.getPromiseChain = function () {
	      return promiseChain;
	    };

	    $harmonyModal.open = function (modalOptions) {
	      var modalResultDeferred = $q.defer();
	      var modalOpenedDeferred = $q.defer();
	      var modalRenderDeferred = $q.defer();

	      //prepare an instance of a modal to be injected into controllers and returned to a caller
	      var modalInstance = {
	        result: modalResultDeferred.promise,
	        opened: modalOpenedDeferred.promise,
	        rendered: modalRenderDeferred.promise,
	        close: function close(result) {
	          return $modalStack.close(modalInstance, result);
	        },
	        dismiss: function dismiss(reason) {
	          return $modalStack.dismiss(modalInstance, reason);
	        }
	      };

	      //merge and clean up options
	      modalOptions = angular.extend({}, $harmonyModalProvider.options, modalOptions);
	      modalOptions.resolve = modalOptions.resolve || {};

	      //verify options
	      if (!modalOptions.template && !modalOptions.templateUrl) {
	        throw new Error('One of template or templateUrl options is required.');
	      }

	      var templateAndResolvePromise = $q.all([getTemplatePromise(modalOptions)].concat(getResolvePromises(modalOptions.resolve)));

	      function resolveWithTemplate() {
	        return templateAndResolvePromise;
	      }

	      // Wait for the resolution of the existing promise chain.
	      // Then switch to our own combined promise dependency (regardless of how the previous modal fared).
	      // Then add to $modalStack and resolve opened.
	      // Finally clean up the chain variable if no subsequent modal has overwritten it.
	      var samePromise;
	      samePromise = promiseChain = $q.all([promiseChain]).then(resolveWithTemplate, resolveWithTemplate).then(function resolveSuccess(tplAndVars) {

	        var modalScope = (modalOptions.scope || $rootScope).$new();
	        modalScope.$close = modalInstance.close;
	        modalScope.$dismiss = modalInstance.dismiss;

	        modalScope.$on('$destroy', function () {
	          if (!modalScope.$$uibDestructionScheduled) {
	            modalScope.$dismiss('$uibUnscheduledDestruction');
	          }
	        });

	        var ctrlInstance,
	            ctrlLocals = {};
	        var resolveIter = 1;

	        //controllers
	        if (modalOptions.controller) {
	          ctrlLocals.$scope = modalScope;
	          ctrlLocals.$modalInstance = modalInstance;
	          angular.forEach(modalOptions.resolve, function (value, key) {
	            ctrlLocals[key] = tplAndVars[resolveIter++];
	          });

	          ctrlInstance = $controller(modalOptions.controller, ctrlLocals);
	          if (modalOptions.controllerAs) {
	            if (modalOptions.bindToController) {
	              angular.extend(ctrlInstance, modalScope);
	            }

	            modalScope[modalOptions.controllerAs] = ctrlInstance;
	          }
	        }

	        $modalStack.open(modalInstance, {
	          scope: modalScope,
	          deferred: modalResultDeferred,
	          renderDeferred: modalRenderDeferred,
	          content: tplAndVars[0],
	          animation: modalOptions.animation,
	          backdrop: modalOptions.backdrop,
	          keyboard: modalOptions.keyboard,
	          backdropClass: modalOptions.backdropClass,
	          windowTopClass: modalOptions.windowTopClass,
	          windowClass: modalOptions.windowClass,
	          windowTemplateUrl: modalOptions.windowTemplateUrl,
	          size: modalOptions.size,
	          openedClass: modalOptions.openedClass
	        });
	        modalOpenedDeferred.resolve(true);
	      }, function resolveError(reason) {
	        modalOpenedDeferred.reject(reason);
	        modalResultDeferred.reject(reason);
	      })['finally'](function () {
	        if (promiseChain === samePromise) {
	          promiseChain = null;
	        }
	      });

	      return modalInstance;
	    };

	    $harmonyModal.info = function (config) {
	      var defaultConfig = {
	        successButtonText: 'Continue',
	        cancelButtonText: 'Cancel',
	        hasCancelButton: false,
	        title: 'Information',
	        text: '',
	        type: 'info'
	      };
	      var scope = angular.extend($rootScope.$new(), defaultConfig, config);
	      return $harmonyModal.open({
	        templateUrl: _templatesModalPredefinedTplHtml2['default'],
	        scope: scope
	      });
	    };

	    $harmonyModal.success = function (config) {
	      var defaultConfig = {
	        title: 'Success!',
	        type: 'success'
	      };
	      return $harmonyModal.info(angular.extend({}, defaultConfig, config));
	    };

	    $harmonyModal.error = function (config) {
	      var defaultConfig = {
	        title: 'Error!',
	        type: 'error'
	      };
	      return $harmonyModal.info(angular.extend({}, defaultConfig, config));
	    };

	    $harmonyModal.warn = function (config) {
	      var defaultConfig = {
	        title: 'Warning!',
	        type: 'warn',
	        hasCancelButton: true
	      };
	      return $harmonyModal.info(angular.extend({}, defaultConfig, config));
	    };

	    return $harmonyModal;
	  }]

	};

	exports['default'] = $harmonyModalProvider;
	module.exports = exports['default'];

/***/ },
/* 13 */
/***/ function(module, exports) {

	var path = 'modal/templates/modal-predefined.tpl.html';
	var html = "<div ng-class=\"modal__{{type}}\">\n    <h2>{{title}}</h2>\n    <p>{{text}}</p>\n    <button class=\"button close-modal button--action\" ng-click=\"$close('continue')\">{{successButtonText}}</button>\n    <button ng-show=\"hasCancelButton\" class=\"button close-modal\" ng-click=\"$close('cancel')\">{{cancelButtonText}}</button>\n</div>\n";
	window.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);
	module.exports = path;

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _angular = __webpack_require__(1);

	var _angular2 = _interopRequireDefault(_angular);

	var _harmonySelectJs = __webpack_require__(15);

	var _harmonySelectJs2 = _interopRequireDefault(_harmonySelectJs);

	var _servicesDropdownServiceJs = __webpack_require__(18);

	var _servicesDropdownServiceJs2 = _interopRequireDefault(_servicesDropdownServiceJs);

	var harmonySelectModule = _angular2['default'].module('harmonyUI.components.select', []).factory('dropdownService', _servicesDropdownServiceJs2['default'].dropdownFactory).directive('harmonySelect', _harmonySelectJs2['default'].directiveFactory);

	exports['default'] = harmonySelectModule;
	module.exports = exports['default'];

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {/* global $ */
	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	var _templatesHarmonySelectTplHtml = __webpack_require__(17);

	var _templatesHarmonySelectTplHtml2 = _interopRequireDefault(_templatesHarmonySelectTplHtml);

	var HarmonySelect = (function () {
	    function HarmonySelect(dropdownService, $timeout) {
	        'ngInject';

	        _classCallCheck(this, HarmonySelect);

	        this.$timeout = $timeout;
	        this.restrict = 'A';
	        this.replace = true;
	        this.templateUrl = _templatesHarmonySelectTplHtml2['default'];
	        this.scope = {
	            harmonySelect: '=',
	            selectLabel: '@',
	            dropdownModel: '=',
	            dropdownItemLabel: '@',
	            dropdownOnchange: '&',
	            dropdownDisabled: '='
	        };
	        this.link = function (scope, elem) {
	            $(elem).on('blur', function (e) {
	                if (!$(e.relatedTarget).closest('.filter--dropdown').hasClass('filter--open')) {
	                    scope.$apply(function () {
	                        scope.isOpen = false;
	                    });
	                }
	            });
	        };
	    }
	    HarmonySelect.$inject = ["dropdownService", "$timeout"];

	    _createClass(HarmonySelect, [{
	        key: 'controller',
	        value: function controller($scope, $element, $attrs, dropdownService, $timeout, $rootScope) {
	            $scope.dropdownItemLabel = $scope.dropdownItemLabel || 'text';

	            $scope.isOpen = false;
	            $scope.toggleDropdown = function () {
	                $scope.isOpen = !$scope.isOpen;
	            };

	            $scope.select = function (selected) {
	                $scope.dropdownModel = selected;
	                $($element).focus();
	                $timeout(function () {
	                    $scope.dropdownOnchange({ selected: selected });
	                }, 500);
	            };
	        }
	    }], [{
	        key: 'directiveFactory',
	        value: function directiveFactory(dropdownService, $timeout) {
	            HarmonySelect.instance = new HarmonySelect(dropdownService, $timeout);
	            return HarmonySelect.instance;
	        }
	    }]);

	    return HarmonySelect;
	})();

	exports['default'] = HarmonySelect;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(16)))

/***/ },
/* 16 */
/***/ function(module, exports) {

	module.exports = jQuery;

/***/ },
/* 17 */
/***/ function(module, exports) {

	var path = 'harmony-select/templates/harmony-select.tpl.html';
	var html = "<a href=\"#\" class=\"filter filter--dropdown\" ng-class=\"{'filter--open': isOpen}\" ng-attr-aria-expanded=\"{{isOpen ? 'true' : 'false'}}\" role=\"combobox\" ng-click=\"toggleDropdown(); $event.preventDefault()\">\n    <span class=\"filter__label\">{{selectLabel}}</span>\n    <span class=\"filter__selected\">{{dropdownModel[dropdownItemLabel]}}</span>\n    <i class=\"filter__caret icon icon--caret-down\"></i>\n    <div class=\"filter__menu\" role=\"listbox\">\n        <ul class=\"filter__menu-list\">\n            <li ng-repeat='item in harmonySelect'\n                class='filter__menu-list-item'\n                role='listitem'>\n                <button ng-click=\"select(item)\">\n                    {{item[dropdownItemLabel]}}\n                </button>\n            </li>\n        </ul>\n    </div>\n</a>\n";
	window.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);
	module.exports = path;

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	var _angular = __webpack_require__(1);

	var _angular2 = _interopRequireDefault(_angular);

	var DropdownService = (function () {
	  function DropdownService($document) {
	    'ngInject';

	    var _this = this;

	    _classCallCheck(this, DropdownService);

	    this.body = $document.find('body');
	    this._dropdowns = [];
	    this.body.bind('click', function () {
	      _angular2['default'].forEach(_this._dropdowns, function (el) {
	        el.removeClass('filter--open');
	      });
	    });
	  }
	  DropdownService.$inject = ["$document"];

	  _createClass(DropdownService, [{
	    key: 'register',
	    value: function register(ddEl) {
	      this._dropdowns.push(ddEl);
	    }
	  }, {
	    key: 'unregister',
	    value: function unregister(ddEl) {
	      var index = undefined;
	      index = this._dropdowns.indexOf(ddEl);
	      if (index > -1) {
	        this._dropdowns.splice(index, 1);
	      }
	    }
	  }, {
	    key: 'toggleActive',
	    value: function toggleActive(ddEl) {
	      _angular2['default'].forEach(this._dropdowns, function (el) {
	        if (el !== ddEl) {
	          el.removeClass('filter--open');
	        }
	      });
	      ddEl.toggleClass('filter--open');
	    }
	  }], [{
	    key: 'dropdownFactory',
	    value: function dropdownFactory($document) {
	      return new DropdownService($document);
	    }
	  }]);

	  return DropdownService;
	})();

	exports['default'] = DropdownService;
	module.exports = exports['default'];

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _angular = __webpack_require__(1);

	var _angular2 = _interopRequireDefault(_angular);

	var _slideboxJs = __webpack_require__(20);

	var _slideboxJs2 = _interopRequireDefault(_slideboxJs);

	var _slideboxItemJs = __webpack_require__(21);

	var _slideboxItemJs2 = _interopRequireDefault(_slideboxItemJs);

	var slideboxModule = _angular2['default'].module('harmonyUI.components.slidebox', []).directive('slidebox', _slideboxJs2['default'].directiveFactory).directive('slideboxItem', _slideboxItemJs2['default'].directiveFactory);

	exports['default'] = slideboxModule;
	module.exports = exports['default'];

/***/ },
/* 20 */
/***/ function(module, exports) {

	/* global $ */

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	var Slidebox = (function () {
	    function Slidebox() {
	        'ngInject';

	        _classCallCheck(this, Slidebox);

	        this.restrict = 'E';
	        this.scope = false;
	    }

	    _createClass(Slidebox, [{
	        key: 'controller',
	        value: function controller($scope, $element, $attrs) {

	            $scope.slidebox = {
	                activeIndex: 0,
	                next: function next() {
	                    if ($scope.slidebox.activeIndex < $scope.slidebox.__indices.length - 1) {
	                        $scope.slidebox.activeIndex++;
	                    }
	                },
	                last: function last() {
	                    if ($scope.slidebox.activeIndex > 0) {
	                        $scope.slidebox.activeIndex--;
	                    }
	                },
	                goTo: function goTo(index) {
	                    if ($scope.slidebox.__indices.indexOf(index) > -1) {
	                        $scope.slidebox.activeIndex = index;
	                    }
	                },
	                __indices: [],
	                __register: function __register(index) {
	                    if ($scope.slidebox.__indices.indexOf(index) === -1) {
	                        $scope.slidebox.__indices.push(index);
	                    }
	                },
	                __deregister: function __deregister(index) {
	                    var temp = $scope.slidebox.__indices.indexOf(index);
	                    if (temp !== -1) {
	                        $scope.slidebox.__indices.splice(temp, 1);
	                    }
	                    if ($scope.slidebox.activeIndex === index) {
	                        $scope.slidebox.activeIndex = 0;
	                    }
	                }
	            };
	        }
	    }], [{
	        key: 'directiveFactory',
	        value: function directiveFactory() {
	            Slidebox.instance = new Slidebox();
	            return Slidebox.instance;
	        }
	    }]);

	    return Slidebox;
	})();

	exports['default'] = Slidebox;
	module.exports = exports['default'];

/***/ },
/* 21 */
/***/ function(module, exports) {

	/* global $ */

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	var SlideboxItem = (function () {
	    function SlideboxItem() {
	        'ngInject';

	        _classCallCheck(this, SlideboxItem);

	        this.restrict = 'E';
	        this.scope = {
	            sbiIndex: "="
	        };
	    }

	    _createClass(SlideboxItem, [{
	        key: 'controller',
	        value: function controller($scope, $element, $attrs) {
	            $scope.updateClasses = function () {
	                if ($scope.$parent.slidebox.activeIndex === $scope.sbiIndex) {
	                    $element.addClass('sb-active').attr("aria-hidden", "false");
	                } else {
	                    $element.removeClass('sb-active');
	                }
	                if ($scope.$parent.slidebox.activeIndex < $scope.sbiIndex) {
	                    $element.addClass('sb-off-right').attr("aria-hidden", "true");
	                } else {
	                    $element.removeClass('sb-off-right');
	                }
	                if ($scope.$parent.slidebox.activeIndex > $scope.sbiIndex) {
	                    $element.addClass('sb-off-left').attr("aria-hidden", "true");
	                } else {
	                    $element.removeClass('sb-off-left');
	                }
	            };
	            $scope.updateClasses();
	            $scope.$watch(function () {
	                return $scope.$parent.slidebox.activeIndex;
	            }, $scope.updateClasses);
	            $scope.$parent.slidebox.__register($scope.sbiIndex);
	            $scope.$on('destroy', function () {
	                $scope.$parent.slidebox.__deregister($scope.sbiIndex);
	            });
	        }
	    }], [{
	        key: 'directiveFactory',
	        value: function directiveFactory() {
	            SlideboxItem.instance = new SlideboxItem();
	            return SlideboxItem.instance;
	        }
	    }]);

	    return SlideboxItem;
	})();

	exports['default'] = SlideboxItem;
	module.exports = exports['default'];

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _angular = __webpack_require__(1);

	var _angular2 = _interopRequireDefault(_angular);

	var _progressPieJs = __webpack_require__(23);

	var _progressPieJs2 = _interopRequireDefault(_progressPieJs);

	var progressPieModule = _angular2['default'].module('harmonyUI.components.progressPie', []).directive('progressPie', _progressPieJs2['default'].directiveFactory);

	exports['default'] = progressPieModule;
	module.exports = exports['default'];

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {/* global $ */

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	var ProgressPie = (function () {
	    function ProgressPie() {
	        'ngInject';

	        _classCallCheck(this, ProgressPie);

	        this.restrict = 'AE';
	        this.scope = {
	            percentage: "=",
	            diameter: "="
	        };
	    }

	    _createClass(ProgressPie, [{
	        key: 'controller',
	        value: function controller($scope, $element, $attrs) {
	            var generatePie = function generatePie() {
	                console.log('generating');
	                var size = $scope.diameter;
	                var svgns = "http://www.w3.org/2000/svg";
	                var chart = document.createElementNS(svgns, "svg:svg");
	                chart.setAttribute("width", size);
	                chart.setAttribute("height", size);
	                chart.setAttribute("viewBox", "0 0 " + size + " " + size);
	                // Background circle
	                var back = document.createElementNS(svgns, "circle");
	                back.setAttributeNS(null, "cx", size / 2);
	                back.setAttributeNS(null, "cy", size / 2);
	                back.setAttributeNS(null, "r", size / 2 - 1);
	                back.setAttributeNS(null, "fill", "transparent");
	                back.setAttributeNS(null, "stroke-width", "2px");
	                chart.appendChild(back);
	                // primary wedge
	                var path = document.createElementNS(svgns, "path");
	                var unit = Math.PI * 2 / 100;
	                var startangle = 0;
	                var endangle = $scope.percentage * unit - 0.001;
	                var x1 = size / 2 + size / 2 * Math.sin(startangle);
	                var y1 = size / 2 - size / 2 * Math.cos(startangle);
	                var x2 = size / 2 + size / 2 * Math.sin(endangle);
	                var y2 = size / 2 - size / 2 * Math.cos(endangle);
	                var big = 0;
	                if (endangle - startangle > Math.PI) {
	                    big = 1;
	                }
	                var d = "M " + size / 2 + "," + size / 2 + // Start at circle center
	                " L " + x1 + "," + y1 + // Draw line to (x1,y1)
	                " A " + size / 2 + "," + size / 2 + // Draw an arc of radius r
	                " 0 " + big + " 1 " + // Arc details...
	                x2 + "," + y2 + // Arc goes to to (x2,y2)
	                " Z"; // Close path back to (cx,cy)
	                path.setAttribute("d", d);
	                chart.appendChild(path);
	                $($element).html(chart);
	            };
	            $scope.$watch(function () {
	                return parseInt($scope.diameter) + parseInt($scope.percentage);
	            }, generatePie);
	        }
	    }], [{
	        key: 'directiveFactory',
	        value: function directiveFactory() {
	            ProgressPie.instance = new ProgressPie();
	            return ProgressPie.instance;
	        }
	    }]);

	    return ProgressPie;
	})();

	exports['default'] = ProgressPie;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(16)))

/***/ }
/******/ ]);
angular.module("ngUpload",[]).directive("uploadSubmit",["$parse",function(){function n(t,a){t=angular.element(t);var e=t.parent();return a=a.toLowerCase(),e&&e[0].tagName.toLowerCase()===a?e:e?n(e,a):null}return{restrict:"AC",link:function(t,a){a.bind("click",function(t){if(t&&(t.preventDefault(),t.stopPropagation()),!a.attr("disabled")){var e=n(a,"form");e.triggerHandler("submit"),e[0].submit()}})}}}]).directive("ngUpload",["$log","$parse","$document",function(n,t,a){function e(n){var t,e=a.find("head");return angular.forEach(e.find("meta"),function(a){a.getAttribute("name")===n&&(t=a)}),angular.element(t)}var r=1;return{restrict:"AC",link:function(a,o,i){function l(n){a.$isUploading=n}function d(){f.unbind("load"),a.$$phase?l(!1):a.$apply(function(){l(!1)});var t,e=(f[0].contentDocument||f[0].contentWindow.document).body;try{t=angular.fromJson(e.innerText||e.textContent)}catch(r){t=e.innerHTML,n.warn("Response is not valid JSON")}a.$$phase?p(a,{content:t}):a.$apply(function(){p(a,{content:t})})}r++;var u={},p=i.ngUpload?t(i.ngUpload):angular.noop,s=i.ngUploadLoading?t(i.ngUploadLoading):null;i.hasOwnProperty("uploadOptionsConvertHidden")&&(u.convertHidden="false"!=i.uploadOptionsConvertHidden),i.hasOwnProperty("uploadOptionsEnableRailsCsrf")&&(u.enableRailsCsrf="false"!=i.uploadOptionsEnableRailsCsrf),i.hasOwnProperty("uploadOptionsBeforeSubmit")&&(u.beforeSubmit=t(i.uploadOptionsBeforeSubmit)),o.attr({target:"upload-iframe-"+r,method:"post",enctype:"multipart/form-data",encoding:"multipart/form-data"});var f=angular.element('<iframe name="upload-iframe-'+r+'" '+'border="0" width="0" height="0" '+'style="width:0px;height:0px;border:none;display:none">');if(u.enableRailsCsrf){var c=angular.element("<input />");c.attr("class","upload-csrf-token"),c.attr("type","hidden"),c.attr("name",e("csrf-param").attr("content")),c.val(e("csrf-token").attr("content")),o.append(c)}o.after(f),l(!1),o.bind("submit",function(){var n=a[i.name];return n&&n.$invalid?!1:u.beforeSubmit?u.beforeSubmit():(f.bind("load",d),u.convertHidden&&angular.forEach(o.find("input"),function(n){var t=angular.element(n);t.attr("ng-model")&&t.attr("type")&&"hidden"==t.attr("type")&&t.attr("value",a.$eval(t.attr("ng-model")))}),a.$$phase?(s&&s(a),l(!0)):a.$apply(function(){s&&s(a),l(!0)}),void 0)})}}}]);
(function() {
  var LMSUiAnalyticsService, servicesModule;
  servicesModule = angular.module('LmsUiServices', ['ngResource']);
  LMSUiAnalyticsService = (function() {
    function LMSUiAnalyticsService(window, lmsContext1) {
      this.window = window;
      this.lmsContext = lmsContext1;
    }

    LMSUiAnalyticsService.prototype.sendAssignmentSuccessfullySubmittedEvent = function(submission) {
      this.submission = submission;
      return this.sendAssignmentSubmittedEvent(this.submission, "lms.coursework.assignment.submission.success");
    };

    LMSUiAnalyticsService.prototype.sendAssignmentFailedToSubmitEvent = function(submission) {
      this.submission = submission;
      return this.sendAssignmentSubmittedEvent(this.submission, "lms.coursework.assignment.submission.failure");
    };

    LMSUiAnalyticsService.prototype.sendAssignmentSubmittedEvent = function(submission, action_id) {
      var date_diff, elapsed_time, track_props;
      this.submission = submission;
      elapsed_time = null;
      if (this.submission.timemodified_utc && this.submission.assignment.time_start_utc) {
        date_diff = new Date(this.submission.timemodified_utc) - new Date(this.submission.assignment.time_start_utc);
        elapsed_time = date_diff / 1000;
      }
      track_props = {
        action_id: action_id,
        site: this.lmsContext.site(),
        assignment_id: this.lmsContext.assignmentId(),
        assignment_name: this.submission.assignment.name,
        assignment_status: this.submission.status,
        assignment_course_module_id: this.lmsContext.cmId(),
        assignment_available_time: this.submission.assignment.time_start_utc,
        assignment_due_time: this.submission.assignment.time_end_utc,
        assignment_prevent_late_submissions: this.submission.assignment.prevent_late_submissions,
        assignment_course_name: this.lmsContext.courseName(),
        assignment_course_id: this.lmsContext.courseId(),
        assignment_course_uuid: this.lmsContext.courseUuid(),
        assignment_section_id: this.lmsContext.sectionId(),
        assignment_section_uuid: this.lmsContext.sectionUuid(),
        assignment_type: "All-in-One",
        assignment_submission_submit_time: this.submission.timemodified_utc,
        assignment_submission_submit_elapsed_time: elapsed_time
      };
      return this.window.analytics.track("Submit Assignment", track_props);
    };

    LMSUiAnalyticsService.prototype.sendGradeSubmittedEvent = function(gradeTraits) {
      var track_props;
      this.gradeTraits = gradeTraits;
      track_props = {
        action_id: this.gradeTraits.action_id,
        site: this.lmsContext.site(),
        assignment_id: this.gradeTraits.assignment_id,
        course: this.lmsContext.courseName(),
        courseRole: this.lmsContext.courseRole(),
        course_module_id: this.gradeTraits.course_module_id,
        course_uuid: this.lmsContext.courseUuid(),
        module_name: this.gradeTraits.module_name,
        module_type: this.gradeTraits.module_type,
        raw_score: this.gradeTraits.raw_score,
        section_id: this.lmsContext.sectionId(),
        section_uuid: this.lmsContext.sectionUuid(),
        user_id: this.gradeTraits.user_id,
        weighted_score: this.gradeTraits.weighted_score
      };
      return this.window.analytics.track("Grade Submitted for User", track_props);
    };

    return LMSUiAnalyticsService;

  })();
  return servicesModule.factory('LMSUiAnalyticsService', [
    '$window', 'LmsContext', function($window, lmsContext) {
      return new LMSUiAnalyticsService($window, lmsContext);
    }
  ]);
})();

(function() {
  var lmsUiControllers;
  this.AssignmentController = function($scope, $log, $sce, player, ModalModel, VideosViewModel, AssignmentSubmissionService, LmsStudent, LMSUiAnalyticsService, $harmonyModal, Hostname, LmsContext) {
    var showErrors;
    $scope.videosViewModel = null;
    $scope.feedbackVideosViewModel = null;
    $scope.modalModel = ModalModel({});
    $scope.userIsInstructor = false;
    $scope.academicProductEnabled = false;
    $scope.assignment = AssignmentSubmissionService.getAssignment((function(_this) {
      return function() {
        var userId;
        $scope.userIsInstructor = $scope.assignment.instructor;
        $scope.academicProductEnabled = $scope.assignment.use_academic_product;
        if ($scope.assignment.instructor != null) {
          $scope.selectedUser = $scope.assignment.users_with_submissions[0];
          userId = $scope.selectedUser.id;
        } else {
          userId = void 0;
        }
        return $scope.model = AssignmentSubmissionService.getSubmission(userId, 'userId', function() {
          if (($scope.videosViewModel == null) || !$scope.feedbackVideosViewModel) {
            $scope.videosViewModel = VideosViewModel(player, $scope.player, 'viewport_submissions');
            $scope.feedbackVideosViewModel = VideosViewModel(player, $scope.feedbackVideoPlayer, 'viewport_feedback');
          }
          $scope.videosViewModel.updateVideos($scope.model.submission.videos);
          $scope.model.setUser(LmsStudent);
          $scope.model.submission.saved_submission_text = "";
          if ($scope.model.submission.submission_text != null) {
            $scope.model.submission.saved_submission_text = $scope.model.submission.submission_text;
          }
          if ($scope.model.submission.feedback != null) {
            return $scope.feedbackVideosViewModel.updateVideos($scope.model.submission.feedback.videos);
          }
        });
      };
    })(this));
    $scope.fileUploadUrl = AssignmentSubmissionService.getSubmissionFileUploadUrl();
    $scope.showModal = function(title, message, successText, dismissText, callback) {
      var buttons, modalInstance;
      if (dismissText == null) {
        dismissText = null;
      }
      if (callback == null) {
        callback = null;
      }
      if ($('[ng-app="onlineCampusApp"]').length > 0) {
        modalInstance = $harmonyModal.open({
          templateUrl: $sce.trustAsResourceUrl(Hostname + "/views/content/modal.html"),
          controller: function($scope, $modalInstance, title, message, successText, dismissText) {
            $scope.title = title;
            $scope.message = message;
            $scope.successText = successText;
            return $scope.dismissText = dismissText;
          },
          resolve: {
            title: function() {
              return title;
            },
            message: function() {
              return message;
            },
            successText: function() {
              return successText;
            },
            dismissText: function() {
              return dismissText;
            }
          }
        });
        return modalInstance.result.then(function(status) {
          if (callback != null) {
            return callback(status === 'confirm');
          }
        });
      } else {
        $('#confirmOverlay').remove();
        buttons = {};
        buttons.OK = {
          "class": "green",
          action: function() {
            if (callback != null) {
              return callback(true);
            }
          }
        };
        if ((dismissText != null ? dismissText.length : void 0) > 0) {
          buttons.Cancel = {
            "class": 'gray',
            action: function() {
              if (callback != null) {
                return callback(false);
              }
            }
          };
        }
        return LmsApp.confirm({
          title: title,
          message: message,
          buttons: buttons
        });
      }
    };
    $scope.introAsTrustedHtml = function() {
      return $sce.trustAsHtml(this.assignment.intro);
    };
    $scope.uploadResults = function(content) {
      var msg, responseJson;
      if (content) {
        responseJson = content;
        if (responseJson.success) {
          $scope.model.submission.files = responseJson.userfiles;
          setTimeout((function() {
            var file_input;
            file_input = $('#file_id');
            file_input.replaceWith(file_input = file_input.clone(true));
            file_input.focus();
          }), 200);
        } else {
          msg = "Failed to upload file. Some error occurred.";
          if ((responseJson.msg != null) && responseJson.msg !== '') {
            msg = responseJson.msg;
            alert(msg);
            setTimeout((function() {
              $('#file_id').focus();
            }), 20);
          }
        }
      }
      return false;
    };
    $scope.getApGradebookUrlForStudent = function() {
      var section;
      section = (LmsContext != null ? LmsContext.sectionId() : void 0) ? LmsContext.sectionId() : 'all';
      return '/ap/redirect/course/' + $scope.assignment.course_id + '/section/' + section + '/student/' + (LmsContext != null ? LmsContext.userId() : void 0) + '/moodle_grade_item/' + $scope.assignment.grade_item_id;
    };
    $scope.assignmentVideoUploaded = function(kalturaContextId, kalturaEntryId) {
      return AssignmentSubmissionService.addVideo(kalturaContextId, kalturaEntryId, ((function(_this) {
        return function(data) {
          return $scope.updateVideos(data.uservideos);
        };
      })(this)), (function(_this) {
        return function() {
          return alert("Error adding video");
        };
      })(this));
    };
    $scope.openKalturaUploadModal = function() {
      return openKSUWindow('/local/kalturav3/ksu/ksu.php?mediaType=video&klocation=assignment_submission&presspost=assignment_upload_video&field_name=assignment-submit-video-id', 'Upload Submission Video');
    };
    $scope.updateVideos = function(videos) {
      $scope.videosViewModel.updateVideos(videos);
      return $scope.model.submission.videos = videos;
    };
    showErrors = function(response) {
      var msg;
      msg = AssignmentSubmissionService.error_message_from_response(response);
      return alert(msg);
    };
    $scope.save = function(status) {
      $scope.currentStatus = $scope.model.submission.status;
      $scope.model.submission.status = status;
      return AssignmentSubmissionService.save($scope.model, ((function(_this) {
        return function(data) {
          var dialogInfo;
          $scope.model.submission.timemodified = data.timemodified;
          $scope.model.submission.saved_submission_text = $scope.model.submission.submission_text;
          LMSUiAnalyticsService.sendAssignmentSuccessfullySubmittedEvent($scope.model.submission);
          dialogInfo = $scope.getDialogInfo($scope.model.submission.status);
          AssignmentSubmissionService.resetCompletionCache($scope.model, (function(data) {}), function(response) {});
          return $scope.showModal(dialogInfo.title + ' Successful!', dialogInfo.successMsg, 'Continue');
        };
      })(this)), ((function(_this) {
        return function(response) {
          $scope.model.submission.status = $scope.currentStatus;
          LMSUiAnalyticsService.sendAssignmentFailedToSubmitEvent($scope.model.submission);
          return showErrors(response);
        };
      })(this)));
    };
    $scope.openAskToSubmit = function(status) {
      var info;
      info = $scope.getDialogInfo(status);
      return $scope.showModal(info.title, info.confirmMsg, 'Submit', 'Cancel', function(success) {
        if (success) {
          return $scope.okToSubmit(status);
        }
      });
    };
    $scope.okToSubmit = function(status) {
      $scope.submitStatus = status;
      return $scope.save($scope.submitStatus);
    };
    $scope.getDialogInfo = function(status) {
      var confirmMsg, info, successMsg, title;
      if (status === "submitted") {
        title = "Submit for Grade";
        confirmMsg = "Are you sure you want to submit this assignment for grading?";
        successMsg = "Your assignment has been submitted for grading.";
      } else if (status === "review") {
        title = "Send for Review";
        confirmMsg = "By sending for review, you are granting your professor access to your submission page. Any changes you make will be reflected in your professor's view. Proceed?";
        successMsg = "Your assignment has been sent for review.";
      } else if (status === "draft") {
        title = "Save Draft";
        confirmMsg = "";
        successMsg = "Your assignment submission has been saved as a private draft.";
      }
      info = {};
      info.title = title;
      info.confirmMsg = confirmMsg;
      info.successMsg = successMsg;
      return info;
    };
    $scope.openAskToRevealPassword = function() {
      if ($scope.model.documentPasswordAlreadyRevealed()) {
        return $scope.revealDocumentPassword();
      } else {
        return $scope.showModal('Please Confirm', 'Revealing the password indicates that you are ready to begin. The start time will be recorded. Are your sure that you want to reveal the password?', 'Confirm', 'Cancel', function(success) {
          if (success) {
            return $scope.revealDocumentPassword();
          }
        });
      }
    };
    $scope.revealDocumentPassword = function() {
      return AssignmentSubmissionService.getAssignmentDocumentPassword(((function(_this) {
        return function(data) {
          var message, title;
          $scope.model.submission.document_password_revealed = true;
          title = 'Document Password';
          message = data.msg;
          return $scope.showModal(title, message, 'Continue');
        };
      })(this)), (function(_this) {
        return function(response) {
          var message, title;
          title = 'Error';
          message = 'There was an error retrieving the document password. Please try again or contact Student Support.';
          return $scope.showModal(title, message, 'Continue');
        };
      })(this));
    };
    $scope.close = function() {
      return $scope.askToSubmit = false;
    };
    $scope.deleteFile = function(fileId) {
      AssignmentSubmissionService.deleteFile(fileId, (function(data) {
        return $scope.model.submission.files = data.userfiles;
      }), function(data) {
        return alert(data.msg);
      });
      return setTimeout((function() {
        $('#file_id').focus();
      }), 40);
    };
    $scope.deleteVideo = function() {
      var selectedVideo;
      selectedVideo = $scope.videosViewModel.selectedVideo;
      return AssignmentSubmissionService.deleteVideo(selectedVideo.id, (function(data) {
        return $scope.videosViewModel.removeCurrentVideo();
      }), function(data) {
        return alert(data.msg);
      });
    };
    $scope.addComment = function($event) {
      $scope.videosViewModel.addCommentToSelectedVideo();
      return $event.preventDefault();
    };
    $scope.deleteComment = function(comment) {
      return $scope.videosViewModel.deleteComment(comment);
    };
    return $scope.tinymceOptions = {
      resize: false,
      menubar: false,
      statusbar: false,
      resize: false
    };
  };
  AssignmentController.$inject = ['$scope', '$log', '$sce', 'player', 'ModalModel', 'VideosViewModel', 'AssignmentSubmissionService', 'LmsStudent', 'LMSUiAnalyticsService', '$harmonyModal', 'Hostname', 'LmsContext'];
  lmsUiControllers = angular.module('LmsUiControllers', []);
  return lmsUiControllers.controller('AssignmentController', AssignmentController);
})();

(function() {
  this.FeedbackGradeController = function($scope, $log, $sce, player, VideosViewModel, AssignmentSubmissionService, LmsInstructor, AssignmentUiClock, LMSUiAnalyticsService, $harmonyModal, Hostname, LmsContext) {
    var showErrors;
    $scope.videosViewModel = null;
    $scope.feedbackVideosViewModel = null;
    $scope.lmsUiClock = AssignmentUiClock;
    $scope.userIsInstructor = false;
    $scope.academicProductEnabled = false;
    $scope.showModal = function(title, message, successText, dismissText, callback) {
      var buttons, modalInstance;
      if (dismissText == null) {
        dismissText = null;
      }
      if (callback == null) {
        callback = null;
      }
      if ($('[ng-app="onlineCampusApp"]').length > 0) {
        modalInstance = $harmonyModal.open({
          templateUrl: $sce.trustAsResourceUrl(Hostname + "/views/content/modal.html"),
          controller: function($scope, $modalInstance, title, message, successText, dismissText) {
            $scope.title = title;
            $scope.message = message;
            $scope.successText = successText;
            return $scope.dismissText = dismissText;
          },
          resolve: {
            title: function() {
              return title;
            },
            message: function() {
              return message;
            },
            successText: function() {
              return successText;
            },
            dismissText: function() {
              return dismissText;
            }
          }
        });
        return modalInstance.result.then(function(status) {
          if (callback != null) {
            return callback(status === 'confirm');
          }
        });
      } else {
        $('#confirmOverlay').remove();
        buttons = {};
        buttons.OK = {
          "class": "green",
          action: function() {
            if (callback != null) {
              return callback(true);
            }
          }
        };
        if ((dismissText != null ? dismissText.length : void 0) > 0) {
          buttons.Cancel = {
            "class": 'gray',
            action: function() {
              if (callback != null) {
                return callback(false);
              }
            }
          };
        }
        return LmsApp.confirm({
          title: title,
          message: message,
          buttons: buttons
        });
      }
    };
    $scope.newUserSelected = function(selectedUser) {
      var userid;
      $scope.selectedUser = selectedUser;
      $scope.model = AssignmentSubmissionService.getSubmission(selectedUser.id, 'userId', (function(_this) {
        return function() {
          var gradeIndex;
          $scope.model.setViewOnly();
          $scope.model.setUser(LmsInstructor);
          if (($scope.videosViewModel == null) || !$scope.feedbackVideosViewModel) {
            $scope.videosViewModel = VideosViewModel(player, $scope.player, 'viewport_submissions');
            $scope.feedbackVideosViewModel = VideosViewModel(player, $scope.feedbackVideoPlayer, 'viewport_feedback');
          }
          $scope.videosViewModel.updateVideos($scope.model.submission.videos);
          $scope.feedbackVideosViewModel.updateVideos($scope.model.submission.feedback.videos);
          $scope.model.submission.saved_submission_text = "";
          if ($scope.model.submission.submission_text != null) {
            $scope.model.submission.saved_submission_text = $scope.model.submission.submission_text;
          }
          gradeIndex = 0;
          if ($scope.model.submission.feedback.final_grade != null) {
            gradeIndex = $scope.model.submission.feedback.final_grade;
            $scope.model.submission.feedback.old_grade = $scope.model.submission.feedback.final_grade;
          }
          return $scope.selectedGrade = $scope.model.creditNoCredit[gradeIndex];
        };
      })(this));
      $scope.fileUploadUrl = AssignmentSubmissionService.getFeedbackFileUploadUrl(userid = selectedUser.id);
      return $scope.feedbackVideoRecorderUrl = AssignmentSubmissionService.getFeedbackVideoRecorderUrl(selectedUser.id);
    };
    $scope.assignment = AssignmentSubmissionService.getAssignment((function(_this) {
      return function() {
        $scope.userIsInstructor = $scope.assignment.instructor;
        $scope.academicProductEnabled = $scope.assignment.use_academic_product;
        if ($scope.assignment.users_with_submissions[0] != null) {
          $scope.selectedUser = $scope.assignment.users_with_submissions[0];
          return $scope.newUserSelected($scope.selectedUser);
        }
      };
    })(this));
    $scope.getApGradebookUrlForInstructor = function() {
      var section;
      section = (LmsContext != null ? LmsContext.sectionId() : void 0) ? LmsContext.sectionId() : 'all';
      return '/ap/redirect/course/' + $scope.assignment.course_id + '/section/' + section + '/moodle_grade_item/' + $scope.assignment.grade_item_id;
    };
    $scope.openKalturaVideoRecorderModal = function() {
      return parent.openKRecordWindow($scope.feedbackVideoRecorderUrl, 'Record a Video');
    };
    $scope.newGradeSelected = function(selectedGrade) {
      $scope.model.submission.feedback.final_grade = selectedGrade.id;
      return $scope.selectedGrade = selectedGrade;
    };
    $scope.introAsTrustedHtml = function() {
      return $sce.trustAsHtml(this.assignment.intro);
    };
    $scope.addComment = function($event) {
      $scope.videosViewModel.addCommentToSelectedVideo();
      return $event.preventDefault();
    };
    $scope.deleteComment = function(comment) {
      return $scope.videosViewModel.deleteComment(comment);
    };
    $scope.uploadFeedbackFileResults = function(content) {
      var file_input, msg, responseJson;
      if (content) {
        responseJson = content;
        if (responseJson.success) {
          $scope.processFeedbackResponse(responseJson.responsefiles);
          file_input = $('#file_id');
          file_input.replaceWith(file_input = file_input.clone(true));
          file_input.focus();
        } else {
          msg = "Failed to upload file. Some error occurred.";
          if ((responseJson.msg != null) && responseJson.msg !== '') {
            msg = responseJson.msg;
            alert(msg);
          }
        }
      }
      return false;
    };
    $scope.deleteFeedbackFile = function(fileId, studentId) {
      return AssignmentSubmissionService.deleteFeedbackFile(fileId, studentId, (function(data) {
        return $scope.processFeedbackResponse(data.responsefiles);
      }), function(data) {
        return alert(data.msg);
      });
    };
    $scope.processFeedbackResponse = function(response) {
      response = JSON.stringify(response);
      response = response.replace(new RegExp("\"fileid\":", "g"), "\"id\":");
      response = response.replace(new RegExp("\"filelink\":", "g"), "\"url\":");
      return $scope.model.submission.feedback.files = JSON.parse(response);
    };
    $scope.updateFeedbackVideos = function() {
      var model;
      return model = AssignmentSubmissionService.getSubmission($scope.selectedUser.id, 'userId', (function(_this) {
        return function() {
          return $scope.feedbackVideosViewModel.updateVideos(model.submission.feedback.videos);
        };
      })(this));
    };
    $scope.deleteFeedbackVideo = function() {
      var selectedVideo;
      selectedVideo = $scope.feedbackVideosViewModel.selectedVideo;
      return AssignmentSubmissionService.deleteFeedbackVideo(selectedVideo.id, $scope.selectedUser.id, (function(data) {
        return $scope.feedbackVideosViewModel.removeCurrentVideo();
      }), function(data) {
        return alert(data.msg);
      });
    };
    $scope.saveFeedback = function() {
      return AssignmentSubmissionService.saveFeedback($scope.model, $scope.selectedUser.id, ((function(_this) {
        return function(data) {
          var gradeAnalyticsTraitsList;
          gradeAnalyticsTraitsList = data.grade_analytics_traits_list;
          if (gradeAnalyticsTraitsList.length > 0 && typeof gradeAnalyticsTraitsList[0] === 'object') {
            LMSUiAnalyticsService.sendGradeSubmittedEvent(gradeAnalyticsTraitsList[0]);
          }
          $scope.model.submission.saved_submission_text = $scope.model.submission.feedback.text;
          return $scope.showModal('Feedback Submission Successful!', 'Your feedback was saved successfully.', 'Continue');
        };
      })(this)), (function(_this) {
        return function(response) {
          return showErrors(response);
        };
      })(this));
    };
    $scope.isGradeValid = function() {
      if ($scope.model.canGradeAssignment() && !$scope.model.isGradeValid()) {
        $scope.showModal('Invalid Grade', 'The grade you have provided is not within the settings for this assignment. Please change your selection and try again.', 'Continue');
        return false;
      } else {
        return true;
      }
    };
    $scope.openAskToSubmitFeedback = function() {
      if ($scope.isGradeValid()) {
        return $scope.showModal('Submit Feedback', 'Are you sure you want to submit feedback for this assignment submission?', 'Submit', 'Cancel', function(success) {
          if (success) {
            return $scope.okToSubmitFeedback();
          }
        });
      }
    };
    $scope.revealDocumentPasswordInstructor = function() {
      return AssignmentSubmissionService.getAssignmentDocumentPassword(((function(_this) {
        return function(data) {
          return $scope.showModal('Document Password', data.msg, 'Continue');
        };
      })(this)), ((function(_this) {
        return function(response) {
          var message, title;
          title = 'Whoops!';
          message = 'There was an error retrieving the document password.  Please try again or contact Faculty Support.';
          return $scope.showModal(title, message, 'Continue');
        };
      })(this)));
    };
    $scope.okToSubmitFeedback = function() {
      return $scope.saveFeedback();
    };
    $scope.tinymceOptions = {
      resize: false,
      menubar: false,
      statusbar: false,
      resize: false
    };
    return showErrors = function(response) {
      var msg;
      msg = AssignmentSubmissionService.error_message_from_response(response);
      return alert(msg);
    };
  };
  FeedbackGradeController.$inject = ['$scope', '$log', '$sce', 'player', 'VideosViewModel', 'AssignmentSubmissionService', 'LmsInstructor', 'AssignmentUiClock', 'LMSUiAnalyticsService', '$harmonyModal', 'Hostname', 'LmsContext'];
  return angular.module('LmsUiControllers').controller('FeedbackGradeController', FeedbackGradeController);
})();

(function() {
  this.FeedbackViewController = function($scope, $log, player, VideosViewModel, AssignmentSubmissionService) {
    $scope.feedbackVideosViewModel = VideosViewModel(player, $scope.player, 'viewport_feedback');
    $scope.userIsInstructor = true;
    return $scope.model = AssignmentSubmissionService.getCourseModuleFeedback(void 0, 'userId', (function(_this) {
      return function() {
        $scope.model.setViewOnly();
        if ($scope.model.submission.feedback != null) {
          return $scope.feedbackVideosViewModel.updateVideos($scope.model.submission.feedback.videos);
        }
      };
    })(this));
  };
  FeedbackViewController.$inject = ['$scope', '$log', 'player', 'VideosViewModel', 'AssignmentSubmissionService'];
  return angular.module('LmsUiControllers').controller('FeedbackViewController', FeedbackViewController);
})();

(function() {
  var lmsUiFilters;
  lmsUiFilters = angular.module('LmsUiFilters', []);
  return lmsUiFilters.filter('minutesSeconds', [
    'Timecode', function(timecode) {
      return function(seconds) {
        return timecode.getTimecodeFromSeconds(seconds);
      };
    }
  ]);
})();

(function() {
  var lmsUiDirectives;
  lmsUiDirectives = angular.module('LmsUiDirectives', []);
  lmsUiDirectives.directive('assignmentSubmissionsViewOnly', [
    'Hostname', '$sce', function(Hostname, $sce) {
      return {
        restrict: 'EAC',
        templateUrl: $sce.trustAsResourceUrl(Hostname + "/views/content/submission-detail-view-only.html")
      };
    }
  ]);
  lmsUiDirectives.directive('courseModuleViewFeedback', [
    'Hostname', '$sce', function(Hostname, $sce) {
      return {
        restrict: 'EAC',
        templateUrl: $sce.trustAsResourceUrl(Hostname + "/views/course_module_view_feedback.html")
      };
    }
  ]);
  lmsUiDirectives.directive('harmonyTabs', [
    'Hostname', '$sce', function(Hostname, $sce) {
      return {
        restrict: 'EAC',
        controllerAs: "tabs",
        transclude: true,
        templateUrl: $sce.trustAsResourceUrl(Hostname + "/views/harmony-tabs.html"),
        controller: function() {
          this.activeTab = 0;
          this.tabs = [];
          this.addTab = (function(_this) {
            return function(tab) {
              _this.tabs.push(tab);
              return _this.tabs.length - 1;
            };
          })(this);
          this.selectTab = (function(_this) {
            return function(index) {
              return _this.activeTab = index;
            };
          })(this);
          this.getActiveTab = function() {
            return this.tabs[this.activeTab].tabText;
          };
          this.isOC = $('[ng-app="onlineCampusApp"]').length > 0;
          return this;
        }
      };
    }
  ]);
  lmsUiDirectives.directive('harmonyTab', [
    'Hostname', '$sce', function(Hostname, $sce) {
      return {
        restrict: 'EAC',
        require: '^harmonyTabs',
        scope: {
          tabText: "="
        },
        link: function(scope, elem, attrs, tabsCtrl) {
          return tabsCtrl.addTab(scope);
        }
      };
    }
  ]);
  lmsUiDirectives.directive('aioDisplay', [
    'Hostname', '$sce', function(Hostname, $sce) {
      return {
        restrict: 'EAC',
        templateUrl: $sce.trustAsResourceUrl(Hostname + "/views/content/display.html")
      };
    }
  ]);
  lmsUiDirectives.directive('assignmentDetail', [
    'Hostname', '$sce', function(Hostname, $sce) {
      return {
        restrict: 'EAC',
        templateUrl: $sce.trustAsResourceUrl(Hostname + "/views/content/assignment-detail.html")
      };
    }
  ]);
  lmsUiDirectives.directive('submissionDetail', [
    'Hostname', '$sce', function(Hostname, $sce) {
      return {
        restrict: 'EAC',
        templateUrl: $sce.trustAsResourceUrl(Hostname + "/views/content/submission-detail.html")
      };
    }
  ]);
  lmsUiDirectives.directive('submissionDetailView', [
    'Hostname', '$sce', function(Hostname, $sce) {
      return {
        restrict: 'EAC',
        templateUrl: $sce.trustAsResourceUrl(Hostname + "/views/content/submission-detail-view.html")
      };
    }
  ]);
  lmsUiDirectives.directive('submissionView', [
    'Hostname', '$sce', function(Hostname, $sce) {
      return {
        restrict: 'EAC',
        templateUrl: $sce.trustAsResourceUrl(Hostname + "/views/submission-view.html")
      };
    }
  ]);
  lmsUiDirectives.directive('uploadVideos', [
    'Hostname', '$sce', function(Hostname, $sce) {
      return {
        restrict: 'EAC',
        templateUrl: $sce.trustAsResourceUrl(Hostname + "/views/upload-videos.html")
      };
    }
  ]);
  lmsUiDirectives.directive('uploadDocuments', [
    'Hostname', '$sce', function(Hostname, $sce) {
      return {
        restrict: 'EAC',
        templateUrl: $sce.trustAsResourceUrl(Hostname + "/views/upload-documents.html")
      };
    }
  ]);
  lmsUiDirectives.directive('submissionDetailFeedback', [
    'Hostname', '$sce', function(Hostname, $sce) {
      return {
        restrict: 'EAC',
        templateUrl: $sce.trustAsResourceUrl(Hostname + "/views/content/submission-detail-feedback.html")
      };
    }
  ]);
  lmsUiDirectives.directive('entryFocus', [
    '$parse', function($parse) {
      return function(scope, element, attrs) {
        var fn;
        fn = $parse(attrs['entryFocus']);
        return element.bind('focus', function() {
          return scope.$apply(function() {
            return fn(scope);
          });
        });
      };
    }
  ]);
  return lmsUiDirectives.directive('ngBindHtmlWithDirective', [
    '$compile', function($compile) {
      return {
        restrict: 'A',
        link: function(scope, element, attrs) {
          return scope.$watch((function() {
            return scope.$eval(attrs.ngBindHtmlWithDirective);
          }), function(value) {
            element.html(value);
            return $compile(element.contents())(scope);
          });
        }
      };
    }
  ]);
})();

(function() {
  return angular.module('LmsUiModels', []);
})();

(function() {
  var AssignmentSubmissionService, LmsContext, LmsUser, servicesModule;
  servicesModule = angular.module('LmsUiServices');
  LmsContext = (function() {
    function LmsContext() {}

    LmsContext.prototype.contextId = function() {
      if (window.i11l.LMSContext.course.assignment == null) {
        return 0;
      }
      return window.i11l.LMSContext.course.assignment.context_id;
    };

    LmsContext.prototype.cmId = function() {
      if (window.i11l.LMSContext.course.assignment == null) {
        return 0;
      }
      return window.i11l.LMSContext.course.assignment.cm_id;
    };

    LmsContext.prototype.courseId = function() {
      if (window.i11l.LMSContext.course == null) {
        return 0;
      }
      return window.i11l.LMSContext.course.id;
    };

    LmsContext.prototype.courseName = function() {
      if (window.i11l.LMSContext.course == null) {
        return 0;
      }
      return window.i11l.LMSContext.course.name;
    };

    LmsContext.prototype.courseUuid = function() {
      if (window.i11l.LMSContext.course == null) {
        return 0;
      }
      return window.i11l.LMSContext.course.uuid;
    };

    LmsContext.prototype.sectionId = function() {
      if (window.i11l.LMSContext.course == null) {
        return 0;
      }
      return window.i11l.LMSContext.course.section_id;
    };

    LmsContext.prototype.sectionUuid = function() {
      if (window.i11l.LMSContext.course == null) {
        return 0;
      }
      return window.i11l.LMSContext.course.section_uuid;
    };

    LmsContext.prototype.site = function() {
      if (window.i11l.LMSContext.site == null) {
        return 0;
      }
      return window.i11l.LMSContext.site.id;
    };

    LmsContext.prototype.courseRole = function() {
      if (window.i11l.LMSContext.course == null) {
        return 0;
      }
      return window.i11l.LMSContext.course.role;
    };

    LmsContext.prototype.groupId = function() {
      if (window.i11l.LMSContext.course == null) {
        return 0;
      }
      if (window.i11l.LMSContext.course.section_id != null) {
        return window.i11l.LMSContext.course.section_id;
      } else {
        return 0;
      }
    };

    LmsContext.prototype.userId = function() {
      return Number(window.i11l.LMSContext.user.id);
    };

    LmsContext.prototype.studentId = function() {
      if (window.i11l.LMSContext.course.assignment == null) {
        return 0;
      }
      return window.i11l.LMSContext.course.assignment.submission_student_id;
    };

    LmsContext.prototype.assignmentId = function() {
      if (window.i11l.LMSContext.course.assignment == null) {
        return 0;
      }
      return Number(window.i11l.LMSContext.course.assignment.id);
    };

    LmsContext.prototype.kalturaPartnerId = function() {
      return window.i11l.LMSContext.site.kaltura_partner_id;
    };

    return LmsContext;

  })();
  LmsUser = (function() {
    function LmsUser(isInstructor) {
      this.isInstructor = isInstructor;
      this.lmsContext = new LmsContext;
    }

    LmsUser.prototype.id = function() {
      return this.lmsContext.userId();
    };

    LmsUser.prototype.isInstructorRole = function() {
      return this.isInstructor;
    };

    LmsUser.prototype.hasId = function(id) {
      return id === this.lmsContext.userId();
    };

    return LmsUser;

  })();
  AssignmentSubmissionService = (function() {
    function AssignmentSubmissionService(submissionResource, assignmentResource, feedbackResource, submissionModel, httpSvc, log) {
      this.submissionResource = submissionResource;
      this.assignmentResource = assignmentResource;
      this.feedbackResource = feedbackResource;
      this.submissionModel = submissionModel;
      this.httpSvc = httpSvc;
      this.log = log;
      this.lmsContext = new LmsContext;
    }

    AssignmentSubmissionService.prototype.getSubmission = function(userIdGiven, defaultIdType, callback) {
      var userId;
      if (defaultIdType == null) {
        defaultIdType = 'userId';
      }
      if (userIdGiven != null) {
        userId = userIdGiven;
      } else if (defaultIdType === 'studentId') {
        userId = this.lmsContext.studentId();
      } else {
        userId = this.lmsContext.userId();
      }
      this.log.info("Getting submission for user:" + userId);
      return this.submissionModel(this.submissionResource.get({
        assignmentId: this.lmsContext.assignmentId(),
        userId: userId
      }, callback));
    };

    AssignmentSubmissionService.prototype.getCourseModuleFeedback = function(userIdGiven, defaultIdType, callback) {
      var userId;
      if (defaultIdType == null) {
        defaultIdType = 'userId';
      }
      if (userIdGiven != null) {
        userId = userIdGiven;
      } else if (defaultIdType === 'studentId') {
        userId = this.lmsContext.studentId();
      } else {
        userId = this.lmsContext.userId();
      }
      this.log.info("Getting Feedback for user:" + userId);
      return this.submissionModel(this.feedbackResource.get({
        cmId: this.lmsContext.cmId(),
        userId: userId
      }, callback));
    };

    AssignmentSubmissionService.prototype.getAssignment = function(callback) {
      this.log.info("Getting assignment:" + this.lmsContext.assignmentId());
      return this.assignmentResource.get({
        assignmentId: this.lmsContext.assignmentId(),
        sectionId: this.lmsContext.groupId()
      }, callback);
    };

    AssignmentSubmissionService.prototype.getAssignmentDocumentPassword = function(successCallback, failureCallback) {
      var url;
      this.log.info("Getting assignment document password:" + this.lmsContext.assignmentId());
      url = "/mod/assignment/type/twotorallinone/revealpass.php?action=revealpwd&context=" + (this.lmsContext.contextId());
      return this.httpSvc.post(url).success(successCallback).error(failureCallback);
    };

    AssignmentSubmissionService.prototype.save = function(model, successCallback, failureCallback) {
      return model.submission.$save({
        assignmentId: this.lmsContext.assignmentId(),
        userId: this.lmsContext.userId()
      }, successCallback, failureCallback);
    };

    AssignmentSubmissionService.prototype.saveFeedback = function(model, studentId, successCallback, failureCallback) {
      var oldgrade, params, submissionIdentifier, url;
      url = "/local/reports/grades/savegrades.php";
      submissionIdentifier = (this.lmsContext.cmId()) + "_" + studentId;
      if (!model.submission.feedback.old_grade) {
        oldgrade = '';
      } else {
        oldgrade = model.submission.feedback.old_grade;
      }
      model.submission.feedback.old_grade = model.submission.feedback.final_grade;
      params = "ajaxcall=1&courseid=" + (this.lmsContext.courseId()) + "&cmid=" + (this.lmsContext.cmId()) + "&feedback_text_" + submissionIdentifier + "=" + (escape(model.submission.feedback.text));
      params = params + ("&grade_" + submissionIdentifier + "=" + model.submission.feedback.final_grade + "&group=" + (this.lmsContext.groupId()));
      params = params + ("&maxgrade_" + submissionIdentifier + "=100&mod_" + submissionIdentifier + "=assignment&section=" + (this.lmsContext.groupId()));
      params = params + ("&oldgrade_" + submissionIdentifier + "=" + oldgrade + "&submissions[]=" + submissionIdentifier);
      return this.httpSvc.post(url, params, {
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
        }
      }).success(successCallback).error(failureCallback);
    };

    AssignmentSubmissionService.prototype.resetCompletionCache = function(model, successCallback, failureCallback) {
      var params, url;
      url = "/local/course/assignment/completion_cache_reset.php";
      params = "?courseid=" + (this.lmsContext.courseId()) + "&cmid=" + (this.lmsContext.cmId()) + "&userid=" + (this.lmsContext.userId());
      return this.httpSvc.post(url + params).success(successCallback).error(failureCallback);
    };

    AssignmentSubmissionService.prototype.error_messages = function() {
      return {
        "submission_finalized": "Submission is already submitted",
        "cannot_update_assignment": "Assignment cannot be updated.",
        "missing_files_and_text": "No file or text"
      };
    };

    AssignmentSubmissionService.prototype.error_message_from_response = function(response) {
      var i, len, messages, msg, ref, v;
      msg = "An error occurred.";
      messages = [];
      if (typeof response.data === "string") {
        msg = response.data;
      } else {
        if (typeof response.data === "object" && response.data.hasOwnProperty("error_codes")) {
          messages = [];
          ref = response.data["error_codes"];
          for (i = 0, len = ref.length; i < len; i++) {
            v = ref[i];
            messages.push(this.error_messages()[v]);
          }
          msg = messages.join(". ");
        }
      }
      return msg;
    };

    AssignmentSubmissionService.prototype.getSubmissionFileUploadUrl = function() {
      return "/mod/assignment/type/twotorallinone/upload.php?contextid=" + this.lmsContext.contextId() + "&userid=" + this.lmsContext.userId();
    };

    AssignmentSubmissionService.prototype.deleteFile = function(fileId, successCallback, failureCallback) {
      var url;
      url = '/mod/assignment/type/twotorallinone/upload.php?contextid=' + this.lmsContext.contextId() + "&userid=" + this.lmsContext.userId() + "&action=delete" + "&file=" + fileId;
      return this.httpSvc.post(url).success(successCallback).error(failureCallback);
    };

    AssignmentSubmissionService.prototype.addVideo = function(kalturaContextId, kalturaEntryId, successCallback, failureCallback) {
      var url;
      url = "/mod/assignment/type/twotorallinone/upload.php?action=attachvideo&contextid=" + (this.lmsContext.contextId()) + "&kalturaid=" + kalturaEntryId + "&kContextId=" + kalturaContextId;
      return this.httpSvc.post(url).success(successCallback).error(failureCallback);
    };

    AssignmentSubmissionService.prototype.deleteVideo = function(videoId, successCallback, failureCallback) {
      var url;
      url = '/api/assignments/' + this.lmsContext.assignmentId() + '/submissions/' + this.lmsContext.userId() + '/videos_new/' + videoId;
      return this.httpSvc["delete"](url).success(successCallback).error(failureCallback);
    };

    AssignmentSubmissionService.prototype.deleteFeedbackVideo = function(videoId, studentId, successCallback, failureCallback) {
      var url;
      url = '/api/assignments/' + this.lmsContext.assignmentId() + '/submissions/' + studentId + '/videos_new/' + videoId;
      return this.httpSvc["delete"](url).success(successCallback).error(failureCallback);
    };

    AssignmentSubmissionService.prototype.getFeedbackFileUploadUrl = function(studentId) {
      return "/local/reports/grades/upload_feedback.php?userid=" + studentId + "&cmid=" + this.lmsContext.cmId() + "&courseid=" + this.lmsContext.courseId() + "&groupid=" + this.lmsContext.groupId();
    };

    AssignmentSubmissionService.prototype.deleteFeedbackFile = function(fileId, studentId, successCallback, failureCallback) {
      var url;
      url = "/local/reports/grades/upload_feedback.php?userid=" + studentId + "&cmid=" + this.lmsContext.cmId() + "&courseid=" + this.lmsContext.courseId() + "&groupid=" + this.lmsContext.groupId() + "&action=deleteresponse" + "&file=" + fileId;
      return this.httpSvc.post(url).success(successCallback).error(failureCallback);
    };

    AssignmentSubmissionService.prototype.getFeedbackVideoRecorderUrl = function(studentId) {
      return "/local/kalturav3/krecord/krecord.php?mediaType=video&klocation=assignment_feedback_video&presspost=assignment_feedback_video&field_name=" + (this.lmsContext.cmId()) + "&ktype=" + studentId;
    };

    return AssignmentSubmissionService;

  })();
  servicesModule.factory('Assignment', [
    '$resource', '$log', function($resource, $log) {
      return $resource('/api/assignments/:assignmentId/section/:sectionId', {}, {});
    }
  ]);
  servicesModule.factory('AssignmentSubmission', [
    '$resource', '$log', function($resource, $log) {
      return $resource('/api/assignments/:assignmentId/submissions/:userId', {}, {});
    }
  ]);
  servicesModule.factory('CourseModuleFeedback', [
    '$resource', '$log', function($resource, $log) {
      return $resource('/api/course_modules/:cmId/feedback/:userId', {}, {});
    }
  ]);
  servicesModule.factory('AssignmentSubmissionService', [
    'AssignmentSubmission', 'Assignment', 'CourseModuleFeedback', 'SubmissionModel', '$http', '$log', function(AssignmentSubmission, Assignment, CourseModuleFeedback, SubmissionModel, http_svc, $log) {
      return new AssignmentSubmissionService(AssignmentSubmission, Assignment, CourseModuleFeedback, SubmissionModel, http_svc, $log);
    }
  ]);
  servicesModule.factory('VideoComment', [
    '$resource', function($resource) {
      return $resource('/api/videos/:videoId/comments/:commentId');
    }
  ]);
  servicesModule.service('Timecode', Timecode);
  servicesModule.factory('LmsInstructor', function() {
    return new LmsUser(true);
  });
  servicesModule.factory('LmsStudent', function() {
    return new LmsUser(false);
  });
  servicesModule.factory('LmsContext', function() {
    return new LmsContext();
  });
  return servicesModule.factory('AssignmentUiClock', [
    function() {
      var obj;
      obj = {};
      obj.currentTime = function() {
        return new Date().getTime();
      };
      obj.isBeforeNow = function(dateTimeString) {
        var dateMomentObj;
        dateMomentObj = window.moment(dateTimeString);
        return window.moment().valueOf() > dateMomentObj.valueOf();
      };
      obj.isAfterNow = function(dateTimeString) {
        var dateMomentObj;
        dateMomentObj = window.moment(dateTimeString);
        return window.moment().valueOf() < dateMomentObj.valueOf();
      };
      obj.formattedTime = function(dateTimeString) {
        var moment;
        moment = window.moment(dateTimeString);
        return moment._d.toString();
      };
      return obj;
    }
  ]);
})();

(function() {
  var mediaPlayer;
  mediaPlayer = angular.module('MediaPlayer', []);
  return mediaPlayer.factory('player', function() {
    return function(videoRef, finishedCallback, width, height, selector) {
      var options, player, videoElementId;
      if (width == null) {
        width = 480;
      }
      if (height == null) {
        height = 270;
      }
      if (selector == null) {
        selector = "viewport";
      }
      videoElementId = 'v' + (new Date().getTime());
      selector = '#' + selector;
      options = {
        audioOnly: false,
        width: width,
        height: height,
        videoRef: videoRef,
        startVolume: 0.65,
        autosizeProgress: true,
        controlsAppearance: 'short',
        rewindAtEnd: false,
        encodingErrorMessage: "Your video is going through final processing.  Please wait a few minutes for the processing to be completed."
      };
      player = u.video.embedVideoPlayer(selector, options, null, videoElementId);
      return player;
    };
  });
})();

(function() {
  var ModalModel, modelsModule;
  modelsModule = angular.module('LmsUiModels');
  ModalModel = (function() {
    function ModalModel(options, sce) {
      this.sce = sce;
      if (!options) {
        options = {};
      }
      this.update(options);
      this.visible = false;
      this.lastInFocus = [];
      this.focusIndex = 0;
    }

    ModalModel.prototype.update = function(options) {
      this.title = (options.title ? options.title : "");
      this.description = (options.description ? options.description : "");
      this.message = (options.message ? options.message : "");
      return this.buttons = (options.buttons ? options.buttons : {});
    };

    ModalModel.prototype.messageAsTrustedHtml = function() {
      return this.sce.trustAsHtml(this.message);
    };

    ModalModel.prototype.open = function(options) {
      this.update(options);
      this.lastInFocus = $(":focus").first();
      this.focusIndex = 0;
      this.visible = true;
      setTimeout((function() {
        $("#confirmButtons").find("button").first().focus();
      }), 200);
      return this.screenReaderMask();
    };

    ModalModel.prototype.close = function() {
      this.visible = false;
      $(this.lastInFocus).focus();
      this.update({});
      return this.unMask();
    };

    ModalModel.prototype.escape = function(event) {
      if (event.which === 27) {
        return this.close();
      }
    };

    ModalModel.prototype.keyboardNavigation = function(event) {
      var row;
      if (event.which === 9) {
        event.preventDefault();
        row = $("#confirmButtons").find("button");
      }
      if (event.shiftKey) {
        this.focusIndex -= 1;
        if (this.focusIndex < 0) {
          this.focusIndex = row.size() - 1;
        }
      } else {
        this.focusIndex += 1;
        if (this.focusIndex >= row.size()) {
          this.focusIndex = 0;
        }
      }
      $(row[this.focusIndex]).focus();
      return false;
    };

    ModalModel.prototype.screenReaderMask = function() {
      $("body").children().not("script").not("#page").attr("aria-hidden", true);
      $("#page").children().not("#page-content").attr("aria-hidden", true);
      $("#region-main-box").children().not("#region-main-wrap").attr("aria-hidden", true);
      $("#region-main-wrap").children().not("#region-main").attr("aria-hidden", true);
      $(".region-content").children().not("#lms-assignment-ui-app").attr("aria-hidden", true);
      $(".nav").attr("aria-hidden", true);
      $(".tab-content").attr("aria-hidden", true);
      return false;
    };

    ModalModel.prototype.unMask = function() {
      $("body").children().not("script").not("#page").removeAttr("aria-hidden");
      $("#page").children().not("#page-content").removeAttr("aria-hidden");
      $("#region-main-box").children().not("#region-main-wrap").removeAttr("aria-hidden");
      $("#region-main-wrap").children().not("#region-main").removeAttr("aria-hidden");
      $(".region-content").children().not("#lms-assignment-ui-app").removeAttr("aria-hidden");
      $(".nav").removeAttr("aria-hidden");
      $(".tab-content").removeAttr("aria-hidden");
      return false;
    };

    return ModalModel;

  })();
  return modelsModule.factory('ModalModel', [
    '$sce', function($sce) {
      return function(options) {
        return new ModalModel(options, $sce);
      };
    }
  ]);
})();

var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

(function() {
  var SubmissionModel, modelsModule;
  modelsModule = angular.module('LmsUiModels');
  SubmissionModel = (function() {
    function SubmissionModel(submission1, clock, sce) {
      this.submission = submission1;
      this.clock = clock;
      this.sce = sce;
      this.setGradeOptions = bind(this.setGradeOptions, this);
      this.getGradeOptions = bind(this.getGradeOptions, this);
      this.viewOnly = false;
      this.submissionStatusDescriptions = {
        "submitted": "Submitted for Grading",
        "review": "Sent for Review",
        "draft": "",
        "late": "The assignment due date has passed and late submissions are not allowed."
      };
      this.feedbackStatusDescriptions = {
        "grade": "Your submission has been graded",
        "feedback": "Your submission has feedback"
      };
      this.creditNoCredit = [
        {
          'id': "0",
          'grade': "No Grade"
        }, {
          'id': "1",
          'grade': "No Credit"
        }, {
          'id': "2",
          'grade': "Credit"
        }
      ];
      this.gradeOptions = [];
      this.hasComputedOptions = false;
    }

    SubmissionModel.prototype.getGradeOptions = function() {
      if (this.gradeOptions.length === 0) {
        return this.setGradeOptions();
      } else {
        return this.gradeOptions;
      }
    };

    SubmissionModel.prototype.setGradeOptions = function() {
      var i, index, len, options, ref, ref1, value;
      if (this.getGradeInputType() === 'multiple' && (this.submission.feedback.final_grade == null)) {
        this.submission.feedback.final_grade = 0;
      }
      if (!this.hasComputedOptions && (((ref = this.submission.feedback) != null ? ref.grade_select_options : void 0) != null)) {
        options = [];
        if (this.submission.feedback.final_grade === 0) {
          options.push({
            id: 0,
            grade: "No Grade"
          });
        }
        ref1 = this.submission.feedback.grade_select_options.split(',');
        for (index = i = 0, len = ref1.length; i < len; index = ++i) {
          value = ref1[index];
          options.push({
            id: index + 1,
            grade: value.replace('\n', '').replace('\r', '')
          });
        }
        this.gradeOptions = options;
        this.hasComputedOptions = true;
        return this.gradeOptions;
      } else {
        return this.creditNoCredit;
      }
    };

    SubmissionModel.prototype.setViewOnly = function() {
      return this.viewOnly = true;
    };

    SubmissionModel.prototype.setUser = function(user) {
      this.user = user;
    };

    SubmissionModel.prototype.isDirty = function() {
      return (this.submission.files != null) && this.submission.files.length > 0 || (this.submission.videos != null) && this.submission.videos.length > 0 || this.isSubmissionTextEmpty() === false;
    };

    SubmissionModel.prototype.isSubmissionTextEmpty = function() {
      var regex, text;
      regex = /(<([^>]+)>)/g;
      if (typeof this.submission.submission_text !== "undefined") {
        text = this.submission.submission_text.replace(regex, "");
      } else {
        text = "";
      }
      return text.length === 0;
    };

    SubmissionModel.prototype.getSubmissionTextAsTrustedHtml = function() {
      return this.sce.trustAsHtml(this.submission.submission_text);
    };

    SubmissionModel.prototype.getSubmissionFeedbackTextAsTrustedHtml = function() {
      if ((this.submission != null) && (this.submission.feedback != null)) {
        return this.sce.trustAsHtml(this.submission.feedback.text);
      }
    };

    SubmissionModel.prototype.isChanged = function() {
      return (this.submission.submission_text != null) && (this.submission.saved_submission_text != null) && this.submission.submission_text !== this.submission.saved_submission_text;
    };

    SubmissionModel.prototype.cannotSave = function() {
      return this.cannotSubmit();
    };

    SubmissionModel.prototype.cannotSendForReview = function() {
      var ref;
      return this.cannotSubmit() || !((ref = this.submission.assignment) != null ? ref.review_submissions_enabled : void 0);
    };

    SubmissionModel.prototype.cannotSubmit = function() {
      return !this.isDirty() || this.submitted() || !this.assignmentAvailable() || this.documentPasswordLocked();
    };

    SubmissionModel.prototype.classForSaveButton = function() {
      if (this.cannotSave()) {
        return "SubmissionButton disabled";
      } else {
        return "SubmissionButton";
      }
    };

    SubmissionModel.prototype.classForReviewButton = function() {
      var value;
      value = "SubmissionButton";
      if (this.cannotSendForReview()) {
        return value + " disabled";
      } else {
        return value;
      }
    };

    SubmissionModel.prototype.classForSubmitButton = function() {
      var value;
      value = "SubmissionButton action";
      if (this.cannotSubmit()) {
        return value + " disabled";
      } else {
        return value;
      }
    };

    SubmissionModel.prototype.classForShowPasswordButton = function() {
      if (this.assignmentHasDocumentPassword() && !this.documentPasswordAlreadyRevealed()) {
        return "SubmissionButton action";
      } else {
        return "SubmissionButton";
      }
    };

    SubmissionModel.prototype.canUploadFiles = function() {
      return (!this.viewOnly) && (this.submission.files != null) && this.submission.files.length < this.submission.assignment.max_files && (!this.submitted()) && this.assignmentAvailable() && this.submission.assignment.file_upload_enabled && !this.documentPasswordLocked();
    };

    SubmissionModel.prototype.maxFileLimitMet = function() {
      return (this.submission.files != null) && this.submission.files.length >= this.submission.assignment.max_files;
    };

    SubmissionModel.prototype.maxVideoLimitMet = function() {
      return (this.submission.videos != null) && this.submission.videos.length >= this.submission.assignment.max_videos;
    };

    SubmissionModel.prototype.canUploadVideos = function() {
      return (!this.viewOnly) && (this.submission.videos != null) && this.submission.videos.length < this.submission.assignment.max_videos && (!this.submitted()) && this.assignmentAvailable() && this.submission.assignment.video_upload_enabled && !this.documentPasswordLocked() && !this.submission.assignment.use_academic_product;
    };

    SubmissionModel.prototype.canRemoveVideos = function() {
      return (!this.viewOnly) && !this.submitted() && this.assignmentAvailable();
    };

    SubmissionModel.prototype.canDeleteFiles = function(file) {
      return (!this.viewOnly) && (!this.submitted()) && this.assignmentAvailable() && (!file.locked);
    };

    SubmissionModel.prototype.canEditComments = function() {
      var ref;
      return (this.submission.assignment != null) && this.submission.assignment.video_commenting_enabled && (!this.submitted() || ((ref = this.user) != null ? ref.isInstructorRole() : void 0));
    };

    SubmissionModel.prototype.canShowComments = function() {
      return (this.submission.assignment != null) && this.submission.assignment.video_commenting_enabled;
    };

    SubmissionModel.prototype.canDeleteComment = function(comment) {
      var ref, ref1;
      return (this.submission.assignment != null) && this.submission.assignment.video_commenting_enabled && (!this.submitted() || ((ref = this.user) != null ? ref.isInstructorRole() : void 0)) && ((ref1 = this.user) != null ? ref1.hasId(comment.user.id) : void 0);
    };

    SubmissionModel.prototype.canSubmitText = function() {
      return (this.submission.assignment != null) && this.submission.assignment.text_submission_enabled;
    };

    SubmissionModel.prototype.isViewOnly = function() {
      return this.viewOnly;
    };

    SubmissionModel.prototype.canDeleteFeedbackVideo = function() {
      return (this.user != null) && this.user.isInstructorRole();
    };

    SubmissionModel.prototype.canUploadFeedbackVideo = function() {
      return (this.user != null) && this.user.isInstructorRole() && (this.submission != null) && this.submission.feedback.videos.length === 0;
    };

    SubmissionModel.prototype.isGradeValid = function() {
      return (this.submission.feedback.final_grade === null) || ((/^[0-9]*$/.test(this.submission.feedback.final_grade) || (/^[0-9\.]*$/.test(this.submission.feedback.final_grade) && this.submission.feedback.grade_type === "decimal")) && (Number(this.submission.feedback.final_grade)) <= this.submission.feedback.max_grade);
    };

    SubmissionModel.prototype.isPastDueDate = function() {
      return (this.submission.assignment.time_end != null) && this.clock.isBeforeNow(this.submission.assignment.time_end);
    };

    SubmissionModel.prototype.showDueDate = function() {
      return (this.submission.assignment != null) && this.submission.assignment.time_end;
    };

    SubmissionModel.prototype.canGradeAssignment = function() {
      return (this.submission.assignment != null) && (this.submitted() || (this.submission.assignment.time_end == null) || this.isPastDueDate());
    };

    SubmissionModel.prototype.statusDescription = function() {
      if (!this.submitted() && this.submissionsNoLongerAllowed()) {
        this.submission.status = 'late';
      }
      if ((this.submission.status != null) && this.submission.status !== "") {
        return this.submissionStatusDescriptions[this.submission.status];
      } else {
        return "";
      }
    };

    SubmissionModel.prototype.lastSavedTime = function() {
      if ((this.submission.status != null) && this.submission.status !== "" && (this.submission.timemodified != null)) {
        return "Last Saved on " + this.getFormattedModificationTime(this.submission.timemodified);
      } else if (this.isChanged()) {
        return "Draft Not Yet Saved";
      } else {
        return "";
      }
    };

    SubmissionModel.prototype.getFormattedModificationTime = function(dateTimeString) {
      return this.clock.formattedTime(dateTimeString);
    };

    SubmissionModel.prototype.submissionsNotYetAllowed = function() {
      var dateTimeString;
      if (this.submission.assignment != null) {
        dateTimeString = this.submission.assignment.time_start;
        return this.clock.isAfterNow(dateTimeString);
      } else {
        return false;
      }
    };

    SubmissionModel.prototype.submissionsNoLongerAllowed = function() {
      var dateTimeString;
      if (this.submission.assignment != null) {
        dateTimeString = this.submission.assignment.time_end;
        return this.submission.assignment.prevent_late_submissions && (this.submission.assignment.time_end != null) && this.clock.isBeforeNow(dateTimeString);
      } else {
        return false;
      }
    };

    SubmissionModel.prototype.assignmentAvailable = function() {
      return (!this.submissionsNotYetAllowed()) && (!this.submissionsNoLongerAllowed());
    };

    SubmissionModel.prototype.assignmentHasDocumentPassword = function() {
      if ((this.submission.assignment != null) && (this.submission.assignment.document_password_enabled != null)) {
        return this.submission.assignment.document_password_enabled;
      } else {
        return false;
      }
    };

    SubmissionModel.prototype.documentPasswordAlreadyRevealed = function() {
      return (this.submission.document_password_revealed != null) && this.submission.document_password_revealed;
    };

    SubmissionModel.prototype.documentPasswordLocked = function() {
      return this.assignmentHasDocumentPassword() && !this.documentPasswordAlreadyRevealed();
    };

    SubmissionModel.prototype.submitted = function(defaultValue) {
      var submitted;
      if (defaultValue == null) {
        defaultValue = false;
      }
      submitted = defaultValue;
      if (this.submission.$resolved) {
        submitted = this.submission.status === 'submitted';
      }
      return submitted;
    };

    SubmissionModel.prototype.submissionHasFeedback = function() {
      return (this.submission.feedback != null) && (((this.submission.feedback.files != null) && this.submission.feedback.files.length > 0) || ((this.submission.feedback.videos != null) && this.submission.feedback.videos.length > 0) || ((this.submission.feedback.text != null) && this.submission.feedback.text !== ""));
    };

    SubmissionModel.prototype.submissionHasGrade = function() {
      return (this.submission.feedback != null) && (this.submission.feedback.final_grade != null);
    };

    SubmissionModel.prototype.getCustomGradeOptions = function() {
      var i, index, len, options, ref, ref1, value;
      if (this.getGradeInputType() === 'multiple' && (this.submission.feedback != null) && (((ref = this.submission.feedback) != null ? ref.final_grade : void 0) == null)) {
        this.submission.feedback.final_grade = 0;
      }
      options = [];
      if (this.submission.feedback.final_grade === 0) {
        options.push({
          id: 0,
          grade: "No Grade"
        });
      }
      ref1 = this.submission.feedback.grade_select_options.split(',');
      for (index = i = 0, len = ref1.length; i < len; index = ++i) {
        value = ref1[index];
        options.push({
          id: index + 1,
          grade: value.replace('\n', '').replace('\r', '')
        });
      }
      return options;
    };

    SubmissionModel.prototype.getGradeInputType = function() {
      if (this.submission.feedback != null) {
        return this.submission.feedback.grade_type;
      } else {
        return "nograde";
      }
    };

    SubmissionModel.prototype.getCreditNoCredit = function() {
      return this.creditNoCredit;
    };

    SubmissionModel.prototype.getGradeValueForCreditNoCredit = function(gradeIndex) {
      var item, value;
      value = (function() {
        var i, len, ref, results;
        ref = this.creditNoCredit;
        results = [];
        for (i = 0, len = ref.length; i < len; i++) {
          item = ref[i];
          if (item.id === String(gradeIndex)) {
            results.push(item.grade);
          }
        }
        return results;
      }).call(this);
      if (value.length > 0) {
        return value[0];
      } else {
        return "";
      }
    };

    SubmissionModel.prototype.displayGradeValue = function() {
      var gradeType, ref;
      gradeType = this.getGradeInputType();
      if (gradeType === 'nograde') {
        return '';
      }
      if (gradeType === 'single' || gradeType === 'decimal') {
        return this.submission.feedback.final_grade + ' / ' + this.submission.feedback.max_grade;
      }
      if (gradeType === 'multiple') {
        if (((ref = this.submission.feedback.grade_select_options) != null ? ref.split(',').length : void 0) > 0) {
          return this.submission.feedback.grade_select_options.replace('\n', '').replace('\r', '').split(',')[this.submission.feedback.final_grade - 1];
        } else {
          return this.getGradeValueForCreditNoCredit(this.submission.feedback.final_grade);
        }
      }
    };

    SubmissionModel.prototype.submissionHasFeedbackOrGrade = function() {
      return this.submissionHasFeedback() || this.submissionHasGrade();
    };

    SubmissionModel.prototype.feedbackStatus = function() {
      if (this.submissionHasGrade()) {
        return this.feedbackStatusDescriptions["grade"];
      } else if (this.submissionHasFeedback()) {
        return this.feedbackStatusDescriptions["feedback"];
      } else {
        return "";
      }
    };

    return SubmissionModel;

  })();
  return modelsModule.factory('SubmissionModel', [
    'AssignmentUiClock', '$sce', function(AssignmentUiClock, $sce) {
      return function(submission) {
        return new SubmissionModel(submission, AssignmentUiClock, $sce);
      };
    }
  ]);
})();

(function() {
  this.SubmissionViewController = function($scope, $log, $sce, player, VideosViewModel, AssignmentSubmissionService, LmsInstructor) {
    $scope.videosViewModel = VideosViewModel(player, $scope.player, 'viewport_submissions');
    $scope.userIsInstructor = false;
    $scope.assignment = AssignmentSubmissionService.getAssignment((function(_this) {
      return function() {
        $scope.userIsInstructor = $scope.assignment.instructor;
        return $scope.model = AssignmentSubmissionService.getSubmission(void 0, 'studentId', function() {
          $scope.model.setViewOnly();
          $scope.model.setUser(LmsInstructor);
          return $scope.videosViewModel.updateVideos($scope.model.submission.videos);
        });
      };
    })(this));
    return $scope.introAsTrustedHtml = function() {
      return $sce.trustAsHtml(this.assignment.intro);
    };
  };
  SubmissionViewController.$inject = ['$scope', '$log', '$sce', 'player', 'VideosViewModel', 'AssignmentSubmissionService', 'LmsInstructor'];
  return angular.module('LmsUiControllers').controller('SubmissionViewController', SubmissionViewController);
})();

(function() {
  var VideosViewModel, modelsModule;
  modelsModule = angular.module('LmsUiModels');
  VideosViewModel = (function() {
    function VideosViewModel(videoPlayer1, currentPlayer1, selector1, commentSvc, clock, lmsContext) {
      var assignmentId, studentId;
      this.videoPlayer = videoPlayer1;
      this.currentPlayer = currentPlayer1;
      this.selector = selector1;
      this.commentSvc = commentSvc;
      this.clock = clock;
      this.lmsContext = lmsContext;
      this.kalturaPartnerId = this.lmsContext.kalturaPartnerId();
      this.videos = [];
      this.commentText = '';
      studentId = this.lmsContext.studentId();
      assignmentId = this.lmsContext.assignmentId();
      if (typeof studentId === "undefined") {
        studentId = this.lmsContext.userId();
      }
      this.selector = this.selector + '_' + studentId + '_' + assignmentId;
    }

    VideosViewModel.prototype.selectedVideoNumber = function() {
      return this.selectedVideoIndex + 1;
    };

    VideosViewModel.prototype.count = function() {
      return this.videos.length;
    };

    VideosViewModel.prototype.hasVideos = function() {
      return this.count() > 0;
    };

    VideosViewModel.prototype.getSelector = function() {
      return this.selector;
    };

    VideosViewModel.prototype.updateVideos = function(videos, test) {
      if (test == null) {
        test = false;
      }
      this.videos = videos;
      if (this.count() > 0) {
        return this.setSelectedVideo(0, test);
      }
    };

    VideosViewModel.prototype.setSelectedVideo = function(index, test) {
      if (test == null) {
        test = false;
      }
      this.selectedVideoIndex = index;
      this.selectedVideo = this.videos[this.selectedVideoIndex];
      this.videoRef = "kaltura://" + this.kalturaPartnerId + "/" + this.selectedVideo.entry_id;
      this.updateComments(this.selectedVideo.id);
      if (test || $("#" + this.selector).length > 0) {
        return this.currentPlayer = this.videoPlayer(this.videoRef, {}, 480, 270, this.selector);
      } else {
        return setTimeout(((function(_this) {
          return function() {
            return _this.setSelectedVideo(index);
          };
        })(this)), 1000);
      }
    };

    VideosViewModel.prototype.addCommentCallback = function() {
      this.commentText = '';
      return this.updateComments(this.selectedVideo.id);
    };

    VideosViewModel.prototype.updateComments = function(videoId) {
      return this.comments = this.fetchComments(videoId);
    };

    VideosViewModel.prototype.addCommentToSelectedVideo = function() {
      var comment;
      comment = new this.commentSvc;
      comment.user_id = this.lmsContext.userId();
      comment.text = this.commentText;
      if (this.commentText) {
        comment.timecode = this.currentPlayer.currentTime.seconds;
        return comment.$save({
          videoId: this.selectedVideo.id
        }, (function(_this) {
          return function() {
            return _this.addCommentCallback();
          };
        })(this));
      }
    };

    VideosViewModel.prototype.deleteComment = function(comment) {
      return this.commentSvc.remove({
        videoId: this.selectedVideo.id,
        commentId: comment.id
      }, (function(_this) {
        return function() {
          return _this.updateComments(_this.selectedVideo.id);
        };
      })(this));
    };

    VideosViewModel.prototype.hasPreviousVideos = function() {
      return this.selectedVideoIndex > 0;
    };

    VideosViewModel.prototype.noPreviousVideos = function() {
      return !this.hasPreviousVideos();
    };

    VideosViewModel.prototype.hasNextVideos = function() {
      return this.selectedVideoIndex < this.videos.length - 1;
    };

    VideosViewModel.prototype.noNextVideos = function() {
      return !this.hasNextVideos();
    };

    VideosViewModel.prototype.previousVideo = function() {
      if (this.hasPreviousVideos()) {
        return this.setSelectedVideo(this.selectedVideoIndex - 1);
      }
    };

    VideosViewModel.prototype.nextVideo = function() {
      if (this.hasNextVideos()) {
        return this.setSelectedVideo(this.selectedVideoIndex + 1);
      }
    };

    VideosViewModel.prototype.getSelectedVideoTitle = function() {
      if (this.selectedVideo) {
        return this.selectedVideo.title;
      } else {
        return '';
      }
    };

    VideosViewModel.prototype.getPreviousClass = function() {
      if (this.hasPreviousVideos()) {
        return 'previous';
      } else {
        return 'previous disabled';
      }
    };

    VideosViewModel.prototype.getNextClass = function() {
      if (this.hasNextVideos()) {
        return 'next';
      } else {
        return 'next disabled';
      }
    };

    VideosViewModel.prototype.removeCurrentVideo = function() {
      this.videos.splice(this.selectedVideoIndex, 1);
      this.selectedVideoIndex = this.selectedVideoIndex - 1;
      if (this.selectedVideoIndex < 0) {
        this.selectedVideoIndex = 0;
      }
      if (this.count() > 0) {
        return this.setSelectedVideo(this.selectedVideoIndex);
      } else {
        return this.selectedVideoIndex = void 0;
      }
    };

    VideosViewModel.prototype.fetchComments = function(id) {
      var timestamp;
      timestamp = this.clock.currentTime();
      return this.comments = this.commentSvc.query({
        videoId: id,
        timestamp: timestamp
      });
    };

    VideosViewModel.prototype.pausePlayer = function() {
      if (this.currentPlayer != null) {
        return this.currentPlayer.pause();
      }
    };

    return VideosViewModel;

  })();
  return modelsModule.factory('VideosViewModel', [
    'VideoComment', 'AssignmentUiClock', 'LmsContext', function(VideoComment, AssignmentUiClock, LmsContext) {
      return function(videoPlayer, currentPlayer, selector) {
        return new VideosViewModel(videoPlayer, currentPlayer, selector, VideoComment, AssignmentUiClock, LmsContext);
      };
    }
  ]);
})();

var __bind=function(a,b){return function(){return a.apply(b,arguments)}};window.u=window.u||{},window.u.analytics_wrapper=window.u.analytics_wrapper||{},window.u.analytics_wrapper.AnalyticsService=function(){function a(){this.page=__bind(this.page,this),this.track=__bind(this.track,this),this.identify=__bind(this.identify,this),this.getUserId=__bind(this.getUserId,this),this.setUserId=__bind(this.setUserId,this),this.ready=__bind(this.ready,this);var a;return window.u.analytics_wrapper._instance?window.u.analytics_wrapper._instance:(window.u.analytics_wrapper._instance=this,window.u.segment_io_token?(window.u.analytics_wrapper.VisitorProvider(window.u.visitorjs_key),window.u.analytics_wrapper.SegmentProvider(window.u.segment_io_token),void this.page(window.u.analytics_wrapper.initial_page_properties)):(null!=(a=window.console)&&a.log("Analytics not configured."),void(window.analytics=window.analytics||[])))}return a.prototype.ready=function(a,b){var c,d,e,f,g,h=this;return null==b&&(b=0),d=window.u.visitorjs_key&&!window.visitor,c=!window.analytics.initialized,e=3e3>b,d&&c&&e?(g=10,f=function(){return h.ready(a,b+g)},setTimeout(f,g)):window.u.segment_io_token?a():void 0},a.prototype.setUserId=function(a){return this._uuid=a},a.prototype.getUserId=function(){var a,b;return this._uuid||(this._uuid=("undefined"!=typeof window&&null!==window&&null!=(a=window.analytics)&&null!=(b=a._user)?b.anonymousId():void 0)||""),this._uuid},a.prototype.identify=function(a,b){var c=this;return this.ready(function(){return void 0===b&&(b=a,a=c._uuid),c.add_visitor_js_data_to_properties(b),window.analytics.identify(a,b)})},a.prototype.track=function(a,b){var c=this;return this.ready(function(){return c.add_visitor_js_data_to_properties(b),window.analytics.track(a,b)})},a.prototype.page=function(a){var b=this;return this.ready(function(){return a=a||{},b.add_visitor_js_data_to_properties(a),window.analytics.page(a)})},a.prototype.add_visitor_js_data_to_properties=function(a){return window.visitor?(a.ip_address=window.visitor.ip.address,a.continent_code=window.visitor.geo.continentCode,a.continent_name=window.visitor.geo.continentName,a.country_code=window.visitor.geo.countryCode,a.country_name=window.visitor.geo.countryName,a.city=window.visitor.geo.city,a.postal_code=window.visitor.geo.postalCode,a.latitude=window.visitor.geo.coordinates.latitude,a.longitude=window.visitor.geo.coordinates.longitude,a.locale_language_code=window.visitor.locale.languageCode,a.locale_country_code=window.visitor.locale.countryCode,a.browser_engine=window.visitor.browser.engine.name,a.browser_engine_major_version=window.visitor.browser.engine.versionMajor,a.browser_engine_minor_version=window.visitor.browser.engine.versionMinor,a.browser=window.visitor.browser.name,a.browser_major_version=window.visitor.browser.versionMajor,a.browser_minor_version=window.visitor.browser.versionMinor,a.flash_enabled=window.visitor.browser.plugins.flash.enabled,a.flash_version_major=window.visitor.browser.plugins.flash.versionMajor,a.flash_version_minor=window.visitor.browser.plugins.flash.versionMinor,a.flash_version_patch=window.visitor.browser.plugins.flash.versionRevision,a.silverlight_enabled=window.visitor.browser.plugins.silverlight.enabled,a.silverlight_version_major=window.visitor.browser.plugins.silverlight.versionMajor,a.silverlight_version_minor=window.visitor.browser.plugins.silverlight.versionMinor,a.java_enabled=window.visitor.browser.plugins.java.enabled,a.os_name=window.visitor.os.name,a.os_version=window.visitor.os.version,a.screen_width=window.visitor.device.screen.width,a.screen_height=window.visitor.device.screen.height):void 0},a}(),window.u.analytics_wrapper.VisitorProvider=function(){function a(a){var b,c,d,e;return window.visitor?void(null!=(d=window.console)&&d.log("Visitor JS already loaded")):(b=document.createElement("script"),b.type="text/javascript",b.src="https://www.visitorjs.com/visitor.js?key="+a,b.onload=function(a){var b;return null!=(b=window.console)?b.log("Loaded visitor js"):void 0},null!=(e=window.console)&&e.log("Loading visitor js"),c=window.document.getElementsByTagName("script"),void(c&&c[0]?c[0].parentNode.insertBefore(b,c[0]):window.document.body.appendChild(b)))}return a}(),window.u.analytics_wrapper.SegmentProvider=function(){function a(a){var b,c,d,e,f;if(b=window.analytics=window.analytics||[],b.initialize||b.invoked)return b;for(b.invoked=!0,b.methods=["trackSubmit","trackClick","trackLink","trackForm","pageview","identify","group","track","ready","alias","page","user","once","off","on"],b.factory=function(a){var c;return c=function(){var c;return c=Array.prototype.slice.call(arguments),c.unshift(a),b.push(c),b}},f=b.methods,d=0,e=f.length;e>d;d++)c=f[d],b[c]=b.factory(c);return b.load=function(a){var b,c;return c=document.createElement("script"),c.type="text/javascript",c.async=!0,c.src="https://cdn.segment.com/analytics.js/v1/"+a+"/analytics.min.js",b=document.getElementsByTagName("script")[0],b.parentNode.insertBefore(c,b)},b.SNIPPET_VERSION="3.0.1",b.load(a),b}return a}();
angular.module("ivpusic.cookie",["ipCookie"]),angular.module("ipCookie",["ng"]).factory("ipCookie",["$document",function(e){"use strict";function i(e){try{return decodeURIComponent(e)}catch(i){}}return function(){function t(t,n,r){var o,s,p,u,a,c,d,x,f;r=r||{};var g=r.decode||i,l=r.encode||encodeURIComponent;if(void 0!==n)return n="object"==typeof n?JSON.stringify(n):n+"","number"==typeof r.expires&&(f=r.expires,r.expires=new Date,-1===f?r.expires=new Date("Thu, 01 Jan 1970 00:00:00 GMT"):void 0!==r.expirationUnit?"hours"===r.expirationUnit?r.expires.setHours(r.expires.getHours()+f):"minutes"===r.expirationUnit?r.expires.setMinutes(r.expires.getMinutes()+f):"seconds"===r.expirationUnit?r.expires.setSeconds(r.expires.getSeconds()+f):"milliseconds"===r.expirationUnit?r.expires.setMilliseconds(r.expires.getMilliseconds()+f):r.expires.setDate(r.expires.getDate()+f):r.expires.setDate(r.expires.getDate()+f)),e[0].cookie=[l(t),"=",l(n),r.expires?"; expires="+r.expires.toUTCString():"",r.path?"; path="+r.path:"",r.domain?"; domain="+r.domain:"",r.secure?"; secure":""].join("");for(s=[],x=e[0].cookie,x&&(s=x.split("; ")),o={},d=!1,p=0;s.length>p;++p)if(s[p]){if(u=s[p],a=u.indexOf("="),c=u.substring(0,a),n=g(u.substring(a+1)),angular.isUndefined(n))continue;if(void 0===t||t===c){try{o[c]=JSON.parse(n)}catch(m){o[c]=n}if(t===c)return o[c];d=!0}}return d&&void 0===t?o:void 0}return t.remove=function(e,i){var n=void 0!==t(e);return n&&(i||(i={}),i.expires=-1,t(e,"",i)),n},t}()}]);
/**
 * angular-timer - v1.1.5 - 2014-06-14 7:52 AM
 * https://github.com/siddii/angular-timer
 *
 * Copyright (c) 2014 Siddique Hameed
 * Licensed MIT <https://github.com/siddii/angular-timer/blob/master/LICENSE.txt>
 */
var timerModule=angular.module("timer",[]).directive("timer",["$compile",function(a){return{restrict:"EAC",replace:!1,scope:{interval:"=interval",startTimeAttr:"=startTime",endTimeAttr:"=endTime",countdownattr:"=countdown",autoStart:"&autoStart",maxTimeUnit:"="},controller:["$scope","$element","$attrs","$timeout",function(b,c,d,e){function f(){b.timeoutId&&clearTimeout(b.timeoutId)}function g(){b.maxTimeUnit&&"day"!==b.maxTimeUnit?"second"===b.maxTimeUnit?(b.seconds=Math.floor(b.millis/1e3),b.minutes=0,b.hours=0,b.days=0,b.months=0,b.years=0):"minute"===b.maxTimeUnit?(b.seconds=Math.floor(b.millis/1e3%60),b.minutes=Math.floor(b.millis/6e4),b.hours=0,b.days=0,b.months=0,b.years=0):"hour"===b.maxTimeUnit?(b.seconds=Math.floor(b.millis/1e3%60),b.minutes=Math.floor(b.millis/6e4%60),b.hours=Math.floor(b.millis/36e5),b.days=0,b.months=0,b.years=0):"month"===b.maxTimeUnit?(b.seconds=Math.floor(b.millis/1e3%60),b.minutes=Math.floor(b.millis/6e4%60),b.hours=Math.floor(b.millis/36e5%24),b.days=Math.floor(b.millis/36e5/24%30),b.months=Math.floor(b.millis/36e5/24/30),b.years=0):"year"===b.maxTimeUnit&&(b.seconds=Math.floor(b.millis/1e3%60),b.minutes=Math.floor(b.millis/6e4%60),b.hours=Math.floor(b.millis/36e5%24),b.days=Math.floor(b.millis/36e5/24%30),b.months=Math.floor(b.millis/36e5/24/30%12),b.years=Math.floor(b.millis/36e5/24/365)):(b.seconds=Math.floor(b.millis/1e3%60),b.minutes=Math.floor(b.millis/6e4%60),b.hours=Math.floor(b.millis/36e5%24),b.days=Math.floor(b.millis/36e5/24),b.months=0,b.years=0),b.secondsS=1==b.seconds?"":"s",b.minutesS=1==b.minutes?"":"s",b.hoursS=1==b.hours?"":"s",b.daysS=1==b.days?"":"s",b.monthsS=1==b.months?"":"s",b.yearsS=1==b.years?"":"s",b.sseconds=b.seconds<10?"0"+b.seconds:b.seconds,b.mminutes=b.minutes<10?"0"+b.minutes:b.minutes,b.hhours=b.hours<10?"0"+b.hours:b.hours,b.ddays=b.days<10?"0"+b.days:b.days,b.mmonths=b.months<10?"0"+b.months:b.months,b.yyears=b.years<10?"0"+b.years:b.years}"function"!=typeof String.prototype.trim&&(String.prototype.trim=function(){return this.replace(/^\s+|\s+$/g,"")}),b.autoStart=d.autoStart||d.autostart,c.append(0===c.html().trim().length?a("<span>{{millis}}</span>")(b):a(c.contents())(b)),b.startTime=null,b.endTime=null,b.timeoutId=null,b.countdown=b.countdownattr&&parseInt(b.countdownattr,10)>=0?parseInt(b.countdownattr,10):void 0,b.isRunning=!1,b.$on("timer-start",function(){b.start()}),b.$on("timer-resume",function(){b.resume()}),b.$on("timer-stop",function(){b.stop()}),b.$on("timer-clear",function(){b.clear()}),b.$on("timer-set-countdown",function(a,c){b.countdown=c}),b.start=c[0].start=function(){b.startTime=b.startTimeAttr?new Date(b.startTimeAttr):new Date,b.endTime=b.endTimeAttr?new Date(b.endTimeAttr):null,b.countdown||(b.countdown=b.countdownattr&&parseInt(b.countdownattr,10)>0?parseInt(b.countdownattr,10):void 0),f(),h(),b.isRunning=!0},b.resume=c[0].resume=function(){f(),b.countdownattr&&(b.countdown+=1),b.startTime=new Date-(b.stoppedTime-b.startTime),h(),b.isRunning=!0},b.stop=b.pause=c[0].stop=c[0].pause=function(){var a=b.timeoutId;b.clear(),b.$emit("timer-stopped",{timeoutId:a,millis:b.millis,seconds:b.seconds,minutes:b.minutes,hours:b.hours,days:b.days})},b.clear=c[0].clear=function(){b.stoppedTime=new Date,f(),b.timeoutId=null,b.isRunning=!1},c.bind("$destroy",function(){f(),b.isRunning=!1}),b.countdownattr?(b.millis=1e3*b.countdownattr,b.addCDSeconds=c[0].addCDSeconds=function(a){b.countdown+=a,b.$digest(),b.isRunning||b.start()},b.$on("timer-add-cd-seconds",function(a,c){e(function(){b.addCDSeconds(c)})}),b.$on("timer-set-countdown-seconds",function(a,c){b.isRunning||b.clear(),b.countdown=c,b.millis=1e3*c,g()})):b.millis=0,g();var h=function(){b.millis=new Date-b.startTime;var a=b.millis%1e3;return b.endTimeAttr&&(b.millis=b.endTime-new Date,a=b.interval-b.millis%1e3),b.countdownattr&&(b.millis=1e3*b.countdown),b.millis<0?(b.stop(),b.millis=0,void g()):(g(),b.timeoutId=setTimeout(function(){h(),b.$digest()},b.interval-a),b.$emit("timer-tick",{timeoutId:b.timeoutId,millis:b.millis}),void(b.countdown>0?b.countdown--:b.countdown<=0&&b.stop()))};(void 0===b.autoStart||b.autoStart===!0)&&b.start()}]}}]);"undefined"!=typeof module&&"undefined"!=typeof exports&&module.exports===exports&&(module.exports=timerModule);
/**
 * angular-strap
 * @version v2.3.12 - 2017-01-26
 * @link http://mgcrea.github.io/angular-strap
 * @author Olivier Louvignes <olivier@mg-crea.com> (https://github.com/mgcrea)
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */
!function(e,t,n){'use strict';function a(e,n,a,o,i,r){function l(e,n){return angular.element((n||t).querySelectorAll(e))}function s(e){return u[e]?u[e]:u[e]=n.get(e,{cache:r}).then(function(e){return e.data})}this.compile=function(t){t.template&&/\.html$/.test(t.template)&&(console.warn('Deprecated use of `template` option to pass a file. Please use the `templateUrl` option instead.'),t.templateUrl=t.template,t.template='');var n=t.templateUrl,r=t.template||'',u=t.controller,c=t.controllerAs,d=t.resolve||{},f=t.locals||{},p=t.transformTemplate||angular.identity,g=t.bindToController;if(angular.forEach(d,function(e,t){angular.isString(e)?d[t]=a.get(e):d[t]=a.invoke(e)}),angular.extend(d,f),r)d.$template=e.when(r);else{if(!n)throw new Error('Missing `template` / `templateUrl` option.');d.$template=s(n)}return t.titleTemplate&&(d.$template=e.all([d.$template,s(t.titleTemplate)]).then(function(e){var t=angular.element(e[0]);return l('[ng-bind="title"]',t[0]).removeAttr('ng-bind').html(e[1]),t[0].outerHTML})),t.contentTemplate&&(d.$template=e.all([d.$template,s(t.contentTemplate)]).then(function(e){var n=angular.element(e[0]),a=l('[ng-bind="content"]',n[0]).removeAttr('ng-bind').html(e[1]);return t.templateUrl||a.next().remove(),n[0].outerHTML})),e.all(d).then(function(e){var n=p(e.$template);t.html&&(n=n.replace(/ng-bind="/gi,'ng-bind-html="'));var a=angular.element('<div>').html(n.trim()).contents(),r=o(a);return{locals:e,element:a,link:function(t){if(e.$scope=t,u){var n=i(u,e,!0);g&&angular.extend(n.instance,e);var o=angular.isObject(n)?n:n();a.data('$ngControllerController',o),a.children().data('$ngControllerController',o),c&&(t[c]=o)}return r.apply(null,arguments)}}})};var u={}}a.$inject=['$q','$http','$injector','$compile','$controller','$templateCache'],angular.module('mgcrea.ngStrap.typeahead',['mgcrea.ngStrap.tooltip','mgcrea.ngStrap.helpers.parseOptions']).provider('$typeahead',function(){var e=this.defaults={animation:'am-fade',prefixClass:'typeahead',prefixEvent:'$typeahead',placement:'bottom-left',templateUrl:'typeahead/typeahead.tpl.html',trigger:'focus',container:!1,keyboard:!0,html:!1,delay:0,minLength:1,filter:'bsAsyncFilter',limit:6,autoSelect:!1,comparator:'',trimValue:!0};this.$get=['$window','$rootScope','$tooltip','$$rAF','$timeout',function(t,n,a,o,i){function r(t,n,r){var s={},u=angular.extend({},e,r);s=a(t,u);var c=r.scope,d=s.$scope;d.$resetMatches=function(){d.$matches=[],d.$activeIndex=u.autoSelect?0:-1},d.$resetMatches(),d.$activate=function(e){d.$$postDigest(function(){s.activate(e)})},d.$select=function(e,t){d.$$postDigest(function(){s.select(e)})},d.$isVisible=function(){return s.$isVisible()},s.update=function(e){d.$matches=e,d.$activeIndex>=e.length&&(d.$activeIndex=u.autoSelect?0:-1),l(d),o(s.$applyPlacement)},s.activate=function(e){d.$activeIndex=e},s.select=function(e){if(e!==-1){var t=d.$matches[e].value;n.$setViewValue(t),n.$render(),d.$resetMatches(),c&&c.$digest(),d.$emit(u.prefixEvent+'.select',t,e,s),angular.isDefined(u.onSelect)&&angular.isFunction(u.onSelect)&&u.onSelect(t,e,s)}},s.$isVisible=function(){return u.minLength&&n?d.$matches.length&&angular.isString(n.$viewValue)&&n.$viewValue.length>=u.minLength:!!d.$matches.length},s.$getIndex=function(e){var t;for(t=d.$matches.length;t--&&!angular.equals(d.$matches[t].value,e););return t},s.$onMouseDown=function(e){e.preventDefault(),e.stopPropagation()},s.$$updateScrollTop=function(e,t){if(t>-1&&t<e.children.length){var n=e.children[t],a=n.offsetTop,o=n.offsetTop+n.clientHeight,i=e.scrollTop,r=e.scrollTop+e.clientHeight;o>=i&&a<i?e.scrollTop=Math.max(0,e.scrollTop-e.clientHeight):o>r&&(e.scrollTop=a)}},s.$onKeyDown=function(e){/(38|40|13)/.test(e.keyCode)&&(!s.$isVisible()||13===e.keyCode&&d.$activeIndex===-1||(e.preventDefault(),e.stopPropagation()),13===e.keyCode&&d.$matches.length?s.select(d.$activeIndex):38===e.keyCode&&d.$activeIndex>0?d.$activeIndex--:40===e.keyCode&&d.$activeIndex<d.$matches.length-1?d.$activeIndex++:angular.isUndefined(d.$activeIndex)&&(d.$activeIndex=0),s.$$updateScrollTop(s.$element[0],d.$activeIndex),d.$digest())};var f=s.show;s.show=function(){f(),i(function(){s.$element&&(s.$element.on('mousedown',s.$onMouseDown),u.keyboard&&t&&t.on('keydown',s.$onKeyDown))},0,!1)};var p=s.hide;return s.hide=function(){s.$element&&s.$element.off('mousedown',s.$onMouseDown),u.keyboard&&t&&t.off('keydown',s.$onKeyDown),u.autoSelect||s.activate(-1),p()},s}function l(e){e.$$phase||e.$root&&e.$root.$$phase||e.$digest()}return r.defaults=e,r}]}).filter('bsAsyncFilter',['$filter',function(e){return function(t,n,a){return t&&angular.isFunction(t.then)?t.then(function(t){return e('filter')(t,n,a)}):e('filter')(t,n,a)}}]).directive('bsTypeahead',['$window','$parse','$q','$typeahead','$parseOptions',function(e,t,n,a,o){var i=a.defaults;return{restrict:'EAC',require:'ngModel',link:function(e,t,n,r){t.off('change');var l={scope:e};angular.forEach(['template','templateUrl','controller','controllerAs','placement','container','delay','trigger','keyboard','html','animation','filter','limit','minLength','watchOptions','selectMode','autoSelect','comparator','id','prefixEvent','prefixClass'],function(e){angular.isDefined(n[e])&&(l[e]=n[e])});var s=/^(false|0|)$/i;angular.forEach(['html','container','trimValue','filter'],function(e){angular.isDefined(n[e])&&s.test(n[e])&&(l[e]=!1)}),angular.forEach(['onBeforeShow','onShow','onBeforeHide','onHide','onSelect'],function(t){var a='bs'+t.charAt(0).toUpperCase()+t.slice(1);angular.isDefined(n[a])&&(l[t]=e.$eval(n[a]))}),t.attr('autocomplete')||t.attr('autocomplete','off');var u=angular.isDefined(l.filter)?l.filter:i.filter,c=l.limit||i.limit,d=l.comparator||i.comparator,f=n.bsOptions;u&&(f+=' | '+u+':$viewValue',d&&(f+=':'+d)),c&&(f+=' | limitTo:'+c);var p=o(f),g=a(t,r,l);if(l.watchOptions){var m=p.$match[7].replace(/\|.+/,'').replace(/\(.*\)/g,'').trim();e.$watchCollection(m,function(t,n){p.valuesFn(e,r).then(function(e){g.update(e),r.$render()})})}e.$watch(n.ngModel,function(t,n){e.$modelValue=t,p.valuesFn(e,r).then(function(e){return l.selectMode&&!e.length&&t.length>0?void r.$setViewValue(r.$viewValue.substring(0,r.$viewValue.length-1)):(e.length>c&&(e=e.slice(0,c)),g.update(e),void r.$render())})}),r.$formatters.push(function(e){var t=p.displayValue(e);return t?t:angular.isDefined(e)&&'object'!=typeof e?e:''}),r.$render=function(){if(r.$isEmpty(r.$viewValue))return t.val('');var e=g.$getIndex(r.$modelValue),n=e!==-1?g.$scope.$matches[e].label:r.$viewValue;n=angular.isObject(n)?p.displayValue(n):n;var a=n?n.toString().replace(/<(?:.|\n)*?>/gm,''):'',o=t[0].selectionStart,i=t[0].selectionEnd;t.val(l.trimValue===!1?a:a.trim()),t[0].setSelectionRange(o,i)},e.$on('$destroy',function(){g&&g.destroy(),l=null,g=null})}}}]),angular.module('mgcrea.ngStrap.tooltip',['mgcrea.ngStrap.core','mgcrea.ngStrap.helpers.dimensions']).provider('$tooltip',function(){var e=this.defaults={animation:'am-fade',customClass:'',prefixClass:'tooltip',prefixEvent:'tooltip',container:!1,target:!1,placement:'top',templateUrl:'tooltip/tooltip.tpl.html',template:'',titleTemplate:!1,trigger:'hover focus',keyboard:!1,html:!1,show:!1,title:'',type:'',delay:0,autoClose:!1,bsEnabled:!0,mouseDownPreventDefault:!0,mouseDownStopPropagation:!0,viewport:{selector:'body',padding:0}};this.$get=['$window','$rootScope','$bsCompiler','$q','$templateCache','$http','$animate','$sce','dimensions','$$rAF','$timeout',function(n,a,o,i,r,l,s,u,c,d,f){function p(i,r){function l(){I.$emit(V.prefixEvent+'.show',F),angular.isDefined(V.onShow)&&angular.isFunction(V.onShow)&&V.onShow(F)}function p(){if(I.$emit(V.prefixEvent+'.hide',F),angular.isDefined(V.onHide)&&angular.isFunction(V.onHide)&&V.onHide(F),B===q){if(Y&&'focus'===V.trigger)return i[0].blur();M()}}function $(){var e=V.trigger.split(' ');angular.forEach(e,function(e){'click'===e||'contextmenu'===e?i.on(e,F.toggle):'manual'!==e&&(i.on('hover'===e?'mouseenter':'focus',F.enter),i.on('hover'===e?'mouseleave':'blur',F.leave),'button'===O&&'hover'!==e&&i.on(h?'touchstart':'mousedown',F.$onFocusElementMouseDown))})}function w(){for(var e=V.trigger.split(' '),t=e.length;t--;){var n=e[t];'click'===n||'contextmenu'===n?i.off(n,F.toggle):'manual'!==n&&(i.off('hover'===n?'mouseenter':'focus',F.enter),i.off('hover'===n?'mouseleave':'blur',F.leave),'button'===O&&'hover'!==n&&i.off(h?'touchstart':'mousedown',F.$onFocusElementMouseDown))}}function y(){'focus'!==V.trigger?B.on('keyup',F.$onKeyUp):i.on('keyup',F.$onFocusKeyUp)}function b(){'focus'!==V.trigger?B.off('keyup',F.$onKeyUp):i.off('keyup',F.$onFocusKeyUp)}function D(){f(function(){B.on('click',x),v.on('click',F.hide),j=!0},0,!1)}function S(){j&&(B.off('click',x),v.off('click',F.hide),j=!1)}function x(e){e.stopPropagation()}function k(e){e=e||V.target||i;var a=e[0],o='BODY'===a.tagName,r=a.getBoundingClientRect(),l={};for(var s in r)l[s]=r[s];null===l.width&&(l=angular.extend({},l,{width:r.right-r.left,height:r.bottom-r.top}));var u=o?{top:0,left:0}:c.offset(a),d={scroll:o?t.documentElement.scrollTop||t.body.scrollTop:e.prop('scrollTop')||0},f=o?{width:t.documentElement.clientWidth,height:n.innerHeight}:null;return angular.extend({},l,d,f,u)}function C(e,t,n,a){var o,i=e.split('-');switch(i[0]){case'right':o={top:t.top+t.height/2-a/2,left:t.left+t.width};break;case'bottom':o={top:t.top+t.height,left:t.left+t.width/2-n/2};break;case'left':o={top:t.top+t.height/2-a/2,left:t.left-n};break;default:o={top:t.top-a,left:t.left+t.width/2-n/2}}if(!i[1])return o;if('top'===i[0]||'bottom'===i[0])switch(i[1]){case'left':o.left=t.left;break;case'right':o.left=t.left+t.width-n}else if('left'===i[0]||'right'===i[0])switch(i[1]){case'top':o.top=t.top-a+t.height;break;case'bottom':o.top=t.top}return o}function T(e,t){var n=B[0],a=n.offsetWidth,o=n.offsetHeight,i=parseInt(c.css(n,'margin-top'),10),r=parseInt(c.css(n,'margin-left'),10);isNaN(i)&&(i=0),isNaN(r)&&(r=0),e.top=e.top+i,e.left=e.left+r,c.setOffset(n,angular.extend({using:function(e){B.css({top:Math.round(e.top)+'px',left:Math.round(e.left)+'px',right:''})}},e),0);var l=n.offsetWidth,s=n.offsetHeight;if('top'===t&&s!==o&&(e.top=e.top+o-s),!/top-left|top-right|bottom-left|bottom-right/.test(t)){var u=E(t,e,l,s);if(u.left?e.left+=u.left:e.top+=u.top,c.setOffset(n,e),/top|right|bottom|left/.test(t)){var d=/top|bottom/.test(t),f=d?2*u.left-a+l:2*u.top-o+s,p=d?'offsetWidth':'offsetHeight';A(f,n[p],d)}}}function E(e,t,n,a){var o={top:0,left:0};if(!F.$viewport)return o;var i=V.viewport&&V.viewport.padding||0,r=k(F.$viewport);if(/right|left/.test(e)){var l=t.top-i-r.scroll,s=t.top+i-r.scroll+a;l<r.top?o.top=r.top-l:s>r.top+r.height&&(o.top=r.top+r.height-s)}else{var u=t.left-i,c=t.left+i+n;u<r.left?o.left=r.left-u:c>r.right&&(o.left=r.left+r.width-c)}return o}function A(e,t,n){var a=m('.tooltip-arrow, .arrow',B[0]);a.css(n?'left':'top',50*(1-e/t)+'%').css(n?'top':'left','')}function M(){clearTimeout(P),F.$isShown&&null!==B&&(V.autoClose&&S(),V.keyboard&&b()),z&&(z.$destroy(),z=null),B&&(B.remove(),B=F.$element=null)}var F={},V=F.$options=angular.extend({},e,r),H=F.$promise=o.compile(V),I=F.$scope=V.scope&&V.scope.$new()||a.$new(),O=i[0].nodeName.toLowerCase();if(V.delay&&angular.isString(V.delay)){var N=V.delay.split(',').map(parseFloat);V.delay=N.length>1?{show:N[0],hide:N[1]}:N[0]}F.$id=V.id||i.attr('id')||'',V.title&&(I.title=u.trustAsHtml(V.title)),I.$setEnabled=function(e){I.$$postDigest(function(){F.setEnabled(e)})},I.$hide=function(){I.$$postDigest(function(){F.hide()})},I.$show=function(){I.$$postDigest(function(){F.show()})},I.$toggle=function(){I.$$postDigest(function(){F.toggle()})},F.$isShown=I.$isShown=!1;var P,U,L,B,R,z;H.then(function(e){L=e,F.init()}),F.init=function(){V.delay&&angular.isNumber(V.delay)&&(V.delay={show:V.delay,hide:V.delay}),'self'===V.container?R=i:angular.isElement(V.container)?R=V.container:V.container&&(R=m(V.container)),$(),V.target&&(V.target=angular.isElement(V.target)?V.target:m(V.target)),V.show&&I.$$postDigest(function(){'focus'===V.trigger?i[0].focus():F.show()})},F.destroy=function(){w(),M(),I.$destroy()},F.enter=function(){return clearTimeout(P),U='in',V.delay&&V.delay.show?void(P=setTimeout(function(){'in'===U&&F.show()},V.delay.show)):F.show()},F.show=function(){if(V.bsEnabled&&!F.$isShown){I.$emit(V.prefixEvent+'.show.before',F),angular.isDefined(V.onBeforeShow)&&angular.isFunction(V.onBeforeShow)&&V.onBeforeShow(F);var e,t;V.container?(e=R,t=R[0].lastChild?angular.element(R[0].lastChild):null):(e=null,t=i),B&&M(),z=F.$scope.$new(),B=F.$element=L.link(z,function(e,t){}),B.css({top:'-9999px',left:'-9999px',right:'auto',display:'block',visibility:'hidden'}),V.animation&&B.addClass(V.animation),V.type&&B.addClass(V.prefixClass+'-'+V.type),V.customClass&&B.addClass(V.customClass),t?t.after(B):e.prepend(B),F.$isShown=I.$isShown=!0,g(I),F.$applyPlacement(),angular.version.minor<=2?s.enter(B,e,t,l):s.enter(B,e,t).then(l),g(I),d(function(){B&&B.css({visibility:'visible'}),V.keyboard&&('focus'!==V.trigger&&F.focus(),y())}),V.autoClose&&D()}},F.leave=function(){return clearTimeout(P),U='out',V.delay&&V.delay.hide?void(P=setTimeout(function(){'out'===U&&F.hide()},V.delay.hide)):F.hide()};var Y,q;F.hide=function(e){F.$isShown&&(I.$emit(V.prefixEvent+'.hide.before',F),angular.isDefined(V.onBeforeHide)&&angular.isFunction(V.onBeforeHide)&&V.onBeforeHide(F),Y=e,q=B,null!==B&&(angular.version.minor<=2?s.leave(B,p):s.leave(B).then(p)),F.$isShown=I.$isShown=!1,g(I),V.keyboard&&null!==B&&b(),V.autoClose&&null!==B&&S())},F.toggle=function(e){e&&e.preventDefault(),F.$isShown?F.leave():F.enter()},F.focus=function(){B[0].focus()},F.setEnabled=function(e){V.bsEnabled=e},F.setViewport=function(e){V.viewport=e},F.$applyPlacement=function(){if(B){var t=V.placement,n=/\s?auto?\s?/i,a=n.test(t);a&&(t=t.replace(n,'')||e.placement),B.addClass(V.placement);var o=k(),i=B.prop('offsetWidth'),r=B.prop('offsetHeight');if(F.$viewport=V.viewport&&m(V.viewport.selector||V.viewport),a){var l=t,s=k(F.$viewport);/bottom/.test(l)&&o.bottom+r>s.bottom?t=l.replace('bottom','top'):/top/.test(l)&&o.top-r<s.top&&(t=l.replace('top','bottom')),/left/.test(l)&&o.left-i<s.left?t=t.replace('left','right'):/right/.test(l)&&o.right+i>s.width&&(t=t.replace('right','left')),B.removeClass(l).addClass(t)}var u=C(t,o,i,r);T(u,t)}},F.$onKeyUp=function(e){27===e.which&&F.$isShown&&(F.hide(),e.stopPropagation())},F.$onFocusKeyUp=function(e){27===e.which&&(i[0].blur(),e.stopPropagation())},F.$onFocusElementMouseDown=function(e){V.mouseDownPreventDefault&&e.preventDefault(),V.mouseDownStopPropagation&&e.stopPropagation(),F.$isShown?i[0].blur():i[0].focus()};var j=!1;return F}function g(e){e.$$phase||e.$root&&e.$root.$$phase||e.$digest()}function m(e,n){return angular.element((n||t).querySelectorAll(e))}var $=/(ip[ao]d|iphone|android)/gi.test(n.navigator.userAgent),h='createTouch'in n.document&&$,v=angular.element(n.document);return p}]}).directive('bsTooltip',['$window','$location','$sce','$parse','$tooltip','$$rAF',function(e,t,n,a,o,i){return{restrict:'EAC',scope:!0,link:function(e,t,a,r){var l,s={scope:e};angular.forEach(['template','templateUrl','controller','controllerAs','titleTemplate','placement','container','delay','trigger','html','animation','backdropAnimation','type','customClass','id'],function(e){angular.isDefined(a[e])&&(s[e]=a[e])});var u=/^(false|0|)$/i;angular.forEach(['html','container'],function(e){angular.isDefined(a[e])&&u.test(a[e])&&(s[e]=!1)}),angular.forEach(['onBeforeShow','onShow','onBeforeHide','onHide'],function(t){var n='bs'+t.charAt(0).toUpperCase()+t.slice(1);angular.isDefined(a[n])&&(s[t]=e.$eval(a[n]))});var c=t.attr('data-target');angular.isDefined(c)&&(u.test(c)?s.target=!1:s.target=c),e.hasOwnProperty('title')||(e.title=''),a.$observe('title',function(t){if(angular.isDefined(t)||!e.hasOwnProperty('title')){var a=e.title;e.title=n.trustAsHtml(t),angular.isDefined(a)&&i(function(){l&&l.$applyPlacement()})}}),a.$observe('disabled',function(e){e&&l.$isShown&&l.hide()}),a.bsTooltip&&e.$watch(a.bsTooltip,function(t,n){angular.isObject(t)?angular.extend(e,t):e.title=t,angular.isDefined(n)&&i(function(){l&&l.$applyPlacement()})},!0),a.bsShow&&e.$watch(a.bsShow,function(e,t){l&&angular.isDefined(e)&&(angular.isString(e)&&(e=!!e.match(/true|,?(tooltip),?/i)),e===!0?l.show():l.hide())}),a.bsEnabled&&e.$watch(a.bsEnabled,function(e,t){l&&angular.isDefined(e)&&(angular.isString(e)&&(e=!!e.match(/true|1|,?(tooltip),?/i)),e===!1?l.setEnabled(!1):l.setEnabled(!0))}),a.viewport&&e.$watch(a.viewport,function(e){l&&angular.isDefined(e)&&l.setViewport(e)}),l=o(t,s),e.$on('$destroy',function(){l&&l.destroy(),s=null,l=null})}}}]),angular.module('mgcrea.ngStrap.timepicker',['mgcrea.ngStrap.helpers.dateParser','mgcrea.ngStrap.helpers.dateFormatter','mgcrea.ngStrap.tooltip']).provider('$timepicker',function(){var e=this.defaults={animation:'am-fade',defaultDate:'auto',prefixClass:'timepicker',placement:'bottom-left',templateUrl:'timepicker/timepicker.tpl.html',trigger:'focus',container:!1,keyboard:!0,html:!1,delay:0,useNative:!0,timeType:'date',timeFormat:'shortTime',timezone:null,modelTimeFormat:null,autoclose:!1,minTime:-(1/0),maxTime:+(1/0),length:5,hourStep:1,minuteStep:5,secondStep:5,roundDisplay:!1,iconUp:'glyphicon glyphicon-chevron-up',iconDown:'glyphicon glyphicon-chevron-down',arrowBehavior:'pager'};this.$get=['$window','$document','$rootScope','$sce','$dateFormatter','$tooltip','$timeout',function(t,n,a,o,i,r,l){function s(t,n,a){function o(e){var t=6e4*g.minuteStep;return new Date(Math.floor(e.getTime()/t)*t)}function s(e,n){var a=e+n;if(t[0].createTextRange){var o=t[0].createTextRange();o.collapse(!0),o.moveStart('character',e),o.moveEnd('character',a),o.select()}else t[0].setSelectionRange?t[0].setSelectionRange(e,a):angular.isUndefined(t[0].selectionStart)&&(t[0].selectionStart=e,t[0].selectionEnd=a)}function d(){t[0].focus()}var f=r(t,angular.extend({},e,a)),p=a.scope,g=f.$options,m=f.$scope,$=g.lang,h=function(e,t,n){return i.formatDate(e,t,$,n)},v=0,w=g.roundDisplay?o(new Date):new Date,y=n.$dateValue||w,b={hour:y.getHours(),meridian:y.getHours()<12,minute:y.getMinutes(),second:y.getSeconds(),millisecond:y.getMilliseconds()},D=i.getDatetimeFormat(g.timeFormat,$),S=i.hoursFormat(D),x=i.timeSeparator(D),k=i.minutesFormat(D),C=i.secondsFormat(D),T=i.showSeconds(D),E=i.showAM(D);m.$iconUp=g.iconUp,m.$iconDown=g.iconDown,m.$select=function(e,t){f.select(e,t)},m.$moveIndex=function(e,t){f.$moveIndex(e,t)},m.$switchMeridian=function(e){f.switchMeridian(e)},f.update=function(e){angular.isDate(e)&&!isNaN(e.getTime())?(f.$date=e,angular.extend(b,{hour:e.getHours(),minute:e.getMinutes(),second:e.getSeconds(),millisecond:e.getMilliseconds()}),f.$build()):f.$isBuilt||f.$build()},f.select=function(e,t,a){n.$dateValue&&!isNaN(n.$dateValue.getTime())||(n.$dateValue='today'===g.defaultDate?new Date:new Date(1970,0,1)),angular.isDate(e)||(e=new Date(e)),0===t?n.$dateValue.setHours(e.getHours()):1===t?n.$dateValue.setMinutes(e.getMinutes()):2===t&&n.$dateValue.setSeconds(e.getSeconds()),n.$setViewValue(angular.copy(n.$dateValue)),n.$render(),g.autoclose&&!a&&l(function(){f.hide(!0)})},f.switchMeridian=function(e){if(n.$dateValue&&!isNaN(n.$dateValue.getTime())){var t=(e||n.$dateValue).getHours();n.$dateValue.setHours(t<12?t+12:t-12),n.$setViewValue(angular.copy(n.$dateValue)),n.$render()}},f.$build=function(){var e,t,n=m.midIndex=parseInt(g.length/2,10),a=[];for(e=0;e<g.length;e++)t=new Date(1970,0,1,b.hour-(n-e)*g.hourStep),a.push({date:t,label:h(t,S),selected:f.$date&&f.$isSelected(t,0),disabled:f.$isDisabled(t,0)});var o,i=[];for(e=0;e<g.length;e++)o=new Date(1970,0,1,0,b.minute-(n-e)*g.minuteStep),i.push({date:o,label:h(o,k),selected:f.$date&&f.$isSelected(o,1),disabled:f.$isDisabled(o,1)});var r,l=[];for(e=0;e<g.length;e++)r=new Date(1970,0,1,0,0,b.second-(n-e)*g.secondStep),l.push({date:r,label:h(r,C),selected:f.$date&&f.$isSelected(r,2),disabled:f.$isDisabled(r,2)});var s=[];for(e=0;e<g.length;e++)T?s.push([a[e],i[e],l[e]]):s.push([a[e],i[e]]);m.rows=s,m.showSeconds=T,m.showAM=E,m.isAM=(f.$date||a[n].date).getHours()<12,m.timeSeparator=x,f.$isBuilt=!0},f.$isSelected=function(e,t){return!!f.$date&&(0===t?e.getHours()===f.$date.getHours():1===t?e.getMinutes()===f.$date.getMinutes():2===t?e.getSeconds()===f.$date.getSeconds():void 0)},f.$isDisabled=function(e,t){var n;return 0===t?n=e.getTime()+6e4*b.minute+1e3*b.second:1===t?n=e.getTime()+36e5*b.hour+1e3*b.second:2===t&&(n=e.getTime()+36e5*b.hour+6e4*b.minute),n<1*g.minTime||n>1*g.maxTime},m.$arrowAction=function(e,t){'picker'===g.arrowBehavior?f.$setTimeByStep(e,t):f.$moveIndex(e,t)},f.$setTimeByStep=function(e,t){var n=new Date(f.$date||y),a=n.getHours(),o=n.getMinutes(),i=n.getSeconds();0===t?n.setHours(a-parseInt(g.hourStep,10)*e):1===t?n.setMinutes(o-parseInt(g.minuteStep,10)*e):2===t&&n.setSeconds(i-parseInt(g.secondStep,10)*e),f.select(n,t,!0)},f.$moveIndex=function(e,t){var n;0===t?(n=new Date(1970,0,1,b.hour+e*g.length,b.minute,b.second),angular.extend(b,{hour:n.getHours()})):1===t?(n=new Date(1970,0,1,b.hour,b.minute+e*g.length*g.minuteStep,b.second),angular.extend(b,{minute:n.getMinutes()})):2===t&&(n=new Date(1970,0,1,b.hour,b.minute,b.second+e*g.length*g.secondStep),angular.extend(b,{second:n.getSeconds()})),f.$build()},f.$onMouseDown=function(e){if('input'!==e.target.nodeName.toLowerCase()&&e.preventDefault(),e.stopPropagation(),c){var t=angular.element(e.target);'button'!==t[0].nodeName.toLowerCase()&&(t=t.parent()),t.triggerHandler('click')}},f.$onKeyDown=function(e){if(/(38|37|39|40|13)/.test(e.keyCode)&&!e.shiftKey&&!e.altKey){if(e.preventDefault(),e.stopPropagation(),13===e.keyCode)return void f.hide(!0);var t=new Date(f.$date),n=t.getHours(),a=h(t,S).length,o=t.getMinutes(),i=h(t,k).length,r=t.getSeconds(),l=h(t,C).length,u=1,c=/(37|39)/.test(e.keyCode),d=2+1*T+1*E;c&&(37===e.keyCode?v=v<1?d-1:v-1:39===e.keyCode&&(v=v<d-1?v+1:0));var m=[0,a],$=0;38===e.keyCode&&($=-1),40===e.keyCode&&($=1);var w=2===v&&T,y=2===v&&!T||3===v&&T;0===v?(t.setHours(n+$*parseInt(g.hourStep,10)),a=h(t,S).length,m=[0,a]):1===v?(t.setMinutes(o+$*parseInt(g.minuteStep,10)),i=h(t,k).length,m=[a+u,i]):w?(t.setSeconds(r+$*parseInt(g.secondStep,10)),l=h(t,C).length,m=[a+u+i+u,l]):y&&(c||f.switchMeridian(),m=[a+u+i+u+(l+u)*T,2]),f.select(t,v,!0),s(m[0],m[1]),p.$digest()}};var A=f.init;f.init=function(){return u&&g.useNative?(t.prop('type','time'),void t.css('-webkit-appearance','textfield')):(c&&(t.prop('type','text'),t.attr('readonly','true'),t.on('click',d)),void A())};var M=f.destroy;f.destroy=function(){u&&g.useNative&&t.off('click',d),M()};var F=f.show;f.show=function(){!c&&t.attr('readonly')||t.attr('disabled')||(F(),l(function(){f.$element&&f.$element.on(c?'touchstart':'mousedown',f.$onMouseDown),g.keyboard&&t&&t.on('keydown',f.$onKeyDown)},0,!1))};var V=f.hide;return f.hide=function(e){f.$isShown&&(f.$element&&f.$element.off(c?'touchstart':'mousedown',f.$onMouseDown),g.keyboard&&t&&t.off('keydown',f.$onKeyDown),V(e))},f}var u=/(ip[ao]d|iphone|android)/gi.test(t.navigator.userAgent),c='createTouch'in t.document&&u;return e.lang||(e.lang=i.getDefaultLocale()),s.defaults=e,s}]}).directive('bsTimepicker',['$window','$parse','$q','$dateFormatter','$dateParser','$timepicker',function(e,t,a,o,i,r){var l=r.defaults,s=/(ip[ao]d|iphone|android)/gi.test(e.navigator.userAgent);return{restrict:'EAC',require:'ngModel',link:function(e,t,a,u){function c(e){if(angular.isDate(e)){var t=isNaN(f.minTime)||new Date(e.getTime()).setFullYear(1970,0,1)>=f.minTime,n=isNaN(f.maxTime)||new Date(e.getTime()).setFullYear(1970,0,1)<=f.maxTime,a=t&&n;u.$setValidity('date',a),u.$setValidity('min',t),u.$setValidity('max',n),a&&(u.$dateValue=e)}}function d(){return!u.$dateValue||isNaN(u.$dateValue.getTime())?'':$(u.$dateValue,f.timeFormat)}var f={scope:e};angular.forEach(['template','templateUrl','controller','controllerAs','placement','container','delay','trigger','keyboard','html','animation','autoclose','timeType','timeFormat','timezone','modelTimeFormat','useNative','hourStep','minuteStep','secondStep','length','arrowBehavior','iconUp','iconDown','roundDisplay','id','prefixClass','prefixEvent','defaultDate'],function(e){angular.isDefined(a[e])&&(f[e]=a[e])});var p=/^(false|0|)$/i;angular.forEach(['html','container','autoclose','useNative','roundDisplay'],function(e){angular.isDefined(a[e])&&p.test(a[e])&&(f[e]=!1)}),angular.forEach(['onBeforeShow','onShow','onBeforeHide','onHide'],function(t){var n='bs'+t.charAt(0).toUpperCase()+t.slice(1);angular.isDefined(a[n])&&(f[t]=e.$eval(a[n]))}),s&&(f.useNative||l.useNative)&&(f.timeFormat='HH:mm');var g=r(t,u,f);f=g.$options;var m=f.lang,$=function(e,t,n){return o.formatDate(e,t,m,n)};a.bsShow&&e.$watch(a.bsShow,function(e,t){g&&angular.isDefined(e)&&(angular.isString(e)&&(e=!!e.match(/true|,?(timepicker),?/i)),e===!0?g.show():g.hide())});var h=i({format:f.timeFormat,lang:m});angular.forEach(['minTime','maxTime'],function(e){angular.isDefined(a[e])&&a.$observe(e,function(t){g.$options[e]=h.getTimeForAttribute(e,t),isNaN(g.$options[e])||g.$build(),c(u.$dateValue)})}),e.$watch(a.ngModel,function(e,t){g.update(u.$dateValue)},!0),u.$parsers.unshift(function(e){var t;if(!e)return u.$setValidity('date',!0),null;var a=angular.isDate(e)?e:h.parse(e,u.$dateValue);return!a||isNaN(a.getTime())?(u.$setValidity('date',!1),n):(c(a),'string'===f.timeType?(t=h.timezoneOffsetAdjust(a,f.timezone,!0),$(t,f.modelTimeFormat||f.timeFormat)):(t=h.timezoneOffsetAdjust(u.$dateValue,f.timezone,!0),'number'===f.timeType?t.getTime():'unix'===f.timeType?t.getTime()/1e3:'iso'===f.timeType?t.toISOString():new Date(t)))}),u.$formatters.push(function(e){var t;return t=angular.isUndefined(e)||null===e?NaN:angular.isDate(e)?e:'string'===f.timeType?h.parse(e,null,f.modelTimeFormat):'unix'===f.timeType?new Date(1e3*e):new Date(e),u.$dateValue=h.timezoneOffsetAdjust(t,f.timezone),d()}),u.$render=function(){t.val(d())},e.$on('$destroy',function(){g&&g.destroy(),f=null,g=null})}}}]),angular.module('mgcrea.ngStrap.tab',[]).provider('$tab',function(){var e=this.defaults={animation:'am-fade',template:'tab/tab.tpl.html',navClass:'nav-tabs',activeClass:'active'},t=this.controller=function(t,n,a){var o=this;o.$options=angular.copy(e),angular.forEach(['animation','navClass','activeClass'],function(e){angular.isDefined(a[e])&&(o.$options[e]=a[e])}),t.$navClass=o.$options.navClass,t.$activeClass=o.$options.activeClass,o.$panes=t.$panes=[],o.$activePaneChangeListeners=o.$viewChangeListeners=[],o.$push=function(e){angular.isUndefined(o.$panes.$active)&&t.$setActive(e.name||0),o.$panes.push(e)},o.$remove=function(e){var t,n=o.$panes.indexOf(e),a=o.$panes.$active;t=angular.isString(a)?o.$panes.map(function(e){return e.name}).indexOf(a):o.$panes.$active,o.$panes.splice(n,1),n<t?t--:n===t&&t===o.$panes.length&&t--,t>=0&&t<o.$panes.length?o.$setActive(o.$panes[t].name||t):o.$setActive()},o.$setActive=t.$setActive=function(e){o.$panes.$active=e,o.$activePaneChangeListeners.forEach(function(e){e()})},o.$isActive=t.$isActive=function(e,t){return o.$panes.$active===e.name||o.$panes.$active===t}};this.$get=function(){var n={};return n.defaults=e,n.controller=t,n}}).directive('bsTabs',['$window','$animate','$tab','$parse',function(e,t,n,a){var o=n.defaults;return{require:['?ngModel','bsTabs'],transclude:!0,scope:!0,controller:['$scope','$element','$attrs',n.controller],templateUrl:function(e,t){return t.template||o.template},link:function(e,t,n,o){var i=o[0],r=o[1];if(i&&(r.$activePaneChangeListeners.push(function(){i.$setViewValue(r.$panes.$active)}),i.$formatters.push(function(e){return r.$setActive(e),e})),n.bsActivePane){var l=a(n.bsActivePane);r.$activePaneChangeListeners.push(function(){l.assign(e,r.$panes.$active)}),e.$watch(n.bsActivePane,function(e,t){r.$setActive(e)},!0)}}}}]).directive('bsPane',['$window','$animate','$sce',function(e,t,n){return{require:['^?ngModel','^bsTabs'],scope:!0,link:function(e,a,o,i){function r(){var n=l.$panes.indexOf(e);t[l.$isActive(e,n)?'addClass':'removeClass'](a,l.$options.activeClass)}var l=i[1];a.addClass('tab-pane'),o.$observe('title',function(t,a){e.title=n.trustAsHtml(t)}),e.name=o.name,l.$options.animation&&a.addClass(l.$options.animation),o.$observe('disabled',function(t,n){e.disabled=e.$eval(t)}),l.$push(e),e.$on('$destroy',function(){l.$remove(e)}),l.$activePaneChangeListeners.push(function(){r()}),r()}}}]),angular.module('mgcrea.ngStrap.select',['mgcrea.ngStrap.tooltip','mgcrea.ngStrap.helpers.parseOptions']).provider('$select',function(){var e=this.defaults={animation:'am-fade',prefixClass:'select',prefixEvent:'$select',placement:'bottom-left',templateUrl:'select/select.tpl.html',trigger:'focus',container:!1,keyboard:!0,html:!1,delay:0,multiple:!1,allNoneButtons:!1,sort:!0,caretHtml:'&nbsp;<span class="caret"></span>',placeholder:'Choose among the following...',allText:'All',noneText:'None',maxLength:3,maxLengthHtml:'selected',iconCheckmark:'glyphicon glyphicon-ok',toggle:!1};this.$get=['$window','$document','$rootScope','$tooltip','$timeout',function(t,a,o,i,r){function l(o,l,s){var c={},d=angular.extend({},e,s);c=i(o,d);var f=c.$scope;f.$matches=[],d.multiple?f.$activeIndex=[]:f.$activeIndex=-1,f.$isMultiple=d.multiple,f.$showAllNoneButtons=d.allNoneButtons&&d.multiple,f.$iconCheckmark=d.iconCheckmark,f.$allText=d.allText,f.$noneText=d.noneText,f.$activate=function(e){f.$$postDigest(function(){c.activate(e)})},f.$select=function(e,t){f.$$postDigest(function(){c.select(e)})},f.$isVisible=function(){return c.$isVisible()},f.$isActive=function(e){return c.$isActive(e)},f.$selectAll=function(){for(var e=0;e<f.$matches.length;e++)f.$isActive(e)||f.$select(e)},f.$selectNone=function(){for(var e=0;e<f.$matches.length;e++)f.$isActive(e)&&f.$select(e)},c.update=function(e){f.$matches=e,c.$updateActiveIndex()},c.activate=function(e){return d.multiple?(c.$isActive(e)?f.$activeIndex.splice(f.$activeIndex.indexOf(e),1):f.$activeIndex.push(e),d.sort&&f.$activeIndex.sort(function(e,t){return e-t})):f.$activeIndex=e,f.$activeIndex},c.select=function(e){if(!(angular.isUndefined(e)||e<0||e>=f.$matches.length)){var t=f.$matches[e].value;f.$apply(function(){c.activate(e),d.multiple?l.$setViewValue(f.$activeIndex.map(function(e){return angular.isUndefined(f.$matches[e])?null:f.$matches[e].value})):(d.toggle?l.$setViewValue(t===l.$modelValue?n:t):l.$setViewValue(t),c.hide())}),f.$emit(d.prefixEvent+'.select',t,e,c),angular.isDefined(d.onSelect)&&angular.isFunction(d.onSelect)&&d.onSelect(t,e,c)}},c.$updateActiveIndex=function(){d.multiple?angular.isArray(l.$modelValue)?f.$activeIndex=l.$modelValue.map(function(e){return c.$getIndex(e)}):f.$activeIndex=[]:angular.isDefined(l.$modelValue)&&f.$matches.length?f.$activeIndex=c.$getIndex(l.$modelValue):f.$activeIndex=-1},c.$isVisible=function(){return d.minLength&&l?f.$matches.length&&l.$viewValue.length>=d.minLength:f.$matches.length},c.$isActive=function(e){return d.multiple?f.$activeIndex.indexOf(e)!==-1:f.$activeIndex===e},c.$getIndex=function(e){var t;for(t=f.$matches.length;t--&&!angular.equals(f.$matches[t].value,e););return t},c.$onMouseDown=function(e){if(e.preventDefault(),e.stopPropagation(),u){var t,n=angular.element(e.target);if('A'!==e.target.nodeName)for(var a=n.parent();!t&&a.length>0;)'A'===a[0].nodeName&&(t=a),a=a.parent();t?angular.element(t).triggerHandler('click'):n.triggerHandler('click')}},c.$onKeyDown=function(e){if(/(9|13|38|40)/.test(e.keyCode))return 9!==e.keyCode&&(e.preventDefault(),e.stopPropagation()),d.multiple&&9===e.keyCode?c.hide():d.multiple||13!==e.keyCode&&9!==e.keyCode?void(d.multiple||(38===e.keyCode&&f.$activeIndex>0?f.$activeIndex--:38===e.keyCode&&f.$activeIndex<0?f.$activeIndex=f.$matches.length-1:40===e.keyCode&&f.$activeIndex<f.$matches.length-1?f.$activeIndex++:angular.isUndefined(f.$activeIndex)&&(f.$activeIndex=0),f.$digest())):c.select(f.$activeIndex)},c.$isIE=function(){var e=t.navigator.userAgent;return e.indexOf('MSIE ')>0||e.indexOf('Trident/')>0||e.indexOf('Edge/')>0;
},c.$selectScrollFix=function(e){'UL'===a[0].activeElement.tagName&&(e.preventDefault(),e.stopImmediatePropagation(),e.target.focus())};var p=c.show;c.show=function(){p(),d.multiple&&c.$element.addClass('select-multiple'),r(function(){c.$element.on(u?'touchstart':'mousedown',c.$onMouseDown),d.keyboard&&o.on('keydown',c.$onKeyDown)},0,!1)};var g=c.hide;return c.hide=function(){!d.multiple&&angular.isUndefined(l.$modelValue)&&(f.$activeIndex=-1),c.$element.off(u?'touchstart':'mousedown',c.$onMouseDown),d.keyboard&&o.off('keydown',c.$onKeyDown),g(!0)},c}var s=/(ip[ao]d|iphone|android)/gi.test(t.navigator.userAgent),u='createTouch'in t.document&&s;return l.defaults=e,l}]}).directive('bsSelect',['$window','$parse','$q','$select','$parseOptions',function(e,t,n,a,o){var i=a.defaults;return{restrict:'EAC',require:'ngModel',link:function(e,t,n,r){var l={scope:e,placeholder:i.placeholder};angular.forEach(['template','templateUrl','controller','controllerAs','placement','container','delay','trigger','keyboard','html','animation','placeholder','allNoneButtons','maxLength','maxLengthHtml','allText','noneText','iconCheckmark','autoClose','id','sort','caretHtml','prefixClass','prefixEvent','toggle'],function(e){angular.isDefined(n[e])&&(l[e]=n[e])});var s=/^(false|0|)$/i;angular.forEach(['html','container','allNoneButtons','sort'],function(e){angular.isDefined(n[e])&&s.test(n[e])&&(l[e]=!1)}),angular.forEach(['onBeforeShow','onShow','onBeforeHide','onHide','onSelect'],function(t){var a='bs'+t.charAt(0).toUpperCase()+t.slice(1);angular.isDefined(n[a])&&(l[t]=e.$eval(n[a]))});var u=t.attr('data-multiple');if(angular.isDefined(u)&&(s.test(u)?l.multiple=!1:l.multiple=u),'select'===t[0].nodeName.toLowerCase()){var c=t;c.css('display','none'),t=angular.element('<button type="button" class="btn btn-default"></button>'),c.after(t)}var d=o(n.bsOptions),f=a(t,r,l);f.$isIE()&&t[0].addEventListener('blur',f.$selectScrollFix);var p=d.$match[7].replace(/\|.+/,'').trim();e.$watch(p,function(t,n){d.valuesFn(e,r).then(function(e){f.update(e),r.$render()})},!0),e.$watch(n.ngModel,function(e,t){f.$updateActiveIndex(),r.$render()},!0),r.$render=function(){var e,n;l.multiple&&angular.isArray(r.$modelValue)?(e=r.$modelValue.map(function(e){return n=f.$getIndex(e),n!==-1&&f.$scope.$matches[n].label}).filter(angular.isDefined),e=e.length>(l.maxLength||i.maxLength)?e.length+' '+(l.maxLengthHtml||i.maxLengthHtml):e.join(', ')):(n=f.$getIndex(r.$modelValue),e=n!==-1&&f.$scope.$matches[n].label),t.html((e||l.placeholder)+(l.caretHtml||i.caretHtml))},l.multiple&&(r.$isEmpty=function(e){return!e||0===e.length}),e.$on('$destroy',function(){f&&f.destroy(),l=null,f=null})}}}]),angular.module('mgcrea.ngStrap.scrollspy',['mgcrea.ngStrap.helpers.debounce','mgcrea.ngStrap.helpers.dimensions']).provider('$scrollspy',function(){var e=this.$$spies={},n=this.defaults={debounce:150,throttle:100,offset:100};this.$get=['$window','$document','$rootScope','dimensions','debounce','throttle',function(a,o,i,r,l,s){function u(e,t){return e[0].nodeName&&e[0].nodeName.toLowerCase()===t.toLowerCase()}function c(o){var c=angular.extend({},n,o);c.element||(c.element=p);var g=u(c.element,'body'),m=g?d:c.element,$=g?'window':c.id;if(e[$])return e[$].$$count++,e[$];var h,v,w,y,b,D,S,x,k={},C=k.$trackedElements=[],T=[];return k.init=function(){this.$$count=1,y=l(this.checkPosition,c.debounce),b=s(this.checkPosition,c.throttle),m.on('click',this.checkPositionWithEventLoop),d.on('resize',y),m.on('scroll',b),D=l(this.checkOffsets,c.debounce),h=i.$on('$viewContentLoaded',D),v=i.$on('$includeContentLoaded',D),D(),$&&(e[$]=k)},k.destroy=function(){this.$$count--,this.$$count>0||(m.off('click',this.checkPositionWithEventLoop),d.off('resize',y),m.off('scroll',b),h(),v(),$&&delete e[$])},k.checkPosition=function(){if(T.length){if(x=(g?a.pageYOffset:m.prop('scrollTop'))||0,S=Math.max(a.innerHeight,f.prop('clientHeight')),x<T[0].offsetTop&&w!==T[0].target)return k.$activateElement(T[0]);for(var e=T.length;e--;)if(!angular.isUndefined(T[e].offsetTop)&&null!==T[e].offsetTop&&w!==T[e].target&&!(x<T[e].offsetTop||T[e+1]&&x>T[e+1].offsetTop))return k.$activateElement(T[e])}},k.checkPositionWithEventLoop=function(){setTimeout(k.checkPosition,1)},k.$activateElement=function(e){if(w){var t=k.$getTrackedElement(w);t&&(t.source.removeClass('active'),u(t.source,'li')&&u(t.source.parent().parent(),'li')&&t.source.parent().parent().removeClass('active'))}w=e.target,e.source.addClass('active'),u(e.source,'li')&&u(e.source.parent().parent(),'li')&&e.source.parent().parent().addClass('active')},k.$getTrackedElement=function(e){return C.filter(function(t){return t.target===e})[0]},k.checkOffsets=function(){angular.forEach(C,function(e){var n=t.querySelector(e.target);e.offsetTop=n?r.offset(n).top:null,c.offset&&null!==e.offsetTop&&(e.offsetTop-=1*c.offset)}),T=C.filter(function(e){return null!==e.offsetTop}).sort(function(e,t){return e.offsetTop-t.offsetTop}),y()},k.trackElement=function(e,t){C.push({target:e,source:t})},k.untrackElement=function(e,t){for(var n,a=C.length;a--;)if(C[a].target===e&&C[a].source===t){n=a;break}C.splice(n,1)},k.activate=function(e){C[e].addClass('active')},k.init(),k}var d=angular.element(a),f=angular.element(o.prop('documentElement')),p=angular.element(a.document.body);return c}]}).directive('bsScrollspy',['$rootScope','debounce','dimensions','$scrollspy',function(e,t,n,a){return{restrict:'EAC',link:function(e,t,n){var o={scope:e};angular.forEach(['offset','target'],function(e){angular.isDefined(n[e])&&(o[e]=n[e])});var i=a(o);i.trackElement(o.target,t),e.$on('$destroy',function(){i&&(i.untrackElement(o.target,t),i.destroy()),o=null,i=null})}}}]).directive('bsScrollspyList',['$rootScope','debounce','dimensions','$scrollspy',function(e,t,n,a){return{restrict:'A',compile:function(e,t){var n=e[0].querySelectorAll('li > a[href]');angular.forEach(n,function(e){var t=angular.element(e);t.parent().attr('bs-scrollspy','').attr('data-target',t.attr('href'))})}}}]),angular.module('mgcrea.ngStrap.popover',['mgcrea.ngStrap.tooltip']).provider('$popover',function(){var e=this.defaults={animation:'am-fade',customClass:'',container:!1,target:!1,placement:'right',templateUrl:'popover/popover.tpl.html',contentTemplate:!1,trigger:'click',keyboard:!0,html:!1,title:'',content:'',delay:0,autoClose:!1};this.$get=['$tooltip',function(t){function n(n,a){var o=angular.extend({},e,a),i=t(n,o);return o.content&&(i.$scope.content=o.content),i}return n}]}).directive('bsPopover',['$window','$sce','$popover',function(e,t,n){var a=e.requestAnimationFrame||e.setTimeout;return{restrict:'EAC',scope:!0,link:function(e,o,i){var r,l={scope:e};angular.forEach(['template','templateUrl','controller','controllerAs','contentTemplate','placement','container','delay','trigger','html','animation','customClass','autoClose','id','prefixClass','prefixEvent','bsEnabled'],function(e){angular.isDefined(i[e])&&(l[e]=i[e])});var s=/^(false|0|)$/i;angular.forEach(['html','container','autoClose'],function(e){angular.isDefined(i[e])&&s.test(i[e])&&(l[e]=!1)}),angular.forEach(['onBeforeShow','onShow','onBeforeHide','onHide'],function(t){var n='bs'+t.charAt(0).toUpperCase()+t.slice(1);angular.isDefined(i[n])&&(l[t]=e.$eval(i[n]))});var u=o.attr('data-target');angular.isDefined(u)&&(s.test(u)?l.target=!1:l.target=u),angular.forEach(['title','content'],function(n){i[n]&&i.$observe(n,function(o,i){e[n]=t.trustAsHtml(o),angular.isDefined(i)&&a(function(){r&&r.$applyPlacement()})})}),i.bsPopover&&e.$watch(i.bsPopover,function(t,n){angular.isObject(t)?angular.extend(e,t):e.content=t,angular.isDefined(n)&&a(function(){r&&r.$applyPlacement()})},!0),i.bsShow&&e.$watch(i.bsShow,function(e,t){r&&angular.isDefined(e)&&(angular.isString(e)&&(e=!!e.match(/true|,?(popover),?/i)),e===!0?r.show():r.hide())}),i.bsEnabled&&e.$watch(i.bsEnabled,function(e){r&&angular.isDefined(e)&&(angular.isString(e)&&(e=!!e.match(/true|1|,?(popover),?/i)),e===!1?r.setEnabled(!1):r.setEnabled(!0))}),i.viewport&&e.$watch(i.viewport,function(e){r&&angular.isDefined(e)&&r.setViewport(e)}),r=n(o,l),e.$on('$destroy',function(){r&&r.destroy(),l=null,r=null})}}}]),angular.module('mgcrea.ngStrap.navbar',[]).provider('$navbar',function(){var e=this.defaults={activeClass:'active',routeAttr:'data-match-route',strict:!1};this.$get=function(){return{defaults:e}}}).directive('bsNavbar',['$window','$location','$navbar',function(e,t,n){var a=n.defaults;return{restrict:'A',link:function(e,n,o,i){var r=angular.copy(a);angular.forEach(Object.keys(a),function(e){angular.isDefined(o[e])&&(r[e]=o[e])}),e.$watch(function(){return t.path()},function(e,t){var a=n[0].querySelectorAll('li['+r.routeAttr+']');angular.forEach(a,function(t){var n=angular.element(t),a=n.attr(r.routeAttr).replace('/','\\/');r.strict&&(a='^'+a+'$');var o=new RegExp(a,'i');o.test(e)?n.addClass(r.activeClass):n.removeClass(r.activeClass)})})}}}]),angular.module('mgcrea.ngStrap.modal',['mgcrea.ngStrap.core','mgcrea.ngStrap.helpers.dimensions']).provider('$modal',function(){var e=this.defaults={animation:'am-fade',backdropAnimation:'am-fade',customClass:'',prefixClass:'modal',prefixEvent:'modal',placement:'top',templateUrl:'modal/modal.tpl.html',template:'',contentTemplate:!1,container:!1,element:null,backdrop:!0,keyboard:!0,html:!1,show:!0,size:null,zIndex:null};this.$get=['$window','$rootScope','$bsCompiler','$animate','$timeout','$sce','dimensions',function(n,a,o,i,r,l,s){function u(t){function n(){T.$emit(k.prefixEvent+'.show',x),angular.isDefined(k.onShow)&&angular.isFunction(k.onShow)&&k.onShow(x)}function r(){T.$emit(k.prefixEvent+'.hide',x),angular.isDefined(k.onHide)&&angular.isFunction(k.onHide)&&k.onHide(x),d('.modal').length<=0&&g.removeClass(k.prefixClass+'-open'),k.animation&&g.removeClass(k.prefixClass+'-with-'+k.animation)}function s(){k.backdrop&&(A.on('click',b),F.on('click',b),F.on('wheel',D))}function u(){k.backdrop&&(A.off('click',b),F.off('click',b),F.off('wheel',D))}function w(){k.keyboard&&A.on('keyup',x.$onKeyUp)}function y(){k.keyboard&&A.off('keyup',x.$onKeyUp)}function b(e){e.target===e.currentTarget&&('static'===k.backdrop?x.focus():x.hide())}function D(e){e.preventDefault()}function S(){x.$isShown&&null!==A&&(u(),y()),M&&(M.$destroy(),M=null),A&&(A.remove(),A=x.$element=null)}var x={},k=x.$options=angular.extend({},e,t),C=x.$promise=o.compile(k),T=x.$scope=k.scope&&k.scope.$new()||a.$new();k.element||k.container||(k.container='body'),k.zIndex&&($=parseInt(k.zIndex,10),h=$-10),x.$id=k.id||k.element&&k.element.attr('id')||'',f(['title','content'],function(e){k[e]&&(T[e]=l.trustAsHtml(k[e]))}),T.$hide=function(){T.$$postDigest(function(){x.hide()})},T.$show=function(){T.$$postDigest(function(){x.show()})},T.$toggle=function(){T.$$postDigest(function(){x.toggle()})},x.$isShown=T.$isShown=!1;var E,A,M,F=angular.element('<div class="'+k.prefixClass+'-backdrop"/>');return F.css({position:'fixed',top:'0px',left:'0px',bottom:'0px',right:'0px'}),C.then(function(e){E=e,x.init()}),x.init=function(){k.show&&T.$$postDigest(function(){x.show()})},x.destroy=function(){S(),F&&(F.remove(),F=null),T.$destroy()},x.show=function(){if(!x.$isShown){var e,t;if(angular.isElement(k.container)?(e=k.container,t=k.container[0].lastChild?angular.element(k.container[0].lastChild):null):k.container?(e=d(k.container),t=e[0]&&e[0].lastChild?angular.element(e[0].lastChild):null):(e=null,t=k.element),A&&S(),M=x.$scope.$new(),A=x.$element=E.link(M,function(e,t){}),k.backdrop&&(A.css({'z-index':$+20*m}),F.css({'z-index':h+20*m}),m++),!T.$emit(k.prefixEvent+'.show.before',x).defaultPrevented){angular.isDefined(k.onBeforeShow)&&angular.isFunction(k.onBeforeShow)&&k.onBeforeShow(x),A.css({display:'block'}).addClass(k.placement),k.customClass&&A.addClass(k.customClass),k.size&&v[k.size]&&angular.element(d('.modal-dialog',A[0])).addClass(v[k.size]),k.animation&&(k.backdrop&&F.addClass(k.backdropAnimation),A.addClass(k.animation)),k.backdrop&&i.enter(F,g,null),angular.version.minor<=2?i.enter(A,e,t,n):i.enter(A,e,t).then(n),x.$isShown=T.$isShown=!0,c(T);var a=A[0];p(function(){a.focus()}),g.addClass(k.prefixClass+'-open'),k.animation&&g.addClass(k.prefixClass+'-with-'+k.animation),s(),w()}}},x.hide=function(){x.$isShown&&(T.$emit(k.prefixEvent+'.hide.before',x).defaultPrevented||(angular.isDefined(k.onBeforeHide)&&angular.isFunction(k.onBeforeHide)&&k.onBeforeHide(x),angular.version.minor<=2?i.leave(A,r):i.leave(A).then(r),k.backdrop&&(m--,i.leave(F)),x.$isShown=T.$isShown=!1,c(T),u(),y()))},x.toggle=function(){x.$isShown?x.hide():x.show()},x.focus=function(){A[0].focus()},x.$onKeyUp=function(e){27===e.which&&x.$isShown&&(x.hide(),e.stopPropagation())},x}function c(e){e.$$phase||e.$root&&e.$root.$$phase||e.$digest()}function d(e,n){return angular.element((n||t).querySelectorAll(e))}var f=angular.forEach,p=n.requestAnimationFrame||n.setTimeout,g=angular.element(n.document.body),m=0,$=1050,h=1040,v={lg:'modal-lg',sm:'modal-sm'};return u}]}).directive('bsModal',['$window','$sce','$parse','$modal',function(e,t,n,a){return{restrict:'EAC',scope:!0,link:function(e,n,o,i){var r={scope:e,element:n,show:!1};angular.forEach(['template','templateUrl','controller','controllerAs','contentTemplate','placement','backdrop','keyboard','html','container','animation','backdropAnimation','id','prefixEvent','prefixClass','customClass','modalClass','size','zIndex'],function(e){angular.isDefined(o[e])&&(r[e]=o[e])}),r.modalClass&&(r.customClass=r.modalClass);var l=/^(false|0|)$/i;angular.forEach(['backdrop','keyboard','html','container'],function(e){angular.isDefined(o[e])&&l.test(o[e])&&(r[e]=!1)}),angular.forEach(['onBeforeShow','onShow','onBeforeHide','onHide'],function(t){var n='bs'+t.charAt(0).toUpperCase()+t.slice(1);angular.isDefined(o[n])&&(r[t]=e.$eval(o[n]))}),angular.forEach(['title','content'],function(n){o[n]&&o.$observe(n,function(a,o){e[n]=t.trustAsHtml(a)})}),o.bsModal&&e.$watch(o.bsModal,function(t,n){angular.isObject(t)?angular.extend(e,t):e.content=t},!0);var s=a(r);n.on(o.trigger||'click',s.toggle),e.$on('$destroy',function(){s&&s.destroy(),r=null,s=null})}}}]),angular.version.minor<3&&angular.version.dot<14&&angular.module('ng').factory('$$rAF',['$window','$timeout',function(e,t){var n=e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame,a=e.cancelAnimationFrame||e.webkitCancelAnimationFrame||e.mozCancelAnimationFrame||e.webkitCancelRequestAnimationFrame,o=!!n,i=o?function(e){var t=n(e);return function(){a(t)}}:function(e){var n=t(e,16.66,!1);return function(){t.cancel(n)}};return i.supported=o,i}]),angular.module('mgcrea.ngStrap.helpers.parseOptions',[]).provider('$parseOptions',function(){var e=this.defaults={regexp:/^\s*(.*?)(?:\s+as\s+(.*?))?(?:\s+group\s+by\s+(.*))?\s+for\s+(?:([\$\w][\$\w]*)|(?:\(\s*([\$\w][\$\w]*)\s*,\s*([\$\w][\$\w]*)\s*\)))\s+in\s+(.*?)(?:\s+track\s+by\s+(.*?))?$/};this.$get=['$parse','$q',function(t,n){function a(a,o){function i(e,t){return e.map(function(e,n){var a,o,i={};return i[c]=e,a=u(t,i),o=p(t,i),{label:a,value:o,index:n}})}var r={},l=angular.extend({},e,o);r.$values=[];var s,u,c,d,f,p,g;return r.init=function(){r.$match=s=a.match(l.regexp),u=t(s[2]||s[1]),c=s[4]||s[6],d=s[5],f=t(s[3]||''),p=t(s[2]?s[1]:c),g=t(s[7])},r.valuesFn=function(e,t){return n.when(g(e,t)).then(function(t){return angular.isArray(t)||(t=[]),r.$values=t.length?i(t,e):[],r.$values})},r.displayValue=function(e){var t={};return t[c]=e,u(t)},r.init(),r}return a}]}),angular.module('mgcrea.ngStrap.helpers.dimensions',[]).factory('dimensions',function(){function t(e){var t=e.ownerDocument,o=e.offsetParent||t;if(a(o,'#document'))return t.documentElement;for(;o&&!a(o,'html')&&'static'===n.css(o,'position');)o=o.offsetParent;return o||t.documentElement}var n={},a=n.nodeName=function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()};return n.css=function(t,n,a){var o;return o=t.currentStyle?t.currentStyle[n]:e.getComputedStyle?e.getComputedStyle(t)[n]:t.style[n],a===!0?parseFloat(o)||0:o},n.offset=function(t){var n=t.getBoundingClientRect(),a=t.ownerDocument;return{width:n.width||t.offsetWidth,height:n.height||t.offsetHeight,top:n.top+(e.pageYOffset||a.documentElement.scrollTop)-(a.documentElement.clientTop||0),left:n.left+(e.pageXOffset||a.documentElement.scrollLeft)-(a.documentElement.clientLeft||0)}},n.setOffset=function(e,t,a){var o,i,r,l,s,u,c,d=n.css(e,'position'),f=angular.element(e),p={};'static'===d&&(e.style.position='relative'),s=n.offset(e),r=n.css(e,'top'),u=n.css(e,'left'),c=('absolute'===d||'fixed'===d)&&(r+u).indexOf('auto')>-1,c?(o=n.position(e),l=o.top,i=o.left):(l=parseFloat(r)||0,i=parseFloat(u)||0),angular.isFunction(t)&&(t=t.call(e,a,s)),null!==t.top&&(p.top=t.top-s.top+l),null!==t.left&&(p.left=t.left-s.left+i),'using'in t?t.using.call(f,p):f.css({top:p.top+'px',left:p.left+'px'})},n.position=function(e){var o,i,r={top:0,left:0};return'fixed'===n.css(e,'position')?i=e.getBoundingClientRect():(o=t(e),i=n.offset(e),a(o,'html')||(r=n.offset(o)),r.top+=n.css(o,'borderTopWidth',!0),r.left+=n.css(o,'borderLeftWidth',!0)),{width:e.offsetWidth,height:e.offsetHeight,top:i.top-r.top-n.css(e,'marginTop',!0),left:i.left-r.left-n.css(e,'marginLeft',!0)}},n.height=function(e,t){var a=e.offsetHeight;return t?a+=n.css(e,'marginTop',!0)+n.css(e,'marginBottom',!0):a-=n.css(e,'paddingTop',!0)+n.css(e,'paddingBottom',!0)+n.css(e,'borderTopWidth',!0)+n.css(e,'borderBottomWidth',!0),a},n.width=function(e,t){var a=e.offsetWidth;return t?a+=n.css(e,'marginLeft',!0)+n.css(e,'marginRight',!0):a-=n.css(e,'paddingLeft',!0)+n.css(e,'paddingRight',!0)+n.css(e,'borderLeftWidth',!0)+n.css(e,'borderRightWidth',!0),a},n}),angular.module('mgcrea.ngStrap.helpers.debounce',[]).factory('debounce',['$timeout',function(e){return function(t,n,a){var o=null;return function(){var i=this,r=arguments,l=a&&!o;return o&&e.cancel(o),o=e(function(){o=null,a||t.apply(i,r)},n,!1),l&&t.apply(i,r),o}}}]).factory('throttle',['$timeout',function(e){return function(t,n,a){var o=null;return a||(a={}),function(){var i=this,r=arguments;o||(a.leading!==!1&&t.apply(i,r),o=e(function(){o=null,a.trailing!==!1&&t.apply(i,r)},n,!1))}}}]),angular.module('mgcrea.ngStrap.helpers.dateParser',[]).provider('$dateParser',['$localeProvider',function(e){function t(){this.year=1970,this.month=0,this.day=1,this.hours=0,this.minutes=0,this.seconds=0,this.milliseconds=0}function n(){}function a(e){return!isNaN(parseFloat(e))&&isFinite(e)}function o(e,t){for(var n=e.length,a=t.toString().toLowerCase(),o=0;o<n;o++)if(e[o].toLowerCase()===a)return o;return-1}t.prototype.setMilliseconds=function(e){this.milliseconds=e},t.prototype.setSeconds=function(e){this.seconds=e},t.prototype.setMinutes=function(e){this.minutes=e},t.prototype.setHours=function(e){this.hours=e},t.prototype.getHours=function(){return this.hours},t.prototype.setDate=function(e){this.day=e},t.prototype.setMonth=function(e){this.month=e},t.prototype.setFullYear=function(e){this.year=e},t.prototype.fromDate=function(e){return this.year=e.getFullYear(),this.month=e.getMonth(),this.day=e.getDate(),this.hours=e.getHours(),this.minutes=e.getMinutes(),this.seconds=e.getSeconds(),this.milliseconds=e.getMilliseconds(),this},t.prototype.toDate=function(){return new Date(this.year,this.month,this.day,this.hours,this.minutes,this.seconds,this.milliseconds)};var i=t.prototype,r=this.defaults={format:'shortDate',strict:!1};this.$get=['$locale','dateFilter',function(e,l){var s=function(s){function u(e){var t=c(e);return g(t)}function c(e){var t=d(e),n=t.replace(/''/g,'\\\''),a=/('(?:\\'|.)*?')/,o=n.split(a),i=Object.keys(b),r=[];return angular.forEach(o,function(e){if(f(e))e=p(e);else for(var t=0;t<i.length;t++)e=e.split(i[t]).join('${'+t+'}');r.push(e)}),r.join('')}function d(e){return e.replace(/\\/g,'[\\\\]').replace(/-/g,'[-]').replace(/\./g,'[.]').replace(/\*/g,'[*]').replace(/\+/g,'[+]').replace(/\?/g,'[?]').replace(/\$/g,'[$]').replace(/\^/g,'[^]').replace(/\//g,'[/]').replace(/\\s/g,'[\\s]')}function f(e){return/^'.*'$/.test(e)}function p(e){return e.replace(/^'(.*)'$/,'$1')}function g(e){for(var t=Object.keys(b),n=e,a=0;a<t.length;a++)n=n.split('${'+a+'}').join('('+b[t[a]]+')');return new RegExp('^'+n+'$',['i'])}function m(e){var t=c(e);return $(t)}function $(e){for(var t,n,a,o,i=Object.keys(b),r=new RegExp('\\${(\\d+)}','g'),l=[];null!==(t=r.exec(e));)n=t[1],a=i[n],o=D[a],l.push(o);return l}var h,v,w=angular.extend({},r,s),y={},b={sss:'[0-9]{3}',ss:'[0-5][0-9]',s:w.strict?'[1-5]?[0-9]':'[0-9]|[0-5][0-9]',mm:'[0-5][0-9]',m:w.strict?'[1-5]?[0-9]':'[0-9]|[0-5][0-9]',HH:'[01][0-9]|2[0-3]',H:w.strict?'1?[0-9]|2[0-3]':'[01]?[0-9]|2[0-3]',hh:'[0][1-9]|[1][012]',h:w.strict?'[1-9]|1[012]':'0?[1-9]|1[012]',a:'AM|PM',EEEE:e.DATETIME_FORMATS.DAY.join('|'),EEE:e.DATETIME_FORMATS.SHORTDAY.join('|'),dd:'0[1-9]|[12][0-9]|3[01]',d:w.strict?'[1-9]|[1-2][0-9]|3[01]':'0?[1-9]|[1-2][0-9]|3[01]',MMMM:e.DATETIME_FORMATS.MONTH.join('|'),MMM:e.DATETIME_FORMATS.SHORTMONTH.join('|'),MM:'0[1-9]|1[012]',M:w.strict?'[1-9]|1[012]':'0?[1-9]|1[012]',yyyy:'[1]{1}[0-9]{3}|[2]{1}[0-9]{3}',yy:'[0-9]{2}',y:w.strict?'-?(0|[1-9][0-9]{0,3})':'-?0*[0-9]{1,4}'},D={sss:i.setMilliseconds,ss:i.setSeconds,s:i.setSeconds,mm:i.setMinutes,m:i.setMinutes,HH:i.setHours,H:i.setHours,hh:i.setHours,h:i.setHours,EEEE:n,EEE:n,dd:i.setDate,d:i.setDate,a:function(e){var t=this.getHours()%12;return this.setHours(e.match(/pm/i)?t+12:t)},MMMM:function(t){return this.setMonth(o(e.DATETIME_FORMATS.MONTH,t))},MMM:function(t){return this.setMonth(o(e.DATETIME_FORMATS.SHORTMONTH,t))},MM:function(e){return this.setMonth(1*e-1)},M:function(e){return this.setMonth(1*e-1)},yyyy:i.setFullYear,yy:function(e){return this.setFullYear(2e3+1*e)},y:function(e){return 1*e<=50&&2===e.length?this.setFullYear(2e3+1*e):this.setFullYear(1*e)}};return y.init=function(){y.$format=e.DATETIME_FORMATS[w.format]||w.format,h=u(y.$format),v=m(y.$format)},y.isValid=function(e){return angular.isDate(e)?!isNaN(e.getTime()):h.test(e)},y.parse=function(n,a,o,i){o&&(o=e.DATETIME_FORMATS[o]||o),angular.isDate(n)&&(n=l(n,o||y.$format,i));var r=o?u(o):h,s=o?m(o):v,c=r.exec(n);if(!c)return!1;for(var d=a&&!isNaN(a.getTime())?(new t).fromDate(a):(new t).fromDate(new Date(1970,0,1,0)),f=0;f<c.length-1;f++)s[f]&&s[f].call(d,c[f+1]);var p=d.toDate();return parseInt(d.day,10)===p.getDate()&&p},y.getDateForAttribute=function(e,t){var n;if('today'===t){var o=new Date;n=new Date(o.getFullYear(),o.getMonth(),o.getDate()+('maxDate'===e?1:0),0,0,0,'minDate'===e?0:-1)}else n=angular.isString(t)&&t.match(/^".+"$/)?new Date(t.substr(1,t.length-2)):a(t)?new Date(parseInt(t,10)):angular.isString(t)&&0===t.length?'minDate'===e?-(1/0):+(1/0):new Date(t);return n},y.getTimeForAttribute=function(e,t){var n;return n='now'===t?(new Date).setFullYear(1970,0,1):angular.isString(t)&&t.match(/^".+"$/)?new Date(t.substr(1,t.length-2)).setFullYear(1970,0,1):a(t)?new Date(parseInt(t,10)).setFullYear(1970,0,1):angular.isString(t)&&0===t.length?'minTime'===e?-(1/0):+(1/0):y.parse(t,new Date(1970,0,1,0))},y.daylightSavingAdjust=function(e){return e?(e.setHours(e.getHours()>12?e.getHours()+2:0),e):null},y.timezoneOffsetAdjust=function(e,t,n){return e?(t&&'UTC'===t&&(e=new Date(e.getTime()),e.setMinutes(e.getMinutes()+(n?-1:1)*e.getTimezoneOffset())),e):null},y.init(),y};return s}]}]),angular.module('mgcrea.ngStrap.helpers.dateFormatter',[]).service('$dateFormatter',['$locale','dateFilter',function(e,t){function n(e){return/(h+)([:\.])?(m+)([:\.])?(s*)[ ]?(a?)/i.exec(e).slice(1)}this.getDefaultLocale=function(){return e.id},this.getDatetimeFormat=function(t,n){return e.DATETIME_FORMATS[t]||t},this.weekdaysShort=function(t){return e.DATETIME_FORMATS.SHORTDAY},this.hoursFormat=function(e){return n(e)[0]},this.minutesFormat=function(e){return n(e)[2]},this.secondsFormat=function(e){return n(e)[4]},this.timeSeparator=function(e){return n(e)[1]},this.showSeconds=function(e){return!!n(e)[4]},this.showAM=function(e){return!!n(e)[5]},this.formatDate=function(e,n,a,o){return t(e,n,o)}}]),angular.module('mgcrea.ngStrap.core',[]).service('$bsCompiler',a),angular.module('mgcrea.ngStrap.dropdown',['mgcrea.ngStrap.tooltip']).provider('$dropdown',function(){var e=this.defaults={animation:'am-fade',prefixClass:'dropdown',prefixEvent:'dropdown',placement:'bottom-left',templateUrl:'dropdown/dropdown.tpl.html',trigger:'click',container:!1,keyboard:!0,html:!1,delay:0};this.$get=['$window','$rootScope','$tooltip','$timeout',function(t,n,a,o){function i(t,i){function s(e){if(e.target!==t[0])return e.target!==t[0]&&u.hide()}var u={},c=angular.extend({},e,i);u.$scope=c.scope&&c.scope.$new()||n.$new(),u=a(t,c);var d=t.parent();u.$onKeyDown=function(e){if(/(38|40)/.test(e.keyCode)){e.preventDefault(),e.stopPropagation();var t=angular.element(u.$element[0].querySelectorAll('li:not(.divider) a'));if(t.length){var n;angular.forEach(t,function(e,t){l&&l.call(e,':focus')&&(n=t)}),38===e.keyCode&&n>0?n--:40===e.keyCode&&n<t.length-1?n++:angular.isUndefined(n)&&(n=0),t.eq(n)[0].focus()}}};var f=u.show;u.show=function(){f(),o(function(){c.keyboard&&u.$element&&u.$element.on('keydown',u.$onKeyDown),r.on('click',s)},0,!1),d.hasClass('dropdown')&&d.addClass('open')};var p=u.hide;u.hide=function(){u.$isShown&&(c.keyboard&&u.$element&&u.$element.off('keydown',u.$onKeyDown),r.off('click',s),d.hasClass('dropdown')&&d.removeClass('open'),p())};var g=u.destroy;return u.destroy=function(){r.off('click',s),g()},u}var r=angular.element(t.document.body),l=Element.prototype.matchesSelector||Element.prototype.webkitMatchesSelector||Element.prototype.mozMatchesSelector||Element.prototype.msMatchesSelector||Element.prototype.oMatchesSelector;return i}]}).directive('bsDropdown',['$window','$sce','$dropdown',function(e,t,a){return{restrict:'EAC',scope:!0,compile:function(e,t){if(!t.bsDropdown){for(var o=e[0].nextSibling;o&&1!==o.nodeType;)o=o.nextSibling;o&&o.className.split(' ').indexOf('dropdown-menu')>=0&&(t.template=o.outerHTML,t.templateUrl=n,o.parentNode.removeChild(o))}return function(e,n,o){var i={scope:e};angular.forEach(['template','templateUrl','controller','controllerAs','placement','container','delay','trigger','keyboard','html','animation','id','autoClose'],function(e){angular.isDefined(t[e])&&(i[e]=t[e])});var r=/^(false|0|)$/i;angular.forEach(['html','container'],function(e){angular.isDefined(o[e])&&r.test(o[e])&&(i[e]=!1)}),angular.forEach(['onBeforeShow','onShow','onBeforeHide','onHide'],function(t){var n='bs'+t.charAt(0).toUpperCase()+t.slice(1);angular.isDefined(o[n])&&(i[t]=e.$eval(o[n]))}),o.bsDropdown&&e.$watch(o.bsDropdown,function(t,n){e.content=t},!0);var l=a(n,i);o.bsShow&&e.$watch(o.bsShow,function(e,t){l&&angular.isDefined(e)&&(angular.isString(e)&&(e=!!e.match(/true|,?(dropdown),?/i)),e===!0?l.show():l.hide())}),e.$on('$destroy',function(){l&&l.destroy(),i=null,l=null})}}}}]),angular.module('mgcrea.ngStrap.button',[]).provider('$button',function(){var e=this.defaults={activeClass:'active',toggleEvent:'click'};this.$get=function(){return{defaults:e}}}).directive('bsCheckboxGroup',function(){return{restrict:'A',require:'ngModel',compile:function(e,t){e.attr('data-toggle','buttons'),e.removeAttr('ng-model');var n=e[0].querySelectorAll('input[type="checkbox"]');angular.forEach(n,function(e){var n=angular.element(e);n.attr('bs-checkbox',''),n.attr('ng-model',t.ngModel+'.'+n.attr('value'))})}}}).directive('bsCheckbox',['$button','$$rAF',function(e,t){var n=e.defaults,a=/^(true|false|\d+)$/;return{restrict:'A',require:'ngModel',link:function(e,o,i,r){var l=n,s='INPUT'===o[0].nodeName,u=s?o.parent():o,c=!angular.isDefined(i.trueValue)||i.trueValue;a.test(i.trueValue)&&(c=e.$eval(i.trueValue));var d=!!angular.isDefined(i.falseValue)&&i.falseValue;a.test(i.falseValue)&&(d=e.$eval(i.falseValue));var f='boolean'!=typeof c||'boolean'!=typeof d;f&&(r.$parsers.push(function(e){return e?c:d}),r.$formatters.push(function(e){return angular.equals(e,c)})),r.$render=function(){var e=!!r.$viewValue;t(function(){s&&(o[0].checked=e),u.toggleClass(l.activeClass,e)})},o.bind(l.toggleEvent,function(){e.$apply(function(){s||r.$setViewValue(!u.hasClass('active')),r.$render()})})}}}]).directive('bsRadioGroup',function(){return{restrict:'A',require:'ngModel',compile:function(e,t){e.attr('data-toggle','buttons'),e.removeAttr('ng-model');var n=e[0].querySelectorAll('input[type="radio"]');angular.forEach(n,function(e){angular.element(e).attr('bs-radio',''),angular.element(e).attr('ng-model',t.ngModel)})}}}).directive('bsRadio',['$button','$$rAF',function(e,t){var n=e.defaults,a=/^(true|false|\d+)$/;return{restrict:'A',require:'ngModel',link:function(e,o,i,r){var l,s=n,u='INPUT'===o[0].nodeName,c=u?o.parent():o;i.$observe('value',function(t){l='boolean'!=typeof t&&a.test(t)?e.$eval(t):t,r.$render()}),r.$render=function(){var e=angular.equals(r.$viewValue,l);t(function(){u&&(o[0].checked=e),c.toggleClass(s.activeClass,e)})},o.bind(s.toggleEvent,function(){e.$apply(function(){r.$setViewValue(l),r.$render()})})}}}]),angular.module('mgcrea.ngStrap.datepicker',['mgcrea.ngStrap.helpers.dateParser','mgcrea.ngStrap.helpers.dateFormatter','mgcrea.ngStrap.tooltip']).provider('$datepicker',function(){var e=this.defaults={animation:'am-fade',prefixClass:'datepicker',placement:'bottom-left',templateUrl:'datepicker/datepicker.tpl.html',trigger:'focus',container:!1,keyboard:!0,html:!1,delay:0,useNative:!1,dateType:'date',dateFormat:'shortDate',timezone:null,modelDateFormat:null,dayFormat:'dd',monthFormat:'MMM',yearFormat:'yyyy',monthTitleFormat:'MMMM yyyy',yearTitleFormat:'yyyy',strictFormat:!1,autoclose:!1,minDate:-(1/0),maxDate:+(1/0),startView:0,minView:0,startWeek:0,daysOfWeekDisabled:'',hasToday:!1,hasClear:!1,iconLeft:'glyphicon glyphicon-chevron-left',iconRight:'glyphicon glyphicon-chevron-right'};this.$get=['$window','$document','$rootScope','$sce','$dateFormatter','datepickerViews','$tooltip','$timeout',function(t,n,a,o,i,r,l,s){function u(t,n,a){function o(e){e.selected=u.$isSelected(e.date)}function i(){t[0].focus()}var u=l(t,angular.extend({},e,a)),f=a.scope,p=u.$options,g=u.$scope;p.startView&&(p.startView-=p.minView);var m=r(u);u.$views=m.views;var $=m.viewDate;g.$mode=p.startView,g.$iconLeft=p.iconLeft,g.$iconRight=p.iconRight,g.$hasToday=p.hasToday,g.$hasClear=p.hasClear;var h=u.$views[g.$mode];g.$select=function(e,t){t||u.select(e)},g.$selectPane=function(e){u.$selectPane(e)},g.$toggleMode=function(){u.setMode((g.$mode+1)%u.$views.length)},g.$setToday=function(){p.autoclose?(u.setMode(0),u.select(new Date)):u.select(new Date,!0)},g.$clear=function(){p.autoclose?(u.setMode(0),u.select(null)):u.select(null,!0)},u.update=function(e){angular.isDate(e)&&!isNaN(e.getTime())&&(u.$date=e,h.update.call(h,e)),u.$build(!0)},u.updateDisabledDates=function(e){p.disabledDateRanges=e;for(var t=0,n=g.rows.length;t<n;t++)angular.forEach(g.rows[t],u.$setDisabledEl)},u.select=function(e,t){angular.isDate(e)?angular.isDate(n.$dateValue)&&!isNaN(n.$dateValue.getTime())||(n.$dateValue=new Date(e)):n.$dateValue=null,!g.$mode||t?(n.$setViewValue(angular.copy(e)),n.$render(),p.autoclose&&!t&&s(function(){u.hide(!0)})):(angular.extend($,{year:e.getFullYear(),month:e.getMonth(),date:e.getDate()}),u.setMode(g.$mode-1),u.$build())},u.setMode=function(e){g.$mode=e,h=u.$views[g.$mode],u.$build()},u.$build=function(e){e===!0&&h.built||(e!==!1||h.built)&&h.build.call(h)},u.$updateSelected=function(){for(var e=0,t=g.rows.length;e<t;e++)angular.forEach(g.rows[e],o)},u.$isSelected=function(e){return h.isSelected(e)},u.$setDisabledEl=function(e){e.disabled=h.isDisabled(e.date)},u.$selectPane=function(e){var t=h.steps,n=new Date(Date.UTC($.year+(t.year||0)*e,$.month+(t.month||0)*e,1));angular.extend($,{year:n.getUTCFullYear(),month:n.getUTCMonth(),date:n.getUTCDate()}),u.$build()},u.$onMouseDown=function(e){if(e.preventDefault(),e.stopPropagation(),d){var t=angular.element(e.target);'button'!==t[0].nodeName.toLowerCase()&&(t=t.parent()),t.triggerHandler('click')}},u.$onKeyDown=function(e){if(/(38|37|39|40|13)/.test(e.keyCode)&&!e.shiftKey&&!e.altKey){
if(e.preventDefault(),e.stopPropagation(),13===e.keyCode)return void(g.$mode?g.$apply(function(){u.setMode(g.$mode-1)}):u.hide(!0));h.onKeyDown(e),f.$digest()}};var v=u.init;u.init=function(){return c&&p.useNative?(t.prop('type','date'),void t.css('-webkit-appearance','textfield')):(d&&(t.prop('type','text'),t.attr('readonly','true'),t.on('click',i)),void v())};var w=u.destroy;u.destroy=function(){c&&p.useNative&&t.off('click',i),w()};var y=u.show;u.show=function(){!d&&t.attr('readonly')||t.attr('disabled')||(y(),s(function(){u.$isShown&&(u.$element.on(d?'touchstart':'mousedown',u.$onMouseDown),p.keyboard&&t.on('keydown',u.$onKeyDown))},0,!1))};var b=u.hide;return u.hide=function(e){u.$isShown&&(u.$element.off(d?'touchstart':'mousedown',u.$onMouseDown),p.keyboard&&t.off('keydown',u.$onKeyDown),b(e))},u}var c=/(ip[ao]d|iphone|android)/gi.test(t.navigator.userAgent),d='createTouch'in t.document&&c;return e.lang||(e.lang=i.getDefaultLocale()),u.defaults=e,u}]}).directive('bsDatepicker',['$window','$parse','$q','$dateFormatter','$dateParser','$datepicker',function(e,t,n,a,o,i){var r=/(ip[ao]d|iphone|android)/gi.test(e.navigator.userAgent);return{restrict:'EAC',require:'ngModel',link:function(e,t,n,l){function s(e){return e&&e.length?e:null}function u(e){if(angular.isDate(e)){var t=isNaN(p.$options.minDate)||e.getTime()>=p.$options.minDate,n=isNaN(p.$options.maxDate)||e.getTime()<=p.$options.maxDate,a=t&&n;l.$setValidity('date',a),l.$setValidity('min',t),l.$setValidity('max',n),a&&(l.$dateValue=e)}}function c(){return!l.$dateValue||isNaN(l.$dateValue.getTime())?'':m(l.$dateValue,d.dateFormat)}var d={scope:e};angular.forEach(['template','templateUrl','controller','controllerAs','placement','container','delay','trigger','html','animation','autoclose','dateType','dateFormat','timezone','modelDateFormat','dayFormat','strictFormat','startWeek','startDate','useNative','lang','startView','minView','iconLeft','iconRight','daysOfWeekDisabled','id','prefixClass','prefixEvent','hasToday','hasClear'],function(e){angular.isDefined(n[e])&&(d[e]=n[e])});var f=/^(false|0|)$/i;angular.forEach(['html','container','autoclose','useNative','hasToday','hasClear'],function(e){angular.isDefined(n[e])&&f.test(n[e])&&(d[e]=!1)}),angular.forEach(['onBeforeShow','onShow','onBeforeHide','onHide'],function(t){var a='bs'+t.charAt(0).toUpperCase()+t.slice(1);angular.isDefined(n[a])&&(d[t]=e.$eval(n[a]))});var p=i(t,l,d);d=p.$options,r&&d.useNative&&(d.dateFormat='yyyy-MM-dd');var g=d.lang,m=function(e,t){return a.formatDate(e,t,g)},$=o({format:d.dateFormat,lang:g,strict:d.strictFormat});n.bsShow&&e.$watch(n.bsShow,function(e,t){p&&angular.isDefined(e)&&(angular.isString(e)&&(e=!!e.match(/true|,?(datepicker),?/i)),e===!0?p.show():p.hide())}),angular.forEach(['minDate','maxDate'],function(e){angular.isDefined(n[e])&&n.$observe(e,function(t){p.$options[e]=$.getDateForAttribute(e,t),isNaN(p.$options[e])||p.$build(!1),u(l.$dateValue)})}),angular.isDefined(n.dateFormat)&&n.$observe('dateFormat',function(e){p.$options.dateFormat=e}),e.$watch(n.ngModel,function(e,t){p.update(l.$dateValue)},!0),angular.isDefined(n.disabledDates)&&e.$watch(n.disabledDates,function(e,t){e=s(e),t=s(t),e&&p.updateDisabledDates(e)}),l.$parsers.unshift(function(e){var t;if(!e)return l.$setValidity('date',!0),null;var n=$.parse(e,l.$dateValue);return!n||isNaN(n.getTime())?void l.$setValidity('date',!1):(u(n),'string'===d.dateType?(t=$.timezoneOffsetAdjust(n,d.timezone,!0),m(t,d.modelDateFormat||d.dateFormat)):(t=$.timezoneOffsetAdjust(l.$dateValue,d.timezone,!0),'number'===d.dateType?t.getTime():'unix'===d.dateType?t.getTime()/1e3:'iso'===d.dateType?t.toISOString():new Date(t)))}),l.$formatters.push(function(e){var t;return t=angular.isUndefined(e)||null===e?NaN:angular.isDate(e)?e:'string'===d.dateType?$.parse(e,null,d.modelDateFormat):'unix'===d.dateType?new Date(1e3*e):new Date(e),l.$dateValue=$.timezoneOffsetAdjust(t,d.timezone),c()}),l.$render=function(){t.val(c())},e.$on('$destroy',function(){p&&p.destroy(),d=null,p=null})}}}]).provider('datepickerViews',function(){function e(e,t){for(var n=[];e.length>0;)n.push(e.splice(0,t));return n}function t(e,t){return(e%t+t)%t}this.$get=['$dateFormatter','$dateParser','$sce',function(n,a,o){return function(i){var r=i.$scope,l=i.$options,s=l.lang,u=function(e,t){return n.formatDate(e,t,s)},c=a({format:l.dateFormat,lang:s,strict:l.strictFormat}),d=n.weekdaysShort(s),f=d.slice(l.startWeek).concat(d.slice(0,l.startWeek)),p=o.trustAsHtml('<th class="dow text-center">'+f.join('</th><th class="dow text-center">')+'</th>'),g=i.$date||(l.startDate?c.getDateForAttribute('startDate',l.startDate):new Date),m={year:g.getFullYear(),month:g.getMonth(),date:g.getDate()},$=[{format:l.dayFormat,split:7,steps:{month:1},update:function(e,t){!this.built||t||e.getFullYear()!==m.year||e.getMonth()!==m.month?(angular.extend(m,{year:i.$date.getFullYear(),month:i.$date.getMonth(),date:i.$date.getDate()}),i.$build()):e.getDate()===m.date&&1!==e.getDate()||(m.date=i.$date.getDate(),i.$updateSelected())},build:function(){var n=new Date(m.year,m.month,1),a=n.getTimezoneOffset(),o=new Date(+n-864e5*t(n.getDay()-l.startWeek,7)),s=o.getTimezoneOffset(),d=c.timezoneOffsetAdjust(new Date,l.timezone).toDateString();s!==a&&(o=new Date(+o+6e4*(s-a)));for(var f,g=[],$=0;$<42;$++)f=c.daylightSavingAdjust(new Date(o.getFullYear(),o.getMonth(),o.getDate()+$)),g.push({date:f,isToday:f.toDateString()===d,label:u(f,this.format),selected:i.$date&&this.isSelected(f),muted:f.getMonth()!==m.month,disabled:this.isDisabled(f)});r.title=u(n,l.monthTitleFormat),r.showLabels=!0,r.labels=p,r.rows=e(g,this.split),r.isTodayDisabled=this.isDisabled(new Date),this.built=!0},isSelected:function(e){return i.$date&&e.getFullYear()===i.$date.getFullYear()&&e.getMonth()===i.$date.getMonth()&&e.getDate()===i.$date.getDate()},isDisabled:function(e){var t=e.getTime();if(t<l.minDate||t>l.maxDate)return!0;if(l.daysOfWeekDisabled.indexOf(e.getDay())!==-1)return!0;if(l.disabledDateRanges)for(var n=0;n<l.disabledDateRanges.length;n++)if(t>=l.disabledDateRanges[n].start&&t<=l.disabledDateRanges[n].end)return!0;return!1},onKeyDown:function(e){if(i.$date){var t,n=i.$date.getTime();37===e.keyCode?t=new Date(n-864e5):38===e.keyCode?t=new Date(n-6048e5):39===e.keyCode?t=new Date(n+864e5):40===e.keyCode&&(t=new Date(n+6048e5)),this.isDisabled(t)||i.select(t,!0)}}},{name:'month',format:l.monthFormat,split:4,steps:{year:1},update:function(e,t){this.built&&e.getFullYear()===m.year?e.getMonth()!==m.month&&(angular.extend(m,{month:i.$date.getMonth(),date:i.$date.getDate()}),i.$updateSelected()):(angular.extend(m,{year:i.$date.getFullYear(),month:i.$date.getMonth(),date:i.$date.getDate()}),i.$build())},build:function(){for(var t,n=[],a=0;a<12;a++)t=new Date(m.year,a,1),n.push({date:t,label:u(t,this.format),selected:i.$isSelected(t),disabled:this.isDisabled(t)});r.title=u(t,l.yearTitleFormat),r.showLabels=!1,r.rows=e(n,this.split),this.built=!0},isSelected:function(e){return i.$date&&e.getFullYear()===i.$date.getFullYear()&&e.getMonth()===i.$date.getMonth()},isDisabled:function(e){var t=+new Date(e.getFullYear(),e.getMonth()+1,0);return t<l.minDate||e.getTime()>l.maxDate},onKeyDown:function(e){if(i.$date){var t=i.$date.getMonth(),n=new Date(i.$date);37===e.keyCode?n.setMonth(t-1):38===e.keyCode?n.setMonth(t-4):39===e.keyCode?n.setMonth(t+1):40===e.keyCode&&n.setMonth(t+4),this.isDisabled(n)||i.select(n,!0)}}},{name:'year',format:l.yearFormat,split:4,steps:{year:12},update:function(e,t){!this.built||t||parseInt(e.getFullYear()/20,10)!==parseInt(m.year/20,10)?(angular.extend(m,{year:i.$date.getFullYear(),month:i.$date.getMonth(),date:i.$date.getDate()}),i.$build()):e.getFullYear()!==m.year&&(angular.extend(m,{year:i.$date.getFullYear(),month:i.$date.getMonth(),date:i.$date.getDate()}),i.$updateSelected())},build:function(){for(var t,n=m.year-m.year%(3*this.split),a=[],o=0;o<12;o++)t=new Date(n+o,0,1),a.push({date:t,label:u(t,this.format),selected:i.$isSelected(t),disabled:this.isDisabled(t)});r.title=a[0].label+'-'+a[a.length-1].label,r.showLabels=!1,r.rows=e(a,this.split),this.built=!0},isSelected:function(e){return i.$date&&e.getFullYear()===i.$date.getFullYear()},isDisabled:function(e){var t=+new Date(e.getFullYear()+1,0,0);return t<l.minDate||e.getTime()>l.maxDate},onKeyDown:function(e){if(i.$date){var t=i.$date.getFullYear(),n=new Date(i.$date);37===e.keyCode?n.setYear(t-1):38===e.keyCode?n.setYear(t-4):39===e.keyCode?n.setYear(t+1):40===e.keyCode&&n.setYear(t+4),this.isDisabled(n)||i.select(n,!0)}}}];return{views:l.minView?Array.prototype.slice.call($,l.minView):$,viewDate:m}}}]}),angular.module('mgcrea.ngStrap.collapse',[]).provider('$collapse',function(){var e=this.defaults={animation:'am-collapse',disallowToggle:!1,activeClass:'in',startCollapsed:!1,allowMultiple:!1},t=this.controller=function(t,n,a){function o(e){for(var t=s.$targets.$active,n=0;n<t.length;n++)e<t[n]&&(t[n]=t[n]-1),t[n]===s.$targets.length&&(t[n]=s.$targets.length-1)}function i(e){var t=s.$targets.$active;return t.indexOf(e)!==-1}function r(e){var t=s.$targets.$active.indexOf(e);t!==-1&&s.$targets.$active.splice(t,1)}function l(e){s.$options.allowMultiple||s.$targets.$active.splice(0,1),s.$targets.$active.indexOf(e)===-1&&s.$targets.$active.push(e)}var s=this;s.$options=angular.copy(e),angular.forEach(['animation','disallowToggle','activeClass','startCollapsed','allowMultiple'],function(e){angular.isDefined(a[e])&&(s.$options[e]=a[e])});var u=/^(false|0|)$/i;angular.forEach(['disallowToggle','startCollapsed','allowMultiple'],function(e){angular.isDefined(a[e])&&u.test(a[e])&&(s.$options[e]=!1)}),s.$toggles=[],s.$targets=[],s.$viewChangeListeners=[],s.$registerToggle=function(e){s.$toggles.push(e)},s.$registerTarget=function(e){s.$targets.push(e)},s.$unregisterToggle=function(e){var t=s.$toggles.indexOf(e);s.$toggles.splice(t,1)},s.$unregisterTarget=function(e){var t=s.$targets.indexOf(e);s.$targets.splice(t,1),s.$options.allowMultiple&&r(e),o(t),s.$viewChangeListeners.forEach(function(e){e()})},s.$targets.$active=s.$options.startCollapsed?[]:[0],s.$setActive=t.$setActive=function(e){angular.isArray(e)?s.$targets.$active=e:!s.$options.disallowToggle&&i(e)?r(e):l(e),s.$viewChangeListeners.forEach(function(e){e()})},s.$activeIndexes=function(){return s.$options.allowMultiple?s.$targets.$active:1===s.$targets.$active.length?s.$targets.$active[0]:-1}};this.$get=function(){var n={};return n.defaults=e,n.controller=t,n}}).directive('bsCollapse',['$window','$animate','$collapse',function(e,t,n){return{require:['?ngModel','bsCollapse'],controller:['$scope','$element','$attrs',n.controller],link:function(e,t,n,a){var o=a[0],i=a[1];o&&(i.$viewChangeListeners.push(function(){o.$setViewValue(i.$activeIndexes())}),o.$formatters.push(function(e){if(angular.isArray(e))i.$setActive(e);else{var t=i.$activeIndexes();angular.isArray(t)?t.indexOf(1*e)===-1&&i.$setActive(1*e):t!==1*e&&i.$setActive(1*e)}return e}))}}}]).directive('bsCollapseToggle',function(){return{require:['^?ngModel','^bsCollapse'],link:function(e,t,n,a){var o=a[1];t.attr('data-toggle','collapse'),o.$registerToggle(t),e.$on('$destroy',function(){o.$unregisterToggle(t)}),t.on('click',function(){if(!n.disabled){var a=n.bsCollapseToggle&&'bs-collapse-toggle'!==n.bsCollapseToggle?n.bsCollapseToggle:o.$toggles.indexOf(t);o.$setActive(1*a),e.$apply()}})}}}).directive('bsCollapseTarget',['$animate',function(e){return{require:['^?ngModel','^bsCollapse'],link:function(t,n,a,o){function i(){var t=r.$targets.indexOf(n),a=r.$activeIndexes(),o='removeClass';angular.isArray(a)?a.indexOf(t)!==-1&&(o='addClass'):t===a&&(o='addClass'),e[o](n,r.$options.activeClass)}var r=o[1];n.addClass('collapse'),r.$options.animation&&n.addClass(r.$options.animation),r.$registerTarget(n),t.$on('$destroy',function(){r.$unregisterTarget(n)}),r.$viewChangeListeners.push(function(){i()}),i()}}}]),angular.module('mgcrea.ngStrap.aside',['mgcrea.ngStrap.modal']).provider('$aside',function(){var e=this.defaults={animation:'am-fade-and-slide-right',prefixClass:'aside',prefixEvent:'aside',placement:'right',templateUrl:'aside/aside.tpl.html',contentTemplate:!1,container:!1,element:null,backdrop:!0,keyboard:!0,html:!1,show:!0};this.$get=['$modal',function(t){function n(n){var a={},o=angular.extend({},e,n);return a=t(o)}return n}]}).directive('bsAside',['$window','$sce','$aside',function(e,t,n){return{restrict:'EAC',scope:!0,link:function(e,a,o,i){var r={scope:e,element:a,show:!1};angular.forEach(['template','templateUrl','controller','controllerAs','contentTemplate','placement','backdrop','keyboard','html','container','animation'],function(e){angular.isDefined(o[e])&&(r[e]=o[e])});var l=/^(false|0|)$/i;angular.forEach(['backdrop','keyboard','html','container'],function(e){angular.isDefined(o[e])&&l.test(o[e])&&(r[e]=!1)}),angular.forEach(['onBeforeShow','onShow','onBeforeHide','onHide'],function(t){var n='bs'+t.charAt(0).toUpperCase()+t.slice(1);angular.isDefined(o[n])&&(r[t]=e.$eval(o[n]))}),angular.forEach(['title','content'],function(n){o[n]&&o.$observe(n,function(a,o){e[n]=t.trustAsHtml(a)})}),o.bsAside&&e.$watch(o.bsAside,function(t,n){angular.isObject(t)?angular.extend(e,t):e.content=t},!0);var s=n(r);a.on(o.trigger||'click',s.toggle),e.$on('$destroy',function(){s&&s.destroy(),r=null,s=null})}}}]),angular.module('mgcrea.ngStrap.alert',['mgcrea.ngStrap.modal']).provider('$alert',function(){var e=this.defaults={animation:'am-fade',prefixClass:'alert',prefixEvent:'alert',placement:null,templateUrl:'alert/alert.tpl.html',container:!1,element:null,backdrop:!1,keyboard:!0,show:!0,duration:!1,type:!1,dismissable:!0};this.$get=['$modal','$timeout',function(t,n){function a(a){var o={},i=angular.extend({},e,a);o=t(i),o.$scope.dismissable=!!i.dismissable,i.type&&(o.$scope.type=i.type);var r=o.show;return i.duration&&(o.show=function(){r(),n(function(){o.hide()},1e3*i.duration)}),o}return a}]}).directive('bsAlert',['$window','$sce','$alert',function(e,t,n){return{restrict:'EAC',scope:!0,link:function(e,a,o,i){var r={scope:e,element:a,show:!1};angular.forEach(['template','templateUrl','controller','controllerAs','placement','keyboard','html','container','animation','duration','dismissable'],function(e){angular.isDefined(o[e])&&(r[e]=o[e])});var l=/^(false|0|)$/i;angular.forEach(['keyboard','html','container','dismissable'],function(e){angular.isDefined(o[e])&&l.test(o[e])&&(r[e]=!1)}),angular.forEach(['onBeforeShow','onShow','onBeforeHide','onHide'],function(t){var n='bs'+t.charAt(0).toUpperCase()+t.slice(1);angular.isDefined(o[n])&&(r[t]=e.$eval(o[n]))}),e.hasOwnProperty('title')||(e.title=''),angular.forEach(['title','content','type'],function(n){o[n]&&o.$observe(n,function(a,o){e[n]=t.trustAsHtml(a)})}),o.bsAlert&&e.$watch(o.bsAlert,function(t,n){angular.isObject(t)?angular.extend(e,t):e.content=t},!0);var s=n(r);a.on(o.trigger||'click',s.toggle),e.$on('$destroy',function(){s&&s.destroy(),r=null,s=null})}}}]),angular.module('mgcrea.ngStrap.affix',['mgcrea.ngStrap.helpers.dimensions','mgcrea.ngStrap.helpers.debounce']).provider('$affix',function(){var e=this.defaults={offsetTop:'auto',inlineStyles:!0,setWidth:!0};this.$get=['$window','debounce','dimensions',function(t,n,a){function o(o,l){function s(e,t,n){var a=u(),o=c();return a<=v?'top':null!==e?a+e<=t.top?'middle':'bottom':null!==w&&t.top+n+$>=o-w?'bottom':'middle'}function u(){return p[0]===t?t.pageYOffset:p[0].scrollTop}function c(){return p[0]===t?t.document.body.scrollHeight:p[0].scrollHeight}var d={},f=angular.extend({},e,l),p=f.target,g='affix affix-top affix-bottom',m=!1,$=0,h=0,v=0,w=0,y=null,b=null,D=o.parent();if(f.offsetParent)if(f.offsetParent.match(/^\d+$/))for(var S=0;S<1*f.offsetParent-1;S++)D=D.parent();else D=angular.element(f.offsetParent);return d.init=function(){this.$parseOffsets(),h=a.offset(o[0]).top+$,m=f.setWidth&&!o[0].style.width,p.on('scroll',this.checkPosition),p.on('click',this.checkPositionWithEventLoop),r.on('resize',this.$debouncedOnResize),this.checkPosition(),this.checkPositionWithEventLoop()},d.destroy=function(){p.off('scroll',this.checkPosition),p.off('click',this.checkPositionWithEventLoop),r.off('resize',this.$debouncedOnResize)},d.checkPositionWithEventLoop=function(){setTimeout(d.checkPosition,1)},d.checkPosition=function(){var e=u(),t=a.offset(o[0]),n=a.height(o[0]),r=s(b,t,n);y!==r&&(y=r,'top'===r?(b=null,m&&o.css('width',''),f.inlineStyles&&(o.css('position',f.offsetParent?'':'relative'),o.css('top',''))):'bottom'===r?(b=f.offsetUnpin?-(1*f.offsetUnpin):t.top-e,m&&o.css('width',''),f.inlineStyles&&(o.css('position',f.offsetParent?'':'relative'),o.css('top',f.offsetParent?'':i[0].offsetHeight-w-n-h+'px'))):(b=null,m&&o.css('width',o[0].offsetWidth+'px'),f.inlineStyles&&(o.css('position','fixed'),o.css('top',$+'px'))),o.removeClass(g).addClass('affix'+('middle'!==r?'-'+r:'')))},d.$onResize=function(){d.$parseOffsets(),d.checkPosition()},d.$debouncedOnResize=n(d.$onResize,50),d.$parseOffsets=function(){var e=o[0].style.position,t=o[0].style.top;f.inlineStyles&&(o.css('position',f.offsetParent?'':'relative'),o.css('top','')),f.offsetTop&&('auto'===f.offsetTop&&(f.offsetTop='+0'),f.offsetTop.match(/^[-+]\d+$/)?($=1*-f.offsetTop,v=f.offsetParent?a.offset(D[0]).top+1*f.offsetTop:a.offset(o[0]).top-a.css(o[0],'marginTop',!0)+1*f.offsetTop):v=1*f.offsetTop),f.offsetBottom&&(w=f.offsetParent&&f.offsetBottom.match(/^[-+]\d+$/)?c()-(a.offset(D[0]).top+a.height(D[0]))+1*f.offsetBottom+1:1*f.offsetBottom),f.inlineStyles&&(o.css('position',e),o.css('top',t))},d.init(),d}var i=angular.element(t.document.body),r=angular.element(t);return o}]}).directive('bsAffix',['$affix','$window','$timeout',function(e,t,n){return{restrict:'EAC',require:'^?bsAffixTarget',link:function(a,o,i,r){var l={scope:a,target:r?r.$element:angular.element(t)};angular.forEach(['offsetTop','offsetBottom','offsetParent','offsetUnpin','inlineStyles','setWidth'],function(e){if(angular.isDefined(i[e])){var t=i[e];/true/i.test(t)&&(t=!0),/false/i.test(t)&&(t=!1),l[e]=t}});var s;n(function(){s=e(o,l)}),a.$on('$destroy',function(){s&&s.destroy(),l=null,s=null})}}}]).directive('bsAffixTarget',function(){return{controller:['$element',function(e){this.$element=e}]}}),angular.module('mgcrea.ngStrap',['mgcrea.ngStrap.modal','mgcrea.ngStrap.aside','mgcrea.ngStrap.alert','mgcrea.ngStrap.button','mgcrea.ngStrap.select','mgcrea.ngStrap.datepicker','mgcrea.ngStrap.timepicker','mgcrea.ngStrap.navbar','mgcrea.ngStrap.tooltip','mgcrea.ngStrap.popover','mgcrea.ngStrap.dropdown','mgcrea.ngStrap.typeahead','mgcrea.ngStrap.scrollspy','mgcrea.ngStrap.affix','mgcrea.ngStrap.tab','mgcrea.ngStrap.collapse'])}(window,document);
//# sourceMappingURL=angular-strap.min.js.map

/*
 * angucomplete-alt
 * Autocomplete directive for AngularJS
 * This is a fork of Daryl Rowland's angucomplete with some extra features.
 * By Hidenari Nozaki
 */

/*! Copyright (c) 2014 Hidenari Nozaki and contributors | Licensed under the MIT license */

(function (root, factory) {
  'use strict';
  if (typeof module !== 'undefined' && module.exports) {
    // CommonJS
    module.exports = factory(require('angular'));
  } else if (typeof define === 'function' && define.amd) {
    // AMD
    define(['angular'], factory);
  } else {
    // Global Variables
    factory(root.angular);
  }
}(window, function (angular) {
  'use strict';

  angular.module('angucomplete-alt', []).directive('angucompleteAlt', ['$q', '$parse', '$http', '$sce', '$timeout', '$templateCache', '$interpolate', function ($q, $parse, $http, $sce, $timeout, $templateCache, $interpolate) {
    // keyboard events
    var KEY_DW  = 40;
    var KEY_RT  = 39;
    var KEY_UP  = 38;
    var KEY_LF  = 37;
    var KEY_ES  = 27;
    var KEY_EN  = 13;
    var KEY_TAB =  9;

    var MIN_LENGTH = 3;
    var MAX_LENGTH = 524288;  // the default max length per the html maxlength attribute
    var PAUSE = 500;
    var BLUR_TIMEOUT = 200;

    // string constants
    var REQUIRED_CLASS = 'autocomplete-required';
    var TEXT_SEARCHING = 'Searching...';
    var TEXT_NORESULTS = 'No results found';
    var TEMPLATE_URL = '/angucomplete-alt/index.html';

    // Set the default template for this directive
    $templateCache.put(TEMPLATE_URL,
        '<div class="angucomplete-holder" ng-class="{\'angucomplete-dropdown-visible\': showDropdown}">' +
        '  <input id="{{id}}_value" name="{{inputName}}" tabindex="{{fieldTabindex}}" ng-class="{\'angucomplete-input-not-empty\': notEmpty}" ng-model="searchStr" ng-disabled="disableInput" type="{{inputType}}" placeholder="{{placeholder}}" maxlength="{{maxlength}}" ng-focus="onFocusHandler()" class="{{inputClass}}" ng-focus="resetHideResults()" ng-blur="hideResults($event)" autocapitalize="off" autocorrect="off" autocomplete="off" ng-change="inputChangeHandler(searchStr)"/>' +
        '  <div id="{{id}}_dropdown" class="angucomplete-dropdown" ng-show="showDropdown">' +
        '    <div class="angucomplete-searching" ng-show="searching" ng-bind="textSearching"></div>' +
        '    <div class="angucomplete-searching" ng-show="!searching && (!results || results.length == 0)" ng-bind="textNoResults"></div>' +
        '    <div class="angucomplete-row" ng-repeat="result in results" ng-click="selectResult(result)" ng-mouseenter="hoverRow($index)" ng-class="{\'angucomplete-selected-row\': $index == currentIndex}">' +
        '      <div ng-if="imageField" class="angucomplete-image-holder">' +
        '        <img ng-if="result.image && result.image != \'\'" ng-src="{{result.image}}" class="angucomplete-image"/>' +
        '        <div ng-if="!result.image && result.image != \'\'" class="angucomplete-image-default"></div>' +
        '      </div>' +
        '      <div class="angucomplete-title" ng-if="matchClass" ng-bind-html="result.title"></div>' +
        '      <div class="angucomplete-title" ng-if="!matchClass">{{ result.title }}</div>' +
        '      <div ng-if="matchClass && result.description && result.description != \'\'" class="angucomplete-description" ng-bind-html="result.description"></div>' +
        '      <div ng-if="!matchClass && result.description && result.description != \'\'" class="angucomplete-description">{{result.description}}</div>' +
        '    </div>' +
        '  </div>' +
        '</div>'
    );

    function link(scope, elem, attrs, ctrl) {
      var inputField = elem.find('input');
      var minlength = MIN_LENGTH;
      var searchTimer = null;
      var hideTimer;
      var requiredClassName = REQUIRED_CLASS;
      var responseFormatter;
      var validState = null;
      var httpCanceller = null;
      var httpCallInProgress = false;
      var dd = elem[0].querySelector('.angucomplete-dropdown');
      var isScrollOn = false;
      var mousedownOn = null;
      var unbindInitialValue;
      var displaySearching;
      var displayNoResults;

      elem.on('mousedown', function(event) {
        if (event.target.id) {
          mousedownOn = event.target.id;
          if (mousedownOn === scope.id + '_dropdown') {
            document.body.addEventListener('click', clickoutHandlerForDropdown);
          }
        }
        else {
          mousedownOn = event.target.className;
        }
      });

      scope.currentIndex = scope.focusFirst ? 0 : null;
      scope.searching = false;
      unbindInitialValue = scope.$watch('initialValue', function(newval) {
        if (newval) {
          // remove scope listener
          unbindInitialValue();
          // change input
          handleInputChange(newval, true);
        }
      });

      scope.$watch('fieldRequired', function(newval, oldval) {
        if (newval !== oldval) {
          if (!newval) {
            ctrl[scope.inputName].$setValidity(requiredClassName, true);
          }
          else if (!validState || scope.currentIndex === -1) {
            handleRequired(false);
          }
          else {
            handleRequired(true);
          }
        }
      });

      scope.$on('angucomplete-alt:clearInput', function (event, elementId) {
        if (!elementId || elementId === scope.id) {
          scope.searchStr = null;
          callOrAssign();
          handleRequired(false);
          clearResults();
        }
      });

      scope.$on('angucomplete-alt:changeInput', function (event, elementId, newval) {
        if (!!elementId && elementId === scope.id) {
          handleInputChange(newval);
        }
      });

      function handleInputChange(newval, initial) {
        if (newval) {
          if (typeof newval === 'object') {
            scope.searchStr = extractTitle(newval);
            callOrAssign({originalObject: newval});
          } else if (typeof newval === 'string' && newval.length > 0) {
            scope.searchStr = newval;
          } else {
            if (console && console.error) {
              console.error('Tried to set ' + (!!initial ? 'initial' : '') + ' value of angucomplete to', newval, 'which is an invalid value');
            }
          }

          handleRequired(true);
        }
      }

      // #194 dropdown list not consistent in collapsing (bug).
      function clickoutHandlerForDropdown(event) {
        mousedownOn = null;
        scope.hideResults(event);
        document.body.removeEventListener('click', clickoutHandlerForDropdown);
      }

      // for IE8 quirkiness about event.which
      function ie8EventNormalizer(event) {
        return event.which ? event.which : event.keyCode;
      }

      function callOrAssign(value) {
        if (typeof scope.selectedObject === 'function') {
          scope.selectedObject(value, scope.selectedObjectData);
        }
        else {
          scope.selectedObject = value;
        }

        if (value) {
          handleRequired(true);
        }
        else {
          handleRequired(false);
        }
      }

      function callFunctionOrIdentity(fn) {
        return function(data) {
          return scope[fn] ? scope[fn](data) : data;
        };
      }

      function setInputString(str) {
        callOrAssign({originalObject: str});

        if (scope.clearSelected) {
          scope.searchStr = null;
        }
        clearResults();
      }

      function extractTitle(data) {
        // split title fields and run extractValue for each and join with ' '
        return scope.titleField.split(',')
          .map(function(field) {
            return extractValue(data, field);
          })
          .join(' ');
      }

      function extractValue(obj, key) {
        var keys, result;
        if (key) {
          keys= key.split('.');
          result = obj;
          for (var i = 0; i < keys.length; i++) {
            result = result[keys[i]];
          }
        }
        else {
          result = obj;
        }
        return result;
      }

      function findMatchString(target, str) {
        var result, matches, re;
        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions
        // Escape user input to be treated as a literal string within a regular expression
        re = new RegExp(str.replace(/[.*+?^${}()|[\]\\]/g, '\\$&'), 'i');
        if (!target) { return; }
        if (!target.match || !target.replace) { target = target.toString(); }
        matches = target.match(re);
        if (matches) {
          result = target.replace(re,
              '<span class="'+ scope.matchClass +'">'+ matches[0] +'</span>');
        }
        else {
          result = target;
        }
        return $sce.trustAsHtml(result);
      }

      function handleRequired(valid) {
        scope.notEmpty = valid;
        validState = scope.searchStr;
        if (scope.fieldRequired && ctrl && scope.inputName) {
          ctrl[scope.inputName].$setValidity(requiredClassName, valid);
        }
      }

      function keyupHandler(event) {
        var which = ie8EventNormalizer(event);
        if (which === KEY_LF || which === KEY_RT) {
          // do nothing
          return;
        }

        if (which === KEY_UP || which === KEY_EN) {
          event.preventDefault();
        }
        else if (which === KEY_DW) {
          event.preventDefault();
          if (!scope.showDropdown && scope.searchStr && scope.searchStr.length >= minlength) {
            initResults();
            scope.searching = true;
            searchTimerComplete(scope.searchStr);
          }
        }
        else if (which === KEY_ES) {
          clearResults();
          scope.$apply(function() {
            inputField.val(scope.searchStr);
          });
        }
        else {
          if (minlength === 0 && !scope.searchStr) {
            return;
          }

          if (!scope.searchStr || scope.searchStr === '') {
            scope.showDropdown = false;
          } else if (scope.searchStr.length >= minlength) {
            initResults();

            if (searchTimer) {
              $timeout.cancel(searchTimer);
            }

            scope.searching = true;

            searchTimer = $timeout(function() {
              searchTimerComplete(scope.searchStr);
            }, scope.pause);
          }

          if (validState && validState !== scope.searchStr && !scope.clearSelected) {
            scope.$apply(function() {
              callOrAssign();
            });
          }
        }
      }

      function handleOverrideSuggestions(event) {
        if (scope.overrideSuggestions &&
            !(scope.selectedObject && scope.selectedObject.originalObject === scope.searchStr)) {
          if (event) {
            event.preventDefault();
          }

          // cancel search timer
          $timeout.cancel(searchTimer);
          // cancel http request
          cancelHttpRequest();

          setInputString(scope.searchStr);
        }
      }

      function dropdownRowOffsetHeight(row) {
        var css = getComputedStyle(row);
        return row.offsetHeight +
          parseInt(css.marginTop, 10) + parseInt(css.marginBottom, 10);
      }

      function dropdownHeight() {
        return dd.getBoundingClientRect().top +
          parseInt(getComputedStyle(dd).maxHeight, 10);
      }

      function dropdownRow() {
        return elem[0].querySelectorAll('.angucomplete-row')[scope.currentIndex];
      }

      function dropdownRowTop() {
        return dropdownRow().getBoundingClientRect().top -
          (dd.getBoundingClientRect().top +
           parseInt(getComputedStyle(dd).paddingTop, 10));
      }

      function dropdownScrollTopTo(offset) {
        dd.scrollTop = dd.scrollTop + offset;
      }

      function updateInputField(){
        var current = scope.results[scope.currentIndex];
        if (scope.matchClass) {
          inputField.val(extractTitle(current.originalObject));
        }
        else {
          inputField.val(current.title);
        }
      }

      function keydownHandler(event) {
        var which = ie8EventNormalizer(event);
        var row = null;
        var rowTop = null;

        if (which === KEY_EN && scope.results) {
          if (scope.currentIndex >= 0 && scope.currentIndex < scope.results.length) {
            event.preventDefault();
            scope.selectResult(scope.results[scope.currentIndex]);
          } else {
            handleOverrideSuggestions(event);
            clearResults();
          }
          scope.$apply();
        } else if (which === KEY_DW && scope.results) {
          event.preventDefault();
          if ((scope.currentIndex + 1) < scope.results.length && scope.showDropdown) {
            scope.$apply(function() {
              scope.currentIndex ++;
              updateInputField();
            });

            if (isScrollOn) {
              row = dropdownRow();
              if (dropdownHeight() < row.getBoundingClientRect().bottom) {
                dropdownScrollTopTo(dropdownRowOffsetHeight(row));
              }
            }
          }
        } else if (which === KEY_UP && scope.results) {
          event.preventDefault();
          if (scope.currentIndex >= 1) {
            scope.$apply(function() {
              scope.currentIndex --;
              updateInputField();
            });

            if (isScrollOn) {
              rowTop = dropdownRowTop();
              if (rowTop < 0) {
                dropdownScrollTopTo(rowTop - 1);
              }
            }
          }
          else if (scope.currentIndex === 0) {
            scope.$apply(function() {
              scope.currentIndex = -1;
              inputField.val(scope.searchStr);
            });
          }
        } else if (which === KEY_TAB) {
          if (scope.results && scope.results.length > 0 && scope.showDropdown) {
            if (scope.currentIndex === -1 && scope.overrideSuggestions) {
              // intentionally not sending event so that it does not
              // prevent default tab behavior
              handleOverrideSuggestions();
            }
            else {
              if (scope.currentIndex === -1) {
                scope.currentIndex = 0;
              }
              scope.selectResult(scope.results[scope.currentIndex]);
              scope.$digest();
            }
          }
          else {
            // no results
            // intentionally not sending event so that it does not
            // prevent default tab behavior
            if (scope.searchStr && scope.searchStr.length > 0) {
              handleOverrideSuggestions();
            }
          }
        } else if (which === KEY_ES) {
          // This is very specific to IE10/11 #272
          // without this, IE clears the input text
          event.preventDefault();
        }
      }

      function httpSuccessCallbackGen(str) {
        return function(responseData, status, headers, config) {
          // normalize return obejct from promise
          if (!status && !headers && !config && responseData.data) {
            responseData = responseData.data;
          }
          scope.searching = false;
          processResults(
            extractValue(responseFormatter(responseData), scope.remoteUrlDataField),
            str);
        };
      }

      function httpErrorCallback(errorRes, status, headers, config) {
        scope.searching = httpCallInProgress;

        // normalize return obejct from promise
        if (!status && !headers && !config) {
          status = errorRes.status;
        }

        // cancelled/aborted
        if (status === 0 || status === -1) { return; }
        if (scope.remoteUrlErrorCallback) {
          scope.remoteUrlErrorCallback(errorRes, status, headers, config);
        }
        else {
          if (console && console.error) {
            console.error('http error');
          }
        }
      }

      function cancelHttpRequest() {
        if (httpCanceller) {
          httpCanceller.resolve();
        }
      }

      function getRemoteResults(str) {
        var params = {},
            url = scope.remoteUrl + encodeURIComponent(str);
        if (scope.remoteUrlRequestFormatter) {
          params = {params: scope.remoteUrlRequestFormatter(str)};
          url = scope.remoteUrl;
        }
        if (!!scope.remoteUrlRequestWithCredentials) {
          params.withCredentials = true;
        }
        cancelHttpRequest();
        httpCanceller = $q.defer();
        params.timeout = httpCanceller.promise;
        httpCallInProgress = true;
        $http.get(url, params)
          .then(httpSuccessCallbackGen(str))
          .catch(httpErrorCallback)
          .finally(function(){httpCallInProgress=false;});
      }

      function getRemoteResultsWithCustomHandler(str) {
        cancelHttpRequest();

        httpCanceller = $q.defer();

        scope.remoteApiHandler(str, httpCanceller.promise)
          .then(httpSuccessCallbackGen(str))
          .catch(httpErrorCallback);

        /* IE8 compatible
        scope.remoteApiHandler(str, httpCanceller.promise)
          ['then'](httpSuccessCallbackGen(str))
          ['catch'](httpErrorCallback);
        */
      }

      function clearResults() {
        scope.showDropdown = false;
        scope.results = [];
        if (dd) {
          dd.scrollTop = 0;
        }
      }

      function initResults() {
        scope.showDropdown = displaySearching;
        scope.currentIndex = scope.focusFirst ? 0 : -1;
        scope.results = [];
      }

      function getLocalResults(str) {
        var i, match, s, value,
            searchFields = scope.searchFields.split(','),
            matches = [];
        if (typeof scope.parseInput() !== 'undefined') {
          str = scope.parseInput()(str);
        }
        for (i = 0; i < scope.localData.length; i++) {
          match = false;

          for (s = 0; s < searchFields.length; s++) {
            value = extractValue(scope.localData[i], searchFields[s]) || '';
            match = match || (value.toString().toLowerCase().indexOf(str.toString().toLowerCase()) >= 0);
          }

          if (match) {
            matches[matches.length] = scope.localData[i];
          }
        }
        return matches;
      }

      function checkExactMatch(result, obj, str){
        if (!str) { return false; }
        for(var key in obj){
          if(obj[key].toLowerCase() === str.toLowerCase()){
            scope.selectResult(result);
            return true;
          }
        }
        return false;
      }

      function searchTimerComplete(str) {
        // Begin the search
        if (!str || str.length < minlength) {
          return;
        }
        if (scope.localData) {
          scope.$apply(function() {
            var matches;
            if (typeof scope.localSearch() !== 'undefined') {
              matches = scope.localSearch()(str, scope.localData);
            } else {
              matches = getLocalResults(str);
            }
            scope.searching = false;
            processResults(matches, str);
          });
        }
        else if (scope.remoteApiHandler) {
          getRemoteResultsWithCustomHandler(str);
        } else {
          getRemoteResults(str);
        }
      }

      function processResults(responseData, str) {
        var i, description, image, text, formattedText, formattedDesc;

        if (responseData && responseData.length > 0) {
          scope.results = [];

          for (i = 0; i < responseData.length; i++) {
            if (scope.titleField && scope.titleField !== '') {
              text = formattedText = extractTitle(responseData[i]);
            }

            description = '';
            if (scope.descriptionField) {
              description = formattedDesc = extractValue(responseData[i], scope.descriptionField);
            }

            image = '';
            if (scope.imageField) {
              image = extractValue(responseData[i], scope.imageField);
            }

            if (scope.matchClass) {
              formattedText = findMatchString(text, str);
              formattedDesc = findMatchString(description, str);
            }

            scope.results[scope.results.length] = {
              title: formattedText,
              description: formattedDesc,
              image: image,
              originalObject: responseData[i]
            };
          }

        } else {
          scope.results = [];
        }

        if (scope.autoMatch && scope.results.length === 1 &&
            checkExactMatch(scope.results[0],
              {title: text, desc: description || ''}, scope.searchStr)) {
          scope.showDropdown = false;
        } else if (scope.results.length === 0 && !displayNoResults) {
          scope.showDropdown = false;
        } else {
          scope.showDropdown = true;
        }
      }

      function showAll() {
        if (scope.localData) {
          scope.searching = false;
          processResults(scope.localData, '');
        }
        else if (scope.remoteApiHandler) {
          scope.searching = true;
          getRemoteResultsWithCustomHandler('');
        }
        else {
          scope.searching = true;
          getRemoteResults('');
        }
      }

      scope.onFocusHandler = function() {
        if (scope.focusIn) {
          scope.focusIn();
        }
        if (minlength === 0 && (!scope.searchStr || scope.searchStr.length === 0)) {
          scope.currentIndex = scope.focusFirst ? 0 : scope.currentIndex;
          scope.showDropdown = true;
          showAll();
        }
      };

      scope.hideResults = function() {
        if (mousedownOn &&
            (mousedownOn === scope.id + '_dropdown' ||
             mousedownOn.indexOf('angucomplete') >= 0)) {
          mousedownOn = null;
        }
        else {
          hideTimer = $timeout(function() {
            clearResults();
            scope.$apply(function() {
              if (scope.searchStr && scope.searchStr.length > 0) {
                inputField.val(scope.searchStr);
              }
            });
          }, BLUR_TIMEOUT);
          cancelHttpRequest();

          if (scope.focusOut) {
            scope.focusOut();
          }

          if (scope.overrideSuggestions) {
            if (scope.searchStr && scope.searchStr.length > 0 && scope.currentIndex === -1) {
              handleOverrideSuggestions();
            }
          }
        }
      };

      scope.resetHideResults = function() {
        if (hideTimer) {
          $timeout.cancel(hideTimer);
        }
      };

      scope.hoverRow = function(index) {
        scope.currentIndex = index;
      };

      scope.selectResult = function(result) {
        // Restore original values
        if (scope.matchClass) {
          result.title = extractTitle(result.originalObject);
          result.description = extractValue(result.originalObject, scope.descriptionField);
        }

        if (scope.clearSelected) {
          scope.searchStr = null;
        }
        else {
          scope.searchStr = result.title;
        }
        callOrAssign(result);
        clearResults();
      };

      scope.inputChangeHandler = function(str) {
        if (str.length < minlength) {
          cancelHttpRequest();
          clearResults();
        }
        else if (str.length === 0 && minlength === 0) {
          showAll();
        }

        if (scope.inputChanged) {
          str = scope.inputChanged(str);
        }
        return str;
      };

      // check required
      if (scope.fieldRequiredClass && scope.fieldRequiredClass !== '') {
        requiredClassName = scope.fieldRequiredClass;
      }

      // check min length
      if (scope.minlength && scope.minlength !== '') {
        minlength = parseInt(scope.minlength, 10);
      }

      // check pause time
      if (!scope.pause) {
        scope.pause = PAUSE;
      }

      // check clearSelected
      if (!scope.clearSelected) {
        scope.clearSelected = false;
      }

      // check override suggestions
      if (!scope.overrideSuggestions) {
        scope.overrideSuggestions = false;
      }

      // check required field
      if (scope.fieldRequired && ctrl) {
        // check initial value, if given, set validitity to true
        if (scope.initialValue) {
          handleRequired(true);
        }
        else {
          handleRequired(false);
        }
      }

      scope.inputType = attrs.type ? attrs.type : 'text';

      // set strings for "Searching..." and "No results"
      scope.textSearching = attrs.textSearching ? attrs.textSearching : TEXT_SEARCHING;
      scope.textNoResults = attrs.textNoResults ? attrs.textNoResults : TEXT_NORESULTS;
      displaySearching = scope.textSearching === 'false' ? false : true;
      displayNoResults = scope.textNoResults === 'false' ? false : true;

      // set max length (default to maxlength deault from html
      scope.maxlength = attrs.maxlength ? attrs.maxlength : MAX_LENGTH;

      // register events
      inputField.on('keydown', keydownHandler);
      inputField.on('keyup compositionend', keyupHandler);

      // set response formatter
      responseFormatter = callFunctionOrIdentity('remoteUrlResponseFormatter');

      // set isScrollOn
      $timeout(function() {
        var css = getComputedStyle(dd);
        isScrollOn = css.maxHeight && css.overflowY === 'auto';
      });
    }

    return {
      restrict: 'EA',
      require: '^?form',
      scope: {
        selectedObject: '=',
        selectedObjectData: '=',
        disableInput: '=',
        initialValue: '=',
        localData: '=',
        localSearch: '&',
        remoteUrlRequestFormatter: '=',
        remoteUrlRequestWithCredentials: '@',
        remoteUrlResponseFormatter: '=',
        remoteUrlErrorCallback: '=',
        remoteApiHandler: '=',
        id: '@',
        type: '@',
        placeholder: '@',
        textSearching: '@',
        textNoResults: '@',
        remoteUrl: '@',
        remoteUrlDataField: '@',
        titleField: '@',
        descriptionField: '@',
        imageField: '@',
        inputClass: '@',
        pause: '@',
        searchFields: '@',
        minlength: '@',
        matchClass: '@',
        clearSelected: '@',
        overrideSuggestions: '@',
        fieldRequired: '=',
        fieldRequiredClass: '@',
        inputChanged: '=',
        autoMatch: '@',
        focusOut: '&',
        focusIn: '&',
        fieldTabindex: '@',
        inputName: '@',
        focusFirst: '@',
        parseInput: '&'
      },
      templateUrl: function(element, attrs) {
        return attrs.templateUrl || TEMPLATE_URL;
      },
      compile: function(tElement) {
        var startSym = $interpolate.startSymbol();
        var endSym = $interpolate.endSymbol();
        if (!(startSym === '{{' && endSym === '}}')) {
          var interpolatedHtml = tElement.html()
            .replace(/\{\{/g, startSym)
            .replace(/\}\}/g, endSym);
          tElement.html(interpolatedHtml);
        }
        return link;
      }
    };
  }]);

}));

/** 
* @version 2.1.10
* @license MIT
*/
!function(t,e){"use strict";t.module("smart-table",[]).run(["$templateCache",function(t){t.put("template/smart-table/pagination.html",'<nav ng-if="numPages && pages.length >= 2"><ul class="pagination"><li ng-repeat="page in pages" ng-class="{active: page==currentPage}"><a href="#" ng-click="selectPage(page); $event.preventDefault(); $event.stopPropagation();">{{page}}</a></li></ul></nav>')}]),t.module("smart-table").constant("stConfig",{pagination:{template:"template/smart-table/pagination.html",itemsByPage:10,displayedPages:5},search:{delay:400,inputEvent:"input",trimSearch:!1},select:{mode:"single",selectedClass:"st-selected"},sort:{ascentClass:"st-sort-ascent",descentClass:"st-sort-descent",descendingFirst:!1,skipNatural:!1,delay:300},pipe:{delay:100}}),t.module("smart-table").controller("stTableController",["$scope","$parse","$filter","$attrs",function(a,n,s,r){function i(t){return t?[].concat(t):[]}function c(){b=i(o(a)),!0===S&&P.pipe()}function l(t,e){if(-1!=e.indexOf(".")){var a=e.split("."),s=a.pop(),r=a.join("."),i=n(r)(t);delete i[s],0==Object.keys(i).length&&l(t,r)}else delete t[e]}var o,u,p,g=r.stTable,d=n(g),f=d.assign,m=s("orderBy"),h=s("filter"),b=i(d(a)),v={sort:{},search:{},pagination:{start:0,totalItemCount:0}},S=!0,P=this;r.stSafeSrc&&(o=n(r.stSafeSrc),a.$watch(function(){var t=o(a);return t&&t.length?t[0]:e},function(t,e){t!==e&&c()}),a.$watch(function(){var t=o(a);return t?t.length:0},function(t,e){t!==b.length&&c()}),a.$watch(function(){return o(a)},function(t,e){t!==e&&(v.pagination.start=0,c())})),this.sortBy=function(e,a){return v.sort.predicate=e,v.sort.reverse=!0===a,t.isFunction(e)?v.sort.functionName=e.name:delete v.sort.functionName,v.pagination.start=0,this.pipe()},this.search=function(t,e,a){var s=v.search.predicateObject||{},r=e||"$";return n(r).assign(s,t),t||l(s,r),v.search.predicateObject=s,v.pagination.start=0,this.pipe()},this.pipe=function(){var t,n=v.pagination;u=v.search.predicateObject?h(b,v.search.predicateObject):b,v.sort.predicate&&(u=m(u,v.sort.predicate,v.sort.reverse)),n.totalItemCount=u.length,n.number!==e&&(n.numberOfPages=u.length>0?Math.ceil(u.length/n.number):1,n.start=n.start>=u.length?(n.numberOfPages-1)*n.number:n.start,t=u.slice(n.start,n.start+parseInt(n.number))),f(a,t||u)},this.select=function(t,n){var s=i(d(a)),r=s.indexOf(t);-1!==r&&("single"===n?(t.isSelected=!0!==t.isSelected,p&&(p.isSelected=!1),p=!0===t.isSelected?t:e):s[r].isSelected=!s[r].isSelected)},this.slice=function(t,e){return v.pagination.start=t,v.pagination.number=e,this.pipe()},this.tableState=function(){return v},this.getFilteredCollection=function(){return u||b},this.setFilterFunction=function(t){h=s(t)},this.setSortFunction=function(t){m=s(t)},this.preventPipeOnWatch=function(){S=!1}}]).directive("stTable",function(){return{restrict:"A",controller:"stTableController",link:function(t,e,a,n){a.stSetFilter&&n.setFilterFunction(a.stSetFilter),a.stSetSort&&n.setSortFunction(a.stSetSort)}}}),t.module("smart-table").directive("stSearch",["stConfig","$timeout","$parse",function(e,a,n){return{require:"^stTable",link:function(s,r,i,c){var l=c,o=null,u=i.stDelay||e.search.delay,p=i.stInputEvent||e.search.inputEvent,g=i.trimSearch||e.search.trimSearch;i.$observe("stSearch",function(e,a){var n=r[0].value;e!==a&&n&&(c.tableState().search={},n=t.isString(n)&&g?n.trim():n,l.search(n,e))}),s.$watch(function(){return c.tableState().search},function(t,e){var a=i.stSearch||"$";t.predicateObject&&n(a)(t.predicateObject)!==r[0].value&&(r[0].value=n(a)(t.predicateObject)||"")},!0),r.bind(p,function(e){e=e.originalEvent||e,null!==o&&a.cancel(o),o=a(function(){var a=e.target.value;a=t.isString(a)&&g?a.trim():a,l.search(a,i.stSearch||""),o=null},u)})}}}]),t.module("smart-table").directive("stSelectRow",["stConfig",function(t){return{restrict:"A",require:"^stTable",scope:{row:"=stSelectRow"},link:function(e,a,n,s){var r=n.stSelectMode||t.select.mode;a.bind("click",function(){e.$apply(function(){s.select(e.row,r)})}),e.$watch("row.isSelected",function(e){!0===e?a.addClass(t.select.selectedClass):a.removeClass(t.select.selectedClass)})}}}]),t.module("smart-table").directive("stSort",["stConfig","$parse","$timeout",function(a,n,s){return{restrict:"A",require:"^stTable",link:function(r,i,c,l){function o(){v?d=0===d?2:d-1:d++;var e;p=t.isFunction(g(r))||t.isArray(g(r))?g(r):c.stSort,d%3==0&&!0!=!!b?(d=0,l.tableState().sort={},l.tableState().pagination.start=0,e=l.pipe.bind(l)):e=l.sortBy.bind(l,p,d%2==0),null!==S&&s.cancel(S),P<0?e():S=s(function(){e()},P)}var u,p=c.stSort,g=n(p),d=0,f=c.stClassAscent||a.sort.ascentClass,m=c.stClassDescent||a.sort.descentClass,h=[f,m],b=c.stSkipNatural!==e?c.stSkipNatural:a.sort.skipNatural,v=c.stDescendingFirst!==e?c.stDescendingFirst:a.sort.descendingFirst,S=null,P=c.stDelay||a.sort.delay,y="aria-sort";i.attr("role","columnheader").attr(y,"none"),c.stSortDefault&&(u=r.$eval(c.stSortDefault)!==e?r.$eval(c.stSortDefault):c.stSortDefault),i.bind("click",function(){p&&r.$apply(o)}),u&&(d="reverse"===u?1:0,o()),r.$watch(function(){return l.tableState().sort},function(t){t.predicate!==p?(d=0,i.removeClass(f).removeClass(m).attr(y,"none")):(d=!0===t.reverse?2:1,i.removeClass(h[d%2]).addClass(h[d-1]).attr(y,t.reverse?"ascending":"descending"))},!0)}}}]),t.module("smart-table").directive("stPagination",["stConfig",function(t){return{restrict:"EA",require:"^stTable",scope:{stItemsByPage:"=?",stDisplayedPages:"=?",stPageChange:"&"},templateUrl:function(e,a){return a.stTemplate?a.stTemplate:t.pagination.template},link:function(e,a,n,s){function r(){var t,a,n=s.tableState().pagination,r=1,i=e.currentPage;for(e.totalItemCount=n.totalItemCount,e.currentPage=Math.floor(n.start/n.number)+1,(t=(r=Math.max(r,e.currentPage-Math.abs(Math.floor(e.stDisplayedPages/2))))+e.stDisplayedPages)>n.numberOfPages&&(t=n.numberOfPages+1,r=Math.max(1,t-e.stDisplayedPages)),e.pages=[],e.numPages=n.numberOfPages,a=r;a<t;a++)e.pages.push(a);i!==e.currentPage&&e.stPageChange({newPage:e.currentPage})}e.stItemsByPage=e.stItemsByPage?+e.stItemsByPage:t.pagination.itemsByPage,e.stDisplayedPages=e.stDisplayedPages?+e.stDisplayedPages:t.pagination.displayedPages,e.currentPage=1,e.pages=[],e.$watch(function(){return s.tableState().pagination},r,!0),e.$watch("stItemsByPage",function(t,a){t!==a&&e.selectPage(1)}),e.$watch("stDisplayedPages",r),e.selectPage=function(t){t>0&&t<=e.numPages&&s.slice((t-1)*e.stItemsByPage,e.stItemsByPage)},s.tableState().pagination.number||s.slice(0,e.stItemsByPage)}}}]),t.module("smart-table").directive("stPipe",["stConfig","$timeout",function(e,a){return{require:"stTable",scope:{stPipe:"="},link:{pre:function(n,s,r,i){var c=null;t.isFunction(n.stPipe)&&(i.preventPipeOnWatch(),i.pipe=function(){return null!==c&&a.cancel(c),c=a(function(){n.stPipe(i.tableState(),i)},e.pipe.delay)})},post:function(t,e,a,n){n.pipe()}}}}])}(angular);
//# sourceMappingURL=smart-table.min.js.map

this.ScriptUrlBaseFinder = (function() {
  function ScriptUrlBaseFinder(document1) {
    this.document = document1;
  }

  ScriptUrlBaseFinder.prototype.getUrlBase = function(id, oc_script_id, matcher) {
    var hostname, protocol, ref, ref1, result, src, tag;
    result = '';
    tag = document.getElementById(id);
    if (tag === null) {
      tag = document.getElementById(oc_script_id);
    }
    if (tag !== null) {
      src = tag.src;
      if (matcher.test(src)) {
        ref1 = matcher.exec(src), ref = ref1[0], protocol = ref1[1], hostname = ref1[2];
        result = protocol + '://' + hostname;
      }
    }
    return result;
  };

  return ScriptUrlBaseFinder;

})();

var base, discussionApp, finder;

discussionApp = angular.module('DiscussionApp', ['DiscussionModels', 'DiscussionServices', 'DiscussionDirectives', 'CompileModule', 'GDMediaPlayer', 'BrowserDetector', 'MediaSelect', 'formbuilderApp']);

window['GD'] || (window['GD'] = {});

window['GD'].videoRecordingCompleted = function(entryId, context) {
  var media_select, scope;
  media_select = $('.media-select');
  scope = angular.element(media_select).scope();
  scope.videoContext = context;
  return scope.$apply(scope.nativeVideoRecorded(entryId));
};

finder = new ScriptUrlBaseFinder(document);

base = finder.getUrlBase('guided-discussion-script', 'online_campus_ui_script', /(http|https):\/\/(.*?)\/dist\/.*?.js/i);

discussionApp.constant('Hostname', base);

var NavigationController,
  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

NavigationController = function($scope, model, browser) {
  $scope.maxShown = 15;
  $scope.itemWidth = 40;
  $scope.paddingWidth = 30;
  $scope.bullet = '•';
  $scope.items = [];
  $scope.visibleStates = [];
  $scope.previousArrowClass = '';
  $scope.nextArrowClass = '';
  $scope.deviceNavClass = 'nav';
  $scope.jumpMenuText = {
    'one': 'Intro',
    'two': '1',
    'three': '2',
    'four': '3',
    'five': '...'
  };
  $scope.deviceShowDiscussionButton = false;
  $scope.raiseDeviceEventShowDiscussion = function() {
    $scope.deviceShowDiscussionButton = true;
    return model.raiseEvent('deviceEventShowDiscussion');
  };
  $scope.raiseDeviceEventShowCard = function() {
    $scope.deviceShowDiscussionButton = false;
    return model.raiseEvent('deviceEventShowCard');
  };
  $scope.raiseDeviceEventShowIntroScreen = function() {
    return model.raiseEvent('deviceEventShowIntroScreen');
  };
  $scope.showDeviceNav = function() {
    return $scope.deviceNavClass = 'nav open';
  };
  $scope.isVisible = function(index) {
    return $scope.visibleStates[index];
  };
  $scope.setVisible = function(index, state) {
    return $scope.visibleStates[index] = state;
  };
  $scope.moveVisibleIndex = function(currentVisibleIndex, newVisibleIndex) {
    $scope.setVisible(newVisibleIndex, true);
    return $scope.setVisible(currentVisibleIndex, false);
  };
  $scope.showFrom = function(fromIndex) {
    var index, item, j, len, ref, results, toIndex;
    toIndex = fromIndex + $scope.maxShown - 1;
    ref = $scope.visibleStates;
    results = [];
    for (index = j = 0, len = ref.length; j < len; index = ++j) {
      item = ref[index];
      results.push($scope.visibleStates[index] = (fromIndex <= index && index <= toIndex) ? true : false);
    }
    return results;
  };
  $scope.showTo = function(toIndex) {
    var fromIndex, index, item, j, len, ref, results;
    fromIndex = toIndex - $scope.maxShown + 1;
    ref = $scope.visibleStates;
    results = [];
    for (index = j = 0, len = ref.length; j < len; index = ++j) {
      item = ref[index];
      results.push($scope.visibleStates[index] = (fromIndex <= index && index <= toIndex) ? true : false);
    }
    return results;
  };
  $scope.isVisibleOrphan = function(index) {
    var result;
    if (model.isFirstIndex(index)) {
      result = !$scope.isVisible(index + 1);
    } else if (model.isLastIndex(index)) {
      result = !$scope.isVisible(index - 1);
    } else {
      result = !$scope.isVisible(index + 1) && !$scope.isVisible(index - 1);
    }
    return result;
  };
  $scope.getFirstVisibleIndex = function() {
    var i, state;
    return Math.min.apply(Math, (function() {
      var j, len, ref, results;
      ref = $scope.visibleStates;
      results = [];
      for (i = j = 0, len = ref.length; j < len; i = ++j) {
        state = ref[i];
        if ($scope.isVisible(i)) {
          results.push(i);
        }
      }
      return results;
    })());
  };
  $scope.getFirstNonSelectedVisibleIndex = function() {
    var i, state;
    return Math.min.apply(Math, (function() {
      var j, len, ref, results;
      ref = $scope.visibleStates;
      results = [];
      for (i = j = 0, len = ref.length; j < len; i = ++j) {
        state = ref[i];
        if ($scope.isVisible(i) && !model.isSelectedIndex(i)) {
          results.push(i);
        }
      }
      return results;
    })());
  };
  $scope.getLastVisibleIndex = function() {
    var i, state;
    return Math.max.apply(Math, (function() {
      var j, len, ref, results;
      ref = $scope.visibleStates;
      results = [];
      for (i = j = 0, len = ref.length; j < len; i = ++j) {
        state = ref[i];
        if ($scope.isVisible(i)) {
          results.push(i);
        }
      }
      return results;
    })());
  };
  $scope.getLastNonSelectedVisibleIndex = function() {
    var i, state;
    return Math.max.apply(Math, (function() {
      var j, len, ref, results;
      ref = $scope.visibleStates;
      results = [];
      for (i = j = 0, len = ref.length; j < len; i = ++j) {
        state = ref[i];
        if ($scope.isVisible(i) && !model.isSelectedIndex(i)) {
          results.push(i);
        }
      }
      return results;
    })());
  };
  $scope.movePrevious = function() {
    var firstNonSelectedVisibleIndex, firstVisibleIndex, lastNonSelectedVisibleIndex, lastVisibleIndex, ref;
    firstVisibleIndex = $scope.getFirstVisibleIndex();
    lastVisibleIndex = $scope.getLastVisibleIndex();
    firstNonSelectedVisibleIndex = $scope.getFirstNonSelectedVisibleIndex();
    lastNonSelectedVisibleIndex = $scope.getLastNonSelectedVisibleIndex();
    if (!$scope.isVisible(model.getFirstIndex())) {
      if ((firstVisibleIndex < (ref = model.selectedIndex) && ref < lastVisibleIndex)) {
        return $scope.moveVisibleIndex(lastVisibleIndex, firstVisibleIndex - 1);
      } else if (model.isSelectedIndex(firstVisibleIndex)) {
        if (firstNonSelectedVisibleIndex === firstVisibleIndex + 1) {
          return $scope.moveVisibleIndex(lastVisibleIndex, firstVisibleIndex - 1);
        } else {
          return $scope.moveVisibleIndex(lastVisibleIndex, firstNonSelectedVisibleIndex - 1);
        }
      } else if (model.isSelectedIndex(lastVisibleIndex)) {
        return $scope.moveVisibleIndex(lastNonSelectedVisibleIndex, firstVisibleIndex - 1);
      }
    } else if (model.isSelectedIndex(model.getFirstIndex())) {
      if (model.getFirstIndex() !== (firstNonSelectedVisibleIndex - 1)) {
        return $scope.moveVisibleIndex(lastNonSelectedVisibleIndex, firstNonSelectedVisibleIndex - 1);
      }
    }
  };
  $scope.moveNext = function() {
    var firstNonSelectedIndex, firstVisibleIndex, lastNonSelectedIndex, lastVisibleIndex, ref;
    firstNonSelectedIndex = $scope.getFirstNonSelectedVisibleIndex();
    lastNonSelectedIndex = $scope.getLastNonSelectedVisibleIndex();
    firstVisibleIndex = $scope.getFirstVisibleIndex();
    lastVisibleIndex = $scope.getLastVisibleIndex();
    if (!$scope.isVisible(model.getLastIndex())) {
      if ((firstVisibleIndex < (ref = model.selectedIndex) && ref < lastVisibleIndex)) {
        return $scope.moveVisibleIndex(firstVisibleIndex, lastVisibleIndex + 1);
      } else if (model.isSelectedIndex(lastVisibleIndex)) {
        if (lastNonSelectedIndex === lastVisibleIndex - 1) {
          return $scope.moveVisibleIndex(firstVisibleIndex, lastVisibleIndex + 1);
        } else {
          return $scope.moveVisibleIndex(firstVisibleIndex, lastNonSelectedIndex + 1);
        }
      } else if (model.isSelectedIndex(firstVisibleIndex)) {
        return $scope.moveVisibleIndex(firstNonSelectedIndex, lastVisibleIndex + 1);
      }
    } else if (model.isSelectedIndex(model.getLastIndex())) {
      if (model.getLastIndex() !== (lastNonSelectedIndex + 1)) {
        return $scope.moveVisibleIndex(firstNonSelectedIndex, lastNonSelectedIndex + 1);
      }
    }
  };
  $scope.keyboardNavigation = function($event, item, $index) {
    var middleIndex;
    if ($event.keyCode === 32 || $event.keyCode === 13) {
      $event.preventDefault();
      if ($($event.target).hasClass("disabled")) {
        return false;
      }
      return $scope.selectItem(item, $index);
    } else {
      middleIndex = ($scope.getFirstVisibleIndex() + $scope.getLastVisibleIndex()) / 2;
      if ($event.keyCode === 9) {
        if ($event.shiftKey && $index < middleIndex) {
          return $scope.movePrevious();
        } else {
          if ($index > middleIndex) {
            return $scope.moveNext();
          }
        }
      }
    }
  };
  $scope.getNavBarStyle = function(item) {
    var factor, result, width;
    if ($("[ng-app='onlineCampusApp']").length > 0) {
      return '';
    }
    factor = Math.min($scope.maxShown, model.getCardsLength());
    width = factor * $scope.itemWidth + $scope.paddingWidth;
    return result = "width: " + width + "px;";
  };
  $scope.getPreviousArrowClass = function() {
    var firstIndex, result;
    result = "arrow previous";
    firstIndex = model.getFirstIndex();
    if (model.getCardsLength() <= $scope.maxShown) {
      result += " hidden";
    } else if ($scope.isVisible(firstIndex)) {
      if (model.isSelectedIndex(firstIndex)) {
        if ($scope.isVisible(model.selectedIndex + 1)) {
          result += " disabled";
        }
      } else {
        result += " disabled";
      }
    }
    return result;
  };
  $scope.getNextArrowClass = function() {
    var lastIndex, result;
    result = "arrow next";
    lastIndex = model.getLastIndex();
    if (model.getCardsLength() <= $scope.maxShown) {
      result += " hidden";
    } else if ($scope.isVisible(lastIndex)) {
      if (model.isSelectedIndex(lastIndex)) {
        if ($scope.isVisible(model.selectedIndex - 1)) {
          result += " disabled";
        }
      } else {
        result += " disabled";
      }
    }
    return result;
  };
  $scope.getListClass = function(item, $index) {
    if ($scope.isVisible($index)) {
      return '';
    } else {
      return 'hidden';
    }
  };
  $scope.getLinkLabel = function(item, $index) {
    var label;
    label = '';
    if (model.isFirstOrLastIndex($index)) {
      label = model.isFirstIndex($index) ? 'Intro card' : 'Final card';
    } else {
      label = "card " + $index + " of " + (model.cards.length - 2);
    }
    if (model.isSelectedIndex($index)) {
      label = "Currently on " + label + " which";
    }
    if ($scope.getLinkClass(item, $index) === 'disabled') {
      label = label + " is not yet available";
    } else {
      if (model.hasBeenCompleted($index)) {
        label = model.cards[$index].comments ? label + " has been answered" : label + " is complete";
      } else {
        label = label + " is now available";
      }
    }
    return label;
  };
  $scope.getLinkClass = function(item, $index) {
    var lastCompleted, result;
    result = '';
    lastCompleted = model.getLastCompleted();
    if ($index <= (lastCompleted + 1)) {
      if (model.isSelectedIndex($index)) {
        result = 'viewed selected';
      } else if (model.hasBeenCompleted($index)) {
        result = 'viewed';
      }
    } else {
      result = 'disabled';
    }
    return result;
  };
  $scope.getInfoClass = function(item, $index) {
    var lastCompleted, ref, result;
    result = '';
    lastCompleted = model.getLastCompleted();
    if (model.isFinished() && model.canHaveComments($index)) {
      result = 'a on new';
    } else if (model.isFinished() && model.hasFeedback($index)) {
      result = 'a feedback';
    } else if ($index <= lastCompleted && (ref = item.card_type, indexOf.call(model.question_types, ref) >= 0) && item.card_type !== 'video-info') {
      result = model.hasBeenCompleted($index) ? 'a on' : 'a';
    }
    return result;
  };
  $scope.getValue = function(item, $index) {
    if (model.isFirstOrLastIndex($index)) {
      if (browser.isPhone()) {
        if (model.isFirstIndex($index)) {
          return 'Intro';
        } else if (model.isLastIndex($index)) {
          return 'End';
        }
      } else {
        return $scope.bullet;
      }
    } else {
      return $index;
    }
  };
  $scope.getValueClass = function(item, $index) {
    if (model.isFirstOrLastIndex($index)) {
      if (browser.isPhone()) {
        return '';
      } else {
        return 'bull';
      }
    } else {
      return '';
    }
  };
  $scope.$on('selectedIndexChanged', function() {
    var firstVisibleIndex, index, lastVisibleIndex, ref;
    if (browser.isPhone()) {
      $scope.deviceShowDiscussionButton = false;
      model.raiseEvent('deviceEventShowCard');
    }
    index = model.selectedIndex;
    firstVisibleIndex = $scope.getFirstVisibleIndex();
    lastVisibleIndex = $scope.getLastVisibleIndex();
    if (!$scope.isVisible(index)) {
      if ($scope.isVisibleOrphan(firstVisibleIndex)) {
        $scope.showFrom(index);
      } else if ($scope.isVisibleOrphan(lastVisibleIndex)) {
        $scope.showTo(index);
      } else if (index < firstVisibleIndex) {
        $scope.showFrom(index);
      } else {
        $scope.showTo(index);
      }
    }
    return (ref = document.getElementById('cardContent')) != null ? ref.focus() : void 0;
  });
  $scope.refreshStates = function() {
    var index, item;
    $scope.previousArrowClass = $scope.getPreviousArrowClass();
    $scope.nextArrowClass = $scope.getNextArrowClass();
    return $scope.items = (function() {
      var j, len, ref, results;
      ref = model.cards;
      results = [];
      for (index = j = 0, len = ref.length; j < len; index = ++j) {
        item = ref[index];
        results.push($scope.getItem(item, index));
      }
      return results;
    })();
  };
  $scope.getItem = function(item, index) {
    return {
      list: $scope.getListClass(item, index),
      link: $scope.getLinkClass(item, index),
      info: $scope.getInfoClass(item, index),
      value: $scope.getValue(item, index),
      style: $scope.getValueClass(item, index)
    };
  };
  $scope.setupVisibleStates = function() {
    var index, item, length, maxIndex, minIndex;
    length = Math.min(model.cards.length, $scope.maxShown);
    minIndex = Math.max(0, model.selectedIndex - $scope.maxShown + 1);
    maxIndex = minIndex + length - 1;
    return $scope.visibleStates = (function() {
      var j, len, ref, results;
      ref = model.cards;
      results = [];
      for (index = j = 0, len = ref.length; j < len; index = ++j) {
        item = ref[index];
        results.push((minIndex <= index && index <= maxIndex));
      }
      return results;
    })();
  };
  $scope.$on('cardsLoaded', function() {
    $scope.setupVisibleStates();
    return $scope.refreshStates();
  });
  $scope.$on('completeStatusChanged', function() {
    $scope.setupVisibleStates();
    return $scope.refreshStates();
  });
  $scope.selectItem = function(item, $index) {
    var current, newFirstIndex, newLastIndex;
    current = model.selectedIndex;
    if (model.canSetSelectedIndex($index)) {
      if (current < $index) {
        if (current === $scope.getFirstVisibleIndex()) {
          newFirstIndex = $scope.getFirstNonSelectedVisibleIndex() - 1;
          if (current !== newFirstIndex) {
            $scope.moveVisibleIndex(current, newFirstIndex);
          }
        }
      } else {
        if (current === $scope.getLastVisibleIndex()) {
          newLastIndex = $scope.getLastNonSelectedVisibleIndex() + 1;
          if (current !== newLastIndex) {
            $scope.moveVisibleIndex(current, newLastIndex);
          }
        }
      }
      model.setSelectedIndex($index);
      if (model.selectedIndex === 0) {
        $scope.jumpMenuText.one = $scope.getValue(item, model.selectedIndex);
        $scope.jumpMenuText.two = $scope.getValue(item, model.selectedIndex + 1);
        $scope.jumpMenuText.three = $scope.getValue(item, model.selectedIndex + 2);
        $scope.jumpMenuText.four = $scope.getValue(item, model.selectedIndex + 3);
        $scope.jumpMenuText.five = '...';
      } else if (model.selectedIndex === 1 || model.selectedIndex === 2) {
        $scope.jumpMenuText.one = $scope.getValue(item, model.selectedIndex - 1);
        $scope.jumpMenuText.two = $scope.getValue(item, model.selectedIndex);
        $scope.jumpMenuText.three = $scope.getValue(item, model.selectedIndex + 1);
        $scope.jumpMenuText.four = $scope.getValue(item, model.selectedIndex + 2);
        $scope.jumpMenuText.five = '...';
      } else if (model.selectedIndex === $scope.visibleStates.length - 1) {
        $scope.jumpMenuText.one = '...';
        $scope.jumpMenuText.two = $scope.getValue(item, model.selectedIndex - 3);
        $scope.jumpMenuText.three = $scope.getValue(item, model.selectedIndex - 2);
        $scope.jumpMenuText.four = $scope.getValue(item, model.selectedIndex - 1);
        $scope.jumpMenuText.five = $scope.getValue(item, model.selectedIndex);
      } else if (model.selectedIndex > $scope.visibleStates.length - 2) {
        $scope.jumpMenuText.one = '...';
        $scope.jumpMenuText.two = $scope.getValue(item, model.selectedIndex - 2);
        $scope.jumpMenuText.three = $scope.getValue(item, model.selectedIndex - 1);
        $scope.jumpMenuText.four = $scope.getValue(item, model.selectedIndex);
        $scope.jumpMenuText.five = $scope.getValue(item, model.selectedIndex + 1);
      } else {
        $scope.jumpMenuText.one = '...';
        $scope.jumpMenuText.two = $scope.getValue(item, model.selectedIndex - 1);
        $scope.jumpMenuText.three = $scope.getValue(item, model.selectedIndex);
        $scope.jumpMenuText.four = $scope.getValue(item, model.selectedIndex + 1);
        $scope.jumpMenuText.five = '...';
      }
      $scope.deviceNavClass = 'nav';
    }
    return document.getElementById('cardContent').focus();
  };
  $scope.getItems = function() {
    return model.cards;
  };
  $scope.getAnswersEnabled = function() {
    return model.getAnswersEnabled();
  };
  $scope.showDeviceOysterNav = function() {
    return model.currentIsOyster();
  };
  $scope.getOysterCard = function() {
    if (model.currentIsOyster()) {
      return model.getCurrentCardObject();
    }
  };
  $scope.oysterToggleViewClicked = function() {
    return model.raiseEvent('deviceEventOysterToggleViewClicked');
  };
  $scope.oysterChapterUpdated = function() {
    return model.raiseEvent('deviceEventOysterChapterUpdated');
  };
  $scope.setupVisibleStates();
  return $scope.refreshStates();
};

NavigationController.$inject = ['$scope', 'Model', 'Browser'];

angular.module('DiscussionApp').controller('NavigationController', NavigationController);

var GuidedDiscussionController;

GuidedDiscussionController = function($scope, model, configuration, browser, $window) {
  var scale, targetWidth;
  $scope.guidedDiscussionId = '';
  $scope.socraticClass = $scope.socraticClass = BrowserDetector.isIE() ? 'socratic ie' : 'socratic';
  $scope.deviceShowIntroScreen = true;
  $scope.showCard = true;
  $scope.showDiscussion = false;
  if (browser.isAndroid() && !browser.isAtOrAboveAndroidVersion(4, 4, 2)) {
    targetWidth = 400;
    scale = Math.round(screen.width / targetWidth * 10) / 10;
  } else {
    scale = 1;
  }
  if (browser.isPhone()) {
    angular.element('head').append('<meta name="viewport" content="width=device-width, initial-scale=' + scale + ', minimum-scale=' + scale + ', maximum-scale=' + scale + ', user-scalable=yes">');
    angular.element('html').addClass('blt-device-html-class');
    $scope.socraticClass = $scope.socraticClass + ' blt-device';
  } else {
    angular.element('html').removeClass('blt-device-html-class');
    $scope.socraticClass = $scope.socraticClass + ' blt-desktop';
    $scope.deviceShowIntroScreen = false;
    $scope.showCard = true;
    $scope.showDiscussion = true;
  }
  $scope.toggleDeviceNavBar = function() {
    if (angular.element('div.socraticbar').hasClass('hidden')) {
      angular.element('div.socraticbar').removeClass('hidden');
      angular.element('div.mejs-controls').removeClass('mejs-hide-controls');
    } else {
      angular.element('div.socraticbar').addClass('hidden');
      angular.element('div.mejs-controls').addClass('mejs-hide-controls');
    }
  };
  $scope.deviceHideIntroScreen = function() {
    $scope.deviceShowIntroScreen = false;
    $window.location = 'call://changeOrientation/landscape';
    return setTimeout(function() {
      return $window.location = 'call://enterPresentationMode';
    }, 1);
  };
  $scope.setup = function(attrs) {
    configuration.setPermissions(attrs);
    return model.loadCards(attrs['guidedDiscussion']);
  };
  $scope.getAnswersEnabled = function() {
    return model.getAnswersEnabled();
  };
  $scope.$on('deviceEventShowIntroScreen', function() {
    $scope.deviceShowIntroScreen = true;
    $window.location = 'call://changeOrientation/portrait';
    return setTimeout(function() {
      return $window.location = 'call://exitPresentationMode';
    }, 1);
  });
  $scope.$on('deviceEventShowCard', function() {
    $scope.showDiscussion = false;
    return $scope.showCard = true;
  });
  return $scope.$on('deviceEventShowDiscussion', function() {
    $scope.showCard = false;
    return $scope.showDiscussion = true;
  });
};

GuidedDiscussionController.$inject = ['$scope', 'Model', 'Configuration', 'Browser', '$window'];

angular.module('DiscussionApp').controller('GuidedDiscussionController', GuidedDiscussionController);

var IntroController;

IntroController = function($scope, model) {
  $scope.loadCard = function(card) {
    $scope.title = card.title;
    $scope.subTitle = card.sub_title;
    $scope.reference = card.reference;
    return $scope.description = card.description;
  };
  $scope.refreshIntro = function() {
    var card, index;
    index = model.selectedIndex;
    card = model.cards[model.selectedIndex];
    $scope.loadCard(card);
    if (!model.isFinished()) {
      $scope.markAsViewed();
      if (model.currentIsIntro()) {
        return model.completeCard();
      }
    }
  };
  $scope.markAsViewed = function() {
    return model.viewCard();
  };
  return $scope.refreshIntro();
};

IntroController.$inject = ['$scope', 'Model'];

angular.module('DiscussionApp').controller('IntroController', IntroController);

var ChoiceQuestionController;

ChoiceQuestionController = function($scope, model, ChoiceQuestion, $sce) {
  $scope.getLabelClass = function(choice) {
    if ($scope.answer === ($scope.convertToString(choice.value))) {
      return 'selected';
    } else {
      return '';
    }
  };
  $scope.editOnce = function() {
    return $scope.choiceQuestion.editOnce();
  };
  $scope.answerChosen = function(choice) {
    if (!$scope.editOnce()) {
      $scope.markAsAnswered();
      model.incrementAttempts();
      if ($scope.choiceQuestion.isCompleted(choice, model.getAttempts())) {
        return $scope.markAsCompleted();
      } else {
        return model.markCardIncomplete();
      }
    }
  };
  $scope.answerSubmitted = function() {
    $scope.markAsAnswered();
    return $scope.markAsCompleted();
  };
  $scope.refreshCard = function() {
    var card, index;
    index = model.selectedIndex;
    card = model.cards[index];
    $scope.isFinished = model.isFinished();
    if (card.question.indexOf('<') === -1) {
      $scope.question = $sce.trustAsHtml("<h1>" + card.question + "</h1>");
    } else {
      $scope.question = $sce.trustAsHtml(card.question);
    }
    $scope.choices = card.choices;
    $scope.choiceQuestion = ChoiceQuestion(card);
    $scope.answer = $scope.getAnswer();
    if (!model.isFinished()) {
      $scope.markAsViewed();
    }
    return setTimeout(function() {
      return MathJax.Hub.Queue(["Typeset", MathJax.Hub, "socraticcontent"]);
    }, 100);
  };
  $scope.showAttemptsRemainingMsg = function() {
    return $scope.choiceQuestion.attemptsRemaining(model.getAttempts(), model.hasBeenCompleted(model.selectedIndex));
  };
  $scope.displayFeedback = function() {
    return $scope.choiceQuestion.displayFeedback(model.isFinished(), model.hasBeenCompleted(model.selectedIndex));
  };
  $scope.getButtonClass = function() {
    if ($scope.answer && !model.cardHasBeenCompleted()) {
      return 'green';
    } else {
      return 'gray';
    }
  };
  $scope.inputDisabled = function() {
    if ($scope.choiceQuestion.editOnce()) {
      return model.cardHasBeenCompleted();
    } else {
      return $scope.choiceQuestion.inputDisabled(model.isFinished(), model.hasBeenCompleted(model.selectedIndex));
    }
  };
  $scope.getFeedback = function() {
    return $scope.choiceQuestion.getFeedback($scope.answer);
  };
  $scope.convertToNumber = function(value) {
    return +value;
  };
  $scope.convertToString = function(value) {
    return "" + value;
  };
  $scope.getAnswer = function() {
    return $scope.convertToString(model.getSelectedAnswer());
  };
  $scope.markAsAnswered = function() {
    return model.setSelectedAnswer($scope.convertToNumber($scope.answer));
  };
  $scope.markAsCompleted = function() {
    return model.completeCard();
  };
  $scope.markAsViewed = function() {
    return model.viewCard();
  };
  $scope.$on('selectedIndexChanged', function() {
    if (model.currentIsChoiceQuestion()) {
      return $scope.refreshCard();
    }
  });
  $scope.asTrustedHtml = function(input) {
    return $sce.trustAsHtml(input);
  };
  return $scope.refreshCard();
};

ChoiceQuestionController.$inject = ['$scope', 'Model', 'ChoiceQuestion', '$sce'];

angular.module('DiscussionApp').controller('ChoiceQuestionController', ChoiceQuestionController);

var InputQuestionController;

InputQuestionController = function($scope, model, InputQuestion, $sce) {
  var thisCard;
  $scope.question = '';
  thisCard = function() {
    var card, index;
    index = model.selectedIndex;
    return card = model.cards[index];
  };
  $scope.refreshCard = function() {
    $scope.validationMessage = '';
    $scope.isFinished = model.isFinished();
    $scope.question = $scope.getQuestion();
    $scope.answer = $scope.getAnswer();
    $scope.inputQuestion = InputQuestion(thisCard());
    if (!model.isFinished()) {
      $scope.markAsViewed();
    }
    return setTimeout(function() {
      return MathJax.Hub.Queue(["Typeset", MathJax.Hub, "socraticcontent"]);
    }, 100);
  };
  $scope.getQuestion = function() {
    var card, question;
    card = thisCard();
    if (card.question.indexOf('<') === -1) {
      return question = $sce.trustAsHtml("<p class='oldstyle'>" + card.question + "</p>");
    } else {
      return question = $sce.trustAsHtml(card.question);
    }
  };
  $scope.getAnswer = function() {
    return model.getSelectedAnswer();
  };
  $scope.saveAnswerEntered = function() {
    var result;
    $scope.validationMessage = '';
    result = $scope.inputQuestion.isCompleted($scope.answer);
    if (result.completed) {
      $scope.answer = result.answer;
      $scope.validationMessage = result.validationMessage;
      $scope.markAsAnswered();
      return $scope.markAsCompleted();
    } else {
      return $scope.markAsNotCompleted();
    }
  };
  $scope.validateAnswerEntered = function() {
    var result;
    $scope.validationMessage = '';
    result = $scope.inputQuestion.isCompleted($scope.answer);
    if (result.completed) {
      $scope.answer = result.answer;
      return $scope.validationMessage = result.validationMessage;
    }
  };
  $scope.textAreaShouldBeDisabled = function() {
    if ($scope.inputQuestion.editOnce()) {
      return model.cardHasBeenCompleted();
    } else {
      return false;
    }
  };
  $scope.getButtonClass = function() {
    if ($scope.answerReadyToSave()) {
      return 'green';
    } else {
      return 'gray';
    }
  };
  $scope.answerReadyToSave = function() {
    return $scope.inputQuestion.minWordsEntered($scope.answer) && !model.isFinished() && !$scope.textAreaShouldBeDisabled();
  };
  $scope.hasValidationMessage = function() {
    return ($scope.validationMessage != null) && $scope.validationMessage !== '';
  };
  $scope.markAsAnswered = function() {
    return model.setSelectedAnswer($scope.answer);
  };
  $scope.markAsNotCompleted = function() {
    return model.markCardIncomplete();
  };
  $scope.markAsCompleted = function() {
    return model.completeCard();
  };
  $scope.markAsViewed = function() {
    return model.viewCard();
  };
  $scope.$on('selectedIndexChanged', function() {
    if (model.currentIsInputQuestion()) {
      return $scope.refreshCard();
    }
  });
  return $scope.refreshCard();
};

InputQuestionController.$inject = ['$scope', 'Model', 'InputQuestion', '$sce'];

angular.module('DiscussionApp').controller('InputQuestionController', InputQuestionController);

var ShortQuestionController;

ShortQuestionController = function($scope, model, ShortQuestion, $sce) {
  $scope.refreshCard = function() {
    var card, index;
    index = model.selectedIndex;
    card = model.cards[index];
    $scope.shortQuestion = ShortQuestion(card);
    if (card.description.indexOf('<') === -1) {
      $scope.description = "<h1>" + card.description + "</h1>";
    } else {
      $scope.description = card.description;
    }
    $scope.short_answers = $scope.shortQuestion.setupAnswers($scope.getAnswer());
    $scope.feedback = $scope.getFeedback();
    $scope.isFinished = model.isFinished();
    if (!model.isFinished()) {
      $scope.markAsViewed();
    }
    return setTimeout(function() {
      return MathJax.Hub.Queue(["Typeset", MathJax.Hub, "socraticcontent"]);
    }, 100);
  };
  $scope.answerEntered = function() {
    return model.markCardIncompleteWithoutSaving();
  };
  $scope.answersEntered = function() {
    $scope.markAsAnswered();
    model.incrementAttempts();
    if ($scope.editOnce() || $scope.shortQuestion.isCompleted($scope.short_answers, model.getAttempts())) {
      return $scope.markAsCompleted();
    } else {
      return $scope.markAsNotCompleted();
    }
  };
  $scope.editOnce = function() {
    return $scope.shortQuestion.editOnce();
  };
  $scope.showAttemptsRemainingMsg = function() {
    return $scope.shortQuestion.attemptsRemaining(model.getAttempts(), model.hasBeenCompleted(model.selectedIndex));
  };
  $scope.getAnswer = function() {
    return model.getSelectedAnswer();
  };
  $scope.getFeedback = function() {
    var result;
    result = [];
    if (model.selectedHasAnswer()) {
      return $scope.shortQuestion.getFeedback($scope.short_answers);
    }
    return result;
  };
  $scope.getButtonClass = function() {
    if ($scope.answerReadyToSave() && !model.cardHasBeenCompleted()) {
      return 'green';
    } else {
      return 'gray';
    }
  };
  $scope.answerReadyToSave = function() {
    if ($scope.displayFeedback()) {
      return false;
    }
    return $scope.shortQuestion.allInputsFilled($scope.short_answers) && !model.isFinished();
  };
  $scope.displayFeedback = function() {
    return $scope.shortQuestion.displayFeedback(model.isFinished(), model.hasBeenCompleted(model.selectedIndex));
  };
  $scope.inputDisabled = function() {
    if ($scope.shortQuestion.editOnce()) {
      return model.cardHasBeenCompleted();
    } else {
      return $scope.shortQuestion.inputDisabled(model.isFinished(), model.hasBeenCompleted(model.selectedIndex));
    }
  };
  $scope.markAsAnswered = function() {
    var answers, i, len, obj, ref;
    answers = [];
    ref = $scope.short_answers;
    for (i = 0, len = ref.length; i < len; i++) {
      obj = ref[i];
      answers[obj.order] = obj.answer;
    }
    return model.setSelectedAnswer(answers);
  };
  $scope.markAsNotCompleted = function() {
    return model.markCardIncomplete();
  };
  $scope.markAsCompleted = function() {
    return model.completeCard();
  };
  $scope.markAsViewed = function() {
    return model.viewCard();
  };
  $scope.$on('selectedIndexChanged', function() {
    if (model.currentIsShortQuestion()) {
      return $scope.refreshCard();
    }
  });
  $scope.asTrustedHtml = function(input) {
    return $sce.trustAsHtml(input);
  };
  return $scope.refreshCard();
};

ShortQuestionController.$inject = ['$scope', 'Model', 'ShortQuestion', '$sce'];

angular.module('DiscussionApp').controller('ShortQuestionController', ShortQuestionController);

var HtmlInfoController;

HtmlInfoController = function($scope, model, $sce) {
  $scope.refreshCard = function() {
    var card, index;
    index = model.selectedIndex;
    card = model.cards[index];
    $scope.description = $sce.trustAsHtml(card.description);
    if (!model.isFinished()) {
      $scope.markAsViewed();
      if (model.currentIsHtmlInfo()) {
        model.completeCard();
      }
    }
    return setTimeout(function() {
      return MathJax.Hub.Queue(["Typeset", MathJax.Hub, "socraticcontent"]);
    }, 100);
  };
  $scope.markAsViewed = function() {
    return model.viewCard();
  };
  $scope.$on('cardsLoaded', function() {
    return $scope.refreshCard();
  });
  $scope.$on('selectedIndexChanged', function() {
    if (model.currentIsHtmlInfo()) {
      return $scope.refreshCard();
    }
  });
  return $scope.refreshCard();
};

HtmlInfoController.$inject = ['$scope', 'Model', '$sce'];

angular.module('DiscussionApp').controller('HtmlInfoController', HtmlInfoController);

var VideoInfoController;

VideoInfoController = function($scope, model, player, mediaSourcesFactory) {
  $scope.player = '';
  $scope.refreshPlayer = function() {
    var subtitles, videoRef;
    videoRef = model.getCurrentVideoRef();
    subtitles = model.getCurrentVideoSubtitles();
    return mediaSourcesFactory().getSources(videoRef, subtitles, $scope.setupPlayer, 784, 441);
  };
  $scope.setupPlayer = function(videoRef, subtitles, width, height) {
    $scope.player = player(videoRef, $scope.finishedCallback, width, height, ".viewport", subtitles);
    if (!model.isFinished()) {
      return $scope.markAsViewed();
    }
  };
  $scope.finishedCallback = function() {
    if (!model.isFinished()) {
      $scope.markAsAnswered();
      $scope.markAsCompleted();
      return $scope.$apply();
    }
  };
  $scope.markAsAnswered = function() {
    return model.setSelectedAnswer(true);
  };
  $scope.markAsCompleted = function() {
    return model.completeCard();
  };
  $scope.markAsViewed = function() {
    return model.viewCard();
  };
  $scope.$on('selectedIndexChanged', function() {
    if (model.currentIsVideoInfo()) {
      return $scope.refreshPlayer();
    }
  });
  $scope.$on('deviceEventShowIntroScreen', function() {
    return $scope.player.pause();
  });
  return $scope.refreshPlayer();
};

VideoInfoController.$inject = ['$scope', 'Model', 'GDPlayer', 'MediaSourcesFactory'];

angular.module('DiscussionApp').controller('VideoInfoController', VideoInfoController);

var VideoPlayerController;

VideoPlayerController = function($scope, $attrs, model, player, mediaSourcesFactory) {
  $scope.viewportClass = 'v' + (new Date().getTime());
  $scope.refreshPlayer = function() {
    var subtitles;
    if (($scope.videoRef != null) && $scope.videoRef !== void 0) {
      if (($scope.subtitles != null) && $scope.subtitles !== void 0) {
        subtitles = $scope.subtitles;
      } else {
        subtitles = "";
      }
      return mediaSourcesFactory().getSources($scope.videoRef, subtitles, $scope.setupPlayer, $scope.getWidth(), $scope.getHeight());
    }
  };
  $scope.getWidth = function() {
    if ($attrs.videoType === "answer") {
      return 496;
    } else if ($attrs.videoType === "comment-preview") {
      return 467;
    } else {
      return 420;
    }
  };
  $scope.getHeight = function() {
    if ($attrs.videoType === "answer") {
      return 372;
    } else if ($attrs.videoType === "comment-preview") {
      return 350;
    } else {
      return 315;
    }
  };
  $scope.finishedCallback = function() {};
  $scope.setupPlayer = function(videoRef, subtitles, width, height) {
    var selector;
    selector = '.' + $scope.viewportClass;
    return $scope.player = player(videoRef, $scope.finishedCallback, width, height, selector, subtitles, "none");
  };
  $scope.$watch('videoRef', function(value, newvalue) {
    if (value !== newvalue) {
      return $scope.refreshPlayer();
    }
  });
  return $scope.refreshPlayer();
};

VideoPlayerController.$inject = ['$scope', '$attrs', 'Model', 'GDPlayer', 'MediaSourcesFactory'];

angular.module('DiscussionApp').controller('VideoPlayerController', VideoPlayerController);

var VideoResponseController;

VideoResponseController = function($scope, model, player, $sce, mediaSourcesFactory) {
  $scope.question = '';
  $scope.answer = '';
  $scope.refreshQuestion = function() {
    var card, index;
    index = model.selectedIndex;
    card = model.cards[index];
    if (card.question.indexOf('<') === -1) {
      $scope.question = $sce.trustAsHtml("<p class='oldstyle'>" + card.question + "</p>");
    } else {
      $scope.question = $sce.trustAsHtml(card.question);
    }
    if (!model.isFinished()) {
      return $scope.markAsViewed();

      /* FOR NOW - skip over */

      /* FOR NOW - skip over */
    }
  };
  $scope.hasResponse = function() {
    return $scope.answer !== '';
  };
  $scope.showResponse = function() {
    return $scope.hasResponse() && !model.isFinished();
  };
  $scope.refreshAnswer = function() {
    $scope.answer = $scope.getAnswer();
    return $scope.refreshPlayer();
  };
  $scope.refreshPlayer = function(videoRef) {
    if ($scope.hasResponse()) {
      videoRef = $scope.answer;
      return mediaSourcesFactory().getSources(videoRef, "", $scope.setupPlayer, 496, 372);
    }
  };
  $scope.setupPlayer = function(videoRef, subtitles, width, height) {
    return $scope.player = player(videoRef, $scope.finishedCallback, width, height);
  };
  $scope.finishedCallback = function() {};
  $scope.getAnswer = function() {
    var savedAnswer;
    savedAnswer = model.getSelectedAnswer();
    if (savedAnswer === true) {
      savedAnswer = '';
      model.removeSelectedAnswer();
      model.markCardIncomplete();
    }
    return savedAnswer;
  };
  $scope.markAsAnswered = function() {
    return model.setSelectedAnswer($scope.answer);
  };
  $scope.discardVideo = function() {
    $scope.answer = '';
    model.removeSelectedAnswer();
    return model.markCardIncomplete();
  };
  $scope.markAsCompleted = function() {
    return model.completeCard();
  };
  $scope.markAsViewed = function() {
    return model.viewCard();
  };
  $scope.$on('videoRecorded', function(event, args) {
    var contextForAddingVideo, videoRef;
    videoRef = args[0];
    contextForAddingVideo = args[1];
    if (contextForAddingVideo === "response") {
      return $scope.answered(videoRef);
    }
  });
  $scope.$on('videoSelected', function(event, args) {
    var contextForAddingVideo, videoRef;
    videoRef = args[0];
    contextForAddingVideo = args[1];
    if (contextForAddingVideo === "response") {
      return $scope.answered(videoRef);
    }
  });
  $scope.answered = function(videoRef) {
    $scope.answer = videoRef;
    $scope.refreshPlayer();
    $scope.markAsAnswered();
    return $scope.markAsCompleted();
  };
  $scope.$on('selectedIndexChanged', function() {
    if (model.currentIsVideoResponseQuestion()) {
      $scope.refreshQuestion();
      return $scope.refreshAnswer();
    }
  });
  $scope.refreshQuestion();
  return $scope.refreshAnswer();
};

VideoResponseController.$inject = ['$scope', 'Model', 'GDPlayer', '$sce', 'MediaSourcesFactory'];

angular.module('DiscussionApp').controller('VideoResponseController', VideoResponseController);

var FileUploadController;

FileUploadController = function($scope, model, FileUpload, $sce) {
  $scope.refresh = function() {
    var card, fileElement, index;
    index = model.selectedIndex;
    card = model.cards[index];
    $scope.fileUploadCard = FileUpload(card, $sce);
    $scope.answer = model.getSelectedAnswer();
    $scope.downloadUrl = model.fileDownloadUrl($scope.answer);
    $scope.showProgressBar = false;
    fileElement = angular.element("#uploadFile")[0];
    if (fileElement) {
      return fileElement.value = '';
    }
  };
  $scope.hasFile = function() {
    return $scope.answer !== '';
  };
  $scope.canUploadFile = function() {
    return (!$scope.hasFile()) && (!model.isFinished());
  };
  $scope.canDeleteFile = function() {
    return $scope.hasFile() && !model.isFinished() && (!$scope.editOnce() || !model.cardHasBeenCompleted());
  };
  $scope.deleteFile = function() {
    if ($scope.canDeleteFile()) {
      $scope.answer = '';
      model.removeSelectedAnswer();
      return model.markCardIncomplete();
    }
  };
  $scope.editOnce = function() {
    return $scope.fileUploadCard.editOnce();
  };
  $scope.fileSubmitted = function() {
    model.setSelectedAnswer($scope.answer);
    return model.completeCard();
  };
  $scope.fileUploadSuccessCallback = function(data, status, headers, config) {
    $scope.showProgressBar = false;
    $scope.files = null;
    $scope.answer = data[0].id;
    $scope.downloadUrl = model.fileDownloadUrl($scope.answer);
    if (!$scope.editOnce()) {
      model.setSelectedAnswer($scope.answer);
      return model.completeCard();
    }
  };
  $scope.fileUploadErrorCallback = function(data, status, headers, config) {
    $scope.showProgressBar = false;
    $scope.files = null;
    return alert('Error uploading file');
  };
  $scope.getButtonClass = function() {
    if ($scope.hasFile() && !model.cardHasBeenCompleted()) {
      return 'green';
    } else {
      return 'gray';
    }
  };
  $scope.uploadDroppedFiles = function() {
    $scope.showProgressBar = true;
    return model.uploadFile($scope.files[0], $scope.fileUploadSuccessCallback, $scope.fileUploadErrorCallback);
  };
  $scope.uploadFile = function() {
    var fileElement;
    $scope.showProgressBar = true;
    fileElement = angular.element("#uploadFile")[0];
    if (fileElement.files.length === 0) {
      return;
    }
    return model.uploadFile(fileElement.files[0], $scope.fileUploadSuccessCallback, $scope.fileUploadErrorCallback);
  };
  $scope.$on('selectedIndexChanged', function() {
    if (model.currentIsFileUploadQuestion()) {
      return $scope.refresh();
    }
  });
  return $scope.refresh();
};

FileUploadController.$inject = ['$scope', 'Model', 'FileUpload', '$sce'];

angular.module('DiscussionApp').controller('FileUploadController', FileUploadController);

var SubmitController;

SubmitController = function($scope, model) {
  $scope.submit = function() {
    return model.submit();
  };
  $scope.markAsAnswered = function() {
    return model.setSelectedAnswer(true);
  };
  $scope.markAsCompleted = function() {
    return model.completeCard();
  };
  $scope.markAsViewed = function() {
    return model.viewCard();
  };
  if (!model.isFinished()) {
    $scope.markAsViewed();
    $scope.markAsAnswered();
    return $scope.markAsCompleted();
  }
};

SubmitController.$inject = ['$scope', 'Model'];

angular.module('DiscussionApp').controller('SubmitController', SubmitController);

var PreviousNextController;

PreviousNextController = function($scope, model) {
  $scope.keyboardActivateNext = function($event) {
    var target;
    if ($event.keyCode === 32 || $event.keyCode === 13) {
      $event.preventDefault();
      target = $event.target;
      if ($(target).hasClass("disabled")) {
        return false;
      }
      $scope.selectNext();
      return document.getElementById('cardContent').focus();
    }
  };
  $scope.backwardKeyboardNavigation = function($event) {
    var target;
    if ($event.keyCode === 32 || $event.keyCode === 13) {
      $event.preventDefault();
      target = $event.target;
      if ($(target).hasClass("disabled")) {
        return false;
      }
      $scope.selectPrevious();
      return document.getElementById('cardContent').focus();
    }
  };
  $scope.selectNext = function() {
    if (model.canSelectNext()) {
      return model.selectNext();
    }
  };
  $scope.selectPrevious = function() {
    if (model.canSelectPrevious()) {
      return model.selectPrevious();
    }
  };
  $scope.getNextArrowClass = function() {
    var result;
    result = 'arrow next';
    if (!model.canSelectNext()) {
      result += ' disabled';
    } else if ($scope.nextIsUpcomingIndex()) {
      result += ' continue';
    }
    return result;
  };
  $scope.getNextArrowText = function() {
    var text;
    text = 'Next Card';
    if (!model.canSelectNext()) {
      text += ' not available';
    }
    return text;
  };
  $scope.getPreviousArrowClass = function() {
    var result;
    result = 'arrow previous';
    if (!model.canSelectPrevious()) {
      result += ' disabled';
    }
    return result;
  };
  $scope.getPreviousArrowText = function() {
    var text;
    text = 'Previous Card';
    if (!model.canSelectPrevious()) {
      text = 'No ' + text;
    }
    return text;
  };
  return $scope.nextIsUpcomingIndex = function() {
    return model.isUpcomingIndex(model.selectedIndex + 1);
  };
};

PreviousNextController.$inject = ['$scope', 'Model'];

angular.module('DiscussionApp').controller('PreviousNextController', PreviousNextController);

var MainController,
  slice = [].slice;

MainController = function($rootScope, $scope, model) {
  $scope.cardType = '';
  $scope.mediaSelectVisible = false;
  $scope.raiseEvent = function() {
    var args, eventName;
    eventName = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];
    return $rootScope.$broadcast(eventName, args);
  };
  $scope.refreshCardType = function() {
    return $scope.cardType = model.getCurrentCardType();
  };
  $scope.simplifiedType = function() {
    switch ($scope.cardType) {
      case "intro":
        return "Intro";
      case "short-question":
        return "Short Answer Question";
      case "input-question":
        return "Essay Question";
      case "choice-question":
        return "Multiple Choice Question";
      case "video-info":
        return "Video";
      case "submit":
        return "Final Submission";
      default:
        return "Main Card Content";
    }
  };
  $scope.showVideoBar = function() {
    return !model.isFinished() && !$scope.mediaSelectVisible && !model.selectedHasAnswer();
  };
  $scope.cameraClick = function() {
    return $scope.raiseEvent('cameraClicked', '.socratic', "response");
  };
  $scope.fileClick = function() {
    return $scope.raiseEvent('fileClicked', model.getUserId(), '.socratic', "response");
  };
  $scope.nativeVideoRecorded = function(entryId) {
    return $scope.raiseEvent('nativeVideoRecordedEvt', entryId);
  };
  $scope.$on('selectedIndexChanged', function() {
    return $scope.refreshCardType();
  });
  $scope.$on('submitStatusChanged', function() {
    return $scope.refreshCardType();
  });
  $scope.$on('mediaSelectShow', function() {
    return $scope.mediaSelectVisible = true;
  });
  $scope.$on('mediaSelectHide', function() {
    return $scope.mediaSelectVisible = false;
  });
  $scope.$on('cardsLoaded', function() {
    $scope.refreshCardType();
    $scope.sections = model.getCourseSections();
    $scope.showSections = model.isInstructor() && $scope.sections.length > 1;
    $scope.deviceIntroTitle = model.cards[0].title;
    return $scope.deviceIntroSubTitle = model.cards[0].sub_title;
  });
  $scope.$on('apiCallFailed', function() {
    return alert(model.getApiFailedErrorMsg());
  });
  $scope.instructor = model.isInstructor();
  $scope.selectedSectionId = model.sectionId();
  $scope.sections = model.getCourseSections();
  $scope.showSections = false;
  $scope.sectionChanged = function() {
    return model.sectionUpdated($scope.selectedSectionId);
  };
  return $scope.refreshCardType();
};

MainController.$inject = ['$rootScope', '$scope', 'Model'];

angular.module('DiscussionApp').controller('MainController', MainController);

var AnswersController;

AnswersController = function($scope, model, $sce) {
  $scope.answers = [];
  $scope.composers = [];
  $scope.composersBody = [];
  $scope.composersTextarea = [];
  $scope.composersVideoRef = [];
  $scope.composerWithFocus = $scope.currentComposer = null;
  $scope.customSort = function(answer) {
    var result;
    return result = answer.user.id !== model.getUserId() ? answer.timestamp : 0;
  };
  $scope.isSessionUser = function(userId) {
    return userId === model.getUserId();
  };
  $scope.canComment = function() {
    return !model.isPESAdmin();
  };
  $scope.canDeleteComment = function(userId) {
    return $scope.isSessionUser(userId) || model.isInstructor();
  };
  $scope.isUserRole = function(role) {
    return model.getUserRole() === role;
  };
  $scope.showComments = function(answer) {
    return model.canHaveComments(model.selectedIndex) || $scope.isSessionUser(answer.user.id) || model.getUserRole() === 'teacher';
  };
  $scope.getCommentsState = function(answer) {
    if (answer.comments.length > 0 || $scope.composers[answer.id]) {
      return '';
    } else {
      return 'hidden';
    }
  };
  $scope.getCommentActionState = function(answer) {
    if ($scope.composers[answer.id]) {
      return 'on';
    }
  };
  $scope.changeComposerState = function(answer) {
    if (!$scope.composers[answer.id]) {
      $scope.composersBody = [];
      $scope.composersVideoRef = [];
      $scope.currentComposer = answer.id;
      $scope.composers[answer.id] = true;
      return $scope.composerWithFocus = answer.id;
    } else {
      $scope.composers = [];
      $scope.composersBody = [];
      $scope.composersVideoRef = [];
      $scope.currentComposer = null;
      $scope.composers[answer.id] = false;
      return $scope.composerWithFocus = null;
    }
  };
  $scope.isComposerFocused = function(answer) {
    return $scope.composerWithFocus === answer.id;
  };
  $scope.changeButtonState = function(answer) {
    if (($scope.composersBody[answer.id] == null) && ($scope.composersVideoRef[answer.id] == null)) {
      return 'disabled';
    }
  };
  $scope.attachVideoRef = function() {
    return $scope.raiseEvent('cameraClicked', '.socratic', "comment");
  };
  $scope.selectVideoFromMediaLibrary = function() {
    return $scope.raiseEvent('fileClicked', model.getUserId(), '.socratic', "comment");
  };
  $scope.isShowComposerVideoPreview = function(answer) {
    if ($scope.composersVideoRef[answer.id]) {
      return true;
    }
  };
  $scope.composeAttachments = function(videoRef) {
    var result;
    if (videoRef != null) {
      result = [
        {
          'data': videoRef,
          'content_type': 'video'
        }
      ];
    } else {
      result = [];
    }
    return result;
  };
  $scope.submitComment = function(answer) {
    var data, ids;
    if (($scope.composersBody[answer.id] != null) || ($scope.composersVideoRef[answer.id] != null)) {
      ids = {
        'answerId': answer.id
      };
      data = {
        'body': $scope.composersBody[answer.id],
        'user_id': model.getUserId(),
        'attachments': $scope.composeAttachments($scope.composersVideoRef[answer.id]),
        'timestamp': new Date().getTime(),
        'permissions': model.getUserRole()
      };
      model.saveComment(ids, $scope.refreshAndScrollto, data);
      $scope.composers = [];
      $scope.composersBody = [];
      $scope.composersVideoRef = [];
      return $scope.composerWithFocus = $scope.currentComposer = null;
    }
  };
  $scope.discardComposerVideoRef = function(answer) {
    return $scope.composersVideoRef[answer.id] = null;
  };
  $scope.isTeacherComment = function(comment) {
    return comment.permissions === 'teacher';
  };
  $scope.deleteComment = function(answer, comment) {
    var ids;
    ids = {
      'answerId': answer.id,
      'commentId': comment.id
    };
    return model.deleteComment(ids, $scope.refreshAndScrollto);
  };
  $scope.shouldShowVideoForComment = function(comment) {
    return $scope.getVideoRefForComment(comment) != null;
  };
  $scope.getVideoRefForComment = function(comment) {
    var ref, ref1;
    return comment != null ? (ref = comment.attachments) != null ? (ref1 = ref[0]) != null ? ref1.data : void 0 : void 0 : void 0;
  };
  $scope.isShowVideo = function(videoRef) {
    if (videoRef != null) {
      return true;
    }
  };
  $scope.getRecommendActionState = function(obj) {
    var recommendation, recommendations;
    recommendations = (function() {
      var i, len, ref, results;
      ref = obj.recommendations;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        recommendation = ref[i];
        if (recommendation.user.id === model.getUserId()) {
          results.push(recommendation);
        }
      }
      return results;
    })();
    if (recommendations.length > 0) {
      return 'on';
    }
  };
  $scope.getRecommendationTextState = function(obj) {
    var recommendation, recommendations;
    recommendations = (function() {
      var i, len, ref, results;
      ref = obj.recommendations;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        recommendation = ref[i];
        if (recommendation.user.id === model.getUserId()) {
          results.push(recommendation);
        }
      }
      return results;
    })();
    if (recommendations.length > 0) {
      return 'Unrecommend';
    } else {
      return 'Recommend';
    }
  };
  $scope.changeAnswerRecommendationState = function(answer) {
    var data, ids, recommendation, recommendationId;
    recommendationId = (function() {
      var i, len, ref, results;
      ref = answer.recommendations;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        recommendation = ref[i];
        if (recommendation.user.id === model.getUserId()) {
          results.push(recommendation.id);
        }
      }
      return results;
    })();
    if (recommendationId.length > 0) {
      ids = {
        'answerId': answer.id,
        'recommendationId': recommendationId
      };
      return model.unrecommendAnswer(ids, $scope.refresh);
    } else {
      ids = {
        'answerId': answer.id
      };
      data = {
        'user_id': model.getUserId(),
        'timestamp': new Date().getTime()
      };
      return model.recommendAnswer(ids, $scope.refresh, data);
    }
  };
  $scope.changeCommentRecommendationState = function(answer, comment) {
    var data, ids, recommendation, recommendationId;
    recommendationId = (function() {
      var i, len, ref, results;
      ref = comment.recommendations;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        recommendation = ref[i];
        if (recommendation.user.id === model.getUserId()) {
          results.push(recommendation.id);
        }
      }
      return results;
    })();
    if (recommendationId.length > 0) {
      ids = {
        'answerId': answer.id,
        'commentId': comment.id,
        'recommendationId': recommendationId
      };
      return model.unrecommendComment(ids, $scope.refreshAndScrollto);
    } else {
      ids = {
        'answerId': answer.id,
        'commentId': comment.id
      };
      data = {
        'user_id': model.getUserId(),
        'timestamp': new Date().getTime()
      };
      return model.recommendComment(ids, $scope.refreshAndScrollto, data);
    }
  };
  $scope.refresh = function() {
    return model.getResultsWithComments();
  };
  $scope.refreshAndScrollto = function(idToScrollTo) {
    $scope.refresh();
    return $scope.scrollto = idToScrollTo != null ? idToScrollTo : '';
  };
  $scope.reloadAnswersAndComments = function() {
    var answer, answers, comments, discussion, discussions, i, len, recommendations;
    answers = model.results;
    discussions = model.comments;
    for (i = 0, len = answers.length; i < len; i++) {
      answer = answers[i];
      answer.comments = [];
      comments = ((function() {
        var j, len1, results;
        results = [];
        for (j = 0, len1 = discussions.length; j < len1; j++) {
          discussion = discussions[j];
          if (discussion.parent_id === answer.id) {
            results.push(discussion.comments);
          }
        }
        return results;
      })())[0];
      if (comments) {
        answer.comments = comments;
      }
      answer.recommendations = [];
      recommendations = ((function() {
        var j, len1, results;
        results = [];
        for (j = 0, len1 = discussions.length; j < len1; j++) {
          discussion = discussions[j];
          if (discussion.parent_id === answer.id) {
            results.push(discussion.recommendations);
          }
        }
        return results;
      })())[0];
      if (recommendations) {
        answer.recommendations = recommendations;
      }
    }
    return $scope.answers = answers;
  };
  $scope.$on('selectedIndexChanged', function() {
    $scope.answers = [];
    return $scope.refresh();
  });
  $scope.$on('resultsLoaded', function() {
    return $scope.reloadAnswersAndComments();
  });
  $scope.$on('commentsLoaded', function() {
    return $scope.reloadAnswersAndComments();
  });
  $scope.$on('videoRecorded', function(event, args) {
    var videoRef;
    videoRef = args[0];
    if (args[1] === 'comment') {
      return $scope.composersVideoRef[$scope.currentComposer] = videoRef;
    }
  });
  $scope.$on('videoSelected', function(event, args) {
    var videoRef;
    videoRef = args[0];
    if (args[1] === 'comment') {
      return $scope.composersVideoRef[$scope.currentComposer] = videoRef;
    }
  });
  $scope.asTrustedHtml = function(input) {
    return $sce.trustAsHtml(input);
  };
  return $scope.refresh();
};

AnswersController.$inject = ['$scope', 'Model', '$sce'];

angular.module('DiscussionApp').controller('AnswersController', AnswersController);

var EndController;

EndController = function($scope, model) {
  $scope.card = model.cards[model.selectedIndex];
  $scope.title = $scope.card.title;
  $scope.sub_title = $scope.card.sub_title;
  $scope.description = $scope.card.description;
  return $scope.clickCard = function(index) {
    if (model.canSetSelectedIndex(index)) {
      return model.setSelectedIndex(index);
    }
  };
};

EndController.$inject = ['$scope', 'Model'];

angular.module('DiscussionApp').controller('EndController', EndController);

var browserDetector;

browserDetector = angular.module('BrowserDetector', []);

browserDetector.factory('Browser', function() {
  return BrowserDetector;
});

var BaseController;

window.BaseController = BaseController = (function() {
  function BaseController(scope, model, sce, questionFactory) {
    this.scope = scope;
    this.model = model;
    this.sce = sce;
    this.questionFactory = questionFactory;
    this.question = this.questionFactory(this.model.cards[this.model.selectedIndex]);
  }

  BaseController.prototype.asTrustedHtml = function(input) {
    return this.sce.trustAsHtml(input);
  };

  BaseController.prototype.getButtonClass = function() {
    if (this.answerReadyToSave()) {
      return 'green';
    } else {
      return 'gray';
    }
  };

  BaseController.prototype.displayFeedback = function() {
    return this.question.displayFeedback(this.model.isFinished(), this.model.hasBeenCompleted(this.model.selectedIndex));
  };

  BaseController.prototype.getFeedback = function() {
    var result;
    result = [];
    if (this.model.selectedHasAnswer()) {
      return this.question.getFeedback(this.answers);
    }
    return result;
  };

  BaseController.prototype.answerReadyToSave = function() {
    if (this.displayFeedback() || this.inputDisabled()) {
      return false;
    }
    return this.question.allInputsFilled(this.answers) && !this.model.isFinished();
  };

  BaseController.prototype.answerEntered = function() {
    return this.model.markCardIncompleteWithoutSaving();
  };

  BaseController.prototype.answersEntered = function() {
    this.model.setSelectedAnswer(this.answers);
    this.model.incrementAttempts();
    if (this.question.isCompleted(this.answers, this.model.getAttempts())) {
      return this.model.completeCard();
    } else {
      return this.model.markCardIncomplete();
    }
  };

  BaseController.prototype.showAttemptsRemainingMsg = function() {
    return this.question.attemptsRemaining(this.model.getAttempts(), this.model.hasBeenCompleted(this.model.selectedIndex));
  };

  BaseController.prototype.inputDisabled = function() {
    return this.question.inputDisabled(this.model.isFinished(), this.model.hasBeenCompleted(this.model.selectedIndex));
  };

  return BaseController;

})();

var OysterController,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

OysterController = (function() {
  OysterController.$inject = ['$scope', 'Model', 'GDPlayer', 'Oyster', '$sce', 'Hostname', '$window'];

  function OysterController(scope1, model, playerFactory, oyster, sce, baseurl, window) {
    this.scope = scope1;
    this.model = model;
    this.playerFactory = playerFactory;
    this.oyster = oyster;
    this.sce = sce;
    this.baseurl = baseurl;
    this.window = window;
    this.finishedCallback = bind(this.finishedCallback, this);
    this.scope.$on('selectedIndexChanged', (function(_this) {
      return function() {
        if (_this.model.getCurrentCardType() === 'oyster') {
          return _this.reset();
        }
      };
    })(this));
    this.scope.$on('deviceEventOysterChapterUpdated', (function(_this) {
      return function() {
        if (_this.model.getCurrentCardType() === 'oyster') {
          return _this.chapterUpdated();
        }
      };
    })(this));
    this.scope.$on('deviceEventOysterToggleViewClicked', (function(_this) {
      return function() {
        if (_this.model.getCurrentCardType() === 'oyster') {
          return _this.toggleView();
        }
      };
    })(this));
    this.reset();
  }

  OysterController.prototype.reset = function() {
    var videoRatio;
    this.slideContent = '';
    this.slideCaption = '';
    this.slideContentRaw = '';
    this.slidePlayer = '';
    this.oysterClass = 'oyster ';
    if (BrowserDetector.isDevice() && !BrowserDetector.isIpad()) {
      this.oysterClass += "oyster-device oyster-" + (BrowserDetector.deviceType());
      this.isDevice = true;
      $('html').addClass('oyster-device-html-class');
    } else {
      this.oysterClass += 'oyster-desktop';
    }
    this.oysterPresentationClass = 'presentation normal';
    this.scope.player = '';
    this.playerControlsAppearance = 'short';
    this.currentSlide = '';
    this.playerSize = {
      width: 203,
      height: 152
    };
    videoRatio = this.playerSize.width / this.playerSize.height;
    this.posterSize = {
      width: 270,
      height: this.playerSize.height
    };
    this.videoSize = {
      width: 270,
      height: this.posterSize.height
    };
    this.playerFixedControls = true;
    this.playerCompactControls = true;
    this.playerSubtitlesLocation = 'default';
    this.playerFullSubtitlesLocation = 'default';
    this.embeddedPlayerSize = {
      width: 480,
      height: 360
    };
    this.animatingToPosition = '';
    this.initialized = false;
    return this.refresh();
  };

  OysterController.prototype.refresh = function() {
    var card;
    card = this.model.getCurrentCard();
    this.oysterCard = this.oyster(card, this.sce);
    this.model.setCurrentCardObject(this.oysterCard);
    this.updatePlayerDimensionValues(1);
    this.player = this.playerFactory(this.oysterCard.videoRef(), this.finishedCallback, this.playerSize.width, this.playerSize.height, ".viewport", card.subtitles, 'auto', this.successCallback, false, this, true);
    this.scope.player = this.player;
    return setTimeout(function() {
      return MathJax.Hub.Queue(["Typeset", MathJax.Hub, "socraticcontent"]);
    }, 100);
  };

  OysterController.prototype.finishedCallback = function() {
    if (!this.model.isFinished()) {
      return this.model.completeCard();
    }
  };

  OysterController.prototype.playerInitialized = function() {
    this.initialized = true;
    return this.updatePlayerDimensions(0);
  };

  OysterController.prototype.playerStateChanged = function(evt, newState) {
    var slideEndTime, timePassed;
    if (this.currentSlide.kenburns && newState === 'paused') {
      return this.currentSlide.kenburns.stopEffect(false);
    } else if (this.currentSlide.kenburns && newState === 'playing') {
      return this.currentSlide.kenburns.startEffect();
    } else if (this.currentSlide.kenburns && newState === 'seeked') {
      slideEndTime = this.currentSlide.kenburns.display_time + this.currentSlide.time;
      if (this.player.currentTime.seconds < slideEndTime && this.player.currentTime.seconds >= this.currentSlide.time) {
        timePassed = this.player.currentTime.seconds - this.currentSlide.time;
        this.currentSlide.kenburns.setTimePassedInSeconds(timePassed);
        return this.currentSlide.kenburns.startEffect();
      }
    }
  };

  OysterController.prototype.embedVideoSlidePlayer = function(slide) {
    return this.slidePlayer = this.playerFactory(slide.video_ref, null, this.embeddedPlayerSize.width, this.embeddedPlayerSize.height, ".slide.video", slide.subtitles, 'auto', null, false, slide, true);
  };

  OysterController.prototype.showOysterSlide = function(id) {
    var ref, slide;
    slide = this.oysterCard.slideById(id);
    if ((slide.content == null) || slide.content.length === 0 || slide.action === "pause") {
      slide.content = '';
    }
    this.slideContent = this.sce.trustAsHtml(slide.content);
    this.slideContentRaw = slide.content;
    this.slideCaption = this.sce.trustAsHtml(slide.caption);
    if ((slide.monologue != null) && slide.slidetype === "text") {
      this.slideContent = this.sce.trustAsHtml("<div class=\"outer-mono-text\"><div class=\"inner-mono-text\">" + this.slideContentRaw + "</div></div>");
    }
    if ((ref = slide.action) === "pause" || ref === "pauseAndShow") {
      this.player.pause();
      if (slide.pause_duration && slide.pause_duration !== -1) {
        setTimeout((function(_this) {
          return function() {
            return _this.player.play();
          };
        })(this), slide.pause_duration * 1000);
      }
    }
    this.slideClass = slide["class"];
    this.currentSlide = slide;
    if (this.slideClass.indexOf("kenburns") > -1) {
      this.setupKenBurnsEffect();
    }
    this.updatePlayerDimensionValues(id);
    this.updatePlayerDimensions(id);
    if (slide.video_ref != null) {
      this.embedVideoSlidePlayer(slide);
    }
    if ((slide.has_math != null) && slide.has_math) {
      return setTimeout(function() {
        return MathJax.Hub.Queue(["Typeset", MathJax.Hub, "socraticcontent"]);
      }, 100);
    }
  };

  OysterController.prototype.setupKenBurnsEffect = function() {
    var image_src, newCanvas, nextSlide, options, slide_duration;
    nextSlide = this.oysterCard.slideById(this.currentSlide.id + 1);
    slide_duration = (JSON.stringify(nextSlide.time - JSON.stringify(this.currentSlide.time))) * 1000;
    image_src = $(this.slideContentRaw).filter('img').attr('src');
    this.clearOysterSlide();
    newCanvas = $('<canvas/>', {
      'class': 'kenburns_canvas'
    }).attr('width', 710).attr('height', 399);
    newCanvas.html('<p>Your browser doesn\'t support canvas! Try Chrome, Firefox or Opera</p>');
    $('#oyster_slides').append(newCanvas);
    options = {
      image: image_src,
      frames_per_second: 30,
      display_time: slide_duration,
      background_color: "#ffffff"
    };
    this.currentSlide.kenburns = new u.video.kenburns($('#oyster_slides').find('canvas'), options);
    return this.currentSlide.kenburns.startEffect();
  };

  OysterController.prototype.updatePlayerDimensionValues = function(id) {
    var innerHeight, innerWidth, monologuePlayerHeight, monologuePlayerWidth, newHeight, newWidth, screenRatio, screenSize, slide, videoRatio;
    slide = this.oysterCard.slideById(id);
    if (slide.title != null) {
      this.oysterCard.selectedChapterSlideId = slide.id;
      this.oysterCard.selectedChapterTitle = this.sce.trustAsHtml(slide.title);
    }
    if (slide.mask != null) {
      $('.oyster-mobile-intro-image').addClass('oyster-mobile-intro-image-masked');
    } else {
      $('.oyster-mobile-intro-image').removeClass('oyster-mobile-intro-image-masked');
    }
    if (!BrowserDetector.isDevice() || BrowserDetector.isIpad()) {
      this.playerSize = {
        width: 203,
        height: 152
      };
      videoRatio = this.playerSize.width / this.playerSize.height;
      this.posterSize = {
        width: 270,
        height: this.playerSize.height
      };
      this.videoSize = {
        width: 270,
        height: this.posterSize.height
      };
      this.playerFixedControls = true;
      this.playerCompactControls = true;
      this.playerSubtitlesLocation = 'default';
      this.playerFullSubtitlesLocation = 'default';
      if (slide.monologue != null) {
        monologuePlayerWidth = 710;
        monologuePlayerHeight = 399;
        this.playerSize = this.posterSize = this.videoSize = {
          width: monologuePlayerWidth,
          height: monologuePlayerHeight
        };
        this.playerCompactControls = false;
        this.playerFullSubtitlesLocation = 'default';
        this.oysterPresentationClass = 'presentation monologue';
      }
      if ((slide.mask != null) && (slide.monologue != null)) {
        this.oysterPresentationClass = 'presentation masked monologue';
        this.posterSize = this.videoSize = {
          width: 1110,
          height: 624
        };
      } else if ((slide.mask != null) && slide.mask && (slide.monologue == null)) {
        this.oysterPresentationClass = 'presentation normal masked';
        this.posterSize = this.videoSize = {
          width: 419,
          height: 315
        };
      }
      if ((slide.mask == null) || !slide.mask) {
        return this.posterMarginLeft = Math.round((this.playerSize.width - this.videoSize.width) / 2) + 'px';
      }
    } else {
      this.playerFixedControls = false;
      this.playerCompactControls = true;
      this.playerSubtitlesLocation = 'default';
      this.playerFullSubtitlesLocation = 'default';
      videoRatio = this.playerSize.width / this.playerSize.height;
      screenSize = BrowserDetector.getSize();
      screenRatio = screenSize.w / screenSize.h;
      innerWidth = screenRatio < 1 ? screenSize.h : screenSize.w;
      innerHeight = screenRatio < 1 ? screenSize.w : screenSize.h;
      newHeight = innerHeight;
      newWidth = parseInt(newHeight * videoRatio, 10);
      this.embeddedPlayerSize = {
        width: newWidth,
        height: newHeight
      };
      if (slide.mask != null) {
        this.oysterPresentationClass = 'presentation normal masked';
        this.letterboxSize = Math.round(158 / 584 * innerHeight);
        newHeight = innerHeight + this.letterboxSize * 2;
        newWidth = parseInt(newHeight * videoRatio, 10);
      } else {
        this.letterboxSize = 0;
      }
      this.posterSize = this.videoSize = {
        width: newWidth,
        height: newHeight
      };
      this.playerSize = {
        width: innerWidth,
        height: innerHeight
      };
      $('#oyster_container .slides').width('100%').height(newHeight);
      return this.posterMarginLeft = Math.round((this.playerSize.width - this.videoSize.width) / 2) + 'px';
    }
  };

  OysterController.prototype.updatePlayerDimensions = function(id) {
    var slide;
    slide = this.oysterCard.slideById(id);
    if (this.initialized) {
      this.player.setOption('fixedControls', this.playerFixedControls);
      this.player.setOption('compactControls', this.playerCompactControls);
      this.player.setOption('controlsAppearance', this.playerControlsAppearance);
      this.player.setOption('subtitlesLocation', this.playerSubtitlesLocation);
      this.player.setOption('fullSubtitlesLocation', this.playerFullSubtitlesLocation);
      this.player.setPlayerSize(this.playerSize.width, this.playerSize.height);
      this.player.setVideoSize(this.videoSize.width, this.videoSize.height);
      this.player.setPosterSize(this.posterSize.width, this.posterSize.height);
      $('.mejs-poster img').width(this.posterSize.width);
    }
    if (this.letterboxSize != null) {
      $('.mejs-video-position video, .mejs-poster img').css('margin-top', '-' + this.letterboxSize + 'px');
    }
    this.setDriverPosition(slide.offset);
    if (this.posterMarginLeft != null) {
      return $('.mejs-video-position video').css('margin-left', this.posterMarginLeft);
    }
  };

  OysterController.prototype.getMarginLeftFromPosition = function(position) {
    var elements, offset;
    offset = -200;
    elements = position.split('-');
    if (elements[1] === 'left') {
      offset -= parseInt(elements[2]) * 50;
    } else if (elements[1] === 'right') {
      offset += parseInt(elements[2]) * 50;
    }
    return offset + 'px';
  };

  OysterController.prototype.setDriverPosition = function(position) {
    var hasAttribute, margin_left_value;
    if (u.utils.isntUndefined(position) && position !== '') {
      margin_left_value = this.getMarginLeftFromPosition(position);
      if (this.animatingToPosition === '') {
        $('#oyster_driver').attr('data-position', position);
        this.animatingToPosition = position;
      }
      if (this.animatingToPosition !== position) {
        this.animatingToPosition = position;
        if (!$('#oyster_container').hasClass('oyster-device')) {
          $('#oyster_driver').find('.mejs-video-position').animate({
            'margin-left': margin_left_value
          }, 600, function() {
            return $(this).css('margin-left', '');
          });
        }
      }
      return $('#oyster_driver').attr('data-position', position);
    } else {
      hasAttribute = u.utils.isntUndefined($('#oyster_driver').attr('data-position'));
      if (hasAttribute) {
        if (this.slides.currentSlide.isMonologue) {
          return $('#oyster_driver').attr('data-position', 'centered');
        } else {
          return $('#oyster_driver').removeAttr('data-position');
        }
      }
    }
  };

  OysterController.prototype.clearOysterSlide = function() {
    this.slideContent = '';
    return this.slideCaption = '';
  };

  OysterController.prototype.successCallback = function(mediaElement) {
    var fn, i, index, len, popcornObj, scope, slide, slideElement, slides;
    this.initialized = true;
    slideElement = document.getElementById("oyster_slides");
    scope = angular.element(slideElement).scope();
    popcornObj = this.window.Popcorn(mediaElement, {});
    slides = scope.oysterCtrl.oysterCard.slides();
    fn = function(slide, index) {
      var endTime;
      if (index + 1 < slides.length) {
        endTime = slides[index + 1].time;
      } else {
        if (mediaElement.duration === !NaN) {
          endTime = mediaElement.duration;
        }
      }
      return popcornObj = popcornObj.slide({
        start: slide.time,
        end: endTime,
        id: slide.id
      });
    };
    for (index = i = 0, len = slides.length; i < len; index = ++i) {
      slide = slides[index];
      fn(slide, index);
    }
    scope.oysterCtrl.popcornObj = popcornObj;
    return popcornObj;
  };

  OysterController.prototype.chapterUpdated = function() {
    var chapterSlide;
    chapterSlide = this.oysterCard.getSelectedChapterSlide();
    return this.popcornObj.currentTime(chapterSlide.time);
  };

  OysterController.prototype.toggleView = function() {
    var container;
    if (!this.isDevice) {
      return;
    }
    this.oysterCard.showingVideo = !this.oysterCard.showingVideo;
    container = $('#oyster_container');
    if (this.oysterCard.showingVideo) {
      $('.slides', container).hide();
      $('.driver .mejs-mediaelement, .driver .mejs-controls', container).show();
    } else {
      $('.driver .mejs-mediaelement, .driver .mejs-controls', container).hide();
      $('.slides', container).show();
    }
    return true;
  };

  OysterController.prototype.showPrintView = function() {
    var oysterPrintWindow;
    oysterPrintWindow = this.window.open('', 'printOyster', 'resizable=yes, scrollbars=yes, width=600, height=400');
    oysterPrintWindow.document.write(this.generatePrintViewHtml());
    oysterPrintWindow.document.close();
    return oysterPrintWindow.focus();
  };

  OysterController.prototype.generatePrintViewHtml = function() {
    var fn, i, index, len, printWindowSlideLength, printWindowSlidesHtml, ref, slide;
    printWindowSlidesHtml = "";
    printWindowSlideLength = this.oysterCard.slides().length;
    ref = this.oysterCard.slides();
    fn = function(slide, index) {
      var displayIndex, slideNumText;
      displayIndex = index + 1;
      slideNumText = displayIndex + " of " + printWindowSlideLength;
      if ((slide.content == null) || slide.content.trim() === '') {
        return printWindowSlidesHtml += "<div class=\"" + slide["class"] + " empty\"><div><span>" + slideNumText + ": No Content</span></div></div>";
      } else {
        return printWindowSlidesHtml += "<div class=\"" + slide["class"] + "\">" + slide.content + "<div class=\"slide-num\">" + slideNumText + "</div></div>";
      }
    };
    for (index = i = 0, len = ref.length; i < len; index = ++i) {
      slide = ref[index];
      fn(slide, index);
    }
    return "<!DOCTYPE>\n<html class=\"print-window\">\n    <head>\n        <link rel=\"stylesheet\" href=\"" + this.baseurl + "/dist/guided-discussion.css\">\n        <script>\n            function makeCurrent(id) {\n                document.getElementById('view_all').className = \"view-all\";\n                document.getElementById('view_keyframes').className = \"view-keyframes\";\n                document.getElementById(id).className += ' current';\n            }\n            function changeAllSlides(slides, displayValue) {\n                for (var i = 0; i < slides.length; i++) {\n                    slides[i].style.display = displayValue\n                }\n            }\n            function hideAllSlides(slides) {\n                changeAllSlides(slides, 'none');\n            }\n            function showAllSlides(slides) {\n                changeAllSlides(slides, 'block');\n            }\n            function viewAll() {\n                var slides;\n                slides = document.getElementsByClassName('slide');\n                makeCurrent('view_all');\n                showAllSlides(slides);\n                return false;\n           }\n           function viewKeyFrames() {\n                var slides, keyframes;\n                slides = document.getElementsByClassName('slide');\n                keyframes = document.getElementsByClassName('keyframe');\n                makeCurrent('view_keyframes');\n                hideAllSlides(slides);\n                showAllSlides(keyframes);\n                return false;\n           }\n        </script>\n    </head>\n<body>\n    <div class=\"bar\">\n        <div class=\"toggle-slides\">\n            <a href=\"#\" class=\"view-all current\" id=\"view_all\" onclick=\"javascript:viewAll()\">View All</a>\n            <a href=\"#\" class=\"view-keyframes\" id=\"view_keyframes\" onclick=\"javascript:viewKeyFrames()\">View Keyframes</a>\n        </div>\n    </div>\n    <div id=\"content\">\n        <div class=\"socratic\">\n            <div id=\"contentwrap\">\n                <div class=\"oyster print print-window\">\n                    <div class=\"presentation\">\n                        <div class=\"slides\">\n                        " + printWindowSlidesHtml + "\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- script type=\"text/javascript\" src=\"" + this.baseurl + "/dist/guided-discussion.combined.min.js\"></script -->\n    <script type=\"text/x-mathjax-config\">\n    MathJax.Hub.Config({\n      \"HTML-CSS\": {availableFonts: [\"TeX\"]},\n             MMLorHTML: {prefer: \"HTML\"}\n    });\n    MathJax.Hub.Register.StartupHook(\"HTML-CSS Jax Ready\",function () {\n      var VARIANT = MathJax.OutputJax[\"HTML-CSS\"].FONTDATA.VARIANT;\n      VARIANT[\"normal\"].fonts.unshift(\"MathJax_SansSerif\");\n      VARIANT[\"bold\"].fonts.unshift(\"MathJax_SansSerif-bold\");\n      VARIANT[\"italic\"].fonts.unshift(\"MathJax_SansSerif-italic\");\n      VARIANT[\"-tex-mathit\"].fonts.unshift(\"MathJax_SansSerif-italic\");\n    });\n    MathJax.Hub.Register.StartupHook(\"SVG Jax Ready\",function () {\n      var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\n      VARIANT[\"normal\"].fonts.unshift(\"MathJax_SansSerif\");\n      VARIANT[\"bold\"].fonts.unshift(\"MathJax_SansSerif-bold\");\n      VARIANT[\"italic\"].fonts.unshift(\"MathJax_SansSerif-italic\");\n      VARIANT[\"-tex-mathit\"].fonts.unshift(\"MathJax_SansSerif-italic\");\n    });\n    </script>\n    <script>(function () {\n          var script = document.createElement(\"script\");\n          script.type = \"text/javascript\";\n          script.src  = \"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML\";\n          document.getElementsByTagName(\"head\")[0].appendChild(script);\n        })();\n    </script>\n    </body>\n</html>";
  };

  return OysterController;

})();

angular.module('DiscussionApp').controller('OysterController', OysterController);

var InputFormCardController;

InputFormCardController = (function() {
  InputFormCardController.$inject = ['$scope', 'Model'];

  function InputFormCardController(scope, model) {
    var card, index;
    this.scope = scope;
    this.model = model;
    index = this.model.selectedIndex;
    card = this.model.cards[index];
    this.scope.inheritedInputFormId = card.inputform_id;
    this.scope.$on('inputFormSaved', (function(_this) {
      return function(event, args) {
        return _this.markAsCompleted();
      };
    })(this));
    this.scope.$on('selectedIndexChanged', (function(_this) {
      return function() {
        if (_this.model.getCurrentCardType() === 'inputform') {
          return _this.scope.inheritedInputFormId = _this.model.cards[_this.model.selectedIndex].inputform_id;
        }
      };
    })(this));
  }

  InputFormCardController.prototype.markAsCompleted = function() {
    return this.model.completeCard();
  };

  return InputFormCardController;

})();

angular.module('DiscussionApp').controller('InputFormCardController', InputFormCardController);

var MatchingQuestionController,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

MatchingQuestionController = (function(superClass) {
  extend(MatchingQuestionController, superClass);

  MatchingQuestionController.$inject = ['$scope', 'Model', '$sce', 'MatchingQuestion'];

  function MatchingQuestionController(scope, model, sce, questionFactory) {
    this.scope = scope;
    this.model = model;
    this.sce = sce;
    this.questionFactory = questionFactory;
    MatchingQuestionController.__super__.constructor.call(this, this.scope, this.model, this.sce, this.questionFactory);
    this.scope.$on('selectedIndexChanged', (function(_this) {
      return function() {
        if (_this.model.getCurrentCardType() === 'matching-question') {
          return _this.reset();
        }
      };
    })(this));
    this.reset();
  }

  MatchingQuestionController.prototype.reset = function() {
    this.question = this.questionFactory(this.model.cards[this.model.selectedIndex]);
    this.answers = this.question.setupOptionsWithAnswers(this.model.getSelectedAnswer());
    this.isFinished = this.model.isFinished();
    if (!this.model.isFinished()) {
      this.model.viewCard();
    }
    return setTimeout(function() {
      return MathJax.Hub.Queue(["Typeset", MathJax.Hub, "socraticcontent"]);
    }, 100);
  };

  return MatchingQuestionController;

})(BaseController);

angular.module('DiscussionApp').controller('MatchingQuestionController', MatchingQuestionController);

var answerStateUpdateQueue, discussionServices, normalizeTimestamp,
  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },
  slice = [].slice;

discussionServices = angular.module('DiscussionServices', ['ngResource']);

normalizeTimestamp = function(timestamp) {
  if (typeof timestamp === 'string' && timestamp[timestamp.length - 1] !== 'Z') {
    timestamp = timestamp + "Z";
  }
  return new Date(timestamp).getTime();
};

discussionServices.factory('ResourceFactory', [
  '$resource', 'Hostname', 'Configuration', function($resource, Hostname, Configuration) {
    var factory;
    factory = {};
    factory.getCardsWithContextResourceUrl = function() {
      var result;
      result = '';
      if (!Configuration.permissions.useApi) {
        return result = Hostname + '/dist/data/cardsWithContext:guidedDiscussionId.json';
      } else if (Configuration.permissions.apiHostname !== '') {
        return result = Configuration.permissions.apiHostname + '/guided_discussions/:guidedDiscussionId';
      } else {
        return result = '/api/guided_discussions/:guidedDiscussionId';
      }
    };
    factory.getCardsWithContextResource = function() {
      return $resource(factory.getCardsWithContextResourceUrl());
    };
    factory.getCardsResourceUrl = function() {
      var result;
      result = '';
      if (!Configuration.permissions.useApi) {
        return result = Hostname + '/dist/data/cards:guidedDiscussionId.json';
      } else if (Configuration.permissions.apiHostname !== '') {
        return result = Configuration.permissions.apiHostname + '/guided_discussions/:guidedDiscussionId/cards';
      } else {
        return result = '/api/guided_discussions/:guidedDiscussionId/cards';
      }
    };
    factory.getCardsResource = function() {
      return $resource(factory.getCardsResourceUrl());
    };
    factory.getStateResourceUrl = function() {
      var result;
      result = '';
      if (!Configuration.permissions.useApi) {
        return result = Hostname + '/dist/data/card_state:guidedDiscussionId.json';
      } else if (Configuration.permissions.apiHostname !== '') {
        return result = Configuration.permissions.apiHostname + '/guided_discussions/:guidedDiscussionId/courses/:courseId/sections/:sectionId/modules/:moduleId/users/:userId';
      } else {
        return result = '/api/guided_discussions/:guidedDiscussionId/courses/:courseId/sections/:sectionId/modules/:moduleId/users/:userId';
      }
    };
    factory.getStateResource = function() {
      return $resource(factory.getStateResourceUrl());
    };
    factory.getResultsResourceUrl = function() {
      var result;
      result = '';
      if (!Configuration.permissions.useApi) {
        return result = Hostname + '/dist/data/answers:guidedDiscussionId.json';
      } else if (Configuration.permissions.apiHostname !== '') {
        return result = Configuration.permissions.apiHostname + '/guided_discussions/:guidedDiscussionId/courses/:courseId/sections/:sectionId/modules/:moduleId';
      } else {
        return result = '/api/guided_discussions/:guidedDiscussionId/courses/:courseId/sections/:sectionId/modules/:moduleId';
      }
    };
    factory.getResultsResource = function() {
      return $resource(factory.getResultsResourceUrl());
    };
    factory.getAnswersResourceUrl = function(task) {
      var result;
      result = '';
      if (!Configuration.permissions.useApi) {
        result = Hostname + '/dist/data/answers:guidedDiscussionId.json';
      } else if (Configuration.permissions.apiHostname !== '') {
        result = Configuration.permissions.apiHostname;
      } else {
        result = '/api';
      }
      if (task === 'recommend') {
        result += '/guided_discussions/:guidedDiscussionId/courses/:courseId/sections/:sectionId/modules/:moduleId/users/:userId/answers/:answerId/recommendations';
      }
      if (task === 'unrecommend') {
        result += '/guided_discussions/:guidedDiscussionId/courses/:courseId/sections/:sectionId/modules/:moduleId/users/:userId/answers/:answerId/recommendations/:recommendationId';
      }
      return result;
    };
    factory.getAnswersResource = function(task) {
      return $resource(factory.getAnswersResourceUrl(task));
    };
    factory.getCommentsResourceUrl = function(task) {
      var result;
      result = '';
      if (!Configuration.permissions.useApi) {
        result = Hostname + '/dist/data/comments:guidedDiscussionId.json';
      } else if (Configuration.permissions.apiHostname !== '') {
        result = Configuration.permissions.apiHostname;
      } else {
        result = '/api';
      }
      if (task === 'get') {
        result += '/guided_discussions/:guidedDiscussionId/courses/:courseId/sections/:sectionId/modules/:moduleId/comments';
      }
      if (task === 'save') {
        result += '/guided_discussions/:guidedDiscussionId/courses/:courseId/sections/:sectionId/modules/:moduleId/users/:userId/answers/:answerId/comments';
      }
      if (task === 'delete') {
        result += '/guided_discussions/:guidedDiscussionId/courses/:courseId/sections/:sectionId/modules/:moduleId/users/:userId/answers/:answerId/comments/:commentId';
      }
      if (task === 'recommend') {
        result += '/guided_discussions/:guidedDiscussionId/courses/:courseId/sections/:sectionId/modules/:moduleId/users/:userId/answers/:answerId/comments/:commentId/recommendations';
      }
      if (task === 'unrecommend') {
        result += '/guided_discussions/:guidedDiscussionId/courses/:courseId/sections/:sectionId/modules/:moduleId/users/:userId/answers/:answerId/comments/:commentId/recommendations/:recommendationId';
      }
      return result;
    };
    factory.getCommentsResource = function(task) {
      return $resource(factory.getCommentsResourceUrl(task));
    };
    factory.getFileUploadUrl = function() {
      return '/api/fileUpload';
    };
    factory.getFileDownloadUrl = function(fileId) {
      var result;
      if (Configuration.permissions.apiHostname !== '') {
        return result = Configuration.permissions.apiHostname + '/files/' + fileId;
      } else {
        return result = '/api/files/' + fileId;
      }
    };
    return factory;
  }
]);

discussionServices.factory('Clock', [
  function() {
    var obj;
    obj = {};
    obj.currentTime = function() {
      return new Date().getTime();
    };
    return obj;
  }
]);

discussionServices.factory('Configuration', [
  '$window', function($window) {
    var data;
    data = {};
    data.context = {};
    data.context.user = {};
    data.context.user.id = 0;
    data.context.courseId = 0;
    data.context.sectionId = 0;
    data.context.moduleId = 0;
    data.context.role = 'student';
    data.permissions = {};
    data.permissions.submitted = false;
    data.permissions.gated = true;
    data.permissions.discussionVisible = true;
    data.permissions.discussionEditable = true;
    data.permissions.useApi = true;
    data.permissions.apiHostname = '';
    data.permissions.useFakeContext = false;
    data.isUsingApiAndGated = function() {
      return data.permissions.useApi && data.permissions.gated;
    };
    data.getValueAsBoolean = function(value) {
      var result;
      result = false;
      if (typeof value === 'boolean') {
        return result = value;
      } else if (typeof value === 'string') {
        return result = value.toLowerCase() === "true";
      }
    };
    data.setSubmittedPermission = function(value) {
      return data.permissions.submitted = data.getValueAsBoolean(value);
    };
    data.setGatedPermission = function(value) {
      return data.permissions.gated = data.getValueAsBoolean(value);
    };
    data.setDiscussionVisiblePermission = function(value) {
      return data.permissions.discussionVisible = data.getValueAsBoolean(value);
    };
    data.setDiscussionEditablePermission = function(value) {
      return data.permissions.discussionEditable = data.getValueAsBoolean(value);
    };
    data.setUseApi = function(value) {
      return data.permissions.useApi = data.getValueAsBoolean(value);
    };
    data.setUseFakeContext = function(value) {
      return data.permissions.useFakeContext = data.getValueAsBoolean(value);
    };
    data.setApiHostname = function(value) {
      return data.permissions.apiHostname = value;
    };
    data.setPermissions = function(attrs) {
      if (attrs['useFakeContext'] != null) {
        data.setUseFakeContext(attrs['useFakeContext']);
      }
      if (attrs['submitted'] != null) {
        data.setSubmittedPermission(attrs['submitted']);
      }
      if (attrs['gated'] != null) {
        data.setGatedPermission(attrs['gated']);
      }
      if (attrs['discussionVisible'] != null) {
        data.setDiscussionVisible(attrs['discussionVisible']);
      }
      if (attrs['discussionEditable'] != null) {
        data.setDiscussionEditable(attrs['discussionEditable']);
      }
      if (attrs['useApi'] != null) {
        data.setUseApi(attrs['useApi']);
      }
      if (attrs['apiHostname']) {
        return data.setApiHostname(attrs['apiHostname']);
      }
    };
    data.getRoleIsStudent = function() {
      return data.context.role === 'student';
    };
    data.getRoleIsCourseCoordinator = function() {
      return data.context.role === 'coursecoordinator';
    };
    data.getRoleIsPESAdmin = function() {
      return data.context.role === 'pesadministrator';
    };
    data.isSuperAdmin = function() {
      return data.context.role === 'admin';
    };
    data.isAboveTeacherRole = function() {
      return data.getRoleIsCourseCoordinator() || data.getRoleIsPESAdmin() || data.isSuperAdmin();
    };
    data.getRoleIsTeacher = function() {
      return !data.getRoleIsStudent();
    };
    data.getCourseSections = function() {
      var all_sections, i, len, ref, ref1, s, sections_to_return;
      all_sections = (data.context != null) && data.context.course_sections;
      if (data.getRoleIsCourseCoordinator() || data.getRoleIsPESAdmin() || data.isSuperAdmin()) {
        return all_sections;
      }
      if (((ref = data.context) != null ? ref.enrolled_section_ids : void 0) != null) {
        sections_to_return = [];
        for (i = 0, len = all_sections.length; i < len; i++) {
          s = all_sections[i];
          if (ref1 = s.id, indexOf.call(data.context.enrolled_section_ids, ref1) >= 0) {
            sections_to_return.push(s);
          }
        }
        return sections_to_return;
      }
      return [];
    };
    data.getCourseModuleId = function() {
      var matchResults, matcher, pageUrl, ref, ref1;
      pageUrl = $window.location;
      matcher = /http[s]*:\/\/[^\?]+\?id=([\d]+)/;
      if (matcher.test(pageUrl)) {
        matchResults = matcher.exec(pageUrl);
        return matchResults[1];
      } else {
        return $window != null ? (ref = $window.i11l) != null ? (ref1 = ref.LMSContext.course) != null ? ref1.cm_id : void 0 : void 0 : void 0;
      }
    };
    data.fakeContext = function() {
      return $window.fakeContext;
    };
    data.setup = function(context) {
      var ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7;
      if (context != null) {
        data.hasContext = true;
        data.context.user.id = ((ref = context.user) != null ? ref.id : void 0) + '';
        data.context.role = (ref1 = context.course) != null ? ref1.role : void 0;
        data.context.course_sections = (ref2 = context.course) != null ? ref2.sections : void 0;
        data.context.enrolled_section_ids = (ref3 = context.course) != null ? ref3.sections_enrolled.map(function(s) {
          return s.id;
        }) : void 0;
        data.context.sectionId = null;
        if (!data.context.sectionId && (((ref4 = data.context.enrolled_section_ids) != null ? ref4[0] : void 0) != null)) {
          data.context.sectionId = data.context.enrolled_section_ids[0];
        }
        if (!data.context.sectionId && data.isAboveTeacherRole() && (((ref5 = data.context.course_sections) != null ? ref5[0] : void 0) != null)) {
          data.context.sectionId = data.context.course_sections[0].id;
        }
        data.context.courseId = (ref6 = context.course) != null ? ref6.id : void 0;
        return data.context.moduleId = (ref7 = context.course) != null ? ref7.cm_id : void 0;
      }
    };
    data.setupContext = function(context) {
      if (data.permissions.useFakeContext) {
        return data.setup(data.fakeContext());
      } else {
        return data.setup(context);
      }
    };
    return data;
  }
]);

answerStateUpdateQueue = [];

discussionServices.factory('AnswerState', [
  'Configuration', 'ResourceFactory', 'Clock', '$rootScope', function(Configuration, ResourceFactory, Clock, $rootScope) {
    var sharedState;
    sharedState = {};
    sharedState.guidedDiscussionId = 0;
    sharedState.loaded = false;
    sharedState.submitted = false;
    sharedState.cards = [];
    sharedState.getItem = function(index) {
      var i, item, len, ref;
      ref = sharedState.cards;
      for (i = 0, len = ref.length; i < len; i++) {
        item = ref[i];
        if (item.card_id === index) {
          return item;
        }
      }
    };
    sharedState.markAsViewed = function(index) {
      var item;
      if (sharedState.loaded) {
        item = sharedState.getItem(index);
        if (item) {
          item.viewed = true;
        }
      }
      return sharedState.updateAnswers();
    };
    sharedState.hasBeenViewed = function(index) {
      var item, result;
      result = false;
      if (sharedState.loaded) {
        item = sharedState.getItem(index);
        if (item) {
          result = item.viewed;
        }
      }
      return result;
    };
    sharedState.markAsNotCompleted = function(index) {
      sharedState.markAsNotCompletedWithoutSaving(index);
      return sharedState.updateAnswers();
    };
    sharedState.markAsNotCompletedWithoutSaving = function(index) {
      var item;
      if (sharedState.loaded) {
        item = sharedState.getItem(index);
        return item.completed = false;
      }
    };
    sharedState.markAsCompleted = function(index) {
      var item;
      if (sharedState.loaded) {
        item = sharedState.getItem(index);
        if (item) {
          item.completed = true;
        }
      }
      return sharedState.updateAnswers();
    };
    sharedState.incrementAttempts = function(index) {
      var item;
      if (sharedState.loaded) {
        item = sharedState.getItem(index);
        return item.attempts += 1;
      }
    };
    sharedState.markAsSubmitted = function() {
      sharedState.submitted = true;
      return sharedState.updateAnswers(sharedState.reloadAnswers);
    };
    sharedState.reloadAnswers = function() {
      var State, answers, courseId, moduleId, sectionId, userId;
      State = ResourceFactory.getStateResource();
      courseId = Configuration.context.courseId;
      sectionId = Configuration.context.sectionId;
      moduleId = Configuration.context.moduleId;
      userId = Configuration.context.user.id;
      return answers = State.get({
        guidedDiscussionId: sharedState.guidedDiscussionId,
        courseId: courseId,
        sectionId: sectionId,
        moduleId: moduleId,
        userId: userId,
        timestamp: Clock.currentTime()
      }, (function(_this) {
        return function() {
          return sharedState.setupViaResponse(answers);
        };
      })(this));
    };
    sharedState.hasBeenCompleted = function(index) {
      var item, result;
      result = false;
      if (sharedState.loaded) {
        item = sharedState.getItem(index);
        if (item) {
          result = item.completed;
        }
      }
      return result;
    };
    sharedState.getAttempts = function(index) {
      var item, result;
      result = 0;
      if (sharedState.loaded) {
        item = sharedState.getItem(index);
        result = item.attempts;
      }
      return result;
    };
    sharedState.getLastCompleted = function() {
      var incompleteCardIds, item;
      incompleteCardIds = (function() {
        var i, len, ref, ref1, results1;
        ref = sharedState.cards;
        results1 = [];
        for (i = 0, len = ref.length; i < len; i++) {
          item = ref[i];
          if (((ref1 = item.card_type) !== 'video-info' && ref1 !== 'html-info' && ref1 !== 'intro') && !item.completed) {
            results1.push(item.card_id);
          }
        }
        return results1;
      })();
      if (incompleteCardIds.length === 0) {
        return Math.max.apply(this, (function() {
          var i, len, ref, results1;
          ref = sharedState.cards;
          results1 = [];
          for (i = 0, len = ref.length; i < len; i++) {
            item = ref[i];
            results1.push(item.card_id);
          }
          return results1;
        })());
      }
      return (Math.min.apply(this, incompleteCardIds)) - 1;
    };
    sharedState.removeAnswer = function(index) {
      var item;
      if (sharedState.loaded) {
        item = sharedState.getItem(index);
        return item.answers = [];
      }
    };
    sharedState.setAnswer = function(index, answer) {
      var item, timestamp;
      if (sharedState.loaded) {
        timestamp = (new Date()).toISOString();
        item = sharedState.getItem(index);
        if (item) {
          return item.answers = [
            {
              value: answer,
              timestamp: timestamp
            }
          ];
        }
      }
    };
    sharedState.hasAnswer = function(index) {
      var item, ref, result;
      result = false;
      if (sharedState.loaded) {
        item = sharedState.getItem(index);
        result = (item != null ? (ref = item.answers) != null ? ref.length : void 0 : void 0) > 0;
      }
      return result;
    };
    sharedState.getAnswer = function(index) {
      var item, result;
      result = '';
      if (sharedState.loaded) {
        item = sharedState.getItem(index);
        if (item.answers.length > 0) {
          result = item.answers[0].value;
        }
      }
      return result;
    };
    sharedState.getAnswerTimestamp = function(index) {
      var item, result;
      result = new Date();
      if (sharedState.loaded) {
        item = sharedState.getItem(index);
        if (item.answers.length > 0) {
          result = normalizeTimestamp(item.answers[0].timestamp);
        }
      }
      return result;
    };
    sharedState.setupAnswer = function(submitted, index) {
      var answer;
      return answer = {
        card_id: index,
        viewed: submitted,
        completed: submitted,
        attempts: 0,
        answers: []
      };
    };
    sharedState.updateAnswers = function(callback) {
      var reqFxn, shouldUpdate;
      shouldUpdate = sharedState.loaded && Configuration.permissions.useApi && Configuration.hasContext && Configuration.getRoleIsStudent() && answerStateUpdateQueue.length <= 1;
      if (shouldUpdate) {
        reqFxn = function() {
          var State, courseId, guidedDiscussionId, moduleId, payload, sectionId, timestamp, userId;
          State = ResourceFactory.getStateResource();
          guidedDiscussionId = sharedState.guidedDiscussionId;
          courseId = Configuration.context.courseId;
          sectionId = Configuration.context.sectionId;
          moduleId = Configuration.context.moduleId;
          userId = Configuration.context.user.id;
          payload = {};
          payload.submitted = sharedState.submitted;
          payload.cards = sharedState.cards;
          timestamp = Clock.currentTime();
          return State.save({
            guidedDiscussionId: guidedDiscussionId,
            courseId: courseId,
            sectionId: sectionId,
            moduleId: moduleId,
            userId: userId,
            timestamp: timestamp
          }, payload).$promise.then(function(data) {
            var indexInQueue;
            if (callback != null) {
              callback();
            }
            indexInQueue = answerStateUpdateQueue.indexOf(reqFxn);
            if (indexInQueue > -1) {
              answerStateUpdateQueue.splice(indexInQueue, 1);
            }
            if (answerStateUpdateQueue.length) {
              return answerStateUpdateQueue[0]();
            }
          })["catch"](function(response) {
            var indexInQueue;
            indexInQueue = answerStateUpdateQueue.indexOf(reqFxn);
            if (indexInQueue > -1) {
              answerStateUpdateQueue.splice(indexInQueue, 1);
            }
            if (response.status !== 401) {
              $rootScope.$broadcast('apiCallFailed');
            }
            if (answerStateUpdateQueue.length) {
              return answerStateUpdateQueue[0]();
            }
          });
        };
        answerStateUpdateQueue.push(reqFxn);
        if (answerStateUpdateQueue.length === 1) {
          return reqFxn();
        }
      }
    };
    sharedState.recommendAnswer = function(task, ids, callback, data) {
      var AnswersResource, courseId, guidedDiscussionId, moduleId, result, sectionId, userId;
      if (data == null) {
        data = null;
      }
      AnswersResource = ResourceFactory.getAnswersResource(task);
      guidedDiscussionId = sharedState.guidedDiscussionId;
      courseId = Configuration.context.courseId;
      sectionId = Configuration.context.sectionId;
      moduleId = Configuration.context.moduleId;
      userId = Configuration.context.user.id;
      if (task === 'recommend') {
        result = AnswersResource.save({
          guidedDiscussionId: guidedDiscussionId,
          courseId: courseId,
          sectionId: sectionId,
          moduleId: moduleId,
          userId: userId,
          answerId: ids.answerId
        }, data, (function(_this) {
          return function() {
            if (callback != null) {
              return callback();
            }
          };
        })(this));
      }
      if (task === 'unrecommend') {
        return result = AnswersResource["delete"]({
          guidedDiscussionId: guidedDiscussionId,
          courseId: courseId,
          sectionId: sectionId,
          moduleId: moduleId,
          userId: userId,
          answerId: ids.answerId,
          recommendationId: ids.recommendationId
        }, data, (function(_this) {
          return function() {
            if (callback != null) {
              return callback();
            }
          };
        })(this));
      }
    };
    sharedState.setupViaResponse = function(answers, callback) {
      sharedState.submitted = answers.submitted;
      sharedState.cards = answers.cards;
      sharedState.loaded = true;
      if (callback != null) {
        return callback();
      }
    };
    sharedState.setupViaDefaults = function(permissions, cardCount, callback) {
      var index, initialState;
      initialState = permissions.submitted || Configuration.getRoleIsTeacher() || (!permissions.gated);
      sharedState.submitted = permissions.submitted;
      sharedState.cards = (function() {
        var i, ref, results1;
        results1 = [];
        for (index = i = 0, ref = cardCount - 1; 0 <= ref ? i <= ref : i >= ref; index = 0 <= ref ? ++i : --i) {
          results1.push(sharedState.setupAnswer(initialState, index));
        }
        return results1;
      })();
      sharedState.loaded = true;
      if (callback != null) {
        return callback();
      }
    };
    sharedState.setup = function(guidedDiscussionId, cardCount, callback) {
      var State, answers, courseId, moduleId, permissions, sectionId, timestamp, userId;
      sharedState.guidedDiscussionId = guidedDiscussionId;
      permissions = Configuration.permissions;
      courseId = Configuration.context.courseId;
      sectionId = Configuration.context.sectionId;
      moduleId = Configuration.context.moduleId;
      userId = Configuration.context.user.id;
      if (Configuration.hasContext) {
        timestamp = Clock.currentTime();
        State = ResourceFactory.getStateResource();
        if (Configuration.getRoleIsStudent()) {
          return answers = State.get({
            guidedDiscussionId: guidedDiscussionId,
            courseId: courseId,
            sectionId: sectionId,
            moduleId: moduleId,
            userId: userId,
            timestamp: timestamp
          }, (function(_this) {
            return function() {
              return sharedState.setupViaResponse(answers, callback);
            };
          })(this), (function(_this) {
            return function(response) {
              if (response.status === 404) {
                return sharedState.setupViaDefaults(permissions, cardCount, callback);
              } else {
                return $rootScope.$broadcast('apiCallFailed');
              }
            };
          })(this));
        } else {
          return sharedState.setupViaDefaults(permissions, cardCount, callback);
        }
      } else {
        return sharedState.setupViaDefaults(permissions, cardCount, callback);
      }
    };
    sharedState.getLastViewed = function() {
      var item;
      if (sharedState.submitted) {
        return sharedState.cards.length - 1;
      } else if (Configuration.getRoleIsTeacher() || (!Configuration.permissions.gated)) {
        return 0;
      } else {
        return Math.max.apply(Math, [0].concat(slice.call((function() {
          var i, len, ref, results1;
          ref = sharedState.cards;
          results1 = [];
          for (i = 0, len = ref.length; i < len; i++) {
            item = ref[i];
            if (item.viewed) {
              results1.push(item.card_id);
            }
          }
          return results1;
        })())));
      }
    };
    return sharedState;
  }
]);

discussionServices.factory('Comment', [
  'Configuration', 'ResourceFactory', function(Configuration, ResourceFactory) {
    var sharedState;
    sharedState = {};
    sharedState.guidedDiscussionId = 0;
    sharedState.setup = function(guidedDiscussionId) {
      return sharedState.guidedDiscussionId = guidedDiscussionId;
    };
    sharedState.updateComment = function(task, ids, callback, data) {
      var CommentsResource, courseId, guidedDiscussionId, moduleId, result, sectionId, userId;
      if (data == null) {
        data = null;
      }
      CommentsResource = ResourceFactory.getCommentsResource(task);
      guidedDiscussionId = sharedState.guidedDiscussionId;
      courseId = Configuration.context.courseId;
      sectionId = Configuration.context.sectionId;
      moduleId = Configuration.context.moduleId;
      userId = Configuration.context.user.id;
      if (task === 'save') {
        result = CommentsResource.save({
          guidedDiscussionId: guidedDiscussionId,
          courseId: courseId,
          sectionId: sectionId,
          moduleId: moduleId,
          userId: userId,
          answerId: ids.answerId
        }, data, (function(_this) {
          return function(res) {
            if (callback != null) {
              return callback(res.comment_id);
            }
          };
        })(this));
      }
      if (task === 'delete') {
        result = CommentsResource.remove({
          guidedDiscussionId: guidedDiscussionId,
          courseId: courseId,
          sectionId: sectionId,
          moduleId: moduleId,
          userId: userId,
          answerId: ids.answerId,
          commentId: ids.commentId
        }, data, (function(_this) {
          return function() {
            if (callback != null) {
              return callback(ids.commentId);
            }
          };
        })(this));
      }
      if (task === 'recommend') {
        result = CommentsResource.save({
          guidedDiscussionId: guidedDiscussionId,
          courseId: courseId,
          sectionId: sectionId,
          moduleId: moduleId,
          userId: userId,
          answerId: ids.answerId,
          commentId: ids.commentId
        }, data, (function(_this) {
          return function() {
            if (callback != null) {
              return callback(ids.commentId);
            }
          };
        })(this));
      }
      if (task === 'unrecommend') {
        return result = CommentsResource["delete"]({
          guidedDiscussionId: guidedDiscussionId,
          courseId: courseId,
          sectionId: sectionId,
          moduleId: moduleId,
          userId: userId,
          answerId: ids.answerId,
          commentId: ids.commentId,
          recommendationId: ids.recommendationId
        }, data, (function(_this) {
          return function() {
            if (callback != null) {
              return callback(ids.commentId);
            }
          };
        })(this));
      }
    };
    return sharedState;
  }
]);

discussionServices.factory('Model', [
  '$rootScope', 'Configuration', 'ResourceFactory', 'AnswerState', 'Comment', 'Clock', '$http', function($rootScope, Configuration, ResourceFactory, AnswerState, Comment, Clock, $http) {
    var sharedModel;
    sharedModel = {};
    sharedModel.raiseEvent = function(eventName) {
      return $rootScope.$broadcast(eventName);
    };
    sharedModel.question_types = ['video-info', 'video-question', 'video-response-question', 'input-question', 'choice-question', 'short-question'];
    sharedModel.selectedIndex = 0;
    sharedModel.cards = [];
    sharedModel.cardObjects = [];
    sharedModel.loaded = false;
    sharedModel.guidedDiscussionId = 0;
    sharedModel.getCurrentCard = function() {
      return sharedModel.cards[sharedModel.selectedIndex];
    };
    sharedModel.getCurrentCardObject = function() {
      return sharedModel.cardObjects[sharedModel.selectedIndex];
    };
    sharedModel.setCurrentCardObject = function(cardObject) {
      return sharedModel.cardObjects[sharedModel.selectedIndex] = cardObject;
    };
    sharedModel.getCurrentCardType = function() {
      var card, cardType;
      cardType = '';
      card = sharedModel.getCurrentCard();
      if (card !== void 0) {
        cardType = card.card_type;
        if (cardType === 'submit' && sharedModel.isFinished()) {
          cardType = 'end';
        }
      }
      return cardType;
    };
    sharedModel.getCurrentVideoRef = function() {
      var card, index, videoRef;
      videoRef = '';
      index = sharedModel.selectedIndex;
      card = sharedModel.cards[index];
      if (card !== void 0) {
        videoRef = card.video_ref;
      }
      return videoRef;
    };
    sharedModel.getCurrentVideoSubtitles = function() {
      var card, index, subtitles;
      subtitles = '';
      index = sharedModel.selectedIndex;
      card = sharedModel.cards[index];
      if (card !== void 0) {
        subtitles = card.subtitles;
      }
      return subtitles;
    };
    sharedModel.currentIsIntro = function() {
      return sharedModel.getCurrentCardType() === 'intro';
    };
    sharedModel.currentIsVideoInfo = function() {
      return sharedModel.getCurrentCardType() === 'video-info';
    };
    sharedModel.currentIsHtmlInfo = function() {
      return sharedModel.getCurrentCardType() === 'html-info';
    };
    sharedModel.currentIsChoiceQuestion = function() {
      return sharedModel.getCurrentCardType() === 'choice-question';
    };
    sharedModel.currentIsInputQuestion = function() {
      return sharedModel.getCurrentCardType() === 'input-question';
    };
    sharedModel.currentIsShortQuestion = function() {
      return sharedModel.getCurrentCardType() === 'short-question';
    };
    sharedModel.currentIsMatchingQuestion = function() {
      return sharedModel.getCurrentCardType() === 'matching-question';
    };
    sharedModel.currentIsVideoResponseQuestion = function() {
      return sharedModel.getCurrentCardType() === 'video-response-question';
    };
    sharedModel.currentIsFileUploadQuestion = function() {
      return sharedModel.getCurrentCardType() === 'file-upload-question';
    };
    sharedModel.currentIsOyster = function() {
      return sharedModel.getCurrentCardType() === 'oyster';
    };
    sharedModel.viewCard = function() {
      if (!AnswerState.hasBeenViewed(sharedModel.selectedIndex)) {
        AnswerState.markAsViewed(sharedModel.selectedIndex);
        return sharedModel.raiseEvent('viewStatusChanged');
      }
    };
    sharedModel.removeSelectedAnswer = function() {
      return AnswerState.removeAnswer(sharedModel.selectedIndex);
    };
    sharedModel.getSelectedAnswer = function() {
      var answer;
      return answer = AnswerState.getAnswer(sharedModel.selectedIndex);
    };
    sharedModel.getSelectedAnswerTimestamp = function() {
      var timestamp;
      return timestamp = AnswerState.getAnswerTimestamp(sharedModel.selectedIndex);
    };
    sharedModel.setSelectedAnswer = function(answer) {
      return AnswerState.setAnswer(sharedModel.selectedIndex, answer);
    };
    sharedModel.selectedHasAnswer = function() {
      return AnswerState.hasAnswer(sharedModel.selectedIndex);
    };
    sharedModel.completeCard = function() {
      if (!AnswerState.hasBeenCompleted(sharedModel.selectedIndex)) {
        AnswerState.markAsCompleted(sharedModel.selectedIndex);
        return sharedModel.raiseEvent('completeStatusChanged');
      }
    };
    sharedModel.cardHasBeenCompleted = function() {
      return AnswerState.hasBeenCompleted(sharedModel.selectedIndex);
    };
    sharedModel.incrementAttempts = function() {
      return AnswerState.incrementAttempts(sharedModel.selectedIndex);
    };
    sharedModel.getAttempts = function() {
      var answer;
      return answer = AnswerState.getAttempts(sharedModel.selectedIndex);
    };
    sharedModel.markCardIncomplete = function() {
      AnswerState.markAsNotCompleted(sharedModel.selectedIndex);
      return sharedModel.raiseEvent('completeStatusChanged');
    };
    sharedModel.markCardIncompleteWithoutSaving = function() {
      if (AnswerState.hasBeenCompleted(sharedModel.selectedIndex)) {
        return AnswerState.markAsNotCompletedWithoutSaving(sharedModel.selectedIndex);
      }
    };
    sharedModel.submit = function() {
      AnswerState.markAsSubmitted();
      return sharedModel.raiseEvent('submitStatusChanged');
    };
    sharedModel.isFinished = function() {
      return Configuration.getRoleIsTeacher() || AnswerState.submitted;
    };
    sharedModel.hasBeenViewed = function(index) {
      return AnswerState.hasBeenViewed(index);
    };
    sharedModel.hasBeenCompleted = function(index) {
      return AnswerState.hasBeenCompleted(index);
    };
    sharedModel.canHaveComments = function(index) {
      return sharedModel.cards[index].comments;
    };
    sharedModel.allowedAttempts = function() {
      return sharedModel.cards[sharedModel.selectedIndex].allowed_attempts;
    };
    sharedModel.hasFeedback = function(index) {
      var card, ref, result;
      result = false;
      card = sharedModel.cards[index];
      if ((ref = card.card_type) === 'choice-question' || ref === 'short-question') {
        result = true;
      }
      return result;
    };
    sharedModel.getHasFeedbackIndices = function() {
      var card, i, index, len, ref, results1;
      ref = sharedModel.cards;
      results1 = [];
      for (index = i = 0, len = ref.length; i < len; index = ++i) {
        card = ref[index];
        if (sharedModel.hasFeedback(index)) {
          results1.push(index);
        }
      }
      return results1;
    };
    sharedModel.getCanHaveCommentsIndices = function() {
      var card, i, index, len, ref, results1;
      ref = sharedModel.cards;
      results1 = [];
      for (index = i = 0, len = ref.length; i < len; index = ++i) {
        card = ref[index];
        if (sharedModel.canHaveComments(index)) {
          results1.push(index);
        }
      }
      return results1;
    };
    sharedModel.canSetSelectedIndex = function(index) {
      var lastCompletedIndex;
      lastCompletedIndex = AnswerState.getLastCompleted();
      if (index === 0 || index <= lastCompletedIndex) {
        return true;
      } else if (lastCompletedIndex === index - 1) {
        return true;
      } else {
        return false;
      }
    };
    sharedModel.canSelectNext = function() {
      return (sharedModel.hasBeenCompleted(sharedModel.selectedIndex)) && sharedModel.selectedIndex + 1 <= sharedModel.getLastIndex();
    };
    sharedModel.canSelectPrevious = function() {
      return sharedModel.selectedIndex - 1 >= sharedModel.getFirstIndex();
    };
    sharedModel.selectNext = function() {
      return sharedModel.setSelectedIndex(sharedModel.selectedIndex + 1);
    };
    sharedModel.selectPrevious = function() {
      return sharedModel.setSelectedIndex(sharedModel.selectedIndex - 1);
    };
    sharedModel.setSelectedIndex = function(index) {
      if (sharedModel.canSetSelectedIndex(index)) {
        sharedModel.selectedIndex = index;
        this.raiseEvent('selectedIndexChanged');
        return AnswerState.updateAnswers();
      }
    };
    sharedModel.isSelectedIndex = function(index) {
      return index === sharedModel.selectedIndex;
    };
    sharedModel.isUpcomingIndex = function(index) {
      var lastCompleted;
      lastCompleted = AnswerState.getLastCompleted();
      return index === lastCompleted + 1;
    };
    sharedModel.getLastCompleted = function() {
      return AnswerState.getLastCompleted();
    };
    sharedModel.isFirstIndex = function(index) {
      return index === 0;
    };
    sharedModel.isLastIndex = function(index) {
      return index === sharedModel.cards.length - 1;
    };
    sharedModel.isFirstOrLastIndex = function(index) {
      return sharedModel.isFirstIndex(index) || sharedModel.isLastIndex(index);
    };
    sharedModel.getFirstIndex = function() {
      return 0;
    };
    sharedModel.getLastIndex = function() {
      return Math.max(sharedModel.cards.length - 1, 0);
    };
    sharedModel.getCardsLength = function() {
      if (sharedModel.loaded) {
        return sharedModel.cards.length;
      } else {
        return 0;
      }
    };
    sharedModel.getApiFailedErrorMsg = function() {
      return 'We have encountered an error when trying to save your answers.  Please try again shortly.  We apologize for this inconvenience';
    };
    sharedModel.loadCards = function(guidedDiscussionId) {
      var CardWithContext, cardsWithContextResult, courseModuleId, timestamp;
      timestamp = Clock.currentTime();
      courseModuleId = Configuration.getCourseModuleId();
      sharedModel.guidedDiscussionId = guidedDiscussionId;
      CardWithContext = ResourceFactory.getCardsWithContextResource();
      return cardsWithContextResult = CardWithContext.get({
        guidedDiscussionId: guidedDiscussionId,
        timestamp: timestamp,
        moduleId: courseModuleId
      }, ((function(_this) {
        return function() {
          sharedModel.cards = cardsWithContextResult.cards;
          Configuration.setupContext(cardsWithContextResult.context);
          sharedModel.loaded = true;
          if (!Configuration.hasContext && Configuration.isUsingApiAndGated()) {
            alert(sharedModel.getApiFailedErrorMsg());
            return;
          }
          Comment.setup(guidedDiscussionId);
          return AnswerState.setup(guidedDiscussionId, sharedModel.getCardsLength(), (function() {
            sharedModel.setSelectedIndex(AnswerState.getLastViewed());
            return sharedModel.raiseEvent('cardsLoaded');
          }), (function() {
            return sharedModel.raiseEvent('apiCallFailed');
          }));
        };
      })(this)), (function() {
        return sharedModel.raiseEvent('apiCallFailed');
      }));
    };
    sharedModel.sectionUpdated = function(sectionId) {
      Configuration.context.sectionId = sectionId;
      Comment.setup(sharedModel.guidedDiscussionId);
      return AnswerState.setup(sharedModel.guidedDiscussionId, sharedModel.getCardsLength(), function() {
        return sharedModel.setSelectedIndex(AnswerState.getLastViewed());
      });
    };
    sharedModel.sectionId = function() {
      return Configuration.context.sectionId;
    };
    sharedModel.getCourseSections = function() {
      return Configuration.getCourseSections();
    };
    sharedModel.getUserId = function() {
      return Configuration.context.user.id;
    };
    sharedModel.getUserRole = function() {
      var result;
      if (Configuration.getRoleIsStudent()) {
        result = 'student';
      }
      if (Configuration.getRoleIsTeacher()) {
        result = 'teacher';
      }
      return result;
    };
    sharedModel.isPESAdmin = function() {
      return Configuration.getRoleIsPESAdmin();
    };
    sharedModel.isInstructor = function() {
      return !Configuration.getRoleIsStudent();
    };
    sharedModel.resultIsViewable = function(result) {
      var commentsOn, hasAnswer, isFinished, isTeacher, matchesUser, selectedIndex, viewable;
      viewable = false;
      selectedIndex = sharedModel.selectedIndex;
      isTeacher = Configuration.getRoleIsTeacher();
      commentsOn = sharedModel.cards[selectedIndex].comments;
      matchesUser = result.user.id === sharedModel.getUserId();
      isFinished = result.submitted;
      hasAnswer = result.cards[selectedIndex].answers.length > 0;
      if (isTeacher || commentsOn || matchesUser) {
        viewable = isFinished && hasAnswer;
      }
      return viewable;
    };
    sharedModel.getAnswersEnabled = function() {
      var isFinished, isQuestion, isTeacher;
      isTeacher = Configuration.getRoleIsTeacher();
      isQuestion = sharedModel.currentIsChoiceQuestion() || sharedModel.currentIsInputQuestion() || sharedModel.currentIsVideoResponseQuestion() || sharedModel.currentIsShortQuestion() || sharedModel.currentIsMatchingQuestion() || sharedModel.currentIsFileUploadQuestion();
      isFinished = sharedModel.isFinished();
      return (isTeacher || isFinished) && isQuestion;
    };
    sharedModel.getAnswerResult = function(result) {
      var answer, card, selectedIndex;
      selectedIndex = sharedModel.selectedIndex;
      card = result.cards[selectedIndex];
      answer = {};
      answer.user = {};
      answer.user.id = result.user.id;
      answer.user.name = result.user.name;
      answer.user.thumbnail_url = result.user.thumbnail_url;
      answer.timestamp = sharedModel.getAnswerTimestamp(result);
      answer.text = sharedModel.getAnswerText(result);
      answer.videoRef = sharedModel.getAnswerVideoRef(result);
      answer.answer_type = sharedModel.getAnswerType(result);
      answer.fileDownloadUrl = sharedModel.getFileDownloadUrlForCurrentCard(result);
      answer.recommendations = [];
      answer.id = card.answers[0].id;
      answer.comments = [];
      return answer;
    };
    sharedModel.getAnswerType = function(result) {
      result = 'text';
      if (sharedModel.currentIsVideoResponseQuestion()) {
        result = 'video';
      }
      if (sharedModel.currentIsFileUploadQuestion()) {
        result = 'file';
      }
      return result;
    };
    sharedModel.getAnswerVideoRef = function(result) {
      var card, selectedIndex, videoRef;
      videoRef = '';
      selectedIndex = sharedModel.selectedIndex;
      card = result.cards[selectedIndex];
      if (sharedModel.currentIsVideoResponseQuestion()) {
        videoRef = card.answers[0].value;
      }
      return videoRef;
    };
    sharedModel.getFileDownloadUrlForCurrentCard = function(result) {
      var card, selectedIndex, url;
      url = '';
      selectedIndex = sharedModel.selectedIndex;
      card = result.cards[selectedIndex];
      if (sharedModel.currentIsFileUploadQuestion()) {
        url = sharedModel.fileDownloadUrl(card.answers[0].value);
      }
      return url;
    };
    sharedModel.getAnswerText = function(result) {
      var answerValue, answerValues, card, choice, questionCard, selectedIndex, text;
      text = '';
      selectedIndex = sharedModel.selectedIndex;
      card = result.cards[selectedIndex];
      if (sharedModel.currentIsInputQuestion()) {
        text = card.answers[0].value;
      } else if (sharedModel.currentIsChoiceQuestion()) {
        questionCard = sharedModel.cards[selectedIndex];
        answerValue = +card.answers[0].value;
        text = ((function() {
          var i, len, ref, results1;
          ref = questionCard.choices;
          results1 = [];
          for (i = 0, len = ref.length; i < len; i++) {
            choice = ref[i];
            if (choice.value === answerValue) {
              results1.push(choice.label);
            }
          }
          return results1;
        })())[0];
      } else if (sharedModel.currentIsShortQuestion()) {
        questionCard = sharedModel.cards[selectedIndex];
        answerValues = card.answers[0].value;
        text = sharedModel.getAnswerTextForShortQuestion(questionCard, answerValues);
      } else if (sharedModel.currentIsMatchingQuestion()) {
        questionCard = sharedModel.cards[selectedIndex];
        text = sharedModel.getAnswerTextForMatchingQuestion(card.answers[0].value);
      }
      return text;
    };
    sharedModel.getAnswerTextForShortQuestion = function(questionCard, answerValues) {
      var i, item, len, ref, text;
      text = '';
      ref = questionCard.short_answers;
      for (i = 0, len = ref.length; i < len; i++) {
        item = ref[i];
        text += item.label + ":" + answerValues[item.order] + "<br /><br />";
      }
      return text;
    };
    sharedModel.getAnswerTextForMatchingQuestion = function(answers) {
      var i, item, len, text;
      text = '';
      for (i = 0, len = answers.length; i < len; i++) {
        item = answers[i];
        text += item.label + ": " + item.answer + "<br /><br />";
      }
      return text;
    };
    sharedModel.getAnswerTimestamp = function(result) {
      var card, selectedIndex;
      selectedIndex = sharedModel.selectedIndex;
      card = result.cards[selectedIndex];
      return normalizeTimestamp(card.answers[0].timestamp);
    };
    sharedModel.getResultsWithComments = function() {
      var Result, courseId, moduleId, response, sectionId, timestamp;
      sharedModel.results = [];
      courseId = Configuration.context.courseId;
      sectionId = Configuration.context.sectionId;
      moduleId = Configuration.context.moduleId;
      timestamp = Clock.currentTime();
      Result = ResourceFactory.getResultsResource();
      return response = Result.get({
        guidedDiscussionId: sharedModel.guidedDiscussionId,
        courseId: courseId,
        sectionId: sectionId,
        moduleId: moduleId,
        cardId: sharedModel.selectedIndex,
        includeComments: "y",
        timestamp: timestamp
      }, ((function(_this) {
        return function() {
          var result;
          sharedModel.results = (function() {
            var i, len, ref, results1;
            ref = response.results;
            results1 = [];
            for (i = 0, len = ref.length; i < len; i++) {
              result = ref[i];
              if (sharedModel.resultIsViewable(result)) {
                results1.push(sharedModel.getAnswerResult(result));
              }
            }
            return results1;
          })();
          sharedModel.comments = response.comments;
          return sharedModel.raiseEvent('resultsLoaded');
        };
      })(this)));
    };
    sharedModel.getResults = function() {
      var Result, courseId, moduleId, results, sectionId, timestamp;
      sharedModel.results = [];
      courseId = Configuration.context.courseId;
      sectionId = Configuration.context.sectionId;
      moduleId = Configuration.context.moduleId;
      timestamp = Clock.currentTime();
      Result = ResourceFactory.getResultsResource();
      return results = Result.query({
        guidedDiscussionId: sharedModel.guidedDiscussionId,
        courseId: courseId,
        sectionId: sectionId,
        moduleId: moduleId,
        timestamp: timestamp
      }, (function(_this) {
        return function() {
          var result, selectedIndex;
          selectedIndex = sharedModel.selectedIndex;
          sharedModel.results = (function() {
            var i, len, results1;
            results1 = [];
            for (i = 0, len = results.length; i < len; i++) {
              result = results[i];
              if (sharedModel.resultIsViewable(result)) {
                results1.push(sharedModel.getAnswerResult(result));
              }
            }
            return results1;
          })();
          return sharedModel.raiseEvent('resultsLoaded');
        };
      })(this));
    };
    sharedModel.getComments = function() {
      var Comments, courseId, moduleId, results, sectionId, timestamp;
      sharedModel.comments = [];
      courseId = Configuration.context.courseId;
      sectionId = Configuration.context.sectionId;
      moduleId = Configuration.context.moduleId;
      timestamp = Clock.currentTime();
      Comments = ResourceFactory.getCommentsResource('get');
      return results = Comments.query({
        guidedDiscussionId: sharedModel.guidedDiscussionId,
        courseId: courseId,
        sectionId: sectionId,
        moduleId: moduleId,
        timestamp: timestamp
      }, (function(_this) {
        return function() {
          sharedModel.comments = results;
          return sharedModel.raiseEvent('commentsLoaded');
        };
      })(this));
    };
    sharedModel.saveComment = function(ids, callback, data) {
      return Comment.updateComment('save', ids, callback, data);
    };
    sharedModel.deleteComment = function(ids, callback) {
      return Comment.updateComment('delete', ids, callback);
    };
    sharedModel.recommendComment = function(ids, callback, data) {
      return Comment.updateComment('recommend', ids, callback, data);
    };
    sharedModel.unrecommendComment = function(ids, callback) {
      return Comment.updateComment('unrecommend', ids, callback);
    };
    sharedModel.recommendAnswer = function(ids, callback, data) {
      return AnswerState.recommendAnswer('recommend', ids, callback, data);
    };
    sharedModel.unrecommendAnswer = function(ids, callback) {
      return AnswerState.recommendAnswer('unrecommend', ids, callback);
    };
    sharedModel.fileDownloadUrl = function(fileId) {
      return ResourceFactory.getFileDownloadUrl(fileId);
    };
    sharedModel.uploadFile = function(file, successCallback, errorCallback) {
      var payload;
      payload = new FormData();
      payload.append("file", file);
      return $http.post(ResourceFactory.getFileUploadUrl(), payload, {
        headers: {
          'Content-Type': void 0
        },
        transformRequest: function(data) {
          return data;
        }
      }).success(successCallback).error(errorCallback);
    };
    return sharedModel;
  }
]);

var discussionDirectives;

discussionDirectives = angular.module('DiscussionDirectives', []);

discussionDirectives.directive('navigationBar', [
  'Hostname', function(Hostname) {
    return {
      restrict: 'A',
      scope: {},
      replace: true,
      controller: 'NavigationController',
      templateUrl: '/gd/navigation-bar.html'
    };
  }
]);

discussionDirectives.directive('mainCard', [
  'Hostname', function(Hostname) {
    return {
      restrict: 'A',
      controller: 'MainController',
      templateUrl: '/gd/main-card.html'
    };
  }
]);

discussionDirectives.directive('discussionIntro', [
  'Hostname', function(Hostname) {
    return {
      restrict: 'A',
      replace: false,
      controller: 'IntroController',
      templateUrl: '/gd/intro.html'
    };
  }
]);

discussionDirectives.directive('htmlInfo', [
  'Hostname', function(Hostname) {
    return {
      restrict: 'A',
      replace: false,
      controller: 'HtmlInfoController',
      templateUrl: '/gd/html-info.html'
    };
  }
]);

discussionDirectives.directive('videoInfo', [
  'Hostname', function(Hostname) {
    return {
      restrict: 'A',
      replace: false,
      controller: 'VideoInfoController',
      templateUrl: '/gd/video-info.html'
    };
  }
]);

discussionDirectives.directive('videoResponse', [
  'Hostname', function(Hostname) {
    return {
      restrict: 'A',
      replace: false,
      controller: 'VideoResponseController',
      templateUrl: '/gd/video-response.html'
    };
  }
]);

discussionDirectives.directive('choiceQuestion', [
  'Hostname', function(Hostname) {
    return {
      restrict: 'A',
      replace: false,
      controller: 'ChoiceQuestionController',
      templateUrl: '/gd/choice-question.html'
    };
  }
]);

discussionDirectives.directive('inputQuestion', [
  'Hostname', function(Hostname) {
    return {
      restrict: 'A',
      replace: false,
      controller: 'InputQuestionController',
      templateUrl: '/gd/input-question.html'
    };
  }
]);

discussionDirectives.directive('shortQuestion', [
  'Hostname', function(Hostname) {
    return {
      restrict: 'A',
      replace: false,
      controller: 'ShortQuestionController',
      templateUrl: '/gd/short-question.html'
    };
  }
]);

discussionDirectives.directive('fileUpload', [
  'Hostname', function(Hostname) {
    return {
      restrict: 'A',
      replace: false,
      controller: 'FileUploadController',
      templateUrl: '/gd/file_upload.html'
    };
  }
]);

discussionDirectives.directive('discussionSubmit', [
  'Hostname', function(Hostname) {
    return {
      restrict: 'A',
      replace: false,
      controller: 'SubmitController',
      templateUrl: '/gd/submit.html'
    };
  }
]);

discussionDirectives.directive('discussionEnd', [
  'Hostname', function(Hostname) {
    return {
      restrict: 'A',
      replace: false,
      controller: 'EndController',
      templateUrl: '/gd/discussion-end.html'
    };
  }
]);

discussionDirectives.directive('previous', [
  'Hostname', function(Hostname) {
    return {
      restrict: 'A',
      replace: true,
      controller: 'PreviousNextController',
      templateUrl: '/gd/previous.html'
    };
  }
]);

discussionDirectives.directive('next', [
  'Hostname', function(Hostname) {
    return {
      restrict: 'A',
      replace: true,
      controller: 'PreviousNextController',
      templateUrl: '/gd/next.html'
    };
  }
]);

discussionDirectives.directive('discussionAnswers', [
  'Hostname', function(Hostname) {
    return {
      restrict: 'A',
      controller: 'AnswersController',
      templateUrl: '/gd/discussion-answers.html'
    };
  }
]);

discussionDirectives.directive('discussionComments', [
  'Hostname', function(Hostname) {
    return {
      restrict: 'A',
      replace: true,
      templateUrl: '/gd/discussion-comments.html'
    };
  }
]);

discussionDirectives.directive('videoPlayer', [
  'Hostname', function(Hostname) {
    return {
      restrict: 'A',
      replace: true,
      scope: {
        videoRef: '=videoPlayer'
      },
      controller: 'VideoPlayerController',
      templateUrl: '/gd/video-player.html'
    };
  }
]);

discussionDirectives.directive('guidedDiscussion', [
  'Hostname', function(Hostname) {
    return {
      restrict: 'A',
      replace: true,
      controller: 'GuidedDiscussionController',
      templateUrl: '/gd/guided-discussion.html',
      link: function(scope, element, attrs) {
        return scope.setup(attrs);
      }
    };
  }
]);

discussionDirectives.directive('oyster', [
  'Hostname', function(Hostname) {
    return {
      restrict: 'A',
      replace: false,
      controller: "OysterController as oysterCtrl",
      templateUrl: '/gd/oyster-card.html'
    };
  }
]);

discussionDirectives.directive('inputformCard', [
  'Hostname', function(Hostname) {
    return {
      restrict: 'A',
      replace: false,
      controller: "InputFormCardController as inputFormCardCtrl",
      templateUrl: '/gd/inputform-card.html'
    };
  }
]);

discussionDirectives.directive('matchingQuestion', [
  'Hostname', function(Hostname) {
    return {
      restrict: 'A',
      replace: false,
      controller: "MatchingQuestionController as matchingQuestionCtrl",
      templateUrl: '/gd/matching-question.html'
    };
  }
]);

discussionDirectives.directive('lineBreak', [
  '$interpolate', 'Hostname', function($interpolate, Hostname) {
    return {
      restrict: 'A',
      priority: 1000,
      link: function(scope, element, attrs) {
        var interpolateFunction, interpolated, replaced;
        interpolateFunction = $interpolate(element.html());
        interpolated = interpolateFunction(scope);
        replaced = interpolated.replace(/\r\n/g, '<br />');
        return element.html(replaced);
      }
    };
  }
]);

discussionDirectives.directive('scrollIf', [
  'Hostname', function(Hostname) {
    return {
      restrict: 'A',
      priority: 1001,
      link: function(scope, element, attrs) {
        return setTimeout(function() {
          if (scope.$eval(attrs.scrollIf)) {
            return window.scrollTo(0, element[0].parentElement.offsetTop);
          }
        }, 500);
      }
    };
  }
]);

discussionDirectives.directive('ngFileDrop', [
  '$parse', '$window', function($parse, $window) {
    return {
      restrict: "A",
      link: function(scope, elm, attrs) {
        var uploadFn;
        if (!$window.File) {
          return;
        }
        uploadFn = $parse(attrs.ngFileDrop);
        elm.bind("dragover", function(event) {
          event.stopPropagation();
          event.preventDefault();
          return elm.addClass("dragover");
        });
        elm.bind("dragleave", function(event) {
          event.stopPropagation();
          event.preventDefault();
          return elm.removeClass("dragover");
        });
        return elm.bind("drop", function(event) {
          var dataTransfer;
          event.preventDefault();
          event.stopPropagation();
          elm.removeClass("dragover");
          dataTransfer = event.dataTransfer || event.originalEvent.dataTransfer;
          scope.files = dataTransfer.files;
          uploadFn(scope);
          return scope.$apply();
        });
      }
    };
  }
]);

discussionDirectives.directive('getFocus', [
  '$parse', '$timeout', function($parse, $timeout) {
    return {
      restrict: "A",
      link: function(scope, element, attrs) {
        var model;
        model = $parse(attrs.getFocus);
        return scope.$watch(model, function(value) {
          if (value === true) {
            return $timeout((function() {
              return element[0].focus();
            }), 1);
          } else {
            return $timeout((function() {
              return element[0].blur();
            }), 1);
          }
        });
      }
    };
  }
]);

discussionDirectives.directive('mobileClickable', [
  function() {
    return {
      restrict: 'AE',
      template: function(tElement, tAttrs) {
        var isClickable;
        isClickable = BrowserDetector.isIos() || BrowserDetector.isAndroid();
        if (isClickable) {
          return "<" + tElement[0].tagName + " class='mobile-clickable' ng-click='onHandleClick()' ng-transclude></" + tElement[0].tagName + ">";
        }
        return "<" + tElement[0].tagName + " class='not-mobile-clickable' ng-transclude></" + tElement[0].tagName + ">";
      },
      transclude: true,
      replace: true,
      link: function(scope, element, attrs) {
        return scope.onHandleClick = scope[attrs.clickFunctionName];
      }
    };
  }
]);

var compileModule;

compileModule = angular.module("CompileModule", []);

compileModule.config([
  '$compileProvider', function($compileProvider) {
    return $compileProvider.directive("linkable", [
      '$compile', function($compile) {
        var callback, matcher, regexp, tag;
        regexp = /\[card:\d{1,2}\].*?\[\/card:\d{1,2}\]/g;
        matcher = /\[card:(\d{1,2})\](.*?)\[\/card:(\d{1,2})\]/;
        tag = "";
        callback = "";
        return function(scope, element, attrs) {
          var convert, watchCallback, watchExpression;
          convert = function(str, p1, offset, s) {
            var match_result, result;
            match_result = str.match(matcher);
            if ((match_result != null ? match_result.length : void 0) === 4) {
              return result = "<" + tag + " ng-click=\"" + callback + "(" + match_result[1] + ")\" class=\"linkable\">" + match_result[2] + "</" + tag + ">";
            } else {
              return result = str;
            }
          };
          watchExpression = function(scope) {
            tag = attrs.linkableTag;
            callback = attrs.linkableCallback;
            return scope.$eval(attrs.linkable);
          };
          watchCallback = function(value) {
            if (value != null) {
              element.html(value.replace(regexp, convert));
              return $compile(element.contents())(scope);
            }
          };
          return scope.$watch(watchExpression, watchCallback);
        };
      }
    ]);
  }
]);

var gdMediaPlayer;

gdMediaPlayer = angular.module('GDMediaPlayer', []);

gdMediaPlayer.factory('GDPlayer', [
  'Hostname', function(Hostname) {
    return function(videoRef, finishedCallback, width, height, selector, subtitles, preload, successCallback, allowFullscreen, bindObj, fixedControls) {
      var compactControls, controlsAppearance, features, options, player, videoElementId;
      if (width == null) {
        width = 784;
      }
      if (height == null) {
        height = 441;
      }
      if (selector == null) {
        selector = ".viewport";
      }
      if (subtitles == null) {
        subtitles = "";
      }
      if (preload == null) {
        preload = "auto";
      }
      if (successCallback == null) {
        successCallback = null;
      }
      if (allowFullscreen == null) {
        allowFullscreen = true;
      }
      if (bindObj == null) {
        bindObj = null;
      }
      if (fixedControls == null) {
        fixedControls = false;
      }
      videoElementId = 'v' + (new Date().getTime());
      controlsAppearance = 'short';
      compactControls = true;
      if (BrowserDetector.isAndroid() || BrowserDetector.isIE() || BrowserDetector.isIE11()) {
        features = ['playpause', 'current', 'progress', 'duration', 'tracks', 'volume', 'analytics'];
      } else {
        features = ['playpause', 'current', 'progress', 'duration', 'tracks', 'speed', 'volume', 'analytics'];
      }
      if (BrowserDetector.isPhone()) {
        controlsAppearance = 'short';
        fixedControls = false;
        compactControls = true;
      } else if (allowFullscreen && !BrowserDetector.isIos() && !BrowserDetector.isAndroid()) {
        features = features.concat('fullscreen');
      }
      options = {
        compactControls: compactControls,
        fixedControls: fixedControls,
        controlsAppearance: controlsAppearance,
        showControlsToStart: true,
        audioOnly: false,
        width: width,
        height: height,
        videoRef: videoRef,
        tracks: subtitles,
        startVolume: 0.65,
        autosizeProgress: true,
        rewindAtEnd: false,
        translations: ['en'],
        startLanguage: 'off',
        showOnScreenPlayButton: true,
        pluginPath: Hostname + '/libs/mediaelement/',
        videoVolume: 'horizontal',
        features: features,
        preload: preload,
        success: function(mediaElement, domObject) {
          if (successCallback) {
            successCallback(mediaElement);
          }
          return mediaElement.addEventListener('ended', (function(_this) {
            return function(e) {
              return finishedCallback();
            };
          })(this), false);
        }
      };
      player = u.video.embedVideoPlayer(selector, options, bindObj, videoElementId);
      return player;
    };
  }
]);

var MediaSourcesFactory, mediaPlayerModule;

mediaPlayerModule = angular.module('GDMediaPlayer');

MediaSourcesFactory = (function() {
  function MediaSourcesFactory() {}

  MediaSourcesFactory.prototype.getSources = function(videoRef, subtitles, callbackFn, width, height) {
    var factory, sources;
    if (width == null) {
      width = 784;
    }
    if (height == null) {
      height = 441;
    }
    factory = new SourcesFactory();
    if (BrowserDetector.isPhone()) {
      return sources = factory.makeSources(window.jQuery, {
        'videoRef': videoRef
      }, function() {
        var innerHeight, innerWidth, ref, screenRatio, screenSize, videoRatio, videoSize;
        screenSize = BrowserDetector.getSize();
        screenRatio = screenSize.w / screenSize.h;
        innerWidth = screenRatio < 1 ? screenSize.h : screenSize.w;
        innerHeight = screenRatio < 1 ? screenSize.w : screenSize.h;
        if (((ref = sources.playableSources['default']) != null ? ref.dimensions : void 0) != null) {
          videoSize = sources.playableSources['default'].dimensions;
        } else if (sources.playableSources['med'] != null) {
          videoSize = {
            w: sources.playableSources['med'].width,
            h: sources.playableSources['med'].height
          };
        }
        videoRatio = videoSize.w / videoSize.h;
        width = screenRatio < videoRatio ? innerWidth : innerHeight * videoRatio;
        height = screenRatio < videoRatio ? innerWidth / videoRatio : innerHeight;
        return callbackFn(videoRef, subtitles, width, height);
      });
    } else {
      return callbackFn(videoRef, subtitles, width, height);
    }
  };

  return MediaSourcesFactory;

})();

mediaPlayerModule.factory('MediaSourcesFactory', function() {
  return function() {
    return new MediaSourcesFactory();
  };
});

this.StyleLoader = (function() {
  function StyleLoader(jQuery1, document1) {
    this.jQuery = jQuery1;
    this.document = document1;
  }

  StyleLoader.prototype.loadStyle = function(url) {
    var link;
    if (document.createStyleSheet) {
      return document.createStyleSheet(url);
    } else {
      link = jQuery("<link rel='stylesheet' type='text/css' href='" + url + "' />");
      return link.appendTo('head');
    }
  };

  return StyleLoader;

})();

var Card, models_module;

models_module = angular.module('DiscussionModels', []);

window.Card = Card = (function() {
  function Card(card, sce) {
    this.card = card;
    this.sce = sce;
  }

  Card.prototype.editOnce = function() {
    if (this.card.edit_once != null) {
      return this.card.edit_once;
    } else {
      return false;
    }
  };

  Card.prototype.validateNow = function() {
    if ((this.card.allowed_attempts != null) && (this.card.allowed_attempts === "INFINITE" || /\d+/.test(this.card.allowed_attempts))) {
      return true;
    }
    return false;
  };

  Card.prototype.isCompleted = function(answers, noOfAttempts) {
    if (this.validateNow()) {
      return this.allInputsCorrect(answers) || (this.card.allowed_attempts !== "INFINITE" && noOfAttempts >= this.card.allowed_attempts);
    } else {
      return this.allInputsFilled(answers);
    }
  };

  Card.prototype.displayFeedback = function(finished, completed) {
    return (finished && this.hasFeedback()) || (this.validateNow() && completed);
  };

  Card.prototype.inputDisabled = function(finished, completed) {
    return (this.editOnce() && completed) || finished || (this.validateNow() && completed);
  };

  Card.prototype.attemptsRemaining = function(noOfAttempts, completed) {
    return this.validateNow() && !completed && noOfAttempts > 0 && (this.card.allowed_attempts === "INFINITE" || noOfAttempts <= this.card.allowed_attempts);
  };

  Card.prototype.allInputsCorrect = function(answers) {
    return false;
  };

  Card.prototype.allInputsFilled = function(answers) {
    return false;
  };

  Card.prototype.hasFeedback = function() {
    return false;
  };

  return Card;

})();

var ShortQuestion, modelsModule,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

modelsModule = angular.module('DiscussionModels');

ShortQuestion = (function(superClass) {
  extend(ShortQuestion, superClass);

  function ShortQuestion() {
    return ShortQuestion.__super__.constructor.apply(this, arguments);
  }

  ShortQuestion.prototype.setupAnswers = function(stored_answer) {
    var i, j, len, len1, obj, short_answers;
    short_answers = this.copyOfAnswers();
    if (Array.isArray(stored_answer)) {
      for (i = 0, len = short_answers.length; i < len; i++) {
        obj = short_answers[i];
        short_answers[obj.order].answer = stored_answer[obj.order];
      }
    } else {
      for (j = 0, len1 = short_answers.length; j < len1; j++) {
        obj = short_answers[j];
        short_answers[obj.order].answer = '';
      }
    }
    return short_answers;
  };

  ShortQuestion.prototype.isAnswerCorrect = function(answer, answer_keys) {
    var answer_key, i, is_correct, len, user_answer_standardized;
    is_correct = false;
    user_answer_standardized = answer.toUpperCase().replace(/^\s+|\s+$/g);
    for (i = 0, len = answer_keys.length; i < len; i++) {
      answer_key = answer_keys[i];
      is_correct = is_correct || user_answer_standardized === answer_key.toUpperCase();
    }
    return is_correct;
  };

  ShortQuestion.prototype.hasFeedback = function() {
    return true;
  };

  ShortQuestion.prototype.getFeedback = function(short_answers) {
    var correct_answer, i, is_correct, item, item_label, len, result;
    result = [];
    for (i = 0, len = short_answers.length; i < len; i++) {
      item = short_answers[i];
      correct_answer = item.key[0];
      is_correct = this.isAnswerCorrect(item.answer, item.key);
      item_label = item.label ? item.label + ". " : "";
      if (is_correct) {
        result.push(item_label + "You answered <strong>" + item.answer + "</strong>, which is <strong>correct</strong>");
      } else {
        result.push(item_label + "You answered <strong>" + item.answer + "</strong>, which is <strong>incorrect</strong>. The correct answer is <strong>" + correct_answer + "</strong>");
      }
    }
    return result;
  };

  ShortQuestion.prototype.allInputsFilled = function(answers) {
    var i, len, obj, validAnswer;
    validAnswer = true;
    for (i = 0, len = answers.length; i < len; i++) {
      obj = answers[i];
      validAnswer = validAnswer && obj.answer !== '' && obj.answer.match(/^[^<>]+$/) !== null;
    }
    return validAnswer;
  };

  ShortQuestion.prototype.allInputsCorrect = function(answers) {
    var correctAnswer, i, len, obj;
    correctAnswer = true;
    for (i = 0, len = answers.length; i < len; i++) {
      obj = answers[i];
      correctAnswer = correctAnswer && this.isAnswerCorrect(obj.answer, obj.key);
    }
    return correctAnswer;
  };

  ShortQuestion.prototype.copyOfAnswers = function() {
    var answersCopy, copy, i, len, obj, ref;
    answersCopy = [];
    ref = this.card.short_answers;
    for (i = 0, len = ref.length; i < len; i++) {
      obj = ref[i];
      copy = {};
      copy.order = obj.order;
      copy.label = obj.label;
      copy.key = obj.key;
      copy.answer = obj.answer;
      answersCopy.push(copy);
    }
    return answersCopy;
  };

  return ShortQuestion;

})(Card);

modelsModule.factory('ShortQuestion', function() {
  return function(card) {
    return new ShortQuestion(card);
  };
});

var ChoiceQuestion, modelsModule,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

modelsModule = angular.module('DiscussionModels');

ChoiceQuestion = (function(superClass) {
  extend(ChoiceQuestion, superClass);

  function ChoiceQuestion() {
    return ChoiceQuestion.__super__.constructor.apply(this, arguments);
  }

  ChoiceQuestion.prototype.hasFeedback = function() {
    var choice, outcomes;
    outcomes = (function() {
      var i, len, ref, results;
      ref = this.card.choices;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        choice = ref[i];
        if ((choice.feedback != null) && choice.feedback !== '') {
          results.push(choice.feedback);
        }
      }
      return results;
    }).call(this);
    return outcomes.length > 0;
  };

  ChoiceQuestion.prototype.getFeedback = function(answer) {
    var answer_text, choice, correct_answer_text, i, is_correct, j, k, l, len, len1, len2, len3, ref, ref1, ref2, ref3, result, results, validation_msg;
    if (answer) {
      result = (function() {
        var i, len, ref, results;
        ref = this.card.choices;
        results = [];
        for (i = 0, len = ref.length; i < len; i++) {
          choice = ref[i];
          if (this.isSame(choice.value, answer)) {
            results.push(choice.feedback);
          }
        }
        return results;
      }).call(this);
      ref = this.card.choices;
      for (i = 0, len = ref.length; i < len; i++) {
        choice = ref[i];
        if (this.isSame(choice.value, answer)) {
          is_correct = choice.correct;
        }
      }
      ref1 = this.card.choices;
      for (j = 0, len1 = ref1.length; j < len1; j++) {
        choice = ref1[j];
        if (this.isSame(choice.value, answer)) {
          answer_text = choice.label;
        }
      }
      if (is_correct) {
        validation_msg = "You answered <strong>" + answer_text + "</strong>, which is <strong>correct</strong>";
      } else {
        ref2 = this.card.choices;
        for (k = 0, len2 = ref2.length; k < len2; k++) {
          choice = ref2[k];
          if (choice.correct) {
            correct_answer_text = choice.label;
          }
        }
        validation_msg = "You answered <strong>" + answer_text + "</strong>, which is <strong>incorrect</strong>. The correct answer is <strong>" + correct_answer_text + "</strong>";
      }
      result.unshift(validation_msg);
      return result;
    } else {
      ref3 = this.card.choices;
      results = [];
      for (l = 0, len3 = ref3.length; l < len3; l++) {
        choice = ref3[l];
        if (choice.feedback != null) {
          results.push(choice.feedback);
        }
      }
      return results;
    }
  };

  ChoiceQuestion.prototype.isSame = function(value, answer) {
    return this.convertToString(value) === this.convertToString(answer);
  };

  ChoiceQuestion.prototype.convertToString = function(value) {
    return "" + value;
  };

  ChoiceQuestion.prototype.allInputsCorrect = function(answer) {
    var choice;
    return ((function() {
      var i, len, ref, results;
      ref = this.card.choices;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        choice = ref[i];
        if (this.isSame(choice.value, answer.value)) {
          results.push(choice.correct);
        }
      }
      return results;
    }).call(this))[0];
  };

  ChoiceQuestion.prototype.allInputsFilled = function(choice) {
    return true;
  };

  return ChoiceQuestion;

})(Card);

modelsModule.factory('ChoiceQuestion', function() {
  return function(card) {
    return new ChoiceQuestion(card);
  };
});

var InputQuestion, modelsModule,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

modelsModule = angular.module('DiscussionModels');

InputQuestion = (function(superClass) {
  extend(InputQuestion, superClass);

  function InputQuestion() {
    return InputQuestion.__super__.constructor.apply(this, arguments);
  }

  InputQuestion.prototype.minWords = function() {
    if (this.card.min_words != null) {
      return this.card.min_words;
    } else {
      return 10;
    }
  };

  InputQuestion.prototype.maxWords = function() {
    if (this.card.max_words != null) {
      return this.card.max_words;
    } else {
      return 500;
    }
  };

  InputQuestion.prototype.isCompleted = function(answer) {
    var result, wordCount;
    wordCount = this.getNumberOfWords(answer);
    result = {
      completed: false,
      validationMessage: "",
      answer: answer
    };
    if (this.minWords() <= wordCount) {
      result.completed = true;
      if (wordCount > this.maxWords()) {
        result.answer = this.enforceMaxWords(answer);
        result.validationMessage = 'You have reached the maximum word limit of ' + this.maxWords() + '.';
      }
    }
    return result;
  };

  InputQuestion.prototype.getNumberOfWords = function(answer) {
    if ((answer != null) && answer.length > 0) {
      return answer.split(' ').length;
    } else {
      return 0;
    }
  };

  InputQuestion.prototype.minWordsEntered = function(answer) {
    var wordCount;
    wordCount = this.getNumberOfWords(answer);
    return this.minWords() <= wordCount;
  };

  InputQuestion.prototype.enforceMaxWords = function(answer) {
    var i, words, wordsArray;
    wordsArray = answer.split(' ');
    words = 0;
    i = 0;
    while ((i < wordsArray.length) && (words < this.maxWords())) {
      if (wordsArray[i].length) {
        ++words;
      }
      ++i;
    }
    return wordsArray.splice(0, i).join(" ") + " ";
  };

  return InputQuestion;

})(Card);

modelsModule.factory('InputQuestion', function() {
  return function(card) {
    return new InputQuestion(card);
  };
});

var FileUpload, modelsModule,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

modelsModule = angular.module('DiscussionModels');

FileUpload = (function(superClass) {
  extend(FileUpload, superClass);

  function FileUpload() {
    return FileUpload.__super__.constructor.apply(this, arguments);
  }

  FileUpload.prototype.hasFeedback = function() {
    return false;
  };

  FileUpload.prototype.question = function() {
    if (this.card.question.indexOf('<') === -1) {
      return this.sce.trustAsHtml("<p class='oldstyle'>" + this.card.question + "</p>");
    } else {
      return this.sce.trustAsHtml(this.card.question);
    }
  };

  return FileUpload;

})(Card);

modelsModule.factory('FileUpload', function() {
  return function(card, sce) {
    return new FileUpload(card, sce);
  };
});

var OysterCard, models_module,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

models_module = angular.module('DiscussionModels');

window.OysterCard = OysterCard = (function(superClass) {
  extend(OysterCard, superClass);

  function OysterCard(card1, sce1) {
    this.card = card1;
    this.sce = sce1;
    OysterCard.__super__.constructor.call(this, this.card, this.sce);
    this.selectedSlideId = '';
    this.showingVideo = true;
    this.chapters = this.getChapters();
    if (this.chapters.length > 0) {
      this.selectedChapterSlideId = this.chapters[0].id;
    }
    if (this.chapters.length > 0) {
      this.selectedChapterTitle = this.sce.trustAsHtml(this.getSelectedChapterSlide().title);
    }
  }

  OysterCard.prototype.videoRef = function() {
    return this.card.video_ref;
  };

  OysterCard.prototype.slides = function() {
    return this.card.slides;
  };

  OysterCard.prototype.slideById = function(id) {
    var slide;
    return ((function() {
      var i, len, ref, results;
      ref = this.card.slides;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        slide = ref[i];
        if (slide.id === id) {
          results.push(slide);
        }
      }
      return results;
    }).call(this))[0];
  };

  OysterCard.prototype.getChapters = function() {
    var i, len, ref, results, slide;
    ref = this.card.slides;
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      slide = ref[i];
      if (slide.title != null) {
        results.push(slide);
      }
    }
    return results;
  };

  OysterCard.prototype.getSelectedChapterSlide = function() {
    return this.slideById(this.selectedChapterSlideId);
  };

  return OysterCard;

})(Card);

models_module.factory('Oyster', function() {
  return function(card, sce) {
    return new OysterCard(card, sce);
  };
});

var MatchingQuestion, modelsModule,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

modelsModule = angular.module('DiscussionModels');

MatchingQuestion = (function(superClass) {
  extend(MatchingQuestion, superClass);

  function MatchingQuestion() {
    return MatchingQuestion.__super__.constructor.apply(this, arguments);
  }

  MatchingQuestion.prototype.setupOptionsWithAnswers = function(stored_answers_array) {
    var answers, i, j, len, obj;
    answers = this.copyOfOptionsWithoutCorrectAnswer();
    if (Array.isArray(stored_answers_array)) {
      for (i = j = 0, len = answers.length; j < len; i = ++j) {
        obj = answers[i];
        answers[i].answer = stored_answers_array[i].answer;
      }
    }
    return answers;
  };

  MatchingQuestion.prototype.choices = function() {
    var j, len, obj, ref, results;
    ref = this.card.options;
    results = [];
    for (j = 0, len = ref.length; j < len; j++) {
      obj = ref[j];
      results.push(obj.correct_answer);
    }
    return results;
  };

  MatchingQuestion.prototype.isAnswerCorrect = function(answer, index) {
    var is_correct;
    is_correct = false;
    return this.card.options[index].correct_answer === answer;
  };

  MatchingQuestion.prototype.hasFeedback = function() {
    return true;
  };

  MatchingQuestion.prototype.getFeedback = function(answers) {
    var correct_answer, i, is_correct, item, j, len, result;
    result = [];
    for (i = j = 0, len = answers.length; j < len; i = ++j) {
      item = answers[i];
      correct_answer = this.card.options[i].correct_answer;
      is_correct = this.isAnswerCorrect(item.answer, i);
      if (is_correct) {
        result.push(item.label + ": You selected <strong>" + item.answer + "</strong>, which is <strong>correct</strong>");
      } else {
        result.push(item.label + ": You selected <strong>" + item.answer + "</strong>, which is <strong>incorrect</strong>. The correct answer is <strong>" + correct_answer + "</strong>");
      }
    }
    return result;
  };

  MatchingQuestion.prototype.allInputsFilled = function(answers) {
    var j, len, obj, validAnswer;
    validAnswer = true;
    for (j = 0, len = answers.length; j < len; j++) {
      obj = answers[j];
      validAnswer = validAnswer && obj.answer !== '' && obj.answer.match(/^[^<>]+$/) !== null;
    }
    return validAnswer;
  };

  MatchingQuestion.prototype.allInputsCorrect = function(answers) {
    var correctAnswer, i, j, len, obj;
    correctAnswer = true;
    for (i = j = 0, len = answers.length; j < len; i = ++j) {
      obj = answers[i];
      correctAnswer = correctAnswer && this.isAnswerCorrect(obj.answer, i);
    }
    return correctAnswer;
  };

  MatchingQuestion.prototype.copyOfOptionsWithoutCorrectAnswer = function() {
    var copy, j, len, obj, optionsCopy, ref;
    optionsCopy = [];
    ref = this.card.options;
    for (j = 0, len = ref.length; j < len; j++) {
      obj = ref[j];
      copy = {};
      copy.label = obj.label;
      copy.option = obj.option;
      copy.answer = obj.option;
      optionsCopy.push(copy);
    }
    return optionsCopy;
  };

  MatchingQuestion.prototype.getQuestionHTML = function() {
    if (this.card.question.indexOf('<') === -1) {
      return "<h1>" + this.card.question + "</h1>";
    } else {
      return this.card.question;
    }
  };

  return MatchingQuestion;

})(Card);

modelsModule.factory('MatchingQuestion', function() {
  return function(card) {
    return new MatchingQuestion(card);
  };
});

(function(Popcorn) {
  Popcorn.plugin("slide", (function(options) {
    var instance, running;
    running = false;
    instance = this;
    return {
      start: function(event, options) {
        var scope, slideElement;
        slideElement = document.getElementById("oyster_slides");
        scope = angular.element(slideElement).scope();
        scope.$apply(scope.oysterCtrl.showOysterSlide(options.id));
      },
      end: function(event, options) {
        var scope, slideElement;
        slideElement = document.getElementById("oyster_slides");
        scope = angular.element(slideElement).scope();
        scope.$apply(scope.oysterCtrl.clearOysterSlide());
      }
    };
  }), {
    about: {
      name: "Popcorn Slide Plugin",
      version: "0.1",
      author: "2U",
      website: "http://2u.com"
    },
    options: {
      start: {
        elem: "input",
        type: "number",
        label: "Start"
      },
      end: {
        elem: "input",
        type: "number",
        label: "End"
      },
      id: {
        elem: "input",
        type: "string",
        label: "id"
      }
    }
  });
})(Popcorn);

var KenBurns;

KenBurns = (function() {
  KenBurns.start_time = null;

  KenBurns.update_time = null;

  KenBurns.time_passed = null;

  KenBurns.interval_id = null;

  KenBurns.image = null;

  KenBurns.$canvas = null;

  KenBurns.ctx = null;

  KenBurns.width = null;

  KenBurns.height = null;

  KenBurns.display_time = null;

  KenBurns.frames_per_second = null;

  KenBurns.frame_time = null;

  KenBurns.zoom_level = null;

  KenBurns.zoom_direction = null;

  KenBurns.x_direction = null;

  KenBurns.y_direction = null;

  KenBurns.clear_color = null;

  function KenBurns(canvas, options) {
    this.$canvas = canvas;
    this.ctx = canvas[0].getContext("2d");
    this.width = this.$canvas.attr('width');
    this.height = this.$canvas.attr('height');
    this.display_time = options.display_time || 7000;
    this.time_passed = 0;
    this.frames_per_second = options.frames_per_second || 30;
    this.frame_time = (1 / this.frames_per_second) * 1000;
    this.zoom_level = 1 / (options.zoom || 1.2);
    this.zoom_direction = options.zoom_direction != null ? options.zoom_direction : Math.floor(Math.random() * 2);
    this.x_direction = options.x_direction != null ? options.x_direction : Math.floor(Math.random() * 3) - 1;
    this.y_direction = options.y_direction != null ? options.y_direction : Math.floor(Math.random() * 3) - 1;
    this.clear_color = options.background_color || "#000000";
    this.image = {
      path: options.image,
      initialized: false,
      loaded: false
    };
  }

  KenBurns.prototype.get_time = function() {
    var d;
    d = new Date();
    return d.getTime() - this.start_time;
  };

  KenBurns.prototype.interpolate_point = function(x1, y1, x2, y2, i) {
    return {
      x: x1 + (x2 - x1) * i,
      y: y1 + (y2 - y1) * i
    };
  };

  KenBurns.prototype.interpolate_rect = function(r1, r2, i) {
    var p1, p2;
    p1 = this.interpolate_point(r1[0], r1[1], r2[0], r2[1], i);
    p2 = this.interpolate_point(r1[2], r1[3], r2[2], r2[3], i);
    return [p1.x, p1.y, p2.x, p2.y];
  };

  KenBurns.prototype.scale_rect = function(r, scale) {
    var cx, cy, h, scaleh, scalew, w;
    w = r[2] - r[0];
    h = r[3] - r[1];
    cx = (r[2] + r[0]) / 2;
    cy = (r[3] + r[1]) / 2;
    scalew = w * scale;
    scaleh = h * scale;
    return [cx - scalew / 2, cy - scaleh / 2, cx + scalew / 2, cy + scaleh / 2];
  };

  KenBurns.prototype.fit = function(src_w, src_h, dst_w, dst_h) {
    var dst_a, h, src_a, w, x, y;
    src_a = src_w / src_h;
    dst_a = dst_w / dst_h;
    w = src_h * dst_a;
    h = src_h;
    if (w > src_w) {
      w = src_w;
      h = src_w / dst_a;
    }
    x = (src_w - w) / 2;
    y = (src_h - h) / 2;
    return [x, y, x + w, y + h];
  };

  KenBurns.prototype.get_image_info = function(load_callback) {
    var image, image_info;
    image_info = this.image;
    if (!image_info.initialized) {
      image = new Image();
      image_info.image = image;
      image_info.loaded = false;
      image.onload = (function(_this) {
        return function() {
          var align_x, align_y, ih, iw, r1, r2, x, y;
          image_info.loaded = true;
          iw = image.width;
          ih = image.height;
          r1 = _this.fit(iw, ih, _this.width, _this.height);
          r2 = _this.scale_rect(r1, _this.zoom_level);
          align_x = _this.x_direction;
          align_y = _this.y_direction;
          align_x /= 2;
          align_y /= 2;
          x = r2[0];
          r2[0] += x * align_x;
          r2[2] += x * align_x;
          y = r2[1];
          r2[1] += y * align_y;
          r2[3] += y * align_y;
          if (_this.zoom_direction) {
            image_info.r1 = r1;
            image_info.r2 = r2;
          } else {
            image_info.r1 = r2;
            image_info.r2 = r1;
          }
          if (load_callback) {
            return load_callback();
          }
        };
      })(this);
      image_info.initialized = true;
      image.src = image_info.path;
    }
    return image_info;
  };

  KenBurns.prototype.render_image = function(anim) {
    var image_info, r;
    if (anim > 1) {
      return;
    }
    image_info = this.get_image_info();
    if (image_info.loaded) {
      r = this.interpolate_rect(image_info.r1, image_info.r2, anim);
      this.ctx.save();
      this.ctx.globalAlpha = 1;
      this.ctx.drawImage(image_info.image, r[0], r[1], r[2] - r[0], r[3] - r[1], 0, 0, this.width, this.height);
      return this.ctx.restore();
    }
  };

  KenBurns.prototype.clear = function() {
    this.ctx.save();
    this.ctx.globalAlpha = 1;
    this.ctx.fillStyle = this.clear_color;
    this.ctx.fillRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);
    return this.ctx.restore();
  };

  KenBurns.prototype.update = function() {
    this.update_time = this.get_time();
    this.render_image(this.update_time / this.display_time);
    if (this.get_time() >= (this.display_time - this.frames_per_second)) {
      return this.stopEffect(true);
    }
  };

  KenBurns.prototype.startEffect = function() {
    var time;
    time = new Date();
    this.start_time = time.getTime() - this.time_passed;
    clearInterval(this.interval_id);
    return this.interval_id = setInterval((function(_this) {
      return function() {
        return _this.update();
      };
    })(this), this.frame_time);
  };

  KenBurns.prototype.stopEffect = function(animation_over) {
    if (animation_over == null) {
      animation_over = false;
    }
    clearInterval(this.interval_id);
    this.time_passed = 0;
    if (!animation_over) {
      return this.time_passed = this.get_time();
    }
  };

  KenBurns.prototype.setTimePassedInSeconds = function(secondsPassed) {
    return this.time_passed = secondsPassed * 1000;
  };

  return KenBurns;

})();

this.exportModule('video', 'kenburns', KenBurns);

angular.module('DiscussionDirectives').run(['$templateCache', function($templateCache) {
  'use strict';

  $templateCache.put('/gd/choice-question.html',
    "<div><div id=socraticcontent><div tabindex=0 role=heading title=Question ng-bind-html=question></div><div class=choices><div class=choice-option data-ng-repeat=\"choice in choices\"><input type=radio role=radio name=answer id=answer{{$index}} value=\"{{ choice.value }}\" data-ng-show=!$parent.inputDisabled() data-ng-disabled=$parent.inputDisabled() data-ng-model=$parent.answer data-ng-change=answerChosen(choice)> <label for=answer{{$index}} data-ng-class=getLabelClass(choice) ng-bind-html=choice.label></label></div></div><div class=\"choice-question-answer-button buttons\" ng-hide=\"!editOnce() || inputDisabled()\"><button ng-class=getButtonClass() data-ng-show=!isFinished ng-click=answerSubmitted()>Submit</button></div></div><div aria-live=polite class=feedback ng-if=showAttemptsRemainingMsg()>That was not correct. Try again.</div><div aria-live=polite class=feedback ng-if=displayFeedback()><div data-ng-repeat=\"outcome in getFeedback() track by $index\"><span class=outcome ng-bind-html=asTrustedHtml(outcome)></span></div></div></div>"
  );


  $templateCache.put('/gd/discussion-answers.html',
    "<div mobile-clickable click-function-name=toggleDeviceNavBar class=discussion><h4 class=out-of-sight tabindex=0>Submitted Answers</h4><div class=answer ng-repeat=\"answer in answers|orderBy:customSort\"><div class=user><div class=left><img class=thumbnail alt=\"\" ng-src=\"{{ answer.user.thumbnail_url }}\"></div><div class=right><div class=name>{{ answer.user.name }}</div><div class=timestamp>{{ answer.timestamp | date:\"EEE MMM d yyyy 'at' h:mma\" }}</div></div></div><div class=discussion-content><div data-ng-switch on=answer.answer_type><div data-ng-switch-when=text><div class=text ng-bind-html=asTrustedHtml(answer.text)></div></div><div data-ng-switch-when=file><a aria-label=\"Download {{answer.user.name}}'s file\" href=\"{{ answer.fileDownloadUrl }}\">Download File</a></div><div data-ng-switch-when=video class=video-viewport><div data-video-player=answer.videoRef data-video-type=answer></div></div></div></div><div class=actions><div data-ng-show=showComments(answer) class=comment ng-class=getCommentActionState(answer)><i></i> <a aria-label=\"Comment on {{answer.user.name}}'s answer\" ng-show=canComment() href=# ng-click=\"$event.preventDefault(); changeComposerState(answer)\">Comment</a></div><div data-ng-show=canComment() class=recommend data-ng-class=getRecommendActionState(answer)><i></i> <a aria-label=\"Recommend {{answer.user.name}}'s answer\" href=# ng-click=\"$event.preventDefault(); changeAnswerRecommendationState(answer)\"><span class=label>{{ getRecommendationTextState(answer) }}</span> <span class=count>({{ answer.recommendations.length }})</span></a></div></div><div discussion-comments ng-show=showComments(answer)></div></div></div>"
  );


  $templateCache.put('/gd/discussion-comments.html',
    "<div class=comments data-ng-class=getCommentsState(answer)><div class=comment data-ng-repeat=\"comment in answer.comments\"><div class=inner data-ng-hide=comment.deleted data-scroll-if=\"'{{comment.id}}' == '{{scrollto}}'\"><h4 class=out-of-sight tabindex=0>Comment from {{ comment.user.name }}</h4><a data-ng-show=canDeleteComment(comment.user.id) data-ng-click=\"deleteComment(answer, comment)\" class=x aria-label=\"delete comment\">×</a><div class=a><img class=thumbnail data-ng-src=\"{{ comment.user.thumbnail_url }}\" alt=\"\"></div><div class=b><div class=name aria-hidden=true><span data-ng-show=isTeacherComment(comment) class=badge></span> {{ comment.user.name }}</div><div class=timestamp>{{ comment.timestamp | date:\"EEE MMM d yyyy 'at' h:mma\" }}</div><div data-ng-switch on=shouldShowVideoForComment(comment)><div data-ng-switch-when=true><div data-video-player=getVideoRefForComment(comment) data-video-type=comment></div></div></div>{{ comment.body }}<div class=actions><div data-ng-show=canComment() class=recommend data-ng-class=getRecommendActionState(comment)><i></i> <a data-ng-click=\"changeCommentRecommendationState(answer, comment)\"><span class=label>{{ getRecommendationTextState(comment) }}</span> <span class=count>({{ comment.recommendations.length }})</span></a></div></div></div></div><div class=\"inner deleted\" data-ng-show=comment.deleted>This comment has been deleted.</div></div><div data-ng-show=composers[answer.id] class=\"comment composer\"><form data-ng-submit=submitComment(answer)><div data-ng-show=isShowVideo(composersVideoRef[answer.id]) class=video-upload-response><div class=video-viewport><div data-video-player=composersVideoRef[answer.id] data-video-type=comment-preview></div></div><!--<div class=\"preview error\">!</div>--> <button class=gray data-ng-click=discardComposerVideoRef(answer) type=button>Discard Video</button></div><div class=field><textarea type=text rows=2 placeholder=\"Type your comment here\" get-focus=isComposerFocused(answer) data-ng-model=composersBody[answer.id]></textarea></div><div class=options><a class=camera data-ng-click=attachVideoRef()></a> <a class=file data-ng-click=selectVideoFromMediaLibrary()></a></div><div class=buttons><button class=gray data-ng-click=changeComposerState(answer) type=reset>Cancel</button> <button class=green data-ng-class=changeButtonState(answer) type=submit>Submit</button></div></form></div></div>"
  );


  $templateCache.put('/gd/discussion-end.html',
    "<div id=socraticcontent><h1>{{ title }}</h1><p data-linkable=sub_title data-linkable-callback=clickCard data-linkable-tag=strong ng-if=sub_title></p><p data-linkable=description data-linkable-callback=clickCard data-linkable-tag=strong ng-if=description></p></div>"
  );


  $templateCache.put('/gd/file_upload.html',
    "<div id=socraticcontent><div class=device-alert>This card requires a file upload, which is not possible on mobile devices. Please use your computer to complete this card.</div><div ng-bind-html=fileUploadCard.question()></div><div ng-show=canDeleteFile()><a href=\"{{ downloadUrl }}\">Download File</a><div class=buttons><button ng-click=deleteFile()>Delete File</button> <button ng-class=getButtonClass() data-ng-show=editOnce() ng-click=fileSubmitted()>Submit</button></div></div><div class=fileDropArea ng-file-drop=uploadDroppedFiles() ng-show=canUploadFile()><p>Select a file to upload or drag and drop file in this area.</p><form><input id=uploadFile name=uploadedFile type=file><div class=\"buttons file-upload-button\"><button ng-click=uploadFile()>Upload</button></div></form><progress ng-show=showProgressBar class=\"progress-striped active progressBar\"></progress></div></div>"
  );


  $templateCache.put('/gd/guided-discussion.html',
    "<div data-ng-class=socraticClass aria-label=\"Bi-directional Learning Tool: {{ deviceIntroTitle }}\" title=\"Bi-directional Learning Tool: {{ deviceIntroTitle }}\" tabindex=0 role=region><div class=blt-progress-indicator data-ng-show=progressBarVisible><progress class=\"progress-warning progress-striped\"></progress></div><div data-ng-show=deviceShowIntroScreen class=blt-mobile-intro><div class=blt-mobile-intro-card><div class=blt-mobile-intro-card-title>{{ deviceIntroTitle }}</div><div class=blt-mobile-intro-card-sub-title>{{ deviceIntroSubTitle }}</div></div><div class=blt-mobile-intro-button><button data-ng-click=deviceHideIntroScreen()>Launch</button></div></div><div data-ng-hide=deviceShowIntroScreen class=blt-mobile-fullscreen><div data-ng-show=showSections align=right>Section: <select ng-change=sectionChanged() ng-model=selectedSectionId><option ng-repeat=\"s in sections\" value={{s.id}} ng-selected=\"s.id == selectedSectionId\">{{ s.name }}</option></select></div><div data-navigation-bar></div><div class=main><div data-ng-show=showCard class=card><div data-previous></div><div><h4 id=cardContent class=out-of-sight tabindex=0>{{simplifiedType()}} Card</h4><div data-main-card></div></div><div data-next></div></div><div data-ng-show=showDiscussion data-ng-switch on=getAnswersEnabled()><div data-ng-switch-when=true><div data-discussion-answers></div></div></div></div><div class=\"socraticbar bottom\"></div></div></div>"
  );


  $templateCache.put('/gd/html-info.html',
    "<div id=socraticcontent><div ng-bind-html=description></div></div>"
  );


  $templateCache.put('/gd/input-question.html',
    "<div><div id=socraticcontent><div ng-bind-html=question></div><textarea placeholder=\"Type your answer here...\" data-ng-show=!isFinished data-ng-model=answer data-ng-change=validateAnswerEntered() ng-disabled=textAreaShouldBeDisabled()></textarea><div class=\"input-question-answer-button buttons\" ng-hide=textAreaShouldBeDisabled()><button ng-class=getButtonClass() data-ng-show=!isFinished ng-disabled=!answerReadyToSave() ng-click=saveAnswerEntered()>Submit</button></div></div><div aria-live=polite class=feedback ng-if=hasValidationMessage()>{{ validationMessage }}</div></div>"
  );


  $templateCache.put('/gd/inputform-card.html',
    "<div id=socraticcontent><div inputform ng-cloak></div></div>"
  );


  $templateCache.put('/gd/intro.html',
    "<div id=socraticcontent><h1>{{ title }}</h1><h2>{{ subTitle }} <span>{{ reference }}</span></h2><p>{{ description }}</p></div>"
  );


  $templateCache.put('/gd/main-card.html',
    "<table mobile-clickable click-function-name=toggleDeviceNavBar cellpadding=0 cellspacing=0 class=\"{{ cardType }}\" id=socratictable><tbody><tr><td><div data-media-select></div><div class=video-submission ng-if=showVideoBar()><div class=left>Please submit a video by using your webcam or uploading a file.</div><div class=right><a class=camera href=# role=button aria-label=\"Record using webcam\" ng-click=\"$event.preventDefault(); cameraClick()\"><span></span> </a><a class=file href=# role=button aria-label=\"Select file from portfolio\" ng-click=\"$event.preventDefault(); fileClick()\"><span></span></a></div></div><div ng-switch on=cardType><div ng-switch-when=intro><div discussion-intro></div></div><div ng-switch-when=html-info><div html-info></div></div><div ng-switch-when=video-info><div video-info></div></div><div ng-switch-when=video-response-question><div video-response></div></div><div ng-switch-when=choice-question><div choice-question></div></div><div ng-switch-when=input-question><div input-question></div></div><div ng-switch-when=short-question><div short-question></div></div><div ng-switch-when=matching-question><div matching-question></div></div><div ng-switch-when=file-upload-question><div file-upload></div></div><div ng-switch-when=oyster><div oyster></div></div><div ng-switch-when=inputform><div inputform-card></div></div><div ng-switch-when=submit><div discussion-submit></div></div><div ng-switch-when=end><div discussion-end></div></div></div></td></tr></tbody></table>"
  );


  $templateCache.put('/gd/matching-question.html',
    "<div xmlns=http://www.w3.org/1999/html><div id=socraticcontent><div ng-bind-html=matchingQuestionCtrl.asTrustedHtml(matchingQuestionCtrl.question.getQuestionHTML())></div><div class=matching_question><div class=matching_question_line data-ng-repeat=\"item in matchingQuestionCtrl.answers\"><label for=\"{{'answer_'+$index}}\">{{ item.label }}</label> <select id=\"{{'answer_'+$index}}\" ng-model=item.answer data-ng-disabled=matchingQuestionCtrl.inputDisabled() data-ng-change=matchingQuestionCtrl.answerEntered() ng-options=\"a for a in matchingQuestionCtrl.question.choices()\"></select></div><div class=\"matching-question-button buttons\"><button ng-class=matchingQuestionCtrl.getButtonClass() ng-disabled=!matchingQuestionCtrl.answerReadyToSave() ng-click=matchingQuestionCtrl.answersEntered()>Submit</button></div></div></div><div aria-live=polite class=feedback ng-if=matchingQuestionCtrl.showAttemptsRemainingMsg()>That was not correct. Try again.</div><div aria-live=polite class=feedback ng-if=matchingQuestionCtrl.displayFeedback()><div ng-repeat=\"outcome in matchingQuestionCtrl.getFeedback()\"><span class=outcome ng-bind-html=matchingQuestionCtrl.asTrustedHtml(outcome)></span></div></div></div>"
  );


  $templateCache.put('/gd/navigation-bar.html',
    "<div class=\"socraticbar top\"><div class=back><button ng-click=raiseDeviceEventShowIntroScreen()>Back</button></div><div class=jump><a ng-click=showDeviceNav()><span>{{ jumpMenuText.one }}</span> <span>{{ jumpMenuText.two }}</span> <span>{{ jumpMenuText.three }}</span> <span>{{ jumpMenuText.four }}</span> <span>{{ jumpMenuText.five }}</span></a></div><div ng-show=showDeviceOysterNav() class=oyster-controls><div class=jump ng-show=getOysterCard().chapters><div class=skin><div ng-bind-html=getOysterCard().selectedChapterTitle class=selection></div><div class=caret></div></div><button>Jump To</button> <select ng-model=getOysterCard().selectedChapterSlideId ng-change=oysterChapterUpdated() ng-options=\"chapter.id as chapter.title for chapter in getOysterCard().chapters\" aria-label=\"Card Selector\" role=selectbox></select></div><div class=view><button ng-click=oysterToggleViewClicked()>{{getOysterCard().showingVideo && 'Slide' || 'Video'}}</button></div></div><div data-ng-class=deviceNavClass style=\"{{ getNavBarStyle() }}\"><a tabindex=-1 ng-class=getPreviousArrowClass() ng-click=movePrevious()><span></span></a><div class=nav-label>Navigation</div><nav><ul><li ng-repeat=\"item in getItems()\" data-index=\"{{ $index }}\" ng-class=\"getListClass(item, $index)\"><a ng-class=\"getLinkClass(item, $index)\" class=linkToCardContent ng-click=\"selectItem(item, $index)\" ng-keydown=\"keyboardNavigation($event, item, $index)\" tabindex=0 href=#cardContent><span class=out-of-sight>{{getLinkLabel(item, $index)}}</span> <i ng-class=\"getInfoClass(item, $index)\"></i> <span ng-class=\"getValueClass(item, $index)\" role=presentation aria-hidden=true>{{ getValue(item, $index) }}</span></a></li></ul></nav><a tabindex=-1 ng-class=getNextArrowClass() ng-click=moveNext()><span></span></a></div><div class=discussion-toggle data-ng-show=getAnswersEnabled()><button data-ng-hide=deviceShowDiscussionButton ng-click=raiseDeviceEventShowDiscussion()>Discussion</button> <button data-ng-show=deviceShowDiscussionButton ng-click=raiseDeviceEventShowCard()>Back to Card</button></div></div>"
  );


  $templateCache.put('/gd/next.html',
    "<div class=pagination><a id=nextArrow role=button href=#cardContent tabindex=0 ng-class=getNextArrowClass() ng-click=selectNext() ng-keydown=keyboardActivateNext($event)><span class=out-of-sight>{{getNextArrowText()}}</span></a></div>"
  );


  $templateCache.put('/gd/oyster-card.html',
    "<div id=socraticcontent><div id=contentwrap><div ng-class=oysterCtrl.oysterClass id=oyster_container><div ng-if=!oysterCtrl.isDevice class=controls><div class=jump data-ng-show=oysterCtrl.oysterCard.chapters><div class=skin><div ng-bind-html=oysterCtrl.oysterCard.selectedChapterTitle class=selection></div><div class=caret></div></div><button>Jump To</button> <select ng-model=oysterCtrl.oysterCard.selectedChapterSlideId ng-change=oysterCtrl.chapterUpdated() ng-options=\"chapter.id as chapter.title for chapter in oysterCtrl.oysterCard.chapters\" aria-label=\"Slide Selector\" role=selectbox></select></div><div class=view><a href=\"\" ng-click=oysterCtrl.showPrintView()>Print View</a></div></div><div ng-class=oysterCtrl.oysterPresentationClass><div class=slides><div ng-bind-html=oysterCtrl.slideContent id=oyster_slides ng-class=oysterCtrl.slideClass></div></div><div class=driver id=oyster_driver><div class=viewport><div class=video><!-- video goes here --></div></div><div ng-bind-html=oysterCtrl.slideCaption class=caption></div></div></div></div></div></div>"
  );


  $templateCache.put('/gd/previous.html',
    "<div class=pagination><a id=previousArrow role=button href=#cardContent tabindex=0 ng-class=getPreviousArrowClass() ng-click=selectPrevious() ng-keydown=backwardKeyboardNavigation($event)><span class=out-of-sight>{{getPreviousArrowText()}}</span></a></div>"
  );


  $templateCache.put('/gd/short-question.html',
    "<div><div id=socraticcontent><div ng-bind-html=asTrustedHtml(description)></div><div class=short_answers><div data-ng-repeat=\"short_answer in short_answers\"><label for=\"{{'answer_'+short_answer.order}}\">{{ short_answer.label }}</label> <input name=\"{{'answer_'+short_answer.order}}\" id=\"{{'answer_'+short_answer.order}}\" data-ng-disabled=$parent.inputDisabled() data-ng-model=short_answer.answer data-ng-change=answerEntered()></div><div class=\"short-answer-button buttons\" ng-hide=\"editOnce() && inputDisabled()\"><button ng-class=getButtonClass() ng-disabled=!answerReadyToSave() ng-click=answersEntered()>Submit</button></div></div></div><h4 class=out-of-sight index=0>Results</h4><div aria-live=polite class=feedback ng-if=showAttemptsRemainingMsg()>That was not correct. Try again.</div><div aria-live=polite class=feedback ng-if=displayFeedback()><div ng-repeat=\"outcome in getFeedback()\"><span class=outcome ng-bind-html=asTrustedHtml(outcome)></span></div></div></div>"
  );


  $templateCache.put('/gd/submit.html',
    "<div id=socraticcontent>Press <button class=green ng-click=submit()>Finish</button> to turn in all your responses.</div>"
  );


  $templateCache.put('/gd/video-info.html',
    "<div class=viewport><div class=video><!-- video goes here --></div></div>"
  );


  $templateCache.put('/gd/video-player.html',
    "<div data-ng-class=viewportClass><div class=video><!-- video goes here --></div></div>"
  );


  $templateCache.put('/gd/video-response.html',
    "<div id=socraticcontent><div ng-bind-html=question></div><div aria-live=polite class=video-upload-response ng-if=showResponse()><div class=preview><div class=viewport><div class=video><!-- video goes here --></div></div></div><!--<div class=\"preview error\">!</div>--> <button class=gray ng-click=discardVideo()>Discard Video</button></div></div>"
  );

}]);

var __bind=function(a,b){return function(){return a.apply(b,arguments)}};window.u=window.u||{},window.u.harmony_validator=window.u.harmony_validator||{},window.u.harmony_validator.HarmonyValidator=function(){function a(a){this.passwordRequirements=null!=a?a:[],this.showPasswordRequirements=__bind(this.showPasswordRequirements,this),this.comparisonCheck=__bind(this.comparisonCheck,this),this.numberComparison=__bind(this.numberComparison,this),this.requiredMinWords=__bind(this.requiredMinWords,this),this.requiredMaxWords=__bind(this.requiredMaxWords,this),this.requiredMaxLength=__bind(this.requiredMaxLength,this),this.requiredEmail=__bind(this.requiredEmail,this),this.requiredPasswordMatch=__bind(this.requiredPasswordMatch,this),this.requiredEmailConfirm=__bind(this.requiredEmailConfirm,this),this.checkConfirmEmail=__bind(this.checkConfirmEmail,this),this.checkConfirmPassword=__bind(this.checkConfirmPassword,this),this.password=__bind(this.password,this),this.requiredPassword=__bind(this.requiredPassword,this),this.required=__bind(this.required,this),this.requiredPasswordElements=__bind(this.requiredPasswordElements,this),this.validationElementMap={hasSpecialCharacter:"specialCharacter",hasMinCharacter:"minCharacter",hasCapital:"capital",hasLowerCase:"lowerCase",hasDigit:"digit"}}return a.prototype.addRequired=function(a,b){return null==b&&(b="Please fill out this field."),$("form").on("blur",a,{emptyMessage:b},this.required)},a.prototype.addRequiredPassword=function(a,b,c,d){return null==c&&(c="Please enter a password."),null==d&&(d="Please make sure your new password meets the security requirements."),$("form").on("blur",a,{emptyMessage:c,failedMessage:d},this.requiredPassword),$("form").on("keyup",a,{emptyMessage:c,failedMessage:d},this.password),$("form").on("keyup",a,{confirmationSelector:b,originalPasswordSelector:a,emptyMessage:c,failedMessage:d},this.checkConfirmPassword)},a.prototype.addRequiredPasswordMatch=function(a,b,c,d){var e,f,g,h;return null==b&&(b="#password"),null==c&&(c="Please enter your new password again."),null==d&&(d=null),d||(e=(null!=(f=$(b))&&null!=(g=f.parent())&&null!=(h=g.find("label"))?h.html():void 0)?$(b).parent().find("label").html().split("<")[0]:"FIELD NOT FOUND",d="This entry must match the "+e+" field. Please try again."),$("form").on("blur",a,{originalSelector:b,emptyMessage:c,failedMessage:d},this.requiredPasswordMatch),$("form").on("keyup",a,{originalSelector:b,emptyMessage:c,failedMessage:d},this.requiredPasswordMatch)},a.prototype.addRequiredEmail=function(a,b,c,d){return null==b&&(b=null),null==c&&(c="Please enter a valid email address."),null==d&&(d=" is not a valid email address. Please try again."),$("form").on("blur",a,{emptyMessage:c,failedMessage:d},this.requiredEmail),$("form").on("keyup",a,{confirmationSelector:b,emptyMessage:c,failedMessage:d},this.checkConfirmEmail)},a.prototype.addRequiredEmailConfirm=function(a,b,c,d){var e,f,g,h;return null==b&&(b="#email"),null==c&&(c="Please enter your email address again."),null==d&&(d=null),d||(e=(null!=(f=$(b))&&null!=(g=f.parent())&&null!=(h=g.find("label"))?h.html():void 0)?$(b).parent().find("label").html().split("<")[0]:"FIELD NOT FOUND",d="This entry must match the "+e+" field. Please try again."),$("form").on("blur",a,{originalSelector:b,emptyMessage:c,failedMessage:d},this.requiredEmailConfirm)},a.prototype.addRequiredMaxLength=function(a,b,c,d){return null==c&&(c="Please fill out this field."),null==d&&(d=null),d||(d="Your entry must be fewer than "+b+" characters."),$("form").on("keyup",a,{maxLength:b,emptyMessage:c,failedMessage:d},this.requiredMaxLength)},a.prototype.addRequiredMinWords=function(a,b,c,d){return null==c&&(c="Please fill out this field."),null==d&&(d=null),d||(d="Your entry must be at least "+b+" words."),$("form").on("keyup",a,{minWords:b,emptyMessage:c,failedMessage:d},this.requiredMinWords),$("form").on("blur",a,{minWords:b,emptyMessage:c,failedMessage:d},this.requiredMinWords)},a.prototype.addRequiredMaxWords=function(a,b,c,d){return null==c&&(c="Please fill out this field."),null==d&&(d=null),d||(d="Your entry must be fewer than "+b+" words."),$("form").on("keyup",a,{maxWords:b,emptyMessage:c,failedMessage:d},this.requiredMaxWords),$("form").on("blur",a,{maxWords:b,emptyMessage:c,failedMessage:d},this.requiredMaxWords)},a.prototype.addNumberComparison=function(a,b,c,d,e){var f,g,h;return null==d&&(d="Please fill out this field."),null==e&&(e=null),f=this.comparisonFailureMessage(a,c,b,e),e=f.failedMessage,h=f.oppositeMessage,g=">"===b?"<":">",$("form").on("blur",a,{secondSelector:c,comparison:b,failedMessage:e,emptyMessage:d},this.numberComparison),$("form").on("blur",c,{secondSelector:a,comparison:g,failedMessage:h,emptyMessage:d},this.numberComparison),$("form").on("keyup",a,{secondSelector:c,comparison:b,failedMessage:e},this.comparisonCheck),$("form").on("keyup",c,{secondSelector:a,comparison:g,failedMessage:h},this.comparisonCheck)},a.prototype.requiredElements=function(a){var b;return a=$(a),b={input:a,button:$(a.form).find("button"),group:a.closest(".form-group"),errorMessage:a.closest(".form-group").find(".form-group__error-text")}},a.prototype.requiredPasswordElements=function(a){var b;return a=$(a),b=this.requiredElements(a),b.ul=a.parent().find(".form-group__help-text"),b.specialCharacter=a.parent().parent().find(".special-character"),b.minCharacter=a.parent().parent().find(".minimum-character"),b.digit=a.parent().parent().find(".number"),b.capital=a.parent().parent().find(".capital"),b.lowerCase=a.parent().parent().find(".lower-case"),b},a.prototype.required=function(a,b){var c,d;return null==b&&(b=!0),c=this.requiredElements(a.target),c.input.val().length>0&&b?this.markGroupSuccess(c):(d=0===c.input.val().length?a.data.emptyMessage:a.data.failedMessage," is not a valid email address. Please try again."===d&&(d=c.input.val()+d),this.markGroupError(c,d))},a.prototype.requiredPassword=function(a){var b,c;return b=this.requiredPasswordElements(a.target),c=this.password(a),this.required(a,c)},a.prototype.password=function(a){var b,c,d,e,f,g,h;for(c=this.requiredPasswordElements(a.target),d=!0,h=this.passwordRequirements,f=0,g=h.length;g>f;f++)e=h[f],b=this.validationElementMap[e],this[e](c.input.val())?c[b].addClass("password-reqs__item--success"):(d=!1,c[b].removeClass("password-reqs__item--success"));return d?(c.ul.slideUp(200),this.markGroupSuccess(c)):(c.ul.slideDown(200),this.markGroupPristine(c)),d},a.prototype.checkConfirmPassword=function(a){var b,c;return c=a.data.originalPasswordSelector,b=this.requiredPasswordElements(a.target),b.passwordConfirm=b.input.parent().parent().parent().find(a.data.confirmationSelector),b.passwordConfirm?b.input.val()===b.passwordConfirm.val()&&$(c).val().length>0?this.markGroupSuccess(this.requiredElements(b.passwordConfirm)):this.markGroupPristine(this.requiredElements(b.passwordConfirm)):void 0},a.prototype.checkConfirmEmail=function(a){var b;return b=this.requiredPasswordElements(a.target),b.emailConfirm=b.input.parent().parent().parent().find(a.data.confirmationSelector),b.emailConfirm?b.input.val()===b.emailConfirm.val()&&b.input.val().length>0?this.markGroupSuccess(this.requiredElements(b.emailConfirm)):this.markGroupPristine(this.requiredElements(b.emailConfirm)):void 0},a.prototype.requiredEmailConfirm=function(a){var b,c,d,e,f;return e=a.data.originalSelector,b=this.requiredPasswordElements(a.target),c=this.isEmail(b.input.val()),d=b.input.val()===$(e).val()&&c,f=c&&d,f?this.required(a,f):this.markGroupPristine(b),"focusout"===a.type?this.required(a,f):void 0},a.prototype.requiredPasswordMatch=function(a){var b,c,d;return d=a.data.originalSelector,b=this.requiredPasswordElements(a.target),b.input.val()===$(d).val()&&$(d).val().length>0?(c=!0,this.required(a,c)):(this.markGroupPristine(b),c=!1),"focusout"===a.type?this.required(a,c):void 0},a.prototype.requiredEmail=function(a){var b,c;return b=this.requiredPasswordElements(a.target),c=this.isEmail(b.input.val()),this.required(a,c)},a.prototype.requiredMaxLength=function(a){var b,c,d;return d=a.data.maxLength,b=this.requiredElements(a.target),c=this.isMaxLength(b.input.val(),d),this.required(a,c)},a.prototype.requiredMaxWords=function(a){var b,c,d;return b=this.requiredElements(a.target),d=a.data.maxWords,c=this.isUnderMaxWords(b.input.val(),d),this.required(a,c)},a.prototype.requiredMinWords=function(a){var b,c,d;return b=this.requiredElements(a.target),d=a.data.minWords,c=this.isOverMinWords(b.input.val(),d),this.required(a,c)},a.prototype.numberComparison=function(a){var b,c,d,e,f,g;return b=a.data.comparison,d=this.requiredElements(a.target),f=a.data.secondSelector,c=d.input.val(),g=$(f).val(),e=this.compareNumbers(b,c,g)||0===g.length,e?this.required(a,e):this.markGroupPristine(d),"focusout"===a.type?this.required(a,e):void 0},a.prototype.comparisonCheck=function(a){var b,c,d,e,f,g;return b=a.data.comparison,d=this.requiredElements(a.target),f=a.data.secondSelector,c=d.input.val(),g=$(f).val(),d.secondSelector=d.input.parent().parent().parent().find(f),e=this.compareNumbers(b,c,g),e?this.markGroupSuccess(this.requiredElements(d.secondSelector)):this.markGroupPristine(this.requiredElements(d.secondSelector))},a.prototype.comparisonFailureMessage=function(a,b,c,d){var e,f,g,h,i,j,k,l,m;return f={},e=(null!=(h=$(a))&&null!=(i=h.parent())&&null!=(j=i.find("label"))?j.html():void 0)?$(a).parent().find("label").html().split("<")[0]:"FIELD NOT FOUND",g=(null!=(k=$(b))&&null!=(l=k.parent())&&null!=(m=l.find("label"))?m.html():void 0)?$(b).parent().find("label").html().split("<")[0]:"FIELD NOT FOUND",">"===c?d?f.oppositeMessage=d:(f.failedMessage="This entry must be greater than "+g.toLowerCase()+" value.",f.oppositeMessage="This entry must be less than "+e.toLowerCase()+" value."):d?f.oppositeMessage=d:(f.failedMessage="This entry must be less than "+g.toLowerCase()+" value.",f.oppositeMessage="This entry must be greater than "+e.toLowerCase()+" value."),f},a.prototype.showPasswordRequirements=function(a){var b;return b=this.requiredPasswordElements(a.target),b.group.hasClass("form-group--success")?void 0:b.ul.slideUp(200)},a.prototype.markGroupSuccess=function(a){return a.group.addClass("form-group--success").removeClass("form-group--error")},a.prototype.markGroupError=function(a,b){return a.errorMessage.text(b),a.group.addClass("form-group--error").removeClass("form-group--success")},a.prototype.markGroupPristine=function(a){return a.group.removeClass("form-group--error").removeClass("form-group--success")},a.prototype.hasCapital=function(a){var b;return b="(?=.*[A-Z])",this.testRegExp(a,b)},a.prototype.hasLowerCase=function(a){var b;return b="(?=.*[a-z])",this.testRegExp(a,b)},a.prototype.hasSpecialCharacter=function(a){var b;return b="(?=.*[^a-zA-Z\\d])",this.testRegExp(a,b)},a.prototype.hasDigit=function(a){var b;return b="(?=.*[0-9])",this.testRegExp(a,b)},a.prototype.isEmail=function(a){var b;return b=/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,b.test(a)},a.prototype.hasMinCharacter=function(a){return a.length>=8},a.prototype.isMaxLength=function(a,b){return a.length<=b},a.prototype.testRegExp=function(a,b){var c;return c=new RegExp(b,"g"),!!c.test(a)},a.prototype.isOverMinWords=function(a,b){var c;return c=this.wordCount(a),c>=b},a.prototype.isUnderMaxWords=function(a,b){var c;return c=this.wordCount(a),b>=c},a.prototype.wordCount=function(a){return a.trim().split(" ").length},a.prototype.compareNumbers=function(a,b,c){return"<"===a?parseInt(b)<parseInt(c):parseInt(b)>parseInt(c)},a}();
/* @preserve
 * The MIT License (MIT)
 * 
 * Copyright (c) 2013-2018 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
/**
 * bluebird build version 3.7.2
 * Features enabled: core, race, call_get, generators, map, nodeify, promisify, props, reduce, settle, some, using, timers, filter, any, each
*/
!function(t){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var e;"undefined"!=typeof window?e=window:"undefined"!=typeof global?e=global:"undefined"!=typeof self&&(e=self),e.Promise=t()}}(function(){var t,e,n;return function r(t,e,n){function i(s,a){if(!e[s]){if(!t[s]){var c="function"==typeof _dereq_&&_dereq_;if(!a&&c)return c(s,!0);if(o)return o(s,!0);var u=new Error("Cannot find module '"+s+"'");throw u.code="MODULE_NOT_FOUND",u}var l=e[s]={exports:{}};t[s][0].call(l.exports,function(e){var n=t[s][1][e];return i(n?n:e)},l,l.exports,r,t,e,n)}return e[s].exports}for(var o="function"==typeof _dereq_&&_dereq_,s=0;s<n.length;s++)i(n[s]);return i}({1:[function(t,e,n){"use strict";e.exports=function(t){function e(t){var e=new n(t),r=e.promise();return e.setHowMany(1),e.setUnwrap(),e.init(),r}var n=t._SomePromiseArray;t.any=function(t){return e(t)},t.prototype.any=function(){return e(this)}}},{}],2:[function(t,e,n){"use strict";function r(){this._customScheduler=!1,this._isTickUsed=!1,this._lateQueue=new f(16),this._normalQueue=new f(16),this._haveDrainedQueues=!1;var t=this;this.drainQueues=function(){t._drainQueues()},this._schedule=p}function i(t,e,n){this._lateQueue.push(t,e,n),this._queueTick()}function o(t,e,n){this._normalQueue.push(t,e,n),this._queueTick()}function s(t){this._normalQueue._pushOne(t),this._queueTick()}function a(t){for(;t.length()>0;)c(t)}function c(t){var e=t.shift();if("function"!=typeof e)e._settlePromises();else{var n=t.shift(),r=t.shift();e.call(n,r)}}var u;try{throw new Error}catch(l){u=l}var p=t("./schedule"),f=t("./queue");r.prototype.setScheduler=function(t){var e=this._schedule;return this._schedule=t,this._customScheduler=!0,e},r.prototype.hasCustomScheduler=function(){return this._customScheduler},r.prototype.haveItemsQueued=function(){return this._isTickUsed||this._haveDrainedQueues},r.prototype.fatalError=function(t,e){e?(process.stderr.write("Fatal "+(t instanceof Error?t.stack:t)+"\n"),process.exit(2)):this.throwLater(t)},r.prototype.throwLater=function(t,e){if(1===arguments.length&&(e=t,t=function(){throw e}),"undefined"!=typeof setTimeout)setTimeout(function(){t(e)},0);else try{this._schedule(function(){t(e)})}catch(n){throw new Error("No async scheduler available\n\n    See http://goo.gl/MqrFmX\n")}},r.prototype.invokeLater=i,r.prototype.invoke=o,r.prototype.settlePromises=s,r.prototype._drainQueues=function(){a(this._normalQueue),this._reset(),this._haveDrainedQueues=!0,a(this._lateQueue)},r.prototype._queueTick=function(){this._isTickUsed||(this._isTickUsed=!0,this._schedule(this.drainQueues))},r.prototype._reset=function(){this._isTickUsed=!1},e.exports=r,e.exports.firstLineError=u},{"./queue":26,"./schedule":29}],3:[function(t,e,n){"use strict";e.exports=function(t,e,n,r){var i=!1,o=function(t,e){this._reject(e)},s=function(t,e){e.promiseRejectionQueued=!0,e.bindingPromise._then(o,o,null,this,t)},a=function(t,e){0===(50397184&this._bitField)&&this._resolveCallback(e.target)},c=function(t,e){e.promiseRejectionQueued||this._reject(t)};t.prototype.bind=function(o){i||(i=!0,t.prototype._propagateFrom=r.propagateFromFunction(),t.prototype._boundValue=r.boundValueFunction());var u=n(o),l=new t(e);l._propagateFrom(this,1);var p=this._target();if(l._setBoundTo(u),u instanceof t){var f={promiseRejectionQueued:!1,promise:l,target:p,bindingPromise:u};p._then(e,s,void 0,l,f),u._then(a,c,void 0,l,f),l._setOnCancel(u)}else l._resolveCallback(p);return l},t.prototype._setBoundTo=function(t){void 0!==t?(this._bitField=2097152|this._bitField,this._boundTo=t):this._bitField=-2097153&this._bitField},t.prototype._isBound=function(){return 2097152===(2097152&this._bitField)},t.bind=function(e,n){return t.resolve(n).bind(e)}}},{}],4:[function(t,e,n){"use strict";function r(){try{Promise===o&&(Promise=i)}catch(t){}return o}var i;"undefined"!=typeof Promise&&(i=Promise);var o=t("./promise")();o.noConflict=r,e.exports=o},{"./promise":22}],5:[function(t,e,n){"use strict";var r=Object.create;if(r){var i=r(null),o=r(null);i[" size"]=o[" size"]=0}e.exports=function(e){function n(t,n){var r;if(null!=t&&(r=t[n]),"function"!=typeof r){var i="Object "+a.classString(t)+" has no method '"+a.toString(n)+"'";throw new e.TypeError(i)}return r}function r(t){var e=this.pop(),r=n(t,e);return r.apply(t,this)}function i(t){return t[this]}function o(t){var e=+this;return 0>e&&(e=Math.max(0,e+t.length)),t[e]}var s,a=t("./util"),c=a.canEvaluate;a.isIdentifier;e.prototype.call=function(t){var e=[].slice.call(arguments,1);return e.push(t),this._then(r,void 0,void 0,e,void 0)},e.prototype.get=function(t){var e,n="number"==typeof t;if(n)e=o;else if(c){var r=s(t);e=null!==r?r:i}else e=i;return this._then(e,void 0,void 0,t,void 0)}}},{"./util":36}],6:[function(t,e,n){"use strict";e.exports=function(e,n,r,i){var o=t("./util"),s=o.tryCatch,a=o.errorObj,c=e._async;e.prototype["break"]=e.prototype.cancel=function(){if(!i.cancellation())return this._warn("cancellation is disabled");for(var t=this,e=t;t._isCancellable();){if(!t._cancelBy(e)){e._isFollowing()?e._followee().cancel():e._cancelBranched();break}var n=t._cancellationParent;if(null==n||!n._isCancellable()){t._isFollowing()?t._followee().cancel():t._cancelBranched();break}t._isFollowing()&&t._followee().cancel(),t._setWillBeCancelled(),e=t,t=n}},e.prototype._branchHasCancelled=function(){this._branchesRemainingToCancel--},e.prototype._enoughBranchesHaveCancelled=function(){return void 0===this._branchesRemainingToCancel||this._branchesRemainingToCancel<=0},e.prototype._cancelBy=function(t){return t===this?(this._branchesRemainingToCancel=0,this._invokeOnCancel(),!0):(this._branchHasCancelled(),this._enoughBranchesHaveCancelled()?(this._invokeOnCancel(),!0):!1)},e.prototype._cancelBranched=function(){this._enoughBranchesHaveCancelled()&&this._cancel()},e.prototype._cancel=function(){this._isCancellable()&&(this._setCancelled(),c.invoke(this._cancelPromises,this,void 0))},e.prototype._cancelPromises=function(){this._length()>0&&this._settlePromises()},e.prototype._unsetOnCancel=function(){this._onCancelField=void 0},e.prototype._isCancellable=function(){return this.isPending()&&!this._isCancelled()},e.prototype.isCancellable=function(){return this.isPending()&&!this.isCancelled()},e.prototype._doInvokeOnCancel=function(t,e){if(o.isArray(t))for(var n=0;n<t.length;++n)this._doInvokeOnCancel(t[n],e);else if(void 0!==t)if("function"==typeof t){if(!e){var r=s(t).call(this._boundValue());r===a&&(this._attachExtraTrace(r.e),c.throwLater(r.e))}}else t._resultCancelled(this)},e.prototype._invokeOnCancel=function(){var t=this._onCancel();this._unsetOnCancel(),c.invoke(this._doInvokeOnCancel,this,t)},e.prototype._invokeInternalOnCancel=function(){this._isCancellable()&&(this._doInvokeOnCancel(this._onCancel(),!0),this._unsetOnCancel())},e.prototype._resultCancelled=function(){this.cancel()}}},{"./util":36}],7:[function(t,e,n){"use strict";e.exports=function(e){function n(t,n,a){return function(c){var u=a._boundValue();t:for(var l=0;l<t.length;++l){var p=t[l];if(p===Error||null!=p&&p.prototype instanceof Error){if(c instanceof p)return o(n).call(u,c)}else if("function"==typeof p){var f=o(p).call(u,c);if(f===s)return f;if(f)return o(n).call(u,c)}else if(r.isObject(c)){for(var h=i(p),_=0;_<h.length;++_){var d=h[_];if(p[d]!=c[d])continue t}return o(n).call(u,c)}}return e}}var r=t("./util"),i=t("./es5").keys,o=r.tryCatch,s=r.errorObj;return n}},{"./es5":13,"./util":36}],8:[function(t,e,n){"use strict";e.exports=function(t){function e(){this._trace=new e.CapturedTrace(r())}function n(){return i?new e:void 0}function r(){var t=o.length-1;return t>=0?o[t]:void 0}var i=!1,o=[];return t.prototype._promiseCreated=function(){},t.prototype._pushContext=function(){},t.prototype._popContext=function(){return null},t._peekContext=t.prototype._peekContext=function(){},e.prototype._pushContext=function(){void 0!==this._trace&&(this._trace._promiseCreated=null,o.push(this._trace))},e.prototype._popContext=function(){if(void 0!==this._trace){var t=o.pop(),e=t._promiseCreated;return t._promiseCreated=null,e}return null},e.CapturedTrace=null,e.create=n,e.deactivateLongStackTraces=function(){},e.activateLongStackTraces=function(){var n=t.prototype._pushContext,o=t.prototype._popContext,s=t._peekContext,a=t.prototype._peekContext,c=t.prototype._promiseCreated;e.deactivateLongStackTraces=function(){t.prototype._pushContext=n,t.prototype._popContext=o,t._peekContext=s,t.prototype._peekContext=a,t.prototype._promiseCreated=c,i=!1},i=!0,t.prototype._pushContext=e.prototype._pushContext,t.prototype._popContext=e.prototype._popContext,t._peekContext=t.prototype._peekContext=r,t.prototype._promiseCreated=function(){var t=this._peekContext();t&&null==t._promiseCreated&&(t._promiseCreated=this)}},e}},{}],9:[function(t,e,n){"use strict";e.exports=function(e,n,r,i){function o(t,e){return{promise:e}}function s(){return!1}function a(t,e,n){var r=this;try{t(e,n,function(t){if("function"!=typeof t)throw new TypeError("onCancel must be a function, got: "+B.toString(t));r._attachCancellationCallback(t)})}catch(i){return i}}function c(t){if(!this._isCancellable())return this;var e=this._onCancel();void 0!==e?B.isArray(e)?e.push(t):this._setOnCancel([e,t]):this._setOnCancel(t)}function u(){return this._onCancelField}function l(t){this._onCancelField=t}function p(){this._cancellationParent=void 0,this._onCancelField=void 0}function f(t,e){if(0!==(1&e)){this._cancellationParent=t;var n=t._branchesRemainingToCancel;void 0===n&&(n=0),t._branchesRemainingToCancel=n+1}0!==(2&e)&&t._isBound()&&this._setBoundTo(t._boundTo)}function h(t,e){0!==(2&e)&&t._isBound()&&this._setBoundTo(t._boundTo)}function _(){var t=this._boundTo;return void 0!==t&&t instanceof e?t.isFulfilled()?t.value():void 0:t}function d(){this._trace=new V(this._peekContext())}function v(t,e){if(q(t)){var n=this._trace;if(void 0!==n&&e&&(n=n._parent),void 0!==n)n.attachExtraTrace(t);else if(!t.__stackCleaned__){var r=F(t);B.notEnumerableProp(t,"stack",r.message+"\n"+r.stack.join("\n")),B.notEnumerableProp(t,"__stackCleaned__",!0)}}}function y(){this._trace=void 0}function g(t,e,n,r,i){if(void 0===t&&null!==e&&Z){if(void 0!==i&&i._returnedNonUndefined())return;if(0===(65535&r._bitField))return;n&&(n+=" ");var o="",s="";if(e._trace){for(var a=e._trace.stack.split("\n"),c=k(a),u=c.length-1;u>=0;--u){var l=c[u];if(!Q.test(l)){var p=l.match(G);p&&(o="at "+p[1]+":"+p[2]+":"+p[3]+" ");break}}if(c.length>0)for(var f=c[0],u=0;u<a.length;++u)if(a[u]===f){u>0&&(s="\n"+a[u-1]);break}}var h="a promise was created in a "+n+"handler "+o+"but was not returned from it, see http://goo.gl/rRqMUw"+s;r._warn(h,!0,e)}}function m(t,e){var n=t+" is deprecated and will be removed in a future version.";return e&&(n+=" Use "+e+" instead."),b(n)}function b(t,n,r){if(lt.warnings){var i,o=new U(t);if(n)r._attachExtraTrace(o);else if(lt.longStackTraces&&(i=e._peekContext()))i.attachExtraTrace(o);else{var s=F(o);o.stack=s.message+"\n"+s.stack.join("\n")}ot("warning",o)||x(o,"",!0)}}function w(t,e){for(var n=0;n<e.length-1;++n)e[n].push("From previous event:"),e[n]=e[n].join("\n");return n<e.length&&(e[n]=e[n].join("\n")),t+"\n"+e.join("\n")}function C(t){for(var e=0;e<t.length;++e)(0===t[e].length||e+1<t.length&&t[e][0]===t[e+1][0])&&(t.splice(e,1),e--)}function j(t){for(var e=t[0],n=1;n<t.length;++n){for(var r=t[n],i=e.length-1,o=e[i],s=-1,a=r.length-1;a>=0;--a)if(r[a]===o){s=a;break}for(var a=s;a>=0;--a){var c=r[a];if(e[i]!==c)break;e.pop(),i--}e=r}}function k(t){for(var e=[],n=0;n<t.length;++n){var r=t[n],i="    (No stack trace)"===r||z.test(r),o=i&&at(r);i&&!o&&(W&&" "!==r.charAt(0)&&(r="    "+r),e.push(r))}return e}function E(t){for(var e=t.stack.replace(/\s+$/g,"").split("\n"),n=0;n<e.length;++n){var r=e[n];if("    (No stack trace)"===r||z.test(r))break}return n>0&&"SyntaxError"!=t.name&&(e=e.slice(n)),e}function F(t){var e=t.stack,n=t.toString();return e="string"==typeof e&&e.length>0?E(t):["    (No stack trace)"],{message:n,stack:"SyntaxError"==t.name?e:k(e)}}function x(t,e,n){if("undefined"!=typeof console){var r;if(B.isObject(t)){var i=t.stack;r=e+X(i,t)}else r=e+String(t);"function"==typeof I?I(r,n):("function"==typeof console.log||"object"==typeof console.log)&&console.log(r)}}function T(t,e,n,r){var i=!1;try{"function"==typeof e&&(i=!0,"rejectionHandled"===t?e(r):e(n,r))}catch(o){N.throwLater(o)}"unhandledRejection"===t?ot(t,n,r)||i||x(n,"Unhandled rejection "):ot(t,r)}function P(t){var e;if("function"==typeof t)e="[function "+(t.name||"anonymous")+"]";else{e=t&&"function"==typeof t.toString?t.toString():B.toString(t);var n=/\[object [a-zA-Z0-9$_]+\]/;if(n.test(e))try{var r=JSON.stringify(t);e=r}catch(i){}0===e.length&&(e="(empty array)")}return"(<"+R(e)+">, no stack trace)"}function R(t){var e=41;return t.length<e?t:t.substr(0,e-3)+"..."}function S(){return"function"==typeof ut}function O(t){var e=t.match(ct);return e?{fileName:e[1],line:parseInt(e[2],10)}:void 0}function A(t,e){if(S()){for(var n,r,i=(t.stack||"").split("\n"),o=(e.stack||"").split("\n"),s=-1,a=-1,c=0;c<i.length;++c){var u=O(i[c]);if(u){n=u.fileName,s=u.line;break}}for(var c=0;c<o.length;++c){var u=O(o[c]);if(u){r=u.fileName,a=u.line;break}}0>s||0>a||!n||!r||n!==r||s>=a||(at=function(t){if($.test(t))return!0;var e=O(t);return e&&e.fileName===n&&s<=e.line&&e.line<=a?!0:!1})}}function V(t){this._parent=t,this._promisesCreated=0;var e=this._length=1+(void 0===t?0:t._length);ut(this,V),e>32&&this.uncycle()}var H,D,I,L,N=e._async,U=t("./errors").Warning,B=t("./util"),M=t("./es5"),q=B.canAttachTrace,$=/[\\\/]bluebird[\\\/]js[\\\/](release|debug|instrumented)/,Q=/\((?:timers\.js):\d+:\d+\)/,G=/[\/<\(](.+?):(\d+):(\d+)\)?\s*$/,z=null,X=null,W=!1,K=!(0==B.env("BLUEBIRD_DEBUG")||!B.env("BLUEBIRD_DEBUG")&&"development"!==B.env("NODE_ENV")),J=!(0==B.env("BLUEBIRD_WARNINGS")||!K&&!B.env("BLUEBIRD_WARNINGS")),Y=!(0==B.env("BLUEBIRD_LONG_STACK_TRACES")||!K&&!B.env("BLUEBIRD_LONG_STACK_TRACES")),Z=0!=B.env("BLUEBIRD_W_FORGOTTEN_RETURN")&&(J||!!B.env("BLUEBIRD_W_FORGOTTEN_RETURN"));!function(){function t(){for(var t=0;t<r.length;++t)r[t]._notifyUnhandledRejection();n()}function n(){r.length=0}var r=[];L=function(e){r.push(e),setTimeout(t,1)},M.defineProperty(e,"_unhandledRejectionCheck",{value:t}),M.defineProperty(e,"_unhandledRejectionClear",{value:n})}(),e.prototype.suppressUnhandledRejections=function(){var t=this._target();t._bitField=-1048577&t._bitField|524288},e.prototype._ensurePossibleRejectionHandled=function(){0===(524288&this._bitField)&&(this._setRejectionIsUnhandled(),L(this))},e.prototype._notifyUnhandledRejectionIsHandled=function(){T("rejectionHandled",H,void 0,this)},e.prototype._setReturnedNonUndefined=function(){this._bitField=268435456|this._bitField},e.prototype._returnedNonUndefined=function(){return 0!==(268435456&this._bitField)},e.prototype._notifyUnhandledRejection=function(){if(this._isRejectionUnhandled()){var t=this._settledValue();this._setUnhandledRejectionIsNotified(),T("unhandledRejection",D,t,this)}},e.prototype._setUnhandledRejectionIsNotified=function(){this._bitField=262144|this._bitField},e.prototype._unsetUnhandledRejectionIsNotified=function(){this._bitField=-262145&this._bitField},e.prototype._isUnhandledRejectionNotified=function(){return(262144&this._bitField)>0},e.prototype._setRejectionIsUnhandled=function(){this._bitField=1048576|this._bitField},e.prototype._unsetRejectionIsUnhandled=function(){this._bitField=-1048577&this._bitField,this._isUnhandledRejectionNotified()&&(this._unsetUnhandledRejectionIsNotified(),this._notifyUnhandledRejectionIsHandled())},e.prototype._isRejectionUnhandled=function(){return(1048576&this._bitField)>0},e.prototype._warn=function(t,e,n){return b(t,e,n||this)},e.onPossiblyUnhandledRejection=function(t){var n=e._getContext();D=B.contextBind(n,t)},e.onUnhandledRejectionHandled=function(t){var n=e._getContext();H=B.contextBind(n,t)};var tt=function(){};e.longStackTraces=function(){if(N.haveItemsQueued()&&!lt.longStackTraces)throw new Error("cannot enable long stack traces after promises have been created\n\n    See http://goo.gl/MqrFmX\n");if(!lt.longStackTraces&&S()){var t=e.prototype._captureStackTrace,r=e.prototype._attachExtraTrace,i=e.prototype._dereferenceTrace;lt.longStackTraces=!0,tt=function(){if(N.haveItemsQueued()&&!lt.longStackTraces)throw new Error("cannot enable long stack traces after promises have been created\n\n    See http://goo.gl/MqrFmX\n");e.prototype._captureStackTrace=t,e.prototype._attachExtraTrace=r,e.prototype._dereferenceTrace=i,n.deactivateLongStackTraces(),lt.longStackTraces=!1},e.prototype._captureStackTrace=d,e.prototype._attachExtraTrace=v,e.prototype._dereferenceTrace=y,n.activateLongStackTraces()}},e.hasLongStackTraces=function(){return lt.longStackTraces&&S()};var et={unhandledrejection:{before:function(){var t=B.global.onunhandledrejection;return B.global.onunhandledrejection=null,t},after:function(t){B.global.onunhandledrejection=t}},rejectionhandled:{before:function(){var t=B.global.onrejectionhandled;return B.global.onrejectionhandled=null,t},after:function(t){B.global.onrejectionhandled=t}}},nt=function(){var t=function(t,e){if(!t)return!B.global.dispatchEvent(e);var n;try{return n=t.before(),!B.global.dispatchEvent(e)}finally{t.after(n)}};try{if("function"==typeof CustomEvent){var e=new CustomEvent("CustomEvent");return B.global.dispatchEvent(e),function(e,n){e=e.toLowerCase();var r={detail:n,cancelable:!0},i=new CustomEvent(e,r);return M.defineProperty(i,"promise",{value:n.promise}),M.defineProperty(i,"reason",{value:n.reason}),t(et[e],i)}}if("function"==typeof Event){var e=new Event("CustomEvent");return B.global.dispatchEvent(e),function(e,n){e=e.toLowerCase();var r=new Event(e,{cancelable:!0});return r.detail=n,M.defineProperty(r,"promise",{value:n.promise}),M.defineProperty(r,"reason",{value:n.reason}),t(et[e],r)}}var e=document.createEvent("CustomEvent");return e.initCustomEvent("testingtheevent",!1,!0,{}),B.global.dispatchEvent(e),function(e,n){e=e.toLowerCase();var r=document.createEvent("CustomEvent");return r.initCustomEvent(e,!1,!0,n),t(et[e],r)}}catch(n){}return function(){return!1}}(),rt=function(){return B.isNode?function(){return process.emit.apply(process,arguments)}:B.global?function(t){var e="on"+t.toLowerCase(),n=B.global[e];return n?(n.apply(B.global,[].slice.call(arguments,1)),!0):!1}:function(){return!1}}(),it={promiseCreated:o,promiseFulfilled:o,promiseRejected:o,promiseResolved:o,promiseCancelled:o,promiseChained:function(t,e,n){return{promise:e,child:n}},warning:function(t,e){return{warning:e}},unhandledRejection:function(t,e,n){return{reason:e,promise:n}},rejectionHandled:o},ot=function(t){var e=!1;try{e=rt.apply(null,arguments)}catch(n){N.throwLater(n),e=!0}var r=!1;try{r=nt(t,it[t].apply(null,arguments))}catch(n){N.throwLater(n),r=!0}return r||e};e.config=function(t){if(t=Object(t),"longStackTraces"in t&&(t.longStackTraces?e.longStackTraces():!t.longStackTraces&&e.hasLongStackTraces()&&tt()),"warnings"in t){var n=t.warnings;lt.warnings=!!n,Z=lt.warnings,B.isObject(n)&&"wForgottenReturn"in n&&(Z=!!n.wForgottenReturn)}if("cancellation"in t&&t.cancellation&&!lt.cancellation){if(N.haveItemsQueued())throw new Error("cannot enable cancellation after promises are in use");e.prototype._clearCancellationData=p,e.prototype._propagateFrom=f,e.prototype._onCancel=u,e.prototype._setOnCancel=l,e.prototype._attachCancellationCallback=c,e.prototype._execute=a,st=f,lt.cancellation=!0}if("monitoring"in t&&(t.monitoring&&!lt.monitoring?(lt.monitoring=!0,e.prototype._fireEvent=ot):!t.monitoring&&lt.monitoring&&(lt.monitoring=!1,e.prototype._fireEvent=s)),"asyncHooks"in t&&B.nodeSupportsAsyncResource){var o=lt.asyncHooks,h=!!t.asyncHooks;o!==h&&(lt.asyncHooks=h,h?r():i())}return e},e.prototype._fireEvent=s,e.prototype._execute=function(t,e,n){try{t(e,n)}catch(r){return r}},e.prototype._onCancel=function(){},e.prototype._setOnCancel=function(t){},e.prototype._attachCancellationCallback=function(t){},e.prototype._captureStackTrace=function(){},e.prototype._attachExtraTrace=function(){},e.prototype._dereferenceTrace=function(){},e.prototype._clearCancellationData=function(){},e.prototype._propagateFrom=function(t,e){};var st=h,at=function(){return!1},ct=/[\/<\(]([^:\/]+):(\d+):(?:\d+)\)?\s*$/;B.inherits(V,Error),n.CapturedTrace=V,V.prototype.uncycle=function(){var t=this._length;if(!(2>t)){for(var e=[],n={},r=0,i=this;void 0!==i;++r)e.push(i),i=i._parent;t=this._length=r;for(var r=t-1;r>=0;--r){var o=e[r].stack;void 0===n[o]&&(n[o]=r)}for(var r=0;t>r;++r){var s=e[r].stack,a=n[s];if(void 0!==a&&a!==r){a>0&&(e[a-1]._parent=void 0,e[a-1]._length=1),e[r]._parent=void 0,e[r]._length=1;var c=r>0?e[r-1]:this;t-1>a?(c._parent=e[a+1],c._parent.uncycle(),c._length=c._parent._length+1):(c._parent=void 0,c._length=1);for(var u=c._length+1,l=r-2;l>=0;--l)e[l]._length=u,u++;return}}}},V.prototype.attachExtraTrace=function(t){if(!t.__stackCleaned__){this.uncycle();for(var e=F(t),n=e.message,r=[e.stack],i=this;void 0!==i;)r.push(k(i.stack.split("\n"))),i=i._parent;j(r),C(r),B.notEnumerableProp(t,"stack",w(n,r)),B.notEnumerableProp(t,"__stackCleaned__",!0)}};var ut=function(){var t=/^\s*at\s*/,e=function(t,e){return"string"==typeof t?t:void 0!==e.name&&void 0!==e.message?e.toString():P(e)};if("number"==typeof Error.stackTraceLimit&&"function"==typeof Error.captureStackTrace){Error.stackTraceLimit+=6,z=t,X=e;var n=Error.captureStackTrace;return at=function(t){return $.test(t)},function(t,e){Error.stackTraceLimit+=6,n(t,e),Error.stackTraceLimit-=6}}var r=new Error;if("string"==typeof r.stack&&r.stack.split("\n")[0].indexOf("stackDetection@")>=0)return z=/@/,X=e,W=!0,function(t){t.stack=(new Error).stack};var i;try{throw new Error}catch(o){i="stack"in o}return"stack"in r||!i||"number"!=typeof Error.stackTraceLimit?(X=function(t,e){return"string"==typeof t?t:"object"!=typeof e&&"function"!=typeof e||void 0===e.name||void 0===e.message?P(e):e.toString()},null):(z=t,X=e,function(t){Error.stackTraceLimit+=6;try{throw new Error}catch(e){t.stack=e.stack}Error.stackTraceLimit-=6})}([]);"undefined"!=typeof console&&"undefined"!=typeof console.warn&&(I=function(t){console.warn(t)},B.isNode&&process.stderr.isTTY?I=function(t,e){var n=e?"[33m":"[31m";console.warn(n+t+"[0m\n")}:B.isNode||"string"!=typeof(new Error).stack||(I=function(t,e){console.warn("%c"+t,e?"color: darkorange":"color: red")}));var lt={warnings:J,longStackTraces:!1,cancellation:!1,monitoring:!1,asyncHooks:!1};return Y&&e.longStackTraces(),{asyncHooks:function(){return lt.asyncHooks},longStackTraces:function(){return lt.longStackTraces},warnings:function(){return lt.warnings},cancellation:function(){return lt.cancellation},monitoring:function(){return lt.monitoring},propagateFromFunction:function(){return st},boundValueFunction:function(){return _},checkForgottenReturns:g,setBounds:A,warn:b,deprecated:m,CapturedTrace:V,fireDomEvent:nt,fireGlobalEvent:rt}}},{"./errors":12,"./es5":13,"./util":36}],10:[function(t,e,n){"use strict";e.exports=function(t){function e(){return this.value}function n(){throw this.reason}t.prototype["return"]=t.prototype.thenReturn=function(n){return n instanceof t&&n.suppressUnhandledRejections(),this._then(e,void 0,void 0,{value:n},void 0)},t.prototype["throw"]=t.prototype.thenThrow=function(t){return this._then(n,void 0,void 0,{reason:t},void 0)},t.prototype.catchThrow=function(t){if(arguments.length<=1)return this._then(void 0,n,void 0,{reason:t},void 0);var e=arguments[1],r=function(){throw e};return this.caught(t,r)},t.prototype.catchReturn=function(n){if(arguments.length<=1)return n instanceof t&&n.suppressUnhandledRejections(),this._then(void 0,e,void 0,{value:n},void 0);var r=arguments[1];r instanceof t&&r.suppressUnhandledRejections();var i=function(){return r};return this.caught(n,i)}}},{}],11:[function(t,e,n){"use strict";e.exports=function(t,e){function n(){return o(this)}function r(t,n){return i(t,n,e,e)}var i=t.reduce,o=t.all;t.prototype.each=function(t){return i(this,t,e,0)._then(n,void 0,void 0,this,void 0)},t.prototype.mapSeries=function(t){return i(this,t,e,e)},t.each=function(t,r){return i(t,r,e,0)._then(n,void 0,void 0,t,void 0)},t.mapSeries=r}},{}],12:[function(t,e,n){"use strict";function r(t,e){function n(r){return this instanceof n?(p(this,"message","string"==typeof r?r:e),p(this,"name",t),void(Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):Error.call(this))):new n(r)}return l(n,Error),n}function i(t){return this instanceof i?(p(this,"name","OperationalError"),p(this,"message",t),this.cause=t,this.isOperational=!0,void(t instanceof Error?(p(this,"message",t.message),p(this,"stack",t.stack)):Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor))):new i(t)}var o,s,a=t("./es5"),c=a.freeze,u=t("./util"),l=u.inherits,p=u.notEnumerableProp,f=r("Warning","warning"),h=r("CancellationError","cancellation error"),_=r("TimeoutError","timeout error"),d=r("AggregateError","aggregate error");try{o=TypeError,s=RangeError}catch(v){o=r("TypeError","type error"),s=r("RangeError","range error")}for(var y="join pop push shift unshift slice filter forEach some every map indexOf lastIndexOf reduce reduceRight sort reverse".split(" "),g=0;g<y.length;++g)"function"==typeof Array.prototype[y[g]]&&(d.prototype[y[g]]=Array.prototype[y[g]]);a.defineProperty(d.prototype,"length",{value:0,configurable:!1,writable:!0,enumerable:!0}),d.prototype.isOperational=!0;var m=0;d.prototype.toString=function(){var t=Array(4*m+1).join(" "),e="\n"+t+"AggregateError of:\n";m++,t=Array(4*m+1).join(" ");for(var n=0;n<this.length;++n){for(var r=this[n]===this?"[Circular AggregateError]":this[n]+"",i=r.split("\n"),o=0;o<i.length;++o)i[o]=t+i[o];r=i.join("\n"),e+=r+"\n"}return m--,e},l(i,Error);var b=Error.__BluebirdErrorTypes__;b||(b=c({CancellationError:h,TimeoutError:_,OperationalError:i,RejectionError:i,AggregateError:d}),a.defineProperty(Error,"__BluebirdErrorTypes__",{value:b,writable:!1,enumerable:!1,configurable:!1})),e.exports={Error:Error,TypeError:o,RangeError:s,CancellationError:b.CancellationError,OperationalError:b.OperationalError,TimeoutError:b.TimeoutError,AggregateError:b.AggregateError,Warning:f}},{"./es5":13,"./util":36}],13:[function(t,e,n){var r=function(){"use strict";return void 0===this}();if(r)e.exports={freeze:Object.freeze,defineProperty:Object.defineProperty,getDescriptor:Object.getOwnPropertyDescriptor,keys:Object.keys,names:Object.getOwnPropertyNames,getPrototypeOf:Object.getPrototypeOf,isArray:Array.isArray,isES5:r,propertyIsWritable:function(t,e){var n=Object.getOwnPropertyDescriptor(t,e);return!(n&&!n.writable&&!n.set)}};else{var i={}.hasOwnProperty,o={}.toString,s={}.constructor.prototype,a=function(t){var e=[];for(var n in t)i.call(t,n)&&e.push(n);return e},c=function(t,e){return{value:t[e]}},u=function(t,e,n){return t[e]=n.value,t},l=function(t){return t},p=function(t){try{return Object(t).constructor.prototype}catch(e){return s}},f=function(t){try{return"[object Array]"===o.call(t)}catch(e){return!1}};e.exports={isArray:f,keys:a,names:a,defineProperty:u,getDescriptor:c,freeze:l,getPrototypeOf:p,isES5:r,propertyIsWritable:function(){return!0}}}},{}],14:[function(t,e,n){"use strict";e.exports=function(t,e){var n=t.map;t.prototype.filter=function(t,r){return n(this,t,r,e)},t.filter=function(t,r,i){return n(t,r,i,e)}}},{}],15:[function(t,e,n){"use strict";e.exports=function(e,n,r){function i(t,e,n){this.promise=t,this.type=e,this.handler=n,this.called=!1,this.cancelPromise=null}function o(t){this.finallyHandler=t}function s(t,e){return null!=t.cancelPromise?(arguments.length>1?t.cancelPromise._reject(e):t.cancelPromise._cancel(),t.cancelPromise=null,!0):!1}function a(){return u.call(this,this.promise._target()._settledValue())}function c(t){return s(this,t)?void 0:(f.e=t,f)}function u(t){var i=this.promise,u=this.handler;if(!this.called){this.called=!0;var l=this.isFinallyHandler()?u.call(i._boundValue()):u.call(i._boundValue(),t);if(l===r)return l;if(void 0!==l){i._setReturnedNonUndefined();var h=n(l,i);if(h instanceof e){if(null!=this.cancelPromise){if(h._isCancelled()){var _=new p("late cancellation observer");return i._attachExtraTrace(_),f.e=_,f}h.isPending()&&h._attachCancellationCallback(new o(this))}return h._then(a,c,void 0,this,void 0)}}}return i.isRejected()?(s(this),f.e=t,f):(s(this),t)}var l=t("./util"),p=e.CancellationError,f=l.errorObj,h=t("./catch_filter")(r);return i.prototype.isFinallyHandler=function(){return 0===this.type},o.prototype._resultCancelled=function(){s(this.finallyHandler)},e.prototype._passThrough=function(t,e,n,r){return"function"!=typeof t?this.then():this._then(n,r,void 0,new i(this,e,t),void 0)},e.prototype.lastly=e.prototype["finally"]=function(t){return this._passThrough(t,0,u,u)},e.prototype.tap=function(t){return this._passThrough(t,1,u)},e.prototype.tapCatch=function(t){var n=arguments.length;if(1===n)return this._passThrough(t,1,void 0,u);var r,i=new Array(n-1),o=0;for(r=0;n-1>r;++r){var s=arguments[r];if(!l.isObject(s))return e.reject(new TypeError("tapCatch statement predicate: expecting an object but got "+l.classString(s)));i[o++]=s}i.length=o;var a=arguments[r];return this._passThrough(h(i,a,this),1,void 0,u)},i}},{"./catch_filter":7,"./util":36}],16:[function(t,e,n){"use strict";e.exports=function(e,n,r,i,o,s){function a(t,n,r){for(var o=0;o<n.length;++o){r._pushContext();var s=h(n[o])(t);if(r._popContext(),s===f){r._pushContext();var a=e.reject(f.e);return r._popContext(),a}var c=i(s,r);if(c instanceof e)return c}return null}function c(t,n,i,o){if(s.cancellation()){var a=new e(r),c=this._finallyPromise=new e(r);this._promise=a.lastly(function(){return c}),a._captureStackTrace(),a._setOnCancel(this)}else{var u=this._promise=new e(r);u._captureStackTrace()}this._stack=o,this._generatorFunction=t,this._receiver=n,this._generator=void 0,this._yieldHandlers="function"==typeof i?[i].concat(_):_,this._yieldedPromise=null,this._cancellationPhase=!1}var u=t("./errors"),l=u.TypeError,p=t("./util"),f=p.errorObj,h=p.tryCatch,_=[];p.inherits(c,o),c.prototype._isResolved=function(){return null===this._promise},c.prototype._cleanup=function(){this._promise=this._generator=null,s.cancellation()&&null!==this._finallyPromise&&(this._finallyPromise._fulfill(),this._finallyPromise=null)},c.prototype._promiseCancelled=function(){if(!this._isResolved()){var t,n="undefined"!=typeof this._generator["return"];if(n)this._promise._pushContext(),t=h(this._generator["return"]).call(this._generator,void 0),this._promise._popContext();else{var r=new e.CancellationError("generator .return() sentinel");e.coroutine.returnSentinel=r,this._promise._attachExtraTrace(r),this._promise._pushContext(),t=h(this._generator["throw"]).call(this._generator,r),this._promise._popContext()}this._cancellationPhase=!0,this._yieldedPromise=null,this._continue(t)}},c.prototype._promiseFulfilled=function(t){this._yieldedPromise=null,this._promise._pushContext();var e=h(this._generator.next).call(this._generator,t);this._promise._popContext(),this._continue(e)},c.prototype._promiseRejected=function(t){this._yieldedPromise=null,this._promise._attachExtraTrace(t),this._promise._pushContext();var e=h(this._generator["throw"]).call(this._generator,t);this._promise._popContext(),this._continue(e)},c.prototype._resultCancelled=function(){if(this._yieldedPromise instanceof e){var t=this._yieldedPromise;this._yieldedPromise=null,t.cancel()}},c.prototype.promise=function(){return this._promise},c.prototype._run=function(){this._generator=this._generatorFunction.call(this._receiver),this._receiver=this._generatorFunction=void 0,this._promiseFulfilled(void 0)},c.prototype._continue=function(t){var n=this._promise;if(t===f)return this._cleanup(),this._cancellationPhase?n.cancel():n._rejectCallback(t.e,!1);var r=t.value;if(t.done===!0)return this._cleanup(),this._cancellationPhase?n.cancel():n._resolveCallback(r);
var o=i(r,this._promise);if(!(o instanceof e)&&(o=a(o,this._yieldHandlers,this._promise),null===o))return void this._promiseRejected(new l("A value %s was yielded that could not be treated as a promise\n\n    See http://goo.gl/MqrFmX\n\n".replace("%s",String(r))+"From coroutine:\n"+this._stack.split("\n").slice(1,-7).join("\n")));o=o._target();var s=o._bitField;0===(50397184&s)?(this._yieldedPromise=o,o._proxy(this,null)):0!==(33554432&s)?e._async.invoke(this._promiseFulfilled,this,o._value()):0!==(16777216&s)?e._async.invoke(this._promiseRejected,this,o._reason()):this._promiseCancelled()},e.coroutine=function(t,e){if("function"!=typeof t)throw new l("generatorFunction must be a function\n\n    See http://goo.gl/MqrFmX\n");var n=Object(e).yieldHandler,r=c,i=(new Error).stack;return function(){var e=t.apply(this,arguments),o=new r(void 0,void 0,n,i),s=o.promise();return o._generator=e,o._promiseFulfilled(void 0),s}},e.coroutine.addYieldHandler=function(t){if("function"!=typeof t)throw new l("expecting a function but got "+p.classString(t));_.push(t)},e.spawn=function(t){if(s.deprecated("Promise.spawn()","Promise.coroutine()"),"function"!=typeof t)return n("generatorFunction must be a function\n\n    See http://goo.gl/MqrFmX\n");var r=new c(t,this),i=r.promise();return r._run(e.spawn),i}}},{"./errors":12,"./util":36}],17:[function(t,e,n){"use strict";e.exports=function(e,n,r,i,o){var s=t("./util");s.canEvaluate,s.tryCatch,s.errorObj;e.join=function(){var t,e=arguments.length-1;if(e>0&&"function"==typeof arguments[e]){t=arguments[e];var r}var i=[].slice.call(arguments);t&&i.pop();var r=new n(i).promise();return void 0!==t?r.spread(t):r}}},{"./util":36}],18:[function(t,e,n){"use strict";e.exports=function(e,n,r,i,o,s){function a(t,n,r,i){this.constructor$(t),this._promise._captureStackTrace();var s=e._getContext();if(this._callback=u.contextBind(s,n),this._preservedValues=i===o?new Array(this.length()):null,this._limit=r,this._inFlight=0,this._queue=[],f.invoke(this._asyncInit,this,void 0),u.isArray(t))for(var a=0;a<t.length;++a){var c=t[a];c instanceof e&&c.suppressUnhandledRejections()}}function c(t,n,i,o){if("function"!=typeof n)return r("expecting a function but got "+u.classString(n));var s=0;if(void 0!==i){if("object"!=typeof i||null===i)return e.reject(new TypeError("options argument must be an object but it is "+u.classString(i)));if("number"!=typeof i.concurrency)return e.reject(new TypeError("'concurrency' must be a number but it is "+u.classString(i.concurrency)));s=i.concurrency}return s="number"==typeof s&&isFinite(s)&&s>=1?s:0,new a(t,n,s,o).promise()}var u=t("./util"),l=u.tryCatch,p=u.errorObj,f=e._async;u.inherits(a,n),a.prototype._asyncInit=function(){this._init$(void 0,-2)},a.prototype._init=function(){},a.prototype._promiseFulfilled=function(t,n){var r=this._values,o=this.length(),a=this._preservedValues,c=this._limit;if(0>n){if(n=-1*n-1,r[n]=t,c>=1&&(this._inFlight--,this._drainQueue(),this._isResolved()))return!0}else{if(c>=1&&this._inFlight>=c)return r[n]=t,this._queue.push(n),!1;null!==a&&(a[n]=t);var u=this._promise,f=this._callback,h=u._boundValue();u._pushContext();var _=l(f).call(h,t,n,o),d=u._popContext();if(s.checkForgottenReturns(_,d,null!==a?"Promise.filter":"Promise.map",u),_===p)return this._reject(_.e),!0;var v=i(_,this._promise);if(v instanceof e){v=v._target();var y=v._bitField;if(0===(50397184&y))return c>=1&&this._inFlight++,r[n]=v,v._proxy(this,-1*(n+1)),!1;if(0===(33554432&y))return 0!==(16777216&y)?(this._reject(v._reason()),!0):(this._cancel(),!0);_=v._value()}r[n]=_}var g=++this._totalResolved;return g>=o?(null!==a?this._filter(r,a):this._resolve(r),!0):!1},a.prototype._drainQueue=function(){for(var t=this._queue,e=this._limit,n=this._values;t.length>0&&this._inFlight<e;){if(this._isResolved())return;var r=t.pop();this._promiseFulfilled(n[r],r)}},a.prototype._filter=function(t,e){for(var n=e.length,r=new Array(n),i=0,o=0;n>o;++o)t[o]&&(r[i++]=e[o]);r.length=i,this._resolve(r)},a.prototype.preservedValues=function(){return this._preservedValues},e.prototype.map=function(t,e){return c(this,t,e,null)},e.map=function(t,e,n,r){return c(t,e,n,r)}}},{"./util":36}],19:[function(t,e,n){"use strict";e.exports=function(e,n,r,i,o){var s=t("./util"),a=s.tryCatch;e.method=function(t){if("function"!=typeof t)throw new e.TypeError("expecting a function but got "+s.classString(t));return function(){var r=new e(n);r._captureStackTrace(),r._pushContext();var i=a(t).apply(this,arguments),s=r._popContext();return o.checkForgottenReturns(i,s,"Promise.method",r),r._resolveFromSyncValue(i),r}},e.attempt=e["try"]=function(t){if("function"!=typeof t)return i("expecting a function but got "+s.classString(t));var r=new e(n);r._captureStackTrace(),r._pushContext();var c;if(arguments.length>1){o.deprecated("calling Promise.try with more than 1 argument");var u=arguments[1],l=arguments[2];c=s.isArray(u)?a(t).apply(l,u):a(t).call(l,u)}else c=a(t)();var p=r._popContext();return o.checkForgottenReturns(c,p,"Promise.try",r),r._resolveFromSyncValue(c),r},e.prototype._resolveFromSyncValue=function(t){t===s.errorObj?this._rejectCallback(t.e,!1):this._resolveCallback(t,!0)}}},{"./util":36}],20:[function(t,e,n){"use strict";function r(t){return t instanceof Error&&l.getPrototypeOf(t)===Error.prototype}function i(t){var e;if(r(t)){e=new u(t),e.name=t.name,e.message=t.message,e.stack=t.stack;for(var n=l.keys(t),i=0;i<n.length;++i){var o=n[i];p.test(o)||(e[o]=t[o])}return e}return s.markAsOriginatingFromRejection(t),t}function o(t,e){return function(n,r){if(null!==t){if(n){var o=i(a(n));t._attachExtraTrace(o),t._reject(o)}else if(e){var s=[].slice.call(arguments,1);t._fulfill(s)}else t._fulfill(r);t=null}}}var s=t("./util"),a=s.maybeWrapAsError,c=t("./errors"),u=c.OperationalError,l=t("./es5"),p=/^(?:name|message|stack|cause)$/;e.exports=o},{"./errors":12,"./es5":13,"./util":36}],21:[function(t,e,n){"use strict";e.exports=function(e){function n(t,e){var n=this;if(!o.isArray(t))return r.call(n,t,e);var i=a(e).apply(n._boundValue(),[null].concat(t));i===c&&s.throwLater(i.e)}function r(t,e){var n=this,r=n._boundValue(),i=void 0===t?a(e).call(r,null):a(e).call(r,null,t);i===c&&s.throwLater(i.e)}function i(t,e){var n=this;if(!t){var r=new Error(t+"");r.cause=t,t=r}var i=a(e).call(n._boundValue(),t);i===c&&s.throwLater(i.e)}var o=t("./util"),s=e._async,a=o.tryCatch,c=o.errorObj;e.prototype.asCallback=e.prototype.nodeify=function(t,e){if("function"==typeof t){var o=r;void 0!==e&&Object(e).spread&&(o=n),this._then(o,i,void 0,this,t)}return this}}},{"./util":36}],22:[function(t,e,n){"use strict";e.exports=function(){function n(){}function r(t,e){if(null==t||t.constructor!==i)throw new E("the promise constructor cannot be invoked directly\n\n    See http://goo.gl/MqrFmX\n");if("function"!=typeof e)throw new E("expecting a function but got "+f.classString(e))}function i(t){t!==x&&r(this,t),this._bitField=0,this._fulfillmentHandler0=void 0,this._rejectionHandler0=void 0,this._promise0=void 0,this._receiver0=void 0,this._resolveFromExecutor(t),this._promiseCreated(),this._fireEvent("promiseCreated",this)}function o(t){this.promise._resolveCallback(t)}function s(t){this.promise._rejectCallback(t,!1)}function a(t){var e=new i(x);e._fulfillmentHandler0=t,e._rejectionHandler0=t,e._promise0=t,e._receiver0=t}var c=function(){return new E("circular promise resolution chain\n\n    See http://goo.gl/MqrFmX\n")},u=function(){return new i.PromiseInspection(this._target())},l=function(t){return i.reject(new E(t))},p={},f=t("./util");f.setReflectHandler(u);var h=function(){var t=process.domain;return void 0===t?null:t},_=function(){return null},d=function(){return{domain:h(),async:null}},v=f.isNode&&f.nodeSupportsAsyncResource?t("async_hooks").AsyncResource:null,y=function(){return{domain:h(),async:new v("Bluebird::Promise")}},g=f.isNode?d:_;f.notEnumerableProp(i,"_getContext",g);var m=function(){g=y,f.notEnumerableProp(i,"_getContext",y)},b=function(){g=d,f.notEnumerableProp(i,"_getContext",d)},w=t("./es5"),C=t("./async"),j=new C;w.defineProperty(i,"_async",{value:j});var k=t("./errors"),E=i.TypeError=k.TypeError;i.RangeError=k.RangeError;var F=i.CancellationError=k.CancellationError;i.TimeoutError=k.TimeoutError,i.OperationalError=k.OperationalError,i.RejectionError=k.OperationalError,i.AggregateError=k.AggregateError;var x=function(){},T={},P={},R=t("./thenables")(i,x),S=t("./promise_array")(i,x,R,l,n),O=t("./context")(i),A=O.create,V=t("./debuggability")(i,O,m,b),H=(V.CapturedTrace,t("./finally")(i,R,P)),D=t("./catch_filter")(P),I=t("./nodeback"),L=f.errorObj,N=f.tryCatch;return i.prototype.toString=function(){return"[object Promise]"},i.prototype.caught=i.prototype["catch"]=function(t){var e=arguments.length;if(e>1){var n,r=new Array(e-1),i=0;for(n=0;e-1>n;++n){var o=arguments[n];if(!f.isObject(o))return l("Catch statement predicate: expecting an object but got "+f.classString(o));r[i++]=o}if(r.length=i,t=arguments[n],"function"!=typeof t)throw new E("The last argument to .catch() must be a function, got "+f.toString(t));return this.then(void 0,D(r,t,this))}return this.then(void 0,t)},i.prototype.reflect=function(){return this._then(u,u,void 0,this,void 0)},i.prototype.then=function(t,e){if(V.warnings()&&arguments.length>0&&"function"!=typeof t&&"function"!=typeof e){var n=".then() only accepts functions but was passed: "+f.classString(t);arguments.length>1&&(n+=", "+f.classString(e)),this._warn(n)}return this._then(t,e,void 0,void 0,void 0)},i.prototype.done=function(t,e){var n=this._then(t,e,void 0,void 0,void 0);n._setIsFinal()},i.prototype.spread=function(t){return"function"!=typeof t?l("expecting a function but got "+f.classString(t)):this.all()._then(t,void 0,void 0,T,void 0)},i.prototype.toJSON=function(){var t={isFulfilled:!1,isRejected:!1,fulfillmentValue:void 0,rejectionReason:void 0};return this.isFulfilled()?(t.fulfillmentValue=this.value(),t.isFulfilled=!0):this.isRejected()&&(t.rejectionReason=this.reason(),t.isRejected=!0),t},i.prototype.all=function(){return arguments.length>0&&this._warn(".all() was passed arguments but it does not take any"),new S(this).promise()},i.prototype.error=function(t){return this.caught(f.originatesFromRejection,t)},i.getNewLibraryCopy=e.exports,i.is=function(t){return t instanceof i},i.fromNode=i.fromCallback=function(t){var e=new i(x);e._captureStackTrace();var n=arguments.length>1?!!Object(arguments[1]).multiArgs:!1,r=N(t)(I(e,n));return r===L&&e._rejectCallback(r.e,!0),e._isFateSealed()||e._setAsyncGuaranteed(),e},i.all=function(t){return new S(t).promise()},i.cast=function(t){var e=R(t);return e instanceof i||(e=new i(x),e._captureStackTrace(),e._setFulfilled(),e._rejectionHandler0=t),e},i.resolve=i.fulfilled=i.cast,i.reject=i.rejected=function(t){var e=new i(x);return e._captureStackTrace(),e._rejectCallback(t,!0),e},i.setScheduler=function(t){if("function"!=typeof t)throw new E("expecting a function but got "+f.classString(t));return j.setScheduler(t)},i.prototype._then=function(t,e,n,r,o){var s=void 0!==o,a=s?o:new i(x),c=this._target(),u=c._bitField;s||(a._propagateFrom(this,3),a._captureStackTrace(),void 0===r&&0!==(2097152&this._bitField)&&(r=0!==(50397184&u)?this._boundValue():c===this?void 0:this._boundTo),this._fireEvent("promiseChained",this,a));var l=g();if(0!==(50397184&u)){var p,h,_=c._settlePromiseCtx;0!==(33554432&u)?(h=c._rejectionHandler0,p=t):0!==(16777216&u)?(h=c._fulfillmentHandler0,p=e,c._unsetRejectionIsUnhandled()):(_=c._settlePromiseLateCancellationObserver,h=new F("late cancellation observer"),c._attachExtraTrace(h),p=e),j.invoke(_,c,{handler:f.contextBind(l,p),promise:a,receiver:r,value:h})}else c._addCallbacks(t,e,a,r,l);return a},i.prototype._length=function(){return 65535&this._bitField},i.prototype._isFateSealed=function(){return 0!==(117506048&this._bitField)},i.prototype._isFollowing=function(){return 67108864===(67108864&this._bitField)},i.prototype._setLength=function(t){this._bitField=-65536&this._bitField|65535&t},i.prototype._setFulfilled=function(){this._bitField=33554432|this._bitField,this._fireEvent("promiseFulfilled",this)},i.prototype._setRejected=function(){this._bitField=16777216|this._bitField,this._fireEvent("promiseRejected",this)},i.prototype._setFollowing=function(){this._bitField=67108864|this._bitField,this._fireEvent("promiseResolved",this)},i.prototype._setIsFinal=function(){this._bitField=4194304|this._bitField},i.prototype._isFinal=function(){return(4194304&this._bitField)>0},i.prototype._unsetCancelled=function(){this._bitField=-65537&this._bitField},i.prototype._setCancelled=function(){this._bitField=65536|this._bitField,this._fireEvent("promiseCancelled",this)},i.prototype._setWillBeCancelled=function(){this._bitField=8388608|this._bitField},i.prototype._setAsyncGuaranteed=function(){if(!j.hasCustomScheduler()){var t=this._bitField;this._bitField=t|(536870912&t)>>2^134217728}},i.prototype._setNoAsyncGuarantee=function(){this._bitField=-134217729&(536870912|this._bitField)},i.prototype._receiverAt=function(t){var e=0===t?this._receiver0:this[4*t-4+3];return e===p?void 0:void 0===e&&this._isBound()?this._boundValue():e},i.prototype._promiseAt=function(t){return this[4*t-4+2]},i.prototype._fulfillmentHandlerAt=function(t){return this[4*t-4+0]},i.prototype._rejectionHandlerAt=function(t){return this[4*t-4+1]},i.prototype._boundValue=function(){},i.prototype._migrateCallback0=function(t){var e=(t._bitField,t._fulfillmentHandler0),n=t._rejectionHandler0,r=t._promise0,i=t._receiverAt(0);void 0===i&&(i=p),this._addCallbacks(e,n,r,i,null)},i.prototype._migrateCallbackAt=function(t,e){var n=t._fulfillmentHandlerAt(e),r=t._rejectionHandlerAt(e),i=t._promiseAt(e),o=t._receiverAt(e);void 0===o&&(o=p),this._addCallbacks(n,r,i,o,null)},i.prototype._addCallbacks=function(t,e,n,r,i){var o=this._length();if(o>=65531&&(o=0,this._setLength(0)),0===o)this._promise0=n,this._receiver0=r,"function"==typeof t&&(this._fulfillmentHandler0=f.contextBind(i,t)),"function"==typeof e&&(this._rejectionHandler0=f.contextBind(i,e));else{var s=4*o-4;this[s+2]=n,this[s+3]=r,"function"==typeof t&&(this[s+0]=f.contextBind(i,t)),"function"==typeof e&&(this[s+1]=f.contextBind(i,e))}return this._setLength(o+1),o},i.prototype._proxy=function(t,e){this._addCallbacks(void 0,void 0,e,t,null)},i.prototype._resolveCallback=function(t,e){if(0===(117506048&this._bitField)){if(t===this)return this._rejectCallback(c(),!1);var n=R(t,this);if(!(n instanceof i))return this._fulfill(t);e&&this._propagateFrom(n,2);var r=n._target();if(r===this)return void this._reject(c());var o=r._bitField;if(0===(50397184&o)){var s=this._length();s>0&&r._migrateCallback0(this);for(var a=1;s>a;++a)r._migrateCallbackAt(this,a);this._setFollowing(),this._setLength(0),this._setFollowee(n)}else if(0!==(33554432&o))this._fulfill(r._value());else if(0!==(16777216&o))this._reject(r._reason());else{var u=new F("late cancellation observer");r._attachExtraTrace(u),this._reject(u)}}},i.prototype._rejectCallback=function(t,e,n){var r=f.ensureErrorObject(t),i=r===t;if(!i&&!n&&V.warnings()){var o="a promise was rejected with a non-error: "+f.classString(t);this._warn(o,!0)}this._attachExtraTrace(r,e?i:!1),this._reject(t)},i.prototype._resolveFromExecutor=function(t){if(t!==x){var e=this;this._captureStackTrace(),this._pushContext();var n=!0,r=this._execute(t,function(t){e._resolveCallback(t)},function(t){e._rejectCallback(t,n)});n=!1,this._popContext(),void 0!==r&&e._rejectCallback(r,!0)}},i.prototype._settlePromiseFromHandler=function(t,e,n,r){var i=r._bitField;if(0===(65536&i)){r._pushContext();var o;e===T?n&&"number"==typeof n.length?o=N(t).apply(this._boundValue(),n):(o=L,o.e=new E("cannot .spread() a non-array: "+f.classString(n))):o=N(t).call(e,n);var s=r._popContext();i=r._bitField,0===(65536&i)&&(o===P?r._reject(n):o===L?r._rejectCallback(o.e,!1):(V.checkForgottenReturns(o,s,"",r,this),r._resolveCallback(o)))}},i.prototype._target=function(){for(var t=this;t._isFollowing();)t=t._followee();return t},i.prototype._followee=function(){return this._rejectionHandler0},i.prototype._setFollowee=function(t){this._rejectionHandler0=t},i.prototype._settlePromise=function(t,e,r,o){var s=t instanceof i,a=this._bitField,c=0!==(134217728&a);0!==(65536&a)?(s&&t._invokeInternalOnCancel(),r instanceof H&&r.isFinallyHandler()?(r.cancelPromise=t,N(e).call(r,o)===L&&t._reject(L.e)):e===u?t._fulfill(u.call(r)):r instanceof n?r._promiseCancelled(t):s||t instanceof S?t._cancel():r.cancel()):"function"==typeof e?s?(c&&t._setAsyncGuaranteed(),this._settlePromiseFromHandler(e,r,o,t)):e.call(r,o,t):r instanceof n?r._isResolved()||(0!==(33554432&a)?r._promiseFulfilled(o,t):r._promiseRejected(o,t)):s&&(c&&t._setAsyncGuaranteed(),0!==(33554432&a)?t._fulfill(o):t._reject(o))},i.prototype._settlePromiseLateCancellationObserver=function(t){var e=t.handler,n=t.promise,r=t.receiver,o=t.value;"function"==typeof e?n instanceof i?this._settlePromiseFromHandler(e,r,o,n):e.call(r,o,n):n instanceof i&&n._reject(o)},i.prototype._settlePromiseCtx=function(t){this._settlePromise(t.promise,t.handler,t.receiver,t.value)},i.prototype._settlePromise0=function(t,e,n){var r=this._promise0,i=this._receiverAt(0);this._promise0=void 0,this._receiver0=void 0,this._settlePromise(r,t,i,e)},i.prototype._clearCallbackDataAtIndex=function(t){var e=4*t-4;this[e+2]=this[e+3]=this[e+0]=this[e+1]=void 0},i.prototype._fulfill=function(t){var e=this._bitField;if(!((117506048&e)>>>16)){if(t===this){var n=c();return this._attachExtraTrace(n),this._reject(n)}this._setFulfilled(),this._rejectionHandler0=t,(65535&e)>0&&(0!==(134217728&e)?this._settlePromises():j.settlePromises(this),this._dereferenceTrace())}},i.prototype._reject=function(t){var e=this._bitField;if(!((117506048&e)>>>16))return this._setRejected(),this._fulfillmentHandler0=t,this._isFinal()?j.fatalError(t,f.isNode):void((65535&e)>0?j.settlePromises(this):this._ensurePossibleRejectionHandled())},i.prototype._fulfillPromises=function(t,e){for(var n=1;t>n;n++){var r=this._fulfillmentHandlerAt(n),i=this._promiseAt(n),o=this._receiverAt(n);this._clearCallbackDataAtIndex(n),this._settlePromise(i,r,o,e)}},i.prototype._rejectPromises=function(t,e){for(var n=1;t>n;n++){var r=this._rejectionHandlerAt(n),i=this._promiseAt(n),o=this._receiverAt(n);this._clearCallbackDataAtIndex(n),this._settlePromise(i,r,o,e)}},i.prototype._settlePromises=function(){var t=this._bitField,e=65535&t;if(e>0){if(0!==(16842752&t)){var n=this._fulfillmentHandler0;this._settlePromise0(this._rejectionHandler0,n,t),this._rejectPromises(e,n)}else{var r=this._rejectionHandler0;this._settlePromise0(this._fulfillmentHandler0,r,t),this._fulfillPromises(e,r)}this._setLength(0)}this._clearCancellationData()},i.prototype._settledValue=function(){var t=this._bitField;return 0!==(33554432&t)?this._rejectionHandler0:0!==(16777216&t)?this._fulfillmentHandler0:void 0},"undefined"!=typeof Symbol&&Symbol.toStringTag&&w.defineProperty(i.prototype,Symbol.toStringTag,{get:function(){return"Object"}}),i.defer=i.pending=function(){V.deprecated("Promise.defer","new Promise");var t=new i(x);return{promise:t,resolve:o,reject:s}},f.notEnumerableProp(i,"_makeSelfResolutionError",c),t("./method")(i,x,R,l,V),t("./bind")(i,x,R,V),t("./cancel")(i,S,l,V),t("./direct_resolve")(i),t("./synchronous_inspection")(i),t("./join")(i,S,R,x,j),i.Promise=i,i.version="3.7.2",t("./call_get.js")(i),t("./generators.js")(i,l,x,R,n,V),t("./map.js")(i,S,l,R,x,V),t("./nodeify.js")(i),t("./promisify.js")(i,x),t("./props.js")(i,S,R,l),t("./race.js")(i,x,R,l),t("./reduce.js")(i,S,l,R,x,V),t("./settle.js")(i,S,V),t("./some.js")(i,S,l),t("./timers.js")(i,x,V),t("./using.js")(i,l,R,A,x,V),t("./any.js")(i),t("./each.js")(i,x),t("./filter.js")(i,x),f.toFastProperties(i),f.toFastProperties(i.prototype),a({a:1}),a({b:2}),a({c:3}),a(1),a(function(){}),a(void 0),a(!1),a(new i(x)),V.setBounds(C.firstLineError,f.lastLineError),i}},{"./any.js":1,"./async":2,"./bind":3,"./call_get.js":5,"./cancel":6,"./catch_filter":7,"./context":8,"./debuggability":9,"./direct_resolve":10,"./each.js":11,"./errors":12,"./es5":13,"./filter.js":14,"./finally":15,"./generators.js":16,"./join":17,"./map.js":18,"./method":19,"./nodeback":20,"./nodeify.js":21,"./promise_array":23,"./promisify.js":24,"./props.js":25,"./race.js":27,"./reduce.js":28,"./settle.js":30,"./some.js":31,"./synchronous_inspection":32,"./thenables":33,"./timers.js":34,"./using.js":35,"./util":36,async_hooks:void 0}],23:[function(t,e,n){"use strict";e.exports=function(e,n,r,i,o){function s(t){switch(t){case-2:return[];case-3:return{};case-6:return new Map}}function a(t){var r=this._promise=new e(n);t instanceof e&&(r._propagateFrom(t,3),t.suppressUnhandledRejections()),r._setOnCancel(this),this._values=t,this._length=0,this._totalResolved=0,this._init(void 0,-2)}var c=t("./util");c.isArray;return c.inherits(a,o),a.prototype.length=function(){return this._length},a.prototype.promise=function(){return this._promise},a.prototype._init=function u(t,n){var o=r(this._values,this._promise);if(o instanceof e){o=o._target();var a=o._bitField;if(this._values=o,0===(50397184&a))return this._promise._setAsyncGuaranteed(),o._then(u,this._reject,void 0,this,n);if(0===(33554432&a))return 0!==(16777216&a)?this._reject(o._reason()):this._cancel();o=o._value()}if(o=c.asArray(o),null===o){var l=i("expecting an array or an iterable object but got "+c.classString(o)).reason();return void this._promise._rejectCallback(l,!1)}return 0===o.length?void(-5===n?this._resolveEmptyArray():this._resolve(s(n))):void this._iterate(o)},a.prototype._iterate=function(t){var n=this.getActualLength(t.length);this._length=n,this._values=this.shouldCopyValues()?new Array(n):this._values;for(var i=this._promise,o=!1,s=null,a=0;n>a;++a){var c=r(t[a],i);c instanceof e?(c=c._target(),s=c._bitField):s=null,o?null!==s&&c.suppressUnhandledRejections():null!==s?0===(50397184&s)?(c._proxy(this,a),this._values[a]=c):o=0!==(33554432&s)?this._promiseFulfilled(c._value(),a):0!==(16777216&s)?this._promiseRejected(c._reason(),a):this._promiseCancelled(a):o=this._promiseFulfilled(c,a)}o||i._setAsyncGuaranteed()},a.prototype._isResolved=function(){return null===this._values},a.prototype._resolve=function(t){this._values=null,this._promise._fulfill(t)},a.prototype._cancel=function(){!this._isResolved()&&this._promise._isCancellable()&&(this._values=null,this._promise._cancel())},a.prototype._reject=function(t){this._values=null,this._promise._rejectCallback(t,!1)},a.prototype._promiseFulfilled=function(t,e){this._values[e]=t;var n=++this._totalResolved;return n>=this._length?(this._resolve(this._values),!0):!1},a.prototype._promiseCancelled=function(){return this._cancel(),!0},a.prototype._promiseRejected=function(t){return this._totalResolved++,this._reject(t),!0},a.prototype._resultCancelled=function(){if(!this._isResolved()){var t=this._values;if(this._cancel(),t instanceof e)t.cancel();else for(var n=0;n<t.length;++n)t[n]instanceof e&&t[n].cancel()}},a.prototype.shouldCopyValues=function(){return!0},a.prototype.getActualLength=function(t){return t},a}},{"./util":36}],24:[function(t,e,n){"use strict";e.exports=function(e,n){function r(t){return!C.test(t)}function i(t){try{return t.__isPromisified__===!0}catch(e){return!1}}function o(t,e,n){var r=h.getDataPropertyOrDefault(t,e+n,b);return r?i(r):!1}function s(t,e,n){for(var r=0;r<t.length;r+=2){var i=t[r];if(n.test(i))for(var o=i.replace(n,""),s=0;s<t.length;s+=2)if(t[s]===o)throw new g("Cannot promisify an API that has normal methods with '%s'-suffix\n\n    See http://goo.gl/MqrFmX\n".replace("%s",e))}}function a(t,e,n,r){for(var a=h.inheritedDataKeys(t),c=[],u=0;u<a.length;++u){var l=a[u],p=t[l],f=r===j?!0:j(l,p,t);"function"!=typeof p||i(p)||o(t,l,e)||!r(l,p,t,f)||c.push(l,p)}return s(c,e,n),c}function c(t,r,i,o,s,a){function c(){var i=r;r===f&&(i=this);var o=new e(n);o._captureStackTrace();var s="string"==typeof l&&this!==u?this[l]:t,c=_(o,a);try{s.apply(i,d(arguments,c))}catch(p){o._rejectCallback(v(p),!0,!0)}return o._isFateSealed()||o._setAsyncGuaranteed(),o}var u=function(){return this}(),l=t;return"string"==typeof l&&(t=o),h.notEnumerableProp(c,"__isPromisified__",!0),c}function u(t,e,n,r,i){for(var o=new RegExp(k(e)+"$"),s=a(t,e,o,n),c=0,u=s.length;u>c;c+=2){var l=s[c],p=s[c+1],_=l+e;if(r===E)t[_]=E(l,f,l,p,e,i);else{var d=r(p,function(){return E(l,f,l,p,e,i)});h.notEnumerableProp(d,"__isPromisified__",!0),t[_]=d}}return h.toFastProperties(t),t}function l(t,e,n){return E(t,e,void 0,t,null,n)}var p,f={},h=t("./util"),_=t("./nodeback"),d=h.withAppended,v=h.maybeWrapAsError,y=h.canEvaluate,g=t("./errors").TypeError,m="Async",b={__isPromisified__:!0},w=["arity","length","name","arguments","caller","callee","prototype","__isPromisified__"],C=new RegExp("^(?:"+w.join("|")+")$"),j=function(t){return h.isIdentifier(t)&&"_"!==t.charAt(0)&&"constructor"!==t},k=function(t){return t.replace(/([$])/,"\\$")},E=y?p:c;e.promisify=function(t,e){if("function"!=typeof t)throw new g("expecting a function but got "+h.classString(t));if(i(t))return t;e=Object(e);var n=void 0===e.context?f:e.context,o=!!e.multiArgs,s=l(t,n,o);return h.copyDescriptors(t,s,r),s},e.promisifyAll=function(t,e){if("function"!=typeof t&&"object"!=typeof t)throw new g("the target of promisifyAll must be an object or a function\n\n    See http://goo.gl/MqrFmX\n");e=Object(e);var n=!!e.multiArgs,r=e.suffix;"string"!=typeof r&&(r=m);var i=e.filter;"function"!=typeof i&&(i=j);var o=e.promisifier;if("function"!=typeof o&&(o=E),!h.isIdentifier(r))throw new RangeError("suffix must be a valid identifier\n\n    See http://goo.gl/MqrFmX\n");for(var s=h.inheritedDataKeys(t),a=0;a<s.length;++a){var c=t[s[a]];"constructor"!==s[a]&&h.isClass(c)&&(u(c.prototype,r,i,o,n),u(c,r,i,o,n))}return u(t,r,i,o,n)}}},{"./errors":12,"./nodeback":20,"./util":36}],25:[function(t,e,n){"use strict";e.exports=function(e,n,r,i){function o(t){var e,n=!1;if(void 0!==a&&t instanceof a)e=p(t),n=!0;else{var r=l.keys(t),i=r.length;e=new Array(2*i);for(var o=0;i>o;++o){var s=r[o];e[o]=t[s],e[o+i]=s}}this.constructor$(e),this._isMap=n,this._init$(void 0,n?-6:-3)}function s(t){var n,s=r(t);return u(s)?(n=s instanceof e?s._then(e.props,void 0,void 0,void 0,void 0):new o(s).promise(),s instanceof e&&n._propagateFrom(s,2),n):i("cannot await properties of a non-object\n\n    See http://goo.gl/MqrFmX\n")}var a,c=t("./util"),u=c.isObject,l=t("./es5");"function"==typeof Map&&(a=Map);var p=function(){function t(t,r){this[e]=t,this[e+n]=r,e++}var e=0,n=0;return function(r){n=r.size,e=0;var i=new Array(2*r.size);return r.forEach(t,i),i}}(),f=function(t){for(var e=new a,n=t.length/2|0,r=0;n>r;++r){var i=t[n+r],o=t[r];e.set(i,o)}return e};c.inherits(o,n),o.prototype._init=function(){},o.prototype._promiseFulfilled=function(t,e){this._values[e]=t;var n=++this._totalResolved;if(n>=this._length){var r;if(this._isMap)r=f(this._values);else{r={};for(var i=this.length(),o=0,s=this.length();s>o;++o)r[this._values[o+i]]=this._values[o]}return this._resolve(r),!0}return!1},o.prototype.shouldCopyValues=function(){return!1},o.prototype.getActualLength=function(t){return t>>1},e.prototype.props=function(){return s(this)},e.props=function(t){return s(t)}}},{"./es5":13,"./util":36}],26:[function(t,e,n){"use strict";function r(t,e,n,r,i){for(var o=0;i>o;++o)n[o+r]=t[o+e],t[o+e]=void 0}function i(t){this._capacity=t,this._length=0,this._front=0}i.prototype._willBeOverCapacity=function(t){return this._capacity<t},i.prototype._pushOne=function(t){var e=this.length();this._checkCapacity(e+1);var n=this._front+e&this._capacity-1;this[n]=t,this._length=e+1},i.prototype.push=function(t,e,n){var r=this.length()+3;if(this._willBeOverCapacity(r))return this._pushOne(t),this._pushOne(e),void this._pushOne(n);var i=this._front+r-3;this._checkCapacity(r);var o=this._capacity-1;this[i+0&o]=t,this[i+1&o]=e,this[i+2&o]=n,this._length=r},i.prototype.shift=function(){var t=this._front,e=this[t];return this[t]=void 0,this._front=t+1&this._capacity-1,this._length--,e},i.prototype.length=function(){return this._length},i.prototype._checkCapacity=function(t){this._capacity<t&&this._resizeTo(this._capacity<<1)},i.prototype._resizeTo=function(t){var e=this._capacity;this._capacity=t;var n=this._front,i=this._length,o=n+i&e-1;r(this,0,this,e,o)},e.exports=i},{}],27:[function(t,e,n){"use strict";e.exports=function(e,n,r,i){function o(t,o){var c=r(t);if(c instanceof e)return a(c);if(t=s.asArray(t),null===t)return i("expecting an array or an iterable object but got "+s.classString(t));var u=new e(n);void 0!==o&&u._propagateFrom(o,3);for(var l=u._fulfill,p=u._reject,f=0,h=t.length;h>f;++f){var _=t[f];(void 0!==_||f in t)&&e.cast(_)._then(l,p,void 0,u,null)}return u}var s=t("./util"),a=function(t){return t.then(function(e){return o(e,t)})};e.race=function(t){return o(t,void 0)},e.prototype.race=function(){return o(this,void 0)}}},{"./util":36}],28:[function(t,e,n){"use strict";e.exports=function(e,n,r,i,o,s){function a(t,n,r,i){this.constructor$(t);var s=e._getContext();this._fn=f.contextBind(s,n),void 0!==r&&(r=e.resolve(r),r._attachCancellationCallback(this)),this._initialValue=r,this._currentCancellable=null,i===o?this._eachValues=Array(this._length):0===i?this._eachValues=null:this._eachValues=void 0,this._promise._captureStackTrace(),this._init$(void 0,-5)}function c(t,e){this.isFulfilled()?e._resolve(t):e._reject(t)}function u(t,e,n,i){if("function"!=typeof e)return r("expecting a function but got "+f.classString(e));var o=new a(t,e,n,i);return o.promise()}function l(t){this.accum=t,this.array._gotAccum(t);var n=i(this.value,this.array._promise);return n instanceof e?(this.array._currentCancellable=n,n._then(p,void 0,void 0,this,void 0)):p.call(this,n)}function p(t){var n=this.array,r=n._promise,i=h(n._fn);r._pushContext();var o;o=void 0!==n._eachValues?i.call(r._boundValue(),t,this.index,this.length):i.call(r._boundValue(),this.accum,t,this.index,this.length),o instanceof e&&(n._currentCancellable=o);var a=r._popContext();return s.checkForgottenReturns(o,a,void 0!==n._eachValues?"Promise.each":"Promise.reduce",r),o}var f=t("./util"),h=f.tryCatch;f.inherits(a,n),a.prototype._gotAccum=function(t){void 0!==this._eachValues&&null!==this._eachValues&&t!==o&&this._eachValues.push(t)},a.prototype._eachComplete=function(t){return null!==this._eachValues&&this._eachValues.push(t),this._eachValues},a.prototype._init=function(){},a.prototype._resolveEmptyArray=function(){this._resolve(void 0!==this._eachValues?this._eachValues:this._initialValue)},a.prototype.shouldCopyValues=function(){return!1},a.prototype._resolve=function(t){this._promise._resolveCallback(t),this._values=null},a.prototype._resultCancelled=function(t){return t===this._initialValue?this._cancel():void(this._isResolved()||(this._resultCancelled$(),this._currentCancellable instanceof e&&this._currentCancellable.cancel(),this._initialValue instanceof e&&this._initialValue.cancel()))},a.prototype._iterate=function(t){this._values=t;var n,r,i=t.length;void 0!==this._initialValue?(n=this._initialValue,r=0):(n=e.resolve(t[0]),r=1),this._currentCancellable=n;for(var o=r;i>o;++o){var s=t[o];s instanceof e&&s.suppressUnhandledRejections()}if(!n.isRejected())for(;i>r;++r){var a={accum:null,value:t[r],index:r,length:i,array:this};n=n._then(l,void 0,void 0,a,void 0),0===(127&r)&&n._setNoAsyncGuarantee()}void 0!==this._eachValues&&(n=n._then(this._eachComplete,void 0,void 0,this,void 0)),n._then(c,c,void 0,n,this)},e.prototype.reduce=function(t,e){return u(this,t,e,null)},e.reduce=function(t,e,n,r){return u(t,e,n,r)}}},{"./util":36}],29:[function(t,e,n){"use strict";var r,i=t("./util"),o=function(){throw new Error("No async scheduler available\n\n    See http://goo.gl/MqrFmX\n")},s=i.getNativePromise();if(i.isNode&&"undefined"==typeof MutationObserver){var a=global.setImmediate,c=process.nextTick;r=i.isRecentNode?function(t){a.call(global,t)}:function(t){c.call(process,t)}}else if("function"==typeof s&&"function"==typeof s.resolve){
var u=s.resolve();r=function(t){u.then(t)}}else r="undefined"!=typeof MutationObserver&&("undefined"==typeof window||!window.navigator||!window.navigator.standalone&&!window.cordova)&&"classList"in document.documentElement?function(){var t=document.createElement("div"),e={attributes:!0},n=!1,r=document.createElement("div"),i=new MutationObserver(function(){t.classList.toggle("foo"),n=!1});i.observe(r,e);var o=function(){n||(n=!0,r.classList.toggle("foo"))};return function(n){var r=new MutationObserver(function(){r.disconnect(),n()});r.observe(t,e),o()}}():"undefined"!=typeof setImmediate?function(t){setImmediate(t)}:"undefined"!=typeof setTimeout?function(t){setTimeout(t,0)}:o;e.exports=r},{"./util":36}],30:[function(t,e,n){"use strict";e.exports=function(e,n,r){function i(t){this.constructor$(t)}var o=e.PromiseInspection,s=t("./util");s.inherits(i,n),i.prototype._promiseResolved=function(t,e){this._values[t]=e;var n=++this._totalResolved;return n>=this._length?(this._resolve(this._values),!0):!1},i.prototype._promiseFulfilled=function(t,e){var n=new o;return n._bitField=33554432,n._settledValueField=t,this._promiseResolved(e,n)},i.prototype._promiseRejected=function(t,e){var n=new o;return n._bitField=16777216,n._settledValueField=t,this._promiseResolved(e,n)},e.settle=function(t){return r.deprecated(".settle()",".reflect()"),new i(t).promise()},e.allSettled=function(t){return new i(t).promise()},e.prototype.settle=function(){return e.settle(this)}}},{"./util":36}],31:[function(t,e,n){"use strict";e.exports=function(e,n,r){function i(t){this.constructor$(t),this._howMany=0,this._unwrap=!1,this._initialized=!1}function o(t,e){if((0|e)!==e||0>e)return r("expecting a positive integer\n\n    See http://goo.gl/MqrFmX\n");var n=new i(t),o=n.promise();return n.setHowMany(e),n.init(),o}var s=t("./util"),a=t("./errors").RangeError,c=t("./errors").AggregateError,u=s.isArray,l={};s.inherits(i,n),i.prototype._init=function(){if(this._initialized){if(0===this._howMany)return void this._resolve([]);this._init$(void 0,-5);var t=u(this._values);!this._isResolved()&&t&&this._howMany>this._canPossiblyFulfill()&&this._reject(this._getRangeError(this.length()))}},i.prototype.init=function(){this._initialized=!0,this._init()},i.prototype.setUnwrap=function(){this._unwrap=!0},i.prototype.howMany=function(){return this._howMany},i.prototype.setHowMany=function(t){this._howMany=t},i.prototype._promiseFulfilled=function(t){return this._addFulfilled(t),this._fulfilled()===this.howMany()?(this._values.length=this.howMany(),1===this.howMany()&&this._unwrap?this._resolve(this._values[0]):this._resolve(this._values),!0):!1},i.prototype._promiseRejected=function(t){return this._addRejected(t),this._checkOutcome()},i.prototype._promiseCancelled=function(){return this._values instanceof e||null==this._values?this._cancel():(this._addRejected(l),this._checkOutcome())},i.prototype._checkOutcome=function(){if(this.howMany()>this._canPossiblyFulfill()){for(var t=new c,e=this.length();e<this._values.length;++e)this._values[e]!==l&&t.push(this._values[e]);return t.length>0?this._reject(t):this._cancel(),!0}return!1},i.prototype._fulfilled=function(){return this._totalResolved},i.prototype._rejected=function(){return this._values.length-this.length()},i.prototype._addRejected=function(t){this._values.push(t)},i.prototype._addFulfilled=function(t){this._values[this._totalResolved++]=t},i.prototype._canPossiblyFulfill=function(){return this.length()-this._rejected()},i.prototype._getRangeError=function(t){var e="Input array must contain at least "+this._howMany+" items but contains only "+t+" items";return new a(e)},i.prototype._resolveEmptyArray=function(){this._reject(this._getRangeError(0))},e.some=function(t,e){return o(t,e)},e.prototype.some=function(t){return o(this,t)},e._SomePromiseArray=i}},{"./errors":12,"./util":36}],32:[function(t,e,n){"use strict";e.exports=function(t){function e(t){void 0!==t?(t=t._target(),this._bitField=t._bitField,this._settledValueField=t._isFateSealed()?t._settledValue():void 0):(this._bitField=0,this._settledValueField=void 0)}e.prototype._settledValue=function(){return this._settledValueField};var n=e.prototype.value=function(){if(!this.isFulfilled())throw new TypeError("cannot get fulfillment value of a non-fulfilled promise\n\n    See http://goo.gl/MqrFmX\n");return this._settledValue()},r=e.prototype.error=e.prototype.reason=function(){if(!this.isRejected())throw new TypeError("cannot get rejection reason of a non-rejected promise\n\n    See http://goo.gl/MqrFmX\n");return this._settledValue()},i=e.prototype.isFulfilled=function(){return 0!==(33554432&this._bitField)},o=e.prototype.isRejected=function(){return 0!==(16777216&this._bitField)},s=e.prototype.isPending=function(){return 0===(50397184&this._bitField)},a=e.prototype.isResolved=function(){return 0!==(50331648&this._bitField)};e.prototype.isCancelled=function(){return 0!==(8454144&this._bitField)},t.prototype.__isCancelled=function(){return 65536===(65536&this._bitField)},t.prototype._isCancelled=function(){return this._target().__isCancelled()},t.prototype.isCancelled=function(){return 0!==(8454144&this._target()._bitField)},t.prototype.isPending=function(){return s.call(this._target())},t.prototype.isRejected=function(){return o.call(this._target())},t.prototype.isFulfilled=function(){return i.call(this._target())},t.prototype.isResolved=function(){return a.call(this._target())},t.prototype.value=function(){return n.call(this._target())},t.prototype.reason=function(){var t=this._target();return t._unsetRejectionIsUnhandled(),r.call(t)},t.prototype._value=function(){return this._settledValue()},t.prototype._reason=function(){return this._unsetRejectionIsUnhandled(),this._settledValue()},t.PromiseInspection=e}},{}],33:[function(t,e,n){"use strict";e.exports=function(e,n){function r(t,r){if(l(t)){if(t instanceof e)return t;var i=o(t);if(i===u){r&&r._pushContext();var c=e.reject(i.e);return r&&r._popContext(),c}if("function"==typeof i){if(s(t)){var c=new e(n);return t._then(c._fulfill,c._reject,void 0,c,null),c}return a(t,i,r)}}return t}function i(t){return t.then}function o(t){try{return i(t)}catch(e){return u.e=e,u}}function s(t){try{return p.call(t,"_promise0")}catch(e){return!1}}function a(t,r,i){function o(t){a&&(a._resolveCallback(t),a=null)}function s(t){a&&(a._rejectCallback(t,p,!0),a=null)}var a=new e(n),l=a;i&&i._pushContext(),a._captureStackTrace(),i&&i._popContext();var p=!0,f=c.tryCatch(r).call(t,o,s);return p=!1,a&&f===u&&(a._rejectCallback(f.e,!0,!0),a=null),l}var c=t("./util"),u=c.errorObj,l=c.isObject,p={}.hasOwnProperty;return r}},{"./util":36}],34:[function(t,e,n){"use strict";e.exports=function(e,n,r){function i(t){this.handle=t}function o(t){return clearTimeout(this.handle),t}function s(t){throw clearTimeout(this.handle),t}var a=t("./util"),c=e.TimeoutError;i.prototype._resultCancelled=function(){clearTimeout(this.handle)};var u=function(t){return l(+this).thenReturn(t)},l=e.delay=function(t,o){var s,a;return void 0!==o?(s=e.resolve(o)._then(u,null,null,t,void 0),r.cancellation()&&o instanceof e&&s._setOnCancel(o)):(s=new e(n),a=setTimeout(function(){s._fulfill()},+t),r.cancellation()&&s._setOnCancel(new i(a)),s._captureStackTrace()),s._setAsyncGuaranteed(),s};e.prototype.delay=function(t){return l(t,this)};var p=function(t,e,n){var r;r="string"!=typeof e?e instanceof Error?e:new c("operation timed out"):new c(e),a.markAsOriginatingFromRejection(r),t._attachExtraTrace(r),t._reject(r),null!=n&&n.cancel()};e.prototype.timeout=function(t,e){t=+t;var n,a,c=new i(setTimeout(function(){n.isPending()&&p(n,e,a)},t));return r.cancellation()?(a=this.then(),n=a._then(o,s,void 0,c,void 0),n._setOnCancel(c)):n=this._then(o,s,void 0,c,void 0),n}}},{"./util":36}],35:[function(t,e,n){"use strict";e.exports=function(e,n,r,i,o,s){function a(t){setTimeout(function(){throw t},0)}function c(t){var e=r(t);return e!==t&&"function"==typeof t._isDisposable&&"function"==typeof t._getDisposer&&t._isDisposable()&&e._setDisposable(t._getDisposer()),e}function u(t,n){function i(){if(s>=u)return l._fulfill();var o=c(t[s++]);if(o instanceof e&&o._isDisposable()){try{o=r(o._getDisposer().tryDispose(n),t.promise)}catch(p){return a(p)}if(o instanceof e)return o._then(i,a,null,null,null)}i()}var s=0,u=t.length,l=new e(o);return i(),l}function l(t,e,n){this._data=t,this._promise=e,this._context=n}function p(t,e,n){this.constructor$(t,e,n)}function f(t){return l.isDisposer(t)?(this.resources[this.index]._setDisposable(t),t.promise()):t}function h(t){this.length=t,this.promise=null,this[t-1]=null}var _=t("./util"),d=t("./errors").TypeError,v=t("./util").inherits,y=_.errorObj,g=_.tryCatch,m={};l.prototype.data=function(){return this._data},l.prototype.promise=function(){return this._promise},l.prototype.resource=function(){return this.promise().isFulfilled()?this.promise().value():m},l.prototype.tryDispose=function(t){var e=this.resource(),n=this._context;void 0!==n&&n._pushContext();var r=e!==m?this.doDispose(e,t):null;return void 0!==n&&n._popContext(),this._promise._unsetDisposable(),this._data=null,r},l.isDisposer=function(t){return null!=t&&"function"==typeof t.resource&&"function"==typeof t.tryDispose},v(p,l),p.prototype.doDispose=function(t,e){var n=this.data();return n.call(t,t,e)},h.prototype._resultCancelled=function(){for(var t=this.length,n=0;t>n;++n){var r=this[n];r instanceof e&&r.cancel()}},e.using=function(){var t=arguments.length;if(2>t)return n("you must pass at least 2 arguments to Promise.using");var i=arguments[t-1];if("function"!=typeof i)return n("expecting a function but got "+_.classString(i));var o,a=!0;2===t&&Array.isArray(arguments[0])?(o=arguments[0],t=o.length,a=!1):(o=arguments,t--);for(var c=new h(t),p=0;t>p;++p){var d=o[p];if(l.isDisposer(d)){var v=d;d=d.promise(),d._setDisposable(v)}else{var m=r(d);m instanceof e&&(d=m._then(f,null,null,{resources:c,index:p},void 0))}c[p]=d}for(var b=new Array(c.length),p=0;p<b.length;++p)b[p]=e.resolve(c[p]).reflect();var w=e.all(b).then(function(t){for(var e=0;e<t.length;++e){var n=t[e];if(n.isRejected())return y.e=n.error(),y;if(!n.isFulfilled())return void w.cancel();t[e]=n.value()}C._pushContext(),i=g(i);var r=a?i.apply(void 0,t):i(t),o=C._popContext();return s.checkForgottenReturns(r,o,"Promise.using",C),r}),C=w.lastly(function(){var t=new e.PromiseInspection(w);return u(c,t)});return c.promise=C,C._setOnCancel(c),C},e.prototype._setDisposable=function(t){this._bitField=131072|this._bitField,this._disposer=t},e.prototype._isDisposable=function(){return(131072&this._bitField)>0},e.prototype._getDisposer=function(){return this._disposer},e.prototype._unsetDisposable=function(){this._bitField=-131073&this._bitField,this._disposer=void 0},e.prototype.disposer=function(t){if("function"==typeof t)return new p(t,this,i());throw new d}}},{"./errors":12,"./util":36}],36:[function(t,e,n){"use strict";function r(){try{var t=P;return P=null,t.apply(this,arguments)}catch(e){return T.e=e,T}}function i(t){return P=t,r}function o(t){return null==t||t===!0||t===!1||"string"==typeof t||"number"==typeof t}function s(t){return"function"==typeof t||"object"==typeof t&&null!==t}function a(t){return o(t)?new Error(v(t)):t}function c(t,e){var n,r=t.length,i=new Array(r+1);for(n=0;r>n;++n)i[n]=t[n];return i[n]=e,i}function u(t,e,n){if(!F.isES5)return{}.hasOwnProperty.call(t,e)?t[e]:void 0;var r=Object.getOwnPropertyDescriptor(t,e);return null!=r?null==r.get&&null==r.set?r.value:n:void 0}function l(t,e,n){if(o(t))return t;var r={value:n,configurable:!0,enumerable:!1,writable:!0};return F.defineProperty(t,e,r),t}function p(t){throw t}function f(t){try{if("function"==typeof t){var e=F.names(t.prototype),n=F.isES5&&e.length>1,r=e.length>0&&!(1===e.length&&"constructor"===e[0]),i=A.test(t+"")&&F.names(t).length>0;if(n||r||i)return!0}return!1}catch(o){return!1}}function h(t){function e(){}function n(){return typeof r.foo}e.prototype=t;var r=new e;return n(),n(),t}function _(t){return V.test(t)}function d(t,e,n){for(var r=new Array(t),i=0;t>i;++i)r[i]=e+i+n;return r}function v(t){try{return t+""}catch(e){return"[no string representation]"}}function y(t){return t instanceof Error||null!==t&&"object"==typeof t&&"string"==typeof t.message&&"string"==typeof t.name}function g(t){try{l(t,"isOperational",!0)}catch(e){}}function m(t){return null==t?!1:t instanceof Error.__BluebirdErrorTypes__.OperationalError||t.isOperational===!0}function b(t){return y(t)&&F.propertyIsWritable(t,"stack")}function w(t){return{}.toString.call(t)}function C(t,e,n){for(var r=F.names(t),i=0;i<r.length;++i){var o=r[i];if(n(o))try{F.defineProperty(e,o,F.getDescriptor(t,o))}catch(s){}}}function j(t){return N?process.env[t]:void 0}function k(){if("function"==typeof Promise)try{var t=new Promise(function(){});if("[object Promise]"===w(t))return Promise}catch(e){}}function E(t,e){if(null===t||"function"!=typeof e||e===U)return e;null!==t.domain&&(e=t.domain.bind(e));var n=t.async;if(null!==n){var r=e;e=function(){var t=new Array(2).concat([].slice.call(arguments));return t[0]=r,t[1]=this,n.runInAsyncScope.apply(n,t)}}return e}var F=t("./es5"),x="undefined"==typeof navigator,T={e:{}},P,R="undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:void 0!==this?this:null,S=function(t,e){function n(){this.constructor=t,this.constructor$=e;for(var n in e.prototype)r.call(e.prototype,n)&&"$"!==n.charAt(n.length-1)&&(this[n+"$"]=e.prototype[n])}var r={}.hasOwnProperty;return n.prototype=e.prototype,t.prototype=new n,t.prototype},O=function(){var t=[Array.prototype,Object.prototype,Function.prototype],e=function(e){for(var n=0;n<t.length;++n)if(t[n]===e)return!0;return!1};if(F.isES5){var n=Object.getOwnPropertyNames;return function(t){for(var r=[],i=Object.create(null);null!=t&&!e(t);){var o;try{o=n(t)}catch(s){return r}for(var a=0;a<o.length;++a){var c=o[a];if(!i[c]){i[c]=!0;var u=Object.getOwnPropertyDescriptor(t,c);null!=u&&null==u.get&&null==u.set&&r.push(c)}}t=F.getPrototypeOf(t)}return r}}var r={}.hasOwnProperty;return function(n){if(e(n))return[];var i=[];t:for(var o in n)if(r.call(n,o))i.push(o);else{for(var s=0;s<t.length;++s)if(r.call(t[s],o))continue t;i.push(o)}return i}}(),A=/this\s*\.\s*\S+\s*=/,V=/^[a-z$_][a-z$_0-9]*$/i,H=function(){return"stack"in new Error?function(t){return b(t)?t:new Error(v(t))}:function(t){if(b(t))return t;try{throw new Error(v(t))}catch(e){return e}}}(),D=function(t){return F.isArray(t)?t:null};if("undefined"!=typeof Symbol&&Symbol.iterator){var I="function"==typeof Array.from?function(t){return Array.from(t)}:function(t){for(var e,n=[],r=t[Symbol.iterator]();!(e=r.next()).done;)n.push(e.value);return n};D=function(t){return F.isArray(t)?t:null!=t&&"function"==typeof t[Symbol.iterator]?I(t):null}}var L="undefined"!=typeof process&&"[object process]"===w(process).toLowerCase(),N="undefined"!=typeof process&&"undefined"!=typeof process.env,U,B={setReflectHandler:function(t){U=t},isClass:f,isIdentifier:_,inheritedDataKeys:O,getDataPropertyOrDefault:u,thrower:p,isArray:F.isArray,asArray:D,notEnumerableProp:l,isPrimitive:o,isObject:s,isError:y,canEvaluate:x,errorObj:T,tryCatch:i,inherits:S,withAppended:c,maybeWrapAsError:a,toFastProperties:h,filledRange:d,toString:v,canAttachTrace:b,ensureErrorObject:H,originatesFromRejection:m,markAsOriginatingFromRejection:g,classString:w,copyDescriptors:C,isNode:L,hasEnvVariables:N,env:j,global:R,getNativePromise:k,contextBind:E};B.isRecentNode=B.isNode&&function(){var t;return process.versions&&process.versions.node?t=process.versions.node.split(".").map(Number):process.version&&(t=process.version.split(".").map(Number)),0===t[0]&&t[1]>10||t[0]>0}(),B.nodeSupportsAsyncResource=B.isNode&&function(){var e=!1;try{var n=t("async_hooks").AsyncResource;e="function"==typeof n.prototype.runInAsyncScope}catch(r){e=!1}return e}(),B.isNode&&B.toFastProperties(process);try{throw new Error}catch(M){B.lastLineError=M}e.exports=B},{"./es5":13,async_hooks:void 0}]},{},[4])(4)}),"undefined"!=typeof window&&null!==window?window.P=window.Promise:"undefined"!=typeof self&&null!==self&&(self.P=self.Promise);
"use strict";var base,finder,hostname,loader,oc_app_module;angular.module("graderReport",["ngResource","ngSanitize"]),angular.module("timetableApp",["ngResource","ngSanitize","ngAria","ipCookie","timer","angucomplete-alt","smart-table","mgcrea.ngStrap.datepicker","mgcrea.ngStrap.timepicker","mgcrea.ngStrap.tooltip","harmonyUI","momentjs","analyticsServicejs"]),angular.module("timetableApp").constant("twix",window.twix),angular.module("momentjs",[]).factory("moment",function($window){return $window.moment}),angular.module("analyticsServicejs",[]).factory("analytics_service",function($window){return new $window.u.analytics_wrapper.AnalyticsService}),oc_app_module=angular.module("onlineCampusApp",["ngResource","ngSanitize","ngUpload","momentjs","analyticsServicejs","ui.tinymce","DiscussionApp","harmonyUI","graderReport","LmsUiDirectives","LmsUiServices","LmsUiModels","LmsUiFilters","LmsUiControllers","MediaPlayer","timetableApp","feature-flags"]),this.ScriptUrlBaseFinder=function(){function ScriptUrlBaseFinder(document){this.document=document}return ScriptUrlBaseFinder.prototype.getUrlBase=function(id,matcher){var baseUrl,protocol,ref,result,src,tag,_ref;return result="",tag=$("#"+id),tag.length&&(src=tag[0].src,matcher.test(src)&&(_ref=matcher.exec(src),ref=_ref[0],protocol=_ref[1],baseUrl=_ref[2],result=protocol+"://"+baseUrl)),result},ScriptUrlBaseFinder.prototype.getHostname=function(baseUrl,matcher){var hostname,protocol,ref,rest,_ref;return matcher.test(baseUrl)?(_ref=matcher.exec(baseUrl),ref=_ref[0],protocol=_ref[1],hostname=_ref[2],rest=_ref[3],protocol+"://"+hostname):null},ScriptUrlBaseFinder}(),finder=new ScriptUrlBaseFinder(document),base=finder.getUrlBase("online_campus_ui_script",/(?:(http|https):\/\/)?(.*?)\/scripts\/.*?.js/i),hostname=finder.getHostname(base,/(?:(http|https):\/\/)?([^\/]*)\/(.*)/),oc_app_module.constant("BaseUrl",base),oc_app_module.constant("Hostname",base),oc_app_module.constant("Servername",hostname),oc_app_module.constant("_",window.lodash),oc_app_module.constant("Promise",window.Promise),oc_app_module.run(["$compile","$rootScope",function($compile,$rootScope){return $rootScope.$compile=$compile}]),loader=new DynamicLoader(window),loader.loadScript("https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML");var ContentNavController,__bind=function(fn,me){return function(){return fn.apply(me,arguments)}};ContentNavController=function(){function ContentNavController(log,service,hostname,baseUrl,navContext,http,_,analytics_service,window){var groupParam,nextButton,path,prevButton,_ref,_ref1,_ref2,_ref3;this.log=log,this.service=service,this.hostname=hostname,this.baseUrl=baseUrl,this.navContext=navContext,this.http=http,this.analytics_service=analytics_service,this.window=window,this.markCompletedAriaLabel=__bind(this.markCompletedAriaLabel,this),this.toggleMarkAsComplete=__bind(this.toggleMarkAsComplete,this),this.tmacErrorCallback=__bind(this.tmacErrorCallback,this),this.tmacSuccessCallback=__bind(this.tmacSuccessCallback,this),this.macSuccessCallback=__bind(this.macSuccessCallback,this),this.resetCompletionCache=__bind(this.resetCompletionCache,this),this.setApNavigationLinkUrl=__bind(this.setApNavigationLinkUrl,this),this.generateApNavigationLink=__bind(this.generateApNavigationLink,this),this.isGradable=__bind(this.isGradable,this),this.displayQuizReports=__bind(this.displayQuizReports,this),this.displayApGradeLink=__bind(this.displayApGradeLink,this),this.canSeeQuizReports=__bind(this.canSeeQuizReports,this),this.setupRoles=__bind(this.setupRoles,this),this.log.info("content-nav constructor"),this.isCompleted=!1,this.lmsContext=this.navContext.getLmsContext(),this.course=this.lmsContext.course,this.site=this.lmsContext.site,this.useAp="1"===this.course.use_academic_product,this.useAp?(this.quizCloseText="Edit & Close Quiz",this.generateApNavigationLink()):this.quizCloseText="Edit & Release",this.regrade="Regrade",this.grading="Grading",this.scores="scores","en-gb"===this.site.lang&&(this.regrade="Re-mark",this.grading="Marking",this.scores="marks"),this.isAIO=$("#lms-assignment-ui-app").length>0,this.setupRoles(),this.linkBlock={},this.shouldRender=!(null!=(_ref=this.window.parent)?_ref.isNewContentNav:void 0),this.goToGradeBookLink="Go to Gradebook to publish "+this.scores+" to students »",this.isQuiz="quizzes"===this.navContext.getPageContext(),this.isQuiz&&(this.linkBlock.title="Quiz Reports",this.linkBlock.links=[],this.linkBlock.links.push({text:"Info",url:"/mod/quiz/view.php?id="+this.lmsContext.course.cm_id,show:this.canSeeQuizReports()}),this.linkBlock.links.push({text:"Overview & "+this.regrade,url:"/mod/quiz/report.php?id="+this.lmsContext.course.cm_id+"&mode=overview&attemptsmode=3",show:this.canSeeQuizReports()}),this.linkBlock.links.push({text:"Manual "+this.grading,url:"/mod/quiz/report.php?id="+this.lmsContext.course.cm_id+"&mode=grading",show:this.canSeeQuizReports()}),this.linkBlock.links.push({text:"Item Analysis",url:"/mod/quiz/report.php?id="+this.lmsContext.course.cm_id+"&mode=statistics",show:this.canSeeQuizReports()}),this.linkBlock.links.push({text:"Preview",url:"/mod/quiz/startattempt.php?cmid="+this.lmsContext.course.cm_id+"&sesskey="+this.lmsContext.site.sesskey,show:this.canSeeQuizReports()}),this.linkBlock.links.push({text:this.quizCloseText,url:"/local/reports/quiz/edit_release.php?cmid="+this.lmsContext.course.cm_id,show:"admin"===(_ref1=this.lmsContext.course.role)||"coursecoordinator"===_ref1||"pesadministrator"===_ref1||"programcoordinator"===_ref1||"studentsupportadmin"===_ref1}),this.linkBlock.links.push({text:"Quiz Settings",url:"/course/manage_quiz.php?update="+this.lmsContext.course.cm_id+"&return=1&sesskey="+this.lmsContext.site.sesskey,show:"admin"===(_ref2=this.lmsContext.course.role)||"coursecoordinator"===_ref2||"pesadministrator"===_ref2||"programcoordinator"===_ref2||"teacher"===_ref2||"limitedpesadministrator"===_ref2}),this.linkBlock.links.push({text:"User Overrides",url:"/mod/quiz/overrides.php?cmid="+this.lmsContext.course.cm_id+"&mode=user",show:"admin"===(_ref3=this.lmsContext.course.role)||"coursecoordinator"===_ref3||"teacher"===_ref3}),path=this.navContext.getLocationPath()+this.window.location.search,/\/mod\/quiz\/view/gi.test(path)?this.linkBlock.activeTab="Info":/\/mod\/quiz\/report.php(.+)\&mode=overview/gi.test(path)?this.linkBlock.activeTab="Overview & "+this.regrade:/\/mod\/quiz\/review.php/gi.test(path)?this.linkBlock.activeTab="Overview & "+this.regrade:/\/mod\/quiz\/report.php(.+)\&mode=grading/gi.test(path)?this.linkBlock.activeTab="Manual "+this.grading:/\/mod\/quiz\/report.php(.+)\&mode=statistics/gi.test(path)?this.linkBlock.activeTab="Item Analysis":/\/local\/reports\/quiz\/edit_release/gi.test(path)?this.linkBlock.activeTab=this.quizCloseText:/\/mod\/quiz\/(?:(?:start)?attempt|summary).php/gi.test(path)?this.linkBlock.activeTab="Preview":/\/course\/manage_quiz.php/gi.test(path)?this.linkBlock.activeTab="Quiz Settings":/\/mod\/quiz\/override/gi.test(path)&&(this.linkBlock.activeTab="User Overrides")),this.canMarkComplete()&&this.http.get(""+this.service.apiBaseUrl+"/course_module_completion/"+this.course.cm_id).success(this.macSuccessCallback).error(this.macErrorCallback),groupParam=this.lmsContext.course.section_id?"&group="+this.lmsContext.course.section_id:"",this.courseworkPageLink="/course/view.php?id="+this.lmsContext.course.id+groupParam+"&page=coursework",this.prevModule={exists:!1},prevButton=$("#region-main .prevdiv a"),(null!=prevButton?prevButton.length:void 0)&&(this.prevModule.exists=!0,this.prevModule.link=prevButton.attr("href")),this.nextModule={exists:!1},nextButton=$("#region-main .nextdiv a"),(null!=nextButton?nextButton.length:void 0)&&(this.nextModule.exists=!0,this.nextModule.link=nextButton.attr("href"))}return ContentNavController.$inject=["$log","Service","Servername","BaseUrl","NavContext","$http","_","analytics_service","$window"],ContentNavController.prototype.setupRoles=function(){return this.isStudent="student"===this.lmsContext.course.role,this.isAdmin="admin"===this.lmsContext.user.role},ContentNavController.prototype.canSeeQuizReports=function(){return!this.isStudent||"admin"===this.lmsContext.course.role},ContentNavController.prototype.displayApGradeLink=function(){return(this.isAdmin||!this.isStudent)&&this.useAp&&this.moodleGradeItemIdLoaded},ContentNavController.prototype.displayQuizReports=function(){return(this.isAdmin||!this.isStudent)&&this.linkBlock.links.length},ContentNavController.prototype.isGradable=function(){var gradableType,gradableTypes,_i,_len;for(gradableTypes=["assignment","quiz","forum"],_i=0,_len=gradableTypes.length;_i<_len;_i++)if(gradableType=gradableTypes[_i],this.navContext.getLocationPath().indexOf(gradableType)!==-1)return!0;return!1},ContentNavController.prototype.generateApNavigationLink=function(){if(this.moodleGradeItemIdLoaded=!1,this.isGradable())return this.service.getGradeItemForCourseModule(this.lmsContext.course.cm_id,this.setApNavigationLinkUrl)},ContentNavController.prototype.setApNavigationLinkUrl=function(data){var grade_item_id;return this.apSection=this.course.section_id,null===this.apSection&&(this.apSection="all"),grade_item_id=data.grade_item_id,this.apRedirectUrl="/ap/redirect/course/"+this.course.id+"/section/"+this.apSection+"/moodle_grade_item/"+grade_item_id,this.moodleGradeItemIdLoaded=!0},ContentNavController.prototype.resetCompletionCache=function(){var params,url;return url="/local/course/assignment/completion_cache_reset.php",params="?courseid="+this.lmsContext.course.id+"&cmid="+this.lmsContext.course.cm_id+"&userid="+this.lmsContext.user.id,this.http.post(url+params)},ContentNavController.prototype.macErrorCallback=function(data){return console.error("COMPLETED:",data)},ContentNavController.prototype.macSuccessCallback=function(data){var _ref,_ref1,_ref2;if(null!=(null!=data?data.done:void 0))return this.isAIO=data.isAIO,this.isCompleted=data.done,this.analytics_service.track("User Marked Complete",{action_id:"lms.coursework.marked_complete.success",course:this.window.i11l.LMSContext.course.name?this.window.i11l.LMSContext.course.name:null,course_uuid:this.window.i11l.LMSContext.course.uuid?this.window.i11l.LMSContext.course.uuid:null,section_id:this.window.i11l.LMSContext.course.section_id?this.window.i11l.LMSContext.course.section_id:null,section_uuid:this.window.i11l.LMSContext.course.section_uuid?this.window.i11l.LMSContext.course.section_uuid:null,courseRole:this.window.i11l.LMSContext.course.role,course_module_id:null!=data&&null!=(_ref=data.cm)?_ref.id:void 0,module_name:null!=data&&null!=(_ref1=data.cm)?_ref1.name:void 0,module_type:null!=data&&null!=(_ref2=data.cm)?_ref2.modname:void 0,site:this.window.i11l.LMSContext.site.id})},ContentNavController.prototype.tmacSuccessCallback=function(data){if(null!=(null!=data?data.done:void 0))return this.isCompleted=data.done,this.resetCompletionCache()},ContentNavController.prototype.tmacErrorCallback=function(data){return console.error("COMPLETED:",data),this.isCompleted=!this.isCompleted},ContentNavController.prototype.toggleMarkAsComplete=function(){if(this.canMarkComplete())return this.isCompleted=!this.isCompleted,this.http.post(""+this.service.apiBaseUrl+"/course_module_completion/"+this.course.cm_id).success(this.tmacSuccessCallback).error(this.tmacErrorCallback)},ContentNavController.prototype.markCompletedAriaLabel=function(){return this.isCompleted?"Selected mark as completed":"Not selected mark as completed"},ContentNavController.prototype.canMarkComplete=function(){return!this.isAIO&&"student"===this.lmsContext.user.role},ContentNavController}(),angular.module("onlineCampusApp").controller("ContentNavController",ContentNavController);var FooterController;FooterController=function(){function FooterController(window){var _ref;this.window=window,this.shouldRender=!(null!=(_ref=this.window.parent)?_ref.isNewContentNav:void 0)}return FooterController.$inject=["$window"],FooterController}(),angular.module("onlineCampusApp").controller("FooterController",FooterController);var MastheadController,__bind=function(fn,me){return function(){return fn.apply(me,arguments)}};MastheadController=function(){function MastheadController(log,baseUrl,navContext,userRolesService,apGradesTabsService,mastheadTab,window,document,scope,compile,service,featureFlags,rootScope){this.log=log,this.baseUrl=baseUrl,this.navContext=navContext,this.userRolesService=userRolesService,this.apGradesTabsService=apGradesTabsService,this.mastheadTab=mastheadTab,this.window=window,this.document=document,this.scope=scope,this.compile=compile,this.service=service,this.featureFlags=featureFlags,this.rootScope=rootScope,this.liveSessionPlanLoaded=__bind(this.liveSessionPlanLoaded,this),this.getCourseworkPath=__bind(this.getCourseworkPath,this),this.getGradesTabs=__bind(this.getGradesTabs,this),this.handleCourseTabs=__bind(this.handleCourseTabs,this),this.initTabs=__bind(this.initTabs,this),this.generateSelectedSection=__bind(this.generateSelectedSection,this),this.generateSectionsInCourse=__bind(this.generateSectionsInCourse,this),this.sectionsLoaded=__bind(this.sectionsLoaded,this),this.setProgramName=__bind(this.setProgramName,this),this.generateCourseContextData=__bind(this.generateCourseContextData,this),this.myOcLoaded=__bind(this.myOcLoaded,this),this.setUpListners(),this.generateNavContextVariables(),this.generateLmsContextVariables(),this.generatePageTitle(),this.generateGradesUrl()}return MastheadController.$inject=["$log","BaseUrl","NavContext","UserRolesService","ApGradesTabsService","MastheadTab","$window","$document","$scope","$compile","Service","featureFlags","$rootScope"],MastheadController.prototype.setUpListners=function(){return this.rootScope.$on("myOcLoaded",this.myOcLoaded),this.rootScope.$on("myOcLoaded",this.initTabs)},MastheadController.prototype.generateNavContextVariables=function(){return this.navContext.activate(),this.group=this.navContext.group,this.urlParams=this.navContext.urlParams,this.pageContext=this.navContext.pageContext,this.lmsContext=this.navContext.getLmsContext()},MastheadController.prototype.generateLmsContextVariables=function(){var _ref,_ref1,_ref2,_ref3,_ref4;return this.pageMeta=(null!=(_ref=this.lmsContext)?_ref.course.name:void 0)||null,this.courseId=null!=(_ref1=this.lmsContext)?_ref1.course.id:void 0,this.sectionId=(null!=(_ref2=this.lmsContext)?_ref2.course.section_id:void 0)||0,this.userId=null!=(_ref3=this.lmsContext)?_ref3.user.id:void 0,this.courseRole=null!=(_ref4=this.lmsContext)?_ref4.course.role:void 0},MastheadController.prototype.generatePageTitle=function(){var section,_i,_len,_ref,_results;if("home"!==this.pageContext)switch(this.pageContext){case"live_sessions":return this.pageTitle="Live Sessions";case"course":if(this.pageTitle=this.lmsContext.course.fullname,null!=this.lmsContext.course.sections){for(_ref=this.lmsContext.course.sections,_results=[],_i=0,_len=_ref.length;_i<_len;_i++)section=_ref[_i],parseInt(section.id)!==parseInt(this.lmsContext.course.section_id)?_results.push(void 0):this.pageSubtitle=section.name;return _results}break;case"profile":return this.pageTitle="My Profile";case"group":return this.document[0].title.lastIndexOf("-")>0?this.pageTitle=this.document[0].title.substring(0,this.document[0].title.lastIndexOf("-")):this.pageTitle=this.document[0].title;case"contact":return this.document[0].title.lastIndexOf("'s")>0?this.pageTitle=this.document[0].title.substring(0,this.document[0].title.lastIndexOf("'s")):this.pageTitle=this.document[0].title;case"all-courses":return this.pageTitle="All Courses";case"browse-social-groups":return this.pageTitle="Browse Social Groups";case"all-notifications":return this.pageTitle="Notifications";case"creating-social-group":return this.pageTitle="Create a Social Group";case"editing-social-group":return this.pageTitle="Editing Group";default:return this.pageTitle=this.document[0].title.replace(/\: page \d+/i,"")}},MastheadController.prototype.addGraderReport=function(){var _ref,_ref1;if("course"===(null!=(_ref=this.activeTab)?_ref.context:void 0)&&"grades"===(null!=(_ref1=this.activeTab)?_ref1.label:void 0)&&!this.navContext.isStudent())return this._showGraderReport()},MastheadController.prototype._showGraderReport=function(){var el;return el=this.compile("<div gr-grades-nav></div>")(this.scope),$("#region-main").prepend(el)},MastheadController.prototype.generateGradesUrl=function(){return"campusproducer"!==this.courseRole?this.gradesUrl="/local/reports/grades/index.php?id="+this.courseId+"&section=1&group="+this.sectionId:this.gradesUrl="/grade/edit/tree/index.php?showadvanced=1&id="+this.courseId},MastheadController.prototype.myOcLoaded=function(event,data){return"course"===this.pageContext?this.generateCourseContextData(data):"home"===this.pageContext?this.setProgramName(data):void 0},MastheadController.prototype.generateCourseContextData=function(data){return this.generateUseApGrades(),this.generateHighestRole(data),this.navContext.isSystemRole(data.me.role)?(this.showAllSections=!0,this.service.getcourseSections(this.courseId,this.sectionsLoaded)):(this.generateSectionsInCourse(data),this.generateSelectedSection(data))},MastheadController.prototype.setProgramName=function(data){return this.pageTitle=data.me.program_name,$(document).prop("title",this.pageTitle)},MastheadController.prototype.generateUseApGrades=function(){var _ref;return this.useApGrades="course"===this.pageContext&&"1"===(null!=(_ref=this.lmsContext)?_ref.course.use_academic_product:void 0)},MastheadController.prototype.generateHighestRole=function(ocData){return this.highestRole=ocData.me.role},MastheadController.prototype.sectionsLoaded=function(data){return this.generateSectionsInCourse({sections:data}),this.generateSelectedSection({sections:data})},MastheadController.prototype.generateSectionsInCourse=function(data){var section;if(this.sectionsInCourse=function(){var _i,_len,_ref,_results;for(_ref=data.sections,_results=[],_i=0,_len=_ref.length;_i<_len;_i++)section=_ref[_i],section.course.id===parseInt(this.courseId)&&_results.push(section);return _results}.call(this),"coursecoordinator"===this.courseRole||this.showAllSections)return this.sectionsInCourse.unshift({name:"All Sections",id:0})},MastheadController.prototype.generateSelectedSection=function(data){var section,_i,_len,_ref,_results;if(0===this.sectionId)return this.selectedSection={name:"All Sections",id:0};for(_ref=data.sections,_results=[],_i=0,_len=_ref.length;_i<_len;_i++)section=_ref[_i],section.id===parseInt(this.sectionId)&&_results.push(this.selectedSection=section);return _results},MastheadController.prototype.initTabs=function(event,data){var tab,tabs;return tabs=[this.mastheadTab(!1,"home","top news","/local/index.php?orderby=top",/local\/index\.php($|\?orderby\=top$)/i,this.window),this.mastheadTab(!1,"home","recent news","/local/index.php?orderby=recent",/local\/index\.php\?orderby\=recent?/i,this.window),this.mastheadTab(!1,"profile","wall","/my/index.php",/my\/index\.php/i,this.window),this.mastheadTab(!1,"profile","profile","/my/profile.php",/my\/profile\.php/i,this.window),this.mastheadTab(!1,"profile","contacts","/my/contacts.php",/my\/contacts\.php/i,this.window),this.mastheadTab(!1,"contact","wall","/my/index.php?id="+this.urlParams.id,/my\/index\.php\?id\=\d+$/i,this.window),this.mastheadTab(!1,"contact","profile","/my/profile.php?id="+this.urlParams.id,/my\/profile\.php\?id\=\d+$/i,this.window),this.mastheadTab(!1,"contact","contacts","/my/contacts.php?id="+this.urlParams.id,/my\/contacts\.php\?id\=\d+$/i,this.window),this.mastheadTab(!1,"group","wall","/local/groups/group.php?groupid="+this.group.id+"&type="+this.group.type+"&page=wall",/groups\/group\.php\?groupid=\d+(.+)?\&page\=wall/i,this.window),this.mastheadTab(!1,"group","members","/local/groups/group.php?groupid="+this.group.id+"&type="+this.group.type+"&page=members",/groups\/group\.php\?groupid=\d+(.+)?\&page\=members/i,this.window),this.mastheadTab(!1,"group","files","/local/files/index.php?groupid="+this.group.id+"&userid="+this.userId+"&type="+this.group.type,/files\/index\.php\?groupid=\d+\&userid=\d+/i,this.window),this.mastheadTab(!1,"live_sessions","recordings","/recordings.php",/recordings.php$/i,this.window),this.mastheadTab(!1,"live_sessions","upcoming sessions","/upcoming_sessions.php",/upcoming_sessions.php$/i,this.window)],tabs=tabs.concat(this.handleCourseTabs()),this.currentTabs=function(){var _i,_len,_results;for(_results=[],_i=0,_len=tabs.length;_i<_len;_i++)tab=tabs[_i],tab.context!==this.pageContext||tab.noShow()||_results.push(tab);return _results}.call(this),this.setActiveTab(data),this.addGraderReport()},MastheadController.prototype.handleCourseTabs=function(){var courseTabs,gradesTabs,tab;courseTabs={1:this.mastheadTab(!1,"course","wall","/course/view.php?id="+this.courseId+"&group="+this.sectionId+"&page=wall",/course\/view\.php\?id\=\d+\&group=\d+($|\&page\=wall$)/i,this.window),2:this.mastheadTab(!1,"course","coursework",this.getCourseworkPath(),/course\/view\.php\?id\=\d+(\&\w*=\d+)?\&page\=coursework$/i,this.window),4:this.mastheadTab(!1,"course","activity report","/local/reports/activity_report/index.php?id="+this.courseId+"&group="+this.sectionId,/activity\_report\/index\.php\?id\=\d+\&group=\d+/i,this.window),5:this.mastheadTab(!1,"course","files","/local/files/index.php?course_id="+this.courseId+"&group="+this.sectionId+"&userid="+this.userId+"&groupid=-1",/files\/index\.php\?course_id\=\d+\&group=\d+\&userid=\d+\&groupid\=\-1/i,this.window),6:this.mastheadTab(!1,"course","roster","/ap/#/courses/"+this.courseId+"/sections/"+this.sectionId+"/roster",/course\/view\.php\?id\=\d+\&group=\d+\&page\=(students|courseroster)$/i,this.window)},gradesTabs=this.getGradesTabs();for(tab in gradesTabs)courseTabs[tab]=gradesTabs[tab];return this.sortMastheadTabs(courseTabs)},MastheadController.prototype.getGradesTabs=function(){var gradesTabs;return gradesTabs=this.useApGrades?this.apGradesTabsService.gradesTabsForUser(this.courseRole,this.highestRole,this.courseId,this.sectionId):{3:this.mastheadTab(!1,"course","grades",""+this.gradesUrl,/grade[rs]?\/(export\/\w*\/)?index\.php\?(plugin=grader&)?id=\d+(&\w*=\d+)?(&group=\d+)?/i,this.window)}},MastheadController.prototype.getCourseworkPath=function(){var _ref;return"course"===this.pageContext&&"1"===(null!=(_ref=this.lmsContext)?_ref.course.use_coursework:void 0)?"/ap/coursework/"+this.courseId:"/course/view.php?id="+this.courseId+"&group="+this.sectionId+"&page=coursework"},MastheadController.prototype.sortMastheadTabs=function(mastheadTabs){return Object.keys(mastheadTabs).sort().filter(function(key){return mastheadTabs[key]}).map(function(key){return mastheadTabs[key]})},MastheadController.prototype.setActiveTab=function(data){var tab,_i,_len,_ref;for(_ref=this.currentTabs,_i=0,_len=_ref.length;_i<_len;_i++)tab=_ref[_i],tab.isActive()&&(this.activeTab=tab,tab.updateDocumentTitle(this.pageTitle));if("course"===this.pageContext&&"coursework"===this.activeTab.label&&"student"!==data.me.role)return this.service.getCourseLiveSessionPlan(this.courseId,this.liveSessionPlanLoaded)},MastheadController.prototype.liveSessionPlanLoaded=function(data){if(data.url)return this.liveSessionPlanURL=data.url},MastheadController.prototype.showSectionsSelection=function(){var _ref;return(null!=(_ref=this.sectionsInCourse)?_ref.length:void 0)>1},MastheadController.prototype.changeSections=function(){if(parseInt(this.navContext.urlParams.group)!==parseInt(this.selectedSection.id))return void 0===this.navContext.urlParams.group?this.navigateToPage(this.window.location.href+"&group="+this.selectedSection.id):this.navigateToPage(this.window.location.href.replace(/group=\d+/,"group="+this.selectedSection.id))},MastheadController.prototype.navigateToPage=function(uri){return this.window.location=uri},MastheadController}(),angular.module("onlineCampusApp").controller("MastheadController",MastheadController);var NotificationsController,__bind=function(fn,me){return function(){return fn.apply(me,arguments)}};NotificationsController=function(){function NotificationsController(log,service,baseUrl,moment){this.log=log,this.service=service,this.baseUrl=baseUrl,this.moment=moment,this.nextPage=__bind(this.nextPage,this),this.previousPage=__bind(this.previousPage,this),this.notificationsLoaded=__bind(this.notificationsLoaded,this),this.log.info("Notifications constructor"),this.itemsPerPage=10,this.currentPage=1,this.totalCount=0,this.service.allMyNotifications(this.currentPage,this.itemsPerPage,this.notificationsLoaded)}return NotificationsController.$inject=["$log","Service","BaseUrl","moment"],NotificationsController.prototype.notificationsLoaded=function(data){var notification;return this.allNotifications=function(){var _i,_len,_ref,_results;for(_ref=data.notifications,_results=[],_i=0,_len=_ref.length;_i<_len;_i++)notification=_ref[_i],_results.push(new Notification(notification,this.moment));return _results}.call(this),this.totalPages=Math.ceil(data.total/this.itemsPerPage),this.totalCount=data.total,this.currentPageStart=this.pageStart(this.currentPage),this.currentPageEnd=this.pageEnd(this.currentPage,this.totalCount)},NotificationsController.prototype.previousPage=function(){if(this.currentPage>1)return this.currentPage=this.currentPage-1,this.service.allMyNotifications(this.currentPage,this.itemsPerPage,this.notificationsLoaded)},NotificationsController.prototype.nextPage=function(){if(this.currentPage<this.totalPages)return this.currentPage=this.currentPage+1,this.service.allMyNotifications(this.currentPage,this.itemsPerPage,this.notificationsLoaded)},NotificationsController.prototype.pageStart=function(pageNum){var num;return num=(pageNum-1)*this.itemsPerPage,0===num?1:num},NotificationsController.prototype.pageEnd=function(pageNum,total){var num;return num=pageNum*this.itemsPerPage,num>total?total:num},NotificationsController.prototype.notificationActionButtonClicked=function(actionButton,notification){notification.actionButtonClicked(actionButton),this.service.notificationAction(actionButton,notification.actionSuccessCallback,notification.actionFailureCallback)},NotificationsController}(),angular.module("onlineCampusApp").controller("NotificationsController",NotificationsController);var ProfileImageController,__bind=function(fn,me){return function(){return fn.apply(me,arguments)}};ProfileImageController=function(){function ProfileImageController(log,service,hostname,baseUrl,scope,http,$rootScope,navContext){this.log=log,this.service=service,this.hostname=hostname,this.baseUrl=baseUrl,this.scope=scope,this.http=http,this.navContext=navContext,this.getUserId=__bind(this.getUserId,this),this.onProfileImageChange=__bind(this.onProfileImageChange,this),this.setUpListners=__bind(this.setUpListners,this),this.dataLoaded=__bind(this.dataLoaded,this),this.rootScope=$rootScope,this.service.userProfile(this.getUserId(),this.dataLoaded),this.saveable=!1}return ProfileImageController.$inject=["$log","Service","Hostname","BaseUrl","$scope","$http","$rootScope","NavContext"],ProfileImageController.prototype.dataLoaded=function(data){return this.profile=data,this.imageUrl=this.profile.cropped_photo||this.profile.photo,this.setUpListners()},ProfileImageController.prototype.setUpListners=function(){return this.rootScope.$on("onProfileImageChange-"+this.profile.uuid,this.onProfileImageChange)},ProfileImageController.prototype.onProfileImageChange=function(event,imageUrl){if(this.profile)return this.imageUrl=imageUrl},ProfileImageController.prototype.closeModal=function(){return this.scope.$close()},ProfileImageController.prototype.canSave=function(){return this.saveable},ProfileImageController.prototype.getUserId=function(){return this.navContext.getUrlParams().id||null},ProfileImageController}(),angular.module("onlineCampusApp").controller("ProfileImageController",ProfileImageController);var ProgramResourcesController,__bind=function(fn,me){return function(){return fn.apply(me,arguments)}};ProgramResourcesController=function(){function ProgramResourcesController(log,scope,service,rootScope){this.log=log,this.scope=scope,this.service=service,this.rootScope=rootScope,this.dataLoaded=__bind(this.dataLoaded,this),this.getResources=__bind(this.getResources,this),this.setUpListners=__bind(this.setUpListners,this),this.setUpListners()}return ProgramResourcesController.$inject=["$log","$scope","Service","$rootScope"],ProgramResourcesController.prototype.setUpListners=function(){return this.rootScope.$on("myOcLoaded",this.getResources)},ProgramResourcesController.prototype.getResources=function(event,data){var userProgramId;if(userProgramId=data.me.program_id)return this.service.getProgramResources(userProgramId,this.dataLoaded)},ProgramResourcesController.prototype.dataLoaded=function(data){return this.resources=data.sort(function(a,b){return a.sort_order-b.sort_order})},ProgramResourcesController}(),angular.module("onlineCampusApp").controller("ProgramResourcesController",ProgramResourcesController);var TwoBarController,__bind=function(fn,me){return function(){return fn.apply(me,arguments)}};TwoBarController=function(){function TwoBarController(log,service,hostname,baseUrl,moment,_,$rootScope,scope,timeout,analytics_service,window,harmonyModal,navContext,$ipCookie){var _this=this;this.log=log,this.service=service,this.hostname=hostname,this.baseUrl=baseUrl,this.moment=moment,this.scope=scope,this.timeout=timeout,this.analytics_service=analytics_service,this.window=window,this.harmonyModal=harmonyModal,this.navContext=navContext,this.logoutSuccess=__bind(this.logoutSuccess,this),this.copyToClipBoard=__bind(this.copyToClipBoard,this),this.setupContactInfo=__bind(this.setupContactInfo,this),this.nullHandler=__bind(this.nullHandler,this),this.toggleProfile=__bind(this.toggleProfile,this),this.toggleSupportBar=__bind(this.toggleSupportBar,this),this.toggleNotifications=__bind(this.toggleNotifications,this),this.toggleGroups=__bind(this.toggleGroups,this),this.toggleCourses=__bind(this.toggleCourses,this),this.closePanels=__bind(this.closePanels,this),this.onProfileImageChange=__bind(this.onProfileImageChange,this),this.setUpProfileChangeListener=__bind(this.setUpProfileChangeListener,this),this.setUpListners=__bind(this.setUpListners,this),this.dataLoaded=__bind(this.dataLoaded,this),this.closeIfEscape=__bind(this.closeIfEscape,this),this.ipCookie=$ipCookie,this.rootScope=$rootScope,this.setUpListners(),this.sections=[],this.groups=[],this.COURSES="Courses",this.GROUPS="Groups",this.NOTIFICATIONS="Notifications",this.SUPPORT="Support",this.PROFILE="Profile",this.ZOOM="Zoom",this.PLACEMENTS="Placements",this.notifications=[],this.total=0,this.profile={},this.courseList=[],this.scope.$watch(function(){return _this.sections.length},function(){return _this.courseList=_this.sections.map(function(s){return{url:_this.courseUrl(s),title:s.course.name,meta:""+s.name}})}),this.socialGroupsList=[],this.workingGroupsList=[],this.scope.$watch(function(){return _this.groups.length},function(){return _this.socialGroupsList=_this.groups.filter(function(g){return"community"===g.type}).map(function(g){return{url:_this.groupUrl(g),title:g.name,meta:g.member_count}}),_this.workingGroupsList=_this.groups.filter(function(g){return"academic"===g.type}).map(function(g){return{url:_this.groupUrl(g),title:g.name,meta:g.member_count}}),_this.groupsButtonItems=[{title:"Working",items:_this.workingGroupsList,createLink:"/local/groups/working_group/index.php?groupedit=1&referer="+encodeURIComponent(window.location.href)},{title:"Social",items:_this.socialGroupsList,createLink:"/local/groups/mygroups.php?groupedit=1&referer="+encodeURIComponent(window.location.href)}]}),this.activeTab="",this.activeMultiList=0,this.adminCoursesUrl=this.window.location.origin+"/ap/#/admin",$("main.page").on("focusin",function(e){return _this.timeout(function(){return _this.closePanels()},100)}),$("main.page").on("click",function(e){
return _this.timeout(function(){return _this.closePanels()},100)}),$(".skiplinks .skip").on("click",function(){return _this.scope.$apply(_this.closePanels)}),this.setZoomEnabled()}return TwoBarController.$inject=["$log","Service","Servername","BaseUrl","moment","_","$rootScope","$scope","$timeout","analytics_service","$window","$harmonyModal","NavContext","ipCookie"],TwoBarController.prototype.setZoomEnabled=function(){var _ref;return this.zoomEnabled="1"===(null!=(_ref=this.window.u.live_session_settings)?_ref.zoom_on:void 0)},TwoBarController.prototype.closeIfEscape=function(e){if(27===e.which)return this.closePanels()},TwoBarController.prototype.getGroupList=function(){var _ref,_ref1;return null!=(_ref=this.groupsButtonItems)&&null!=(_ref1=_ref[this.activeMultiList])?_ref1.items:void 0},TwoBarController.prototype.dataLoaded=function(event,data){var notification;return this.notifications=function(){var _i,_len,_ref,_results;for(_ref=data.notifications.notifications,_results=[],_i=0,_len=_ref.length;_i<_len;_i++)notification=_ref[_i],_results.push(new Notification(notification,this.moment));return _results}.call(this),this.total=data.notifications.total,this.profile=data.me,this.supportInfo=data.support_info,this.sections=data.sections,this.groups=data.groups,this.imageUrl=this.profile.cropped_photo||this.profile.photo,this.role=this.supportInfo.role,this.setUpProfileChangeListener(),this.setupContactInfo(this.supportInfo),this.showPlacements=data.placement_program&&"student"===this.profile.role},TwoBarController.prototype.hasDownloadInfo=function(){var url,_ref;if(null!=(null!=(_ref=this.supportInfo)?_ref.downloads:void 0))for(url in this.supportInfo.downloads)if(""!==this.supportInfo.downloads[url])return!0;return!1},TwoBarController.prototype.setUpListners=function(){return this.rootScope.$on("myOcLoaded",this.dataLoaded)},TwoBarController.prototype.setUpProfileChangeListener=function(){return this.rootScope.$on("onProfileImageChange-"+this.profile.uuid,this.onProfileImageChange)},TwoBarController.prototype.onProfileImageChange=function(event,imageUrl){return this.imageUrl=imageUrl},TwoBarController.prototype.closePanels=function(){return $("body").removeClass("u--no-scroll"),this.activeTab=void 0},TwoBarController.prototype.toggleCourses=function(){return this.activeTab!==this.COURSES?($("body").addClass("u--no-scroll"),this.activeTab=this.COURSES,this.analytics_service.page(this.activeTab)):this.closePanels()},TwoBarController.prototype.toggleGroups=function(){return this.activeTab!==this.GROUPS?($("body").addClass("u--no-scroll"),this.activeTab=this.GROUPS,this.analytics_service.page(this.activeTab)):this.closePanels()},TwoBarController.prototype.toggleNotifications=function(){return this.activeTab!==this.NOTIFICATIONS?($("body").addClass("u--no-scroll"),this.activeTab=this.NOTIFICATIONS,this.analytics_service.page(this.activeTab)):(this.setNotificationsAsViewed(),this.closePanels())},TwoBarController.prototype.toggleSupportBar=function(){return this.activeTab!==this.SUPPORT?($("body").addClass("u--no-scroll"),this.activeTab=this.SUPPORT,this.analytics_service.page(this.activeTab)):this.closePanels()},TwoBarController.prototype.toggleProfile=function(){return this.activeTab!==this.PROFILE?(this.activeTab=this.PROFILE,this.analytics_service.page(this.activeTab)):this.closePanels()},TwoBarController.prototype.nullHandler=function(){return null},TwoBarController.prototype.getWorkingGroups=function(){return _.where(this.groups,{type:"academic"})},TwoBarController.prototype.getSocialGroups=function(){return _.where(this.groups,{type:"community"})},TwoBarController.prototype.courseUrl=function(section){return this.hostname+"/course/view.php?id="+section.course.id+"&group="+section.id},TwoBarController.prototype.groupUrl=function(group){return this.hostname+"/local/groups/group.php?groupid="+group.id+"&page=wall&type="+group.type},TwoBarController.prototype.notificationsCount=function(){return this.total},TwoBarController.prototype.clearNotificationsCount=function(){return this.total=0},TwoBarController.prototype.clearNotifications=function(){return this.notifications=[],this.clearNotificationsCount()},TwoBarController.prototype.setNotificationsAsViewed=function(){return this.clearNotificationsCount(),this.service.setNotificationsAsViewed()},TwoBarController.prototype.getFullName=function(){return this.profile.name},TwoBarController.prototype.getEmail=function(){return this.profile.email},TwoBarController.prototype.notificationActionButtonClicked=function(actionButton,notification){notification.actionButtonClicked(actionButton),this.service.notificationAction(actionButton,notification.actionSuccessCallback,notification.actionFailureCallback)},TwoBarController.prototype.setupContactInfo=function(info){var _ref;return this.contactInfo=info,this.contactInfo.phone_intl&&"US"!==(null!=(_ref=this.window.visitor)?_ref.geo.countryCode:void 0)&&(this.contactInfo.phone=this.contactInfo.phone_intl),this.contactInfo.unFormattedPhone=this.unFormattedPhone(this.contactInfo.phone)},TwoBarController.prototype.unFormattedPhone=function(phone){return phone?phone.replace(/[ \(\)-]/g,""):null},TwoBarController.prototype.copyToClipBoard=function($event){var clickedElement,range,success,tooltip;return clickedElement=$event.currentTarget,range=document.createRange(),range.selectNode(clickedElement),window.getSelection().removeAllRanges(),window.getSelection().addRange(range),success=document.execCommand("copy"),success&&(tooltip=angular.element(clickedElement).parent(),tooltip.addClass("tooltip tooltip--top is--sticky"),setTimeout(function(){tooltip.removeClass("tooltip tooltip--top is--sticky")},2e3)),window.getSelection().removeAllRanges()},TwoBarController.prototype.logout=function(){return this.service.logout(this.logoutSuccess)},TwoBarController.prototype.getDomain=function(){var urlParts;return urlParts=this.window.location.host.split("."),new Array(urlParts[urlParts.length-2],urlParts[urlParts.length-1]).join(".")},TwoBarController.prototype.logoutSuccess=function(){return this.ipCookie.remove("logged_in_as",{path:"/",domain:this.getDomain()}),this.analytics_service.track("User logged out",{}),this.window.location.reload()},TwoBarController.prototype.navigateMeetingsLandingPage=function(){return this.window.location="/ap/#/meetings"},TwoBarController.prototype.showAdminSettings=function(){return this.navContext.isAdminOrContentAdmin()||this.navContext.isSupportRole()},TwoBarController}(),angular.module("onlineCampusApp").controller("TwoBarController",TwoBarController);var UpcomingCourseworkController,__bind=function(fn,me){return function(){return fn.apply(me,arguments)}};UpcomingCourseworkController=function(){function UpcomingCourseworkController(rootScope){this.rootScope=rootScope,this.dataLoaded=__bind(this.dataLoaded,this),this.setUpListners=__bind(this.setUpListners,this),this.setUpListners()}return UpcomingCourseworkController.$inject=["$rootScope"],UpcomingCourseworkController.prototype.setUpListners=function(){return this.rootScope.$on("myOcLoaded",this.dataLoaded)},UpcomingCourseworkController.prototype.dataLoaded=function(event,data){return this.sections=data.sections},UpcomingCourseworkController.prototype.hasUpcomingCoursework=function(){var section,_i,_len,_ref;if(null!=this.sections)for(_ref=this.sections,_i=0,_len=_ref.length;_i<_len;_i++)if(section=_ref[_i],section.course.upcoming_coursework)return!0;return!1},UpcomingCourseworkController}(),angular.module("onlineCampusApp").controller("UpcomingCourseworkController",UpcomingCourseworkController);var __indexOf=[].indexOf||function(item){for(var i=0,l=this.length;i<l;i++)if(i in this&&this[i]===item)return i;return-1};angular.module("onlineCampusApp").directive("twobar",["$timeout","$document","$compile",function($timeout,$document,$compile){return{restrict:"EA",controller:"TwoBarController as twoBarCtrl",templateUrl:"twobar.html",replace:!0}}]),angular.module("onlineCampusApp").directive("notifications",[function(){return{restrict:"EA",controller:"NotificationsController as notificationsCtrl",scope:!0,templateUrl:"notifications.html"}}]),angular.module("onlineCampusApp").directive("focusFirstItem",[function(){return{link:function(scope,element){if(scope.$first)return setTimeout(function(){return element[0].focus()},100)}}}]),angular.module("onlineCampusApp").directive("quizReports",[function(){return{restrict:"EA",transclude:!0,templateUrl:"quiz-reports-menu.html"}}]),angular.module("onlineCampusApp").directive("masthead",["$document",function($document){return{restrict:"EA",controller:"MastheadController as mastheadController",scope:!0,templateUrl:"masthead.html",link:function(scope,element,attrs,ctrl){return scope.pageTitle=ctrl.pageTitle,scope.pageSubtitle=ctrl.pageSubtitle,scope.meta=ctrl.pageMeta}}}]),angular.module("onlineCampusApp").directive("footer",[function(){return{restrict:"A",controller:"FooterController as footerController",templateUrl:"footer.html",replace:!0,scope:{program:"@"}}}]),angular.module("onlineCampusApp").directive("contentNav",["$timeout","$rootScope",function($timeout,$rootScope){return{restrict:"EA",controller:"ContentNavController as contentNavCtrl",templateUrl:"content-nav.html",replace:!0}}]),angular.module("onlineCampusApp").directive("upcomingCoursework",[function(){return{restrict:"EA",scope:!0,controller:"UpcomingCourseworkController as upcomingCourseworkCtrl",templateUrl:"upcoming-coursework.html"}}]),angular.module("onlineCampusApp").directive("programResources",[function(){return{restrict:"EA",scope:!0,controller:"ProgramResourcesController as programResourcesCtrl",templateUrl:"program-resources.html"}}]),angular.module("onlineCampusApp").directive("downloadApps",[function(){return{restrict:"EA",scope:!0,controller:"TwoBarController as twoBarCtrl",templateUrl:"download-apps.html"}}]),angular.module("onlineCampusApp").directive("axsMenuItem",[function(){return{restrict:"A",link:function(scope,elem){return elem.on("keydown",function(e){var _ref,_ref1;if(38===e.which&&(e.preventDefault(),e.stopPropagation(),"BUTTON"===(_ref=elem.prop("nodeName"))||"A"===_ref?$(elem).prev(elem.prop("nodeName")).focus():$(elem).prev(elem.prop("nodeName")).find("a,button").first().focus()),40===e.which)return e.preventDefault(),e.stopPropagation(),"BUTTON"===(_ref1=elem.prop("nodeName"))||"A"===_ref1?$(elem).next(elem.prop("nodeName")).focus():$(elem).next(elem.prop("nodeName")).find("a,button").first().focus()})}}}]),angular.module("onlineCampusApp").directive("axsMenuItemBlocker",[function(){return{restrict:"A",link:function(scope,elem){return elem.on("keydown",function(e){var _ref;if(38===(_ref=e.which)||40===_ref)return e.stopPropagation()})}}}]),angular.module("onlineCampusApp").directive("axsBlockBlur",[function(){return{restrict:"A",link:function(scope,elem){return elem.on("blur",function(e){return e.stopPropagation()})}}}]),angular.module("onlineCampusApp").directive("axsTrigger",[function(){return{restrict:"A",scope:{axsKeydown:"&",axsFocus:"&",axsBlur:"&"},link:function(scope,elem){var axsKeys;return axsKeys=[9,13,27,32,37,38,39,40],elem.on("keydown",function(e){var _ref;if(_ref=e.which,__indexOf.call(axsKeys,_ref)>=0&&null!=scope.axsKeydown)return scope.axsKeydown()(e)}),elem.on("blur",function(e){if(null!=scope.axsBlur)return scope.axsBlur()(!1,e)}),elem.on("focus",function(e){return $(elem).one("keyup",function(ke){var _ref;if(_ref=ke.which,__indexOf.call(axsKeys,_ref)>=0&&null!=scope.axsFocus)return scope.axsFocus()(!0,e)})})}}}]),angular.module("onlineCampusApp").directive("profileImage",[function(){return{restrict:"EA",scope:!0,controller:"ProfileImageController as profileImageCtrl",templateUrl:"profile-image.html"}}]),angular.module("onlineCampusApp").directive("coursePlayer",["$sce",function($sce){return{restrict:"A",scope:{segmentUuid:"@"},templateUrl:"course-player.html",link:function(scope,elem){var iframe,moduleId,oldHeight,setHeight;return iframe=$(elem).find("iframe"),oldHeight=0,setHeight=function(){var curHeight;if(iframe&&iframe.contents()&&(curHeight=iframe.contents().outerHeight(),curHeight!==oldHeight))return iframe.height(curHeight+"px")},setInterval(setHeight,100),moduleId=window.location.search.match(/id=(\d+)/)[1],scope.contentURI=$sce.trustAsResourceUrl("/content/player/#/segments/"+scope.segmentUuid+"?moduleId="+moduleId)}}}]),angular.module("onlineCampusApp").directive("interactiveVideo",["$sce",function($sce){return{restrict:"A",scope:{segmentUuid:"@"},templateUrl:"interactive-video.html",link:function(scope,elem){var iframe,moduleId,oldHeight,setHeight;return iframe=$(elem).find("iframe"),oldHeight=0,setHeight=function(){var curHeight;if(iframe&&iframe.contents()&&(curHeight=iframe.contents().outerHeight(),curHeight!==oldHeight))return iframe.height(curHeight+"px")},setInterval(setHeight,100),moduleId=window.location.search.match(/id=(\d+)/)[1],scope.contentURI=$sce.trustAsResourceUrl("/oyster/player/latest/index.html?segmentUuid="+scope.segmentUuid+"&moduleId="+moduleId)}}}]),angular.module("graderReport").directive("grGradesNav",[function(){return{restrict:"EA",templateUrl:"gr-grades-nav.html",controller:"GrNavController as navCtrl"}}]);var GrTab;GrTab=function(){function GrTab(label,pathname,regex,window){this.label=label,this.pathname=pathname,this.regex=regex,this.window=window}return GrTab.prototype.isActive=function(pathname){return this.regex.test(pathname)},GrTab.prototype.activate=function(){if(this.window.location.pathname!==this.pathname)return this.window.location=this.pathname+this.window.location.search},GrTab.prototype.shouldTweakMoodleGraderReport=function(){return"grader report"===this.label&&this.pathname===this.window.location.pathname},GrTab}(),angular.module("graderReport").factory("GrTab",[function(){return function(label,pathname,regex,window){return new GrTab(label,pathname,regex,window)}}]);var GrNavController;GrNavController=function(){function GrNavController(window,GrTab,scope,compile){var _ref;this.window=window,this.GrTab=GrTab,this.scope=scope,this.compile=compile,this.moodleContent=$("#grades-admin"),this.initTabs(),this.initActiveTab(),(null!=(_ref=this.activeTab)?_ref.shouldTweakMoodleGraderReport():void 0)&&this.tweakMoodleGraderReport()}return GrNavController.$inject=["$window","GrTab","$scope","$compile"],GrNavController.prototype.initTabs=function(){return this.itemViewTab=this.GrTab("item view","/local/reports/grades/index.php",/local\/reports\//i,this.window),this.graderReportTab=this.GrTab("grader report","/grade/report/grader/index.php",/grade\/(report|export)\//i,this.window),this.tabs=[this.itemViewTab,this.graderReportTab]},GrNavController.prototype.initActiveTab=function(){var tab,_i,_len,_ref,_results;for(_ref=this.tabs,_results=[],_i=0,_len=_ref.length;_i<_len;_i++)tab=_ref[_i],tab.isActive(this.window.location.pathname)?_results.push(this.activeTab=tab):_results.push(void 0);return _results},GrNavController.prototype.changeActiveTab=function(nextActiveTab){return this.activeTab=nextActiveTab,this.activeTab.activate()},GrNavController.prototype.tweakMoodleGraderReport=function(){var exportContainer,sortContainer;return $(".singlebutton").parent().appendTo($(".grades-sort").parent()),exportContainer=$('<div class="export-select-containter"><i class="icon icon--caret-down"></i></div>'),$(".select.menujump").prependTo(exportContainer),exportContainer.prependTo($(".export")),$('<div class="label-small-caps">export:</div>').prependTo($(".export")),$(".export").appendTo($(".minor-header-row")),sortContainer=$('<div class="sort-by"><i class="icon icon--caret-down"></i></div>'),$("#srtGraderOutput").prependTo(sortContainer),sortContainer.appendTo($(".grades-sort p")),this.addClassToAverageColumns()},GrNavController.prototype.addClassToAverageColumns=function(){var className,classes,element,header,headers,_i,_len;for(headers=function(){var _i,_len,_ref,_results;for(_ref=$("th"),_results=[],_i=0,_len=_ref.length;_i<_len;_i++)element=_ref[_i],"Avg."===$(element).html()&&_results.push(element);return _results}(),classes=function(){var _i,_len,_ref,_results;for(_ref=$(headers),_results=[],_i=0,_len=_ref.length;_i<_len;_i++)header=_ref[_i],_results.push($(header).attr("class").split(/\s+/)[2]);return _results}(),_i=0,_len=classes.length;_i<_len;_i++)className=classes[_i],$("td."+className).addClass("average-cell");return $("td#empty").removeClass("average-cell")},GrNavController}(),angular.module("graderReport").controller("GrNavController",GrNavController);var MastheadTab;MastheadTab=function(){function MastheadTab(useFeatureFlagHref,context,label,location,regex,window,hash,compile,scope,featureFlagHref){this.useFeatureFlagHref=useFeatureFlagHref,this.context=context,this.label=label,this.location=location,this.regex=regex,this.window=window,this.hash=hash,this.compile=compile,this.scope=scope,this.featureFlagHref=featureFlagHref}return MastheadTab.prototype.isActive=function(){return this.hash?this.isHashActive():this.window.location.hash?void(this.active=!1):this.regex.test(this.window.location.pathname+this.window.location.search)?this.active=!0:void 0},MastheadTab.prototype.isHashActive=function(){if(0===this.window.location.hash.indexOf(this.hash))return this.loadDirective()},MastheadTab.prototype.updateDocumentTitle=function(pageTitle){if(this.hash)return this.window.document.title=pageTitle+": "+_.capitalize(this.label)},MastheadTab.prototype.activate=function($event){return $event&&$event.preventDefault(),this.useFeatureFlagHref?void(this.window.location=this.featureFlagHref):this.hash?this.activateHash():this.window.location.pathname+this.window.location.search+this.window.location.hash!==this.location?this.window.location=this.location:void 0},MastheadTab.prototype.activateHash=function(){if(0!==this.window.location.hash.indexOf(this.hash))return this.window.location=this.window.location.pathname+this.window.location.search+this.hash,this.scope.mastheadController.setActiveTab(),this.loadDirective()},MastheadTab.prototype.loadDirective=function(){var el;return $("#region-main").empty(),el=this.compile("<div roster></div>")(this.scope),$("#region-main").prepend(el),this.active=!0},MastheadTab.prototype.noShow=function(){var _ref,_ref1,_ref2;if("upcoming sessions"===this.label&&"0"===(null!=(_ref=this.window.u)&&null!=(_ref1=_ref.live_session_settings)?_ref1.tt_widget:void 0))return!0;if("wall"===this.label){if("course"===this.context&&this.window.i11l.LMSContext.site.hide_course_wall_link)return!0;if(("profile"===(_ref2=this.context)||"contact"===_ref2)&&this.window.i11l.LMSContext.site.hide_profile_wall_link)return!0}},MastheadTab}(),angular.module("onlineCampusApp").factory("MastheadTab",[function(){return function(_userFeatureFlagHref,_context,_label,_location,_regex,_window,_hash,_compile,_scope,_featureFlagHref){return new MastheadTab(_userFeatureFlagHref,_context,_label,_location,_regex,_window,_hash,_compile,_scope,_featureFlagHref)}}]);var Notification,__bind=function(fn,me){return function(){return fn.apply(me,arguments)}};window.Notification=Notification=function(){function Notification(notification,moment){this.notification=notification,this.moment=moment,this.actionFailureCallback=__bind(this.actionFailureCallback,this),this.actionSuccessCallback=__bind(this.actionSuccessCallback,this),null==this.moment&&(this.moment=window.moment),this.defineActionButtons(),this.actionStatusMessage="",this.actionButtonsSelector="#notification-action-buttons-"+this.notification.id+" button"}return Notification.prototype.dataFieldValue=function(field){return field in this.notification.data?this.notification.data[field]:"Error: Missing "+field},Notification.prototype.humanFriendlyNotificationCreateTime=function(){return this.moment(this.notification.create_time).fromNow()},Notification.prototype.renderMessage=function(){switch(this.notification.type){case"recording-available":return this.recordingAvailableMessage();case"assignmentdue5days":return this.assignmentDueIn5Days();case"assignmentpastdue":return this.assignmentPastDueMessage();case"live_session_due_in_two_days":return this.liveSessionDueMessage();case"graded":return this.gradedMessage();case"assignment-submission":return this.assignmentSubmittedMessage();case"stickynote":return this.stickyNoteMessage();case"joins-group":return this.joinsGroupMessage();case"course-posts":return this.coursePostsMessage();case"myteacher-posts":return this.courseTeacherPostsMessage();case"post-comment-mywall":return this.myWallPostMessage();case"comments-mypost":return this.commentsOnPostMessage();case"request-contact":return this.requestContactMessage();case"confirm-contact":return this.confirmContactMessage();case"invitation-join-group":return this.invitationToJoinGroupMessage();case"sticky-notes":return this.stickyCourseNote();case"survey":return this.survey();case"allow_to_resubmit_submission":return this.allowToResubmitSubmissionWallMessage();case"post-comment-my-academic-group-wall":return this.postCommentOnAcademicGroupWallMessage();case"grade_published":return this.apGradesPublishMessage();case"download_all_ready":return this.downloadAllReadyMessage();case"generic_grade_published":return this.genericNotificationMessage();default:return this.genericNotificationMessage()}},Notification.prototype.genericNotificationMessage=function(){return this.notification.data.link&&this.notification.data.text?(this.linkUrl=this.notification.data.link,this.notification.data.text):"Unknown notification type: "+this.notification.type},Notification.prototype.allowToResubmitSubmissionWallMessage=function(){var linkFromServer;return linkFromServer=this.notification.data.resubmit_url||this.notification.data.url_for_link,linkFromServer&&this.notification.data.grade_item_name&&(this.linkUrl=linkFromServer),"Your Assignment <i>"+this.notification.data.grade_item_name+"</i> has been allowed for resubmission."},Notification.prototype.confirmContactMessage=function(){return this.linkUrl="/my/index.php?id="+this.notification.data.poster_lms_userid,"<b>"+this.notification.data.profilename+"</b> added you as a contact."},Notification.prototype.survey=function(){return this.linkUrl=""+this.notification.data.survey_url,"Your response to <b>"+this.notification.data.survey_name+"</b> has been requested."},Notification.prototype.gradedMessage=function(){var itemname;return this.linkUrl="/local/reports/grades/index.php?id="+this.notification.data.courseid,itemname=this.notification.data.modname,itemname=itemname.charAt(0).toUpperCase()+itemname.substring(1),null!=this.notification.data.itemname&&(itemname=this.notification.data.itemname),"<b>"+itemname+"</b> was graded."},Notification.prototype.downloadAllReadyMessage=function(){return null!=this.notification.data.download_all_url&&(this.linkUrl=this.notification.data.download_all_url),"Your download for <b>"+this.notification.data.grade_item_name+"</b> is ready."},Notification.prototype.apGradesPublishMessage=function(){var itemname;return null!=this.notification.data.student_focus_grades_page_path&&(this.linkUrl=this.notification.data.student_focus_grades_page_path),null!=this.notification.data.grade_item_name&&(itemname=this.notification.data.grade_item_name),"<b>"+itemname+"</b> was graded."},Notification.prototype.assignmentDueIn5Days=function(){var itemname,str;return itemname="Assignment",null!=this.notification.data.itemname&&(itemname=this.notification.data.itemname),this.linkUrl="/mod/assignment/view.php?id="+this.notification.data.cmid,str="<b>"+itemname+"</b>",null!=this.notification.data.coursename&&(str+=" in <b>"+this.notification.data.coursename+"</b>"),str+=" is due in the next 5 days."},Notification.prototype.assignmentPastDueMessage=function(){var itemname,str;return itemname="Assignment",null!=this.notification.data.itemname&&(itemname=this.notification.data.itemname),this.linkUrl="/mod/assignment/view.php?id="+this.notification.data.cmid,str="<b>"+itemname+"</b>",null!=this.notification.data.coursename&&(str+=" in <b>"+this.notification.data.coursename+"</b>"),str+=" is <span class='u--text-danger'>past due</span>."},Notification.prototype.assignmentSubmittedMessage=function(){return this.linkUrl="/local/reports/grades/index.php?id="+this.notification.data.course_id+"&section="+this.notification.data.coursework_unit_id+"&cmid="+this.notification.data.assignment_cmid+"&group="+this.notification.data.course_section_id,"<b>"+this.notification.data.submission_user_fullname+"</b> has submitted <b>"+this.notification.data.assignment_name+"</b>."},Notification.prototype.liveSessionDueMessage=function(){var courseName;return courseName="Course",null!=this.notification.data.coursename&&(courseName=this.notification.data.coursename),this.linkUrl="/course/view.php?id="+this.notification.data.courseid+"&group="+this.notification.data.groupid,"<b>"+courseName+"</b> has a live session coming up in two days."},Notification.prototype.recordingAvailableMessage=function(){return this.linkUrl="/local/adobecp/launch.php?cpurl="+this.notification.data.recordingurl+"&recording=y&livesessionid="+this.notification.data.livesessionid,"A recording of <b>"+this.notification.data.event_name+"</b> is now available."},Notification.prototype.postCommentOnAcademicGroupWallMessage=function(){return this.linkUrl="/local/social/show_post.php?wall_feed_item_id="+this.notification.data.wall_feed_item_id+"&poster_lms_userid="+this.notification.data.poster_lms_userid,"<b>"+this.notification.data.poster_fullname+"</b> posted in <b>"+this.notification.data.group_name+"</b>."},Notification.prototype.stickyNoteMessage=function(){switch(this.linkUrl="/local/index.php",this.notification.data.audience){case 5:return"You’ve received an important announcement from Support.";case 6:return"You’ve received an important announcement from Faculty Support.";case 7:return"You’ve received an important announcement from Student Support.";default:return"Unknown audience value: "+this.notification.data.audience}},Notification.prototype.stickyCourseNote=function(){var messageName;switch(messageName=this.dataFieldValue("message_name")){case"wallnotif-sticky-prof-message":return this.stickyProfessorNote();case"wallnotif-sticky-support-all-message":return this.stickyAdminNote();default:return"Unknown message name: "+messageName}},Notification.prototype.stickyProfessorNote=function(){var courseId,lastname;return lastname=this.dataFieldValue("lastname"),courseId=this.notification.data.filterdata.courseid,this.linkUrl="/course/view.php?id="+courseId,"Your professor <b>"+this.notification.data.poster_fullname+"</b> posted an important message in <b>"+this.notification.data.course_name+"</b>."},Notification.prototype.stickyAdminNote=function(){var courseId,wallName;return courseId=this.notification.data.filterdata.courseid,wallName=this.notification.data.course_name,this.linkUrl="/course/view.php?id="+courseId,"academic_group"!==this.notification.data.filterdata.walltype&&"community_group"!==this.notification.data.filterdata.walltype||(this.linkUrl=this.urlByWallType(),wallName="academic_group"===this.notification.data.filterdata.walltype?"Working Group":"Social Group"),"An important support announcement has been posted in <b>"+wallName+"</b>."},Notification.prototype.shortenTextForMessage=function(text,charLimit){var index,str;return(null!=text?text.length:void 0)>40?(index=text.substring(0,charLimit).lastIndexOf(" "),str=text.substring(0,index),str+="..."):text},Notification.prototype.urlByWallType=function(){var groupid,walltype;return groupid=this.notification.data.filterdata.contextid,walltype=this.notification.data.filterdata.walltype.split("_")[0],"/local/groups/group.php?groupid="+groupid+"&page=wall&type="+walltype},Notification.prototype.myWallPostMessage=function(){var messageName,poster_fullname,poster_id,str,_ref,_ref1;switch(messageName=this.dataFieldValue("message_name"),poster_fullname=this.dataFieldValue("poster_fullname"),poster_id=this.dataFieldValue("poster_lms_userid"),this.linkUrl=this.showPostUrl(),messageName){case"wallnotif-postcommentmywall-post":return str="<b>"+poster_fullname+"</b> posted",(null!=(_ref=this.notification.data.post_text)?_ref.length:void 0)>0&&(str+=' "'+this.shortenTextForMessage(this.notification.data.post_text,40)+'"'),str+=" on your wall.";case"wallnotif-postcommentmywall-comment":return str="<b>"+poster_fullname+"</b> commented",(null!=(_ref1=this.notification.data.post_text)?_ref1.length:void 0)>0&&(str+=' "'+this.shortenTextForMessage(this.notification.data.post_text,40)+'"'),str+=" on a post on your wall.";case"wallnotif-postcommentmywall-likemypost":case"wallnotif-postcommentmywall-likepost":return"<b>"+poster_fullname+"</b> recommended a post on your wall.";case"wallnotif-postcommentmywall-likemycomment":return"<b>"+poster_fullname+"</b> recommended your comment on your wall."}},Notification.prototype.commentsOnPostMessage=function(){var getText,messageName,posterFullname,profileId,profileName,_this=this;switch(messageName=this.dataFieldValue("message_name"),posterFullname=this.dataFieldValue("poster_fullname"),profileId=this.notification.data.filterdata.profileid,profileName=this.notification.data.filterdata.profileName,getText=function(action,type){var str,_ref;return str="<b>"+posterFullname+"</b> "+action,(null!=(_ref=_this.notification.data.post_text)?_ref.length:void 0)>0&&(str+=' "'+_this.shortenTextForMessage(_this.notification.data.post_text,40)+'"'),str+=" "+("commented"===action?"on ":"")+"your "+type,null!=_this.notification.data.parent_name&&(str+=" on <b>"+_this.notification.data.parent_name+"</b>"),str+=" in <b>"+(_this.notification.data.group_name||_this.notification.data.course_name)+"</b>."},messageName){case"wallnotif-commentsmypost-group-dynamic":case"wallnotif-commentsmypost-group":return this.linkUrl="/local/social/show_post.php?postdata="+this.notification.data.filterdata.postdata,getText("commented","post");case"wallnotif-likesmypost-group-dynamic":case"wallnotif-likesmypost-group-dynamic":return this.linkUrl="/local/social/show_post.php?postdata="+this.notification.data.filterdata.postdata,getText("recommended","post");case"wallnotif-likesmycomment-group-dynamic":case"wallnotif-likesmycomment-group":return this.linkUrl="/local/social/show_post.php?postdata="+this.notification.data.filterdata.postdata,getText("recommended","comment");case"wallnotif-postcommentprofilewall-commentmypost":case"wallnotif-postcommentprofilewall-commentmypost-dynamic":return this.linkUrl="/my/index.php?id="+profileId,"<b>"+posterFullname+"</b> commented on your post on <b>"+profileName+"'s</b> wall.";case"wallnotif-postcommentprofilewall-likemypost":case"wallnotif-postcommentprofilewall-likemypost-dynamic":return this.linkUrl="/my/index.php?id="+profileId,"<b>"+posterFullname+"</b> recommended your post on <b>"+profileName+"'s</b> wall";case"wallnotif-postcommentprofilewall-likemycomment":case"wallnotif-postcommentprofilewall-likemycomment-dynamic":return this.linkUrl="/my/index.php?id="+profileId,"<b>"+posterFullname+"</b> recommended your comment on <b>"+profileName+"'s</b> wall"}},Notification.prototype.coursePostsMessage=function(){var str;return this.linkUrl=this.showPostUrl(),str="<b>"+this.notification.data.poster_fullname+"</b> posted",null!=this.notification.data.parent_name&&(str+=" on <b>"+this.notification.data.parent_name+"</b>"),str+=" in <b>"+this.notification.data.course_name+"</b>."},Notification.prototype.courseTeacherPostsMessage=function(){var str;return this.linkUrl=this.showPostUrl(),str="Your professor <b>"+this.notification.data.poster_fullname+"</b> posted",null!=this.notification.data.parent_name&&(str+=" on <b>"+this.notification.data.parent_name+"</b>"),str+=" in <b>"+this.notification.data.course_name+"</b>."},Notification.prototype.joinsGroupMessage=function(){var groupname,profileId;switch(this.linkUrl=this.urlForGroup(),profileId=this.notification.data.filterdata.profileid,groupname=this.notification.data.filterdata.groupName,this.dataFieldValue("message_name")){
case"wallnotif-joinsgroup-mejoined":case"wallnotif-joinsgroup-mejoined-dynamic":return"You are now a member of <b>"+groupname+"</b>.";case"wallnotif-joinsgroup-memberjoined":case"wallnotif-joinsgroup-memberjoined-dynamic":return"<b>"+this.notification.data.poster_fullname+"</b> has joined <b>"+groupname+"</b>."}},Notification.prototype.requestContactMessage=function(){return this.linkUrlAfterCallback="/my/index.php?id="+this.notification.data.poster_lms_userid,"<b>"+this.notification.data.profilename+"</b> would like to add you as a contact."},Notification.prototype.invitationToJoinGroupMessage=function(){return this.linkUrlAfterCallback=this.urlForGroup(),"<b>"+this.notification.data.filterdata.profilename+"</b> has invited you to join <b>"+this.notification.data.filterdata.groupName+"</b>."},Notification.prototype.defineActionButtons=function(){var buttons;switch(buttons=[],this.notification.type){case"request-contact":buttons=[{text:"Accept",successMessage:"Accepted",primary:!0,actionUrl:this.contactRequestUrl("confirm")},{text:"Ignore",successMessage:"Ignored",primary:!1,actionUrl:this.contactRequestUrl("ignore")}];break;case"invitation-join-group":buttons=[{text:"Join",successMessage:"Joined",primary:!0,actionUrl:this.groupInvitationUrl("invite_join")},{text:"Ignore",successMessage:"Ignored",primary:!1,actionUrl:this.groupInvitationUrl("invite_ignore")}]}return this.actionButtonDefinitions=buttons},Notification.prototype.actionButtonClicked=function(actionButton){var thisButtonSelector;$(this.actionButtonsSelector).hide(),this.lastClickedActionButton=actionButton,thisButtonSelector=this.actionButtonsSelector+"."+actionButton.text.toLowerCase(),$(thisButtonSelector).show().addClass("button--loading")},Notification.prototype.actionSuccessCallback=function(data){this.actionStatusMessage=this.lastClickedActionButton.successMessage,$(this.actionButtonsSelector).removeClass("button--loading").hide(),this.lastClickedActionButton=null,this.linkUrl=this.linkUrlAfterCallback},Notification.prototype.actionFailureCallback=function(error){this.actionStatusMessage="An error occurred",$(this.actionButtonsSelector).show().removeClass("button--loading"),this.lastClickedActionButton=null,this.linkUrl=this.linkUrlAfterCallback},Notification.prototype.showPostUrl=function(){return"/local/social/show_post.php?wall_feed_item_id="+this.notification.data.wall_feed_item_id+"&poster_lms_userid="+this.notification.data.poster_lms_userid},Notification.prototype.urlForGroup=function(){var groupid,grouptype;return groupid=this.notification.data.filterdata.groupid,grouptype=this.notification.data.filterdata.grouptype,"/local/groups/group.php?groupid="+groupid+"&type="+grouptype+"&page=wall"},Notification.prototype.contactRequestUrl=function(action){return"/local/utilities/contacts/action.php?action="+action+"&userid="+this.notification.user_id+"&contactid="+this.notification.data.poster_lms_userid},Notification.prototype.groupInvitationUrl=function(action){return"/local/groups/action.php?userid="+this.notification.user_id+"&groupid="+this.notification.data.filterdata.groupid+"&type="+this.notification.data.filterdata.grouptype+"&requestedby="+this.notification.data.poster_lms_userid+"&action="+action},Notification}();var MyOcService,__bind=function(fn,me){return function(){return fn.apply(me,arguments)}};MyOcService=function(){function MyOcService(service,$rootScope){this.service=service,this.emitData=__bind(this.emitData,this),this.setUpListners=__bind(this.setUpListners,this),this.dataLoaded=__bind(this.dataLoaded,this),this.rootScope=$rootScope,this.service.myOc(this.dataLoaded),this.setUpListners()}return MyOcService.$inject=["Service","$rootScope"],MyOcService.prototype.dataLoaded=function(data){return this.data=data,this.rootScope.$emit("myOcLoaded",data)},MyOcService.prototype.setUpListners=function(){return this.rootScope.$on("getMyOc",this.emitData)},MyOcService.prototype.emitData=function(event,data){return this.dataLoaded(this.data)},MyOcService}(),angular.module("onlineCampusApp").factory("MyOcService",["Service","$rootScope",function(service,rootScope){return new MyOcService(service,rootScope)}]),angular.module("onlineCampusApp").run(["MyOcService",function(){}]);var NavContext;NavContext=function(){function NavContext(window){this.window=window}return NavContext.$inject=["$window"],NavContext.prototype.activate=function(){return this.pageContext=this.getPageContext(),this.urlParams=this.getUrlParams(),this.group=this.getGroupInfo()},NavContext.prototype.getLocationPath=function(){return this.window.location.pathname},NavContext.prototype.getLmsContext=function(){return this.window.i11l.LMSContext},NavContext.prototype.isStudent=function(){return"student"===this.getLmsContext().user.role},NavContext.prototype.isAdminOrContentAdmin=function(){var _ref;return"admin"===(_ref=this.getLmsContext().user.role)||"contentadmin"===_ref},NavContext.prototype.isSupportRole=function(){var _ref;return"pesadministrator"===(_ref=this.getLmsContext().user.role)||"limitedpesadministrator"===_ref||"studentsupportadmin"===_ref},NavContext.prototype.isSystemRole=function(roleName){return"admin"===roleName||"pesadministrator"===roleName||"limitedpesadministrator"===roleName||"contentadmin"===roleName||"programcoordinator"===roleName||"contentfreelancer"===roleName||"studentsupportadmin"===roleName},NavContext.prototype.getPageContext=function(){var gradeExportRe,lmsContext,quizRe,urlParams;switch(lmsContext=this.getLmsContext(),urlParams=this.getUrlParams(),this.getLocationPath()){case"/":return"home";case"/local/index.php":return"home";case"/course/view.php":return"course";case"/local/reports/grades/index.php":return"course";case"/grade/report/grader/index.php":return"course";case"/local/reports/activity_report/index.php":return"course";case"/mod/page/view.php":return"course";case"/recordings.php":return"live_sessions";case"/upcoming_sessions.php":return"live_sessions";case"/my/index.php":case"/my/profile.php":case"/my/portfolio.php":case"/my/contacts.php":case"/my/contact_users.php":return void 0===urlParams.id||urlParams.id===lmsContext.user.id?"profile":"contact";case"/local/files/index.php":return null!=urlParams.groupid&&urlParams.groupid>0?"group":urlParams.course_id?"course":"profile";case"/my/courses.php":return"all-courses";case"/local/groups/group.php":return"group";case"/local/groups/searchgroups.php":return"browse-social-groups";case"/local/groups/mygroups.php":if("1"===urlParams.groupedit)return urlParams.groupid?"editing-social-group":"creating-social-group";break;case"/notifications/all_notifications.php":return"all-notifications";default:if(gradeExportRe=/grade\/export\/\w*\/index.php/i,quizRe=/\/(mod\/quiz|manage_quiz|reports\/quiz\/edit_release)/i,quizRe.test(this.getLocationPath()))return"quizzes";if(gradeExportRe.test(this.getLocationPath()))return"course"}},NavContext.prototype.getGroupInfo=function(){return this.group={},"group"===this.pageContext&&(this.group={id:this.urlParams.groupid,type:this.urlParams.type}),this.group},NavContext.prototype.getUrlParams=function(){var pairs,result;return pairs=this.window.location.search.slice(1).split("&"),result={context:this.pageContext},pairs.forEach(function(pair){pair=pair.split("="),result[pair[0]]=decodeURIComponent(pair[1]||"")}),JSON.parse(JSON.stringify(result))},NavContext}(),angular.module("onlineCampusApp").factory("NavContext",["$window",function(window){return new NavContext(window)}]),function(){var style_element;return style_element=$("<style type='text/css' id='axs-style'></style>"),(window.addMousedownAxs=function(){return document.addEventListener("mousedown",function(e){var target;return target=$(e.target),target.is("input")?this.focus:style_element[0].innerHTML="a:focus, button:focus { outline: none; }"})})(),(window.addKeydownAxs=function(){return document.addEventListener("keydown",function(e){return style_element[0].innerHTML=""})})(),$("head").append(style_element)}();var ApGradesTabsService;ApGradesTabsService=function(){function ApGradesTabsService(userRolesService,mastheadTab,window){this.userRolesService=userRolesService,this.mastheadTab=mastheadTab,this.window=window,this.gradesRegex=/grade[rs]?\/(export\/\w*\/)?index\.php\?(plugin=grader&)?id=\d+(&\w*=\d+)?(&group=\d+)?/i}return ApGradesTabsService.$inject=["UserRolesService","MastheadTab","$window"],ApGradesTabsService.prototype._buildTab=function(label,url,regex){return null==regex&&(regex=this.gradesRegex),this.mastheadTab(!1,"course",label,url,regex,this.window)},ApGradesTabsService.prototype._gradeBookAdminTabUrl=function(courseId,sectionId){return"/ap/#/courses/"+courseId+"/sections/"+sectionId+"/gba/categories"},ApGradesTabsService.prototype._gradeBookTabUrl=function(courseId,sectionId){return"/ap/#/courses/"+courseId+"/sections/"+sectionId+"/gradebook/items"},ApGradesTabsService.prototype._gradesTabUrl=function(courseId,sectionId){return"/ap/#/courses/"+courseId+"/sections/"+sectionId+"/grades"},ApGradesTabsService.prototype._canViewGradebook=function(courseRole,highestRole){return this.userRolesService.aboveNonEditingTeacher(courseRole)||this.userRolesService.aboveContentAdminRole(highestRole)},ApGradesTabsService.prototype.studentGradesTab=function(courseId,sectionId){return this._buildTab("grades",this._gradesTabUrl(courseId,sectionId))},ApGradesTabsService.prototype.gradebookTab=function(courseId,sectionId){return this._buildTab("gradebook",this._gradeBookTabUrl(courseId,sectionId))},ApGradesTabsService.prototype.gradeAdminTab=function(courseId,sectionId){return this._buildTab("gradebook admin",this._gradeBookAdminTabUrl(courseId,sectionId))},ApGradesTabsService.prototype.gradesTabsForUser=function(courseRole,highestRole,courseId,sectionId){var tabs;return 0===sectionId&&(sectionId="all"),tabs={},this.userRolesService.isStudentRole(courseRole)&&(tabs[3]=this.studentGradesTab(courseId,sectionId)),this._canViewGradebook(courseRole,highestRole)&&(tabs[3]=this.gradebookTab(courseId,sectionId)),(this.userRolesService.aboveContentAdminRole(highestRole)||this.userRolesService.isCampusProducer(courseRole))&&(tabs[7]=this.gradeAdminTab(courseId,sectionId)),tabs},ApGradesTabsService}(),angular.module("onlineCampusApp").service("ApGradesTabsService",ApGradesTabsService);var CourseContext;CourseContext=function(){function CourseContext(window){this.window=window}return CourseContext.$inject=["$window"],CourseContext.prototype.getCurrentCourse=function(){var course_id;return course_id=this.getParams().course_id||this.getParams().id,{id:course_id}},CourseContext.prototype.getCurrentSection=function(){return{id:this.getParams().group}},CourseContext.prototype.getParams=function(){return query.parse({rebuild:!0,query:this.window.location.search})},CourseContext}(),angular.module("onlineCampusApp").factory("CourseContext",["$window",function(window){return new CourseContext(window)}]);var Service;Service=function(){function Service(resource,log){this.resource=resource,this.log=log,this.apiBaseUrl="/api",this.profileResource=this.resource(this.apiBaseUrl+"/me",null,{get:{method:"GET",cache:!0}}),this.sectionsResource=this.resource(this.apiBaseUrl+"/sections"),this.groupsResource=this.resource(this.apiBaseUrl+"/groups"),this.notificationsResource=this.resource(this.apiBaseUrl+"/notifications"),this.supportResource=this.resource(this.apiBaseUrl+"/support"),this.ocResource=this.resource(this.apiBaseUrl+"/my_oc",null,{get:{method:"GET",cache:!0}}),this.courseRosterResource=this.resource(this.apiBaseUrl+"/courses/:courseId/sections/:sectionId/roster"),this.profileImageUploadURLResource=this.resource(this.apiBaseUrl+"/me/profilePhotoSignedUploadURL"),this.userProfileURLResource=this.resource(this.apiBaseUrl+"/users/profile/:userId"),this.supportTopicsResource=this.resource(this.apiBaseUrl+"/program/:programId/support-topic?ui=true"),this.programResourcesResource=this.resource(this.apiBaseUrl+"/program/:programId/resource?ui=true"),this.courseSectionsResource=this.resource(this.apiBaseUrl+"/courses/:courseId/sections"),this.courseLiveSessionPlan=this.resource(this.apiBaseUrl+"/courses/:courseId/live-session-plan"),this.gradeItem=this.resource(this.apiBaseUrl+"/course_modules/:courseModuleId/grade_item"),this.logoutResource=this.resource("/auth/logout")}return Service.$inject=["$resource","$log"],Service.prototype.myOc=function(successFn){return this.ocResource.get(successFn)},Service.prototype.myProfile=function(){return this.profileResource.get()},Service.prototype.mySections=function(){return this.sections=this.sectionsResource.query()},Service.prototype.myGroups=function(){return this.groupsResource.query()},Service.prototype.myNotifications=function(successFn){return this.notificationsResource.get(successFn)},Service.prototype.allMyNotifications=function(page,itemsPerPage,successFn){return this.notificationsResource.get({page:page,itemsPerPage:itemsPerPage},successFn)},Service.prototype.setNotificationsAsViewed=function(successFn){return this.notificationsResource.save(successFn)},Service.prototype.notificationAction=function(actionButton,successFn,failureFn){var notificationActionResource;return"/"!==actionButton.actionUrl[0]?failureFn():(notificationActionResource=this.resource(actionButton.actionUrl),notificationActionResource.save(successFn,failureFn))},Service.prototype.mySupportContactInfo=function(callbackFn){return this.supportResource.get(callbackFn)},Service.prototype.graderReport=function(courseId,sectionId,successFn){var graderReportResource;return graderReportResource=this.resource(this.apiBaseUrl+"/courses/"+courseId+"/sections/"+sectionId+"/grades/report",null,{get:{method:"GET",cache:!0}}),graderReportResource.get(successFn)},Service.prototype.getCourseRoster=function(courseId,sectionId,successCallback,failureCallback){return this.courseRosterResource.query({courseId:courseId,sectionId:sectionId},successCallback,failureCallback)},Service.prototype.profileImageUploadURLS=function(originalType,croppedType,successCallback,failureCallback){return this.profileImageUploadURLResource.get({originalFileType:originalType,croppedFileType:croppedType},successCallback,failureCallback)},Service.prototype.setAclForUser=function(successCallback,failureCallback){return this.profileImageUploadURLResource.save(successCallback,failureCallback)},Service.prototype.userProfile=function(userId,successCallback){return this.userProfileURLResource.get({userId:userId},successCallback)},Service.prototype.getProgramResources=function(programId,successCallback){return this.programResourcesResource.query({programId:programId},successCallback)},Service.prototype.getcourseSections=function(courseId,successCallback){return this.courseSectionsResource.query({courseId:courseId},successCallback)},Service.prototype.getCourseLiveSessionPlan=function(courseId,successCallback){return this.courseLiveSessionPlan.get({courseId:courseId},successCallback)},Service.prototype.getGradeItemForCourseModule=function(courseModuleId,successCallback){return this.gradeItem.get({courseModuleId:courseModuleId},successCallback)},Service.prototype.logout=function(successCallback){return this.logoutResource.save(successCallback)},Service}(),angular.module("onlineCampusApp").service("Service",Service);var UserRolesService;UserRolesService=function(){function UserRolesService(){this.all_roles={admin:["admin"],pes_admin:["pesadministrator"],limited_pes_admin:["limitedpesadministrator"],content_admin:["contentadmin"],student_support_admin:["studentsupportadmin"],on_campus_producer:["campusproducer"],content_freelancer:["contentfreelancer"],program_coordinator:["programcoordinator"],course_coordinator:["coursecoordinator"],teacher:["teacher"],auditor:["auditor"],student:["student"]}}return UserRolesService.prototype._groupContainsRole=function(group,roleStr){return this.all_roles[group].indexOf(roleStr)!==-1},UserRolesService.prototype._inOneOrMoreGroups=function(groups,roleStr){var _this=this;return groups.map(function(group){return _this._groupContainsRole(group,roleStr)}).indexOf(!0)!==-1},UserRolesService.prototype.isStudentRole=function(role){return this._groupContainsRole("student",role)},UserRolesService.prototype.isCampusProducer=function(role){return this._groupContainsRole("on_campus_producer",role)},UserRolesService.prototype.aboveContentAdminRole=function(role){return this._inOneOrMoreGroups(["admin","pes_admin","limited_pes_admin","content_admin"],role)},UserRolesService.prototype.aboveNonEditingTeacher=function(role){var teacherRoles;return teacherRoles=["teacher","course_coordinator","program_coordinator","on_campus_producer","student_support_admin","admin"],this._inOneOrMoreGroups(teacherRoles,role)||this.aboveContentAdminRole(role)},UserRolesService}(),angular.module("onlineCampusApp").service("UserRolesService",UserRolesService);var addVistorDataToProp,setupSegementIdentity;addVistorDataToProp=function(visitor,props){var key,val,visitor_props;visitor_props={ip_address:null!=visitor?visitor.ip.address:void 0,continent_code:null!=visitor?visitor.geo.continentCode:void 0,continent_name:null!=visitor?visitor.geo.continentName:void 0,country_code:null!=visitor?visitor.geo.countryCode:void 0,country_name:null!=visitor?visitor.geo.countryName:void 0,city:null!=visitor?visitor.geo.city:void 0,postal_code:null!=visitor?visitor.geo.postalCode:void 0,latitude:null!=visitor?visitor.geo.coordinates.latitude:void 0,longitude:null!=visitor?visitor.geo.coordinates.longitude:void 0,locale_language_code:null!=visitor?visitor.locale.languageCode:void 0,locale_country_code:null!=visitor?visitor.locale.countryCode:void 0,browser_engine:null!=visitor?visitor.browser.engine.name:void 0,browser_engine_major_version:null!=visitor?visitor.browser.plugins.flash.versionMajor:void 0,browser_engine_minor_version:null!=visitor?visitor.browser.plugins.flash.versionMinor:void 0,browser:null!=visitor?visitor.browser.name:void 0,browser_major_version:null!=visitor?visitor.browser.versionMajor:void 0,browser_minor_version:null!=visitor?visitor.browser.versionMinor:void 0,flash_enabled:null!=visitor?visitor.browser.plugins.flash.enabled:void 0,flash_version_major:null!=visitor?visitor.browser.plugins.flash.versionMajor:void 0,flash_version_minor:null!=visitor?visitor.browser.plugins.flash.versionMinor:void 0,flash_version_patch:null!=visitor?visitor.browser.plugins.flash.versionRevision:void 0,silverlight_enabled:null!=visitor?visitor.browser.plugins.silverlight.enabled:void 0,silverlight_version_major:null!=visitor?visitor.browser.plugins.silverlight.versionMajor:void 0,silverlight_version_minor:null!=visitor?visitor.browser.plugins.silverlight.versionMinor:void 0,java_enabled:null!=visitor?visitor.browser.plugins.java.enabled:void 0,os_name:null!=visitor?visitor.os.name:void 0,os_version:null!=visitor?visitor.os.version:void 0,screen_width:null!=visitor?visitor.device.screen.width:void 0,screen_height:null!=visitor?visitor.device.screen.height:void 0};for(key in visitor_props)val=visitor_props[key],props[key]=val;return props},setupSegementIdentity=function(){var analytics,props,user_created_date,_ref,_ref1,_ref10,_ref11,_ref12,_ref13,_ref14,_ref15,_ref16,_ref17,_ref18,_ref19,_ref2,_ref20,_ref21,_ref22,_ref23,_ref24,_ref25,_ref26,_ref27,_ref3,_ref4,_ref5,_ref6,_ref7,_ref8,_ref9;return analytics="undefined"!=typeof window&&null!==window&&null!=(_ref=window.u)?new _ref.analytics_wrapper.AnalyticsService:void 0,user_created_date=new Date,user_created_date.setTime(1e3*("undefined"!=typeof window&&null!==window&&null!=(_ref1=window.i11l)&&null!=(_ref2=_ref1.LMSContext)&&null!=(_ref3=_ref2.user)?_ref3.time_created:void 0)),props={fullName:"undefined"!=typeof window&&null!==window&&null!=(_ref4=window.i11l)&&null!=(_ref5=_ref4.LMSContext)&&null!=(_ref6=_ref5.user)?_ref6.full_name:void 0,firstName:"undefined"!=typeof window&&null!==window&&null!=(_ref7=window.i11l)&&null!=(_ref8=_ref7.LMSContext)&&null!=(_ref9=_ref8.user)?_ref9.first_name:void 0,lastName:"undefined"!=typeof window&&null!==window&&null!=(_ref10=window.i11l)&&null!=(_ref11=_ref10.LMSContext)&&null!=(_ref12=_ref11.user)?_ref12.last_name:void 0,role:"undefined"!=typeof window&&null!==window&&null!=(_ref13=window.i11l)&&null!=(_ref14=_ref13.LMSContext)&&null!=(_ref15=_ref14.user)?_ref15.role:void 0,degree_offering:"undefined"!=typeof window&&null!==window&&null!=(_ref16=window.i11l)&&null!=(_ref17=_ref16.LMSContext)&&null!=(_ref18=_ref17.user)?_ref18.degree_offering:void 0,created:user_created_date,ignore:!("undefined"!=typeof window&&null!==window&&null!=(_ref19=window.i11l)&&null!=(_ref20=_ref19.LMSContext)&&null!=(_ref21=_ref20.user)?_ref21.analytics:void 0)},props=addVistorDataToProp("undefined"!=typeof window&&null!==window?window.visitor:void 0,props),("undefined"!=typeof window&&null!==window&&null!=(_ref22=window.i11l)&&null!=(_ref23=_ref22.LMSContext)&&null!=(_ref24=_ref23.user)?_ref24.uuid:void 0)?analytics.identify("undefined"!=typeof window&&null!==window&&null!=(_ref25=window.i11l)&&null!=(_ref26=_ref25.LMSContext)&&null!=(_ref27=_ref26.user)?_ref27.uuid:void 0,props):console.log("Segement identify failure")},angular.module("onlineCampusApp").run(function(){return setupSegementIdentity()}),angular.module("timetableApp").directive("timetable",function(){return{restrict:"A",controller:"MainCtrl as mainCtrl",templateUrl:"tt-widget.html"}}),angular.module("timetableApp").directive("timeRange",["moment",function(moment){return{restrict:"E",replace:!0,scope:{starts:"@",duration:"@"},template:'<time class="timetable__time" ng-bind-html="range"></time>',link:function(scope,elm,attrs){return scope.end=moment(scope.starts).add(scope.duration,"seconds"),scope.range=moment(scope.starts).twix(scope.end).format({showDate:!1}).replace(/\-/gi,"&ndash;")}}}]),angular.module("timetableApp").directive("ngKeymodaltab",function(){return{restrict:"A",link:function(scope,element,attrs){return element.bind("keydown keypress",function(event){var close_button,first_input,last_button,last_select,save_button,_ref;if(13!==(_ref=event.which)&&32!==_ref||element.find(".icon--close").length&&element.click(),9===event.which)switch(event.preventDefault(),last_select=$('#timetable-modal select:not([disabled="disabled"])').last(),first_input=$("#timetable-modal input").first(),last_button=$("#timetable-modal button").last(),close_button=$("#timetable-modal button").first(),1===$("#timetable-modal button").not(":disabled").not(".button--disabled").length&&(last_button=$('#timetable-modal select:not([disabled="disabled"])').last()),element.text()){case"Create":return event.shiftKey?last_select.focus():close_button.focus();case"Duplicate":return event.shiftKey?last_select.focus():close_button.focus();case"Save":return event.shiftKey?last_select.focus():"Save"===last_button.text()?close_button.focus():last_button.focus();case"Delete":return save_button=$(".save-edit-btn")[0],event.shiftKey?save_button.focus():close_button.focus();case"":return event.shiftKey?last_button.focus():first_input.focus()}})}}}),angular.module("timetableApp").directive("upcomingSessions",function(){return{restrict:"EA",controller:"UpcomingMeetingsCtrl as recordingsCtrl",template:"<div recordings-filter></div><div recordings-table></div>"}}),angular.module("timetableApp").filter("new_create",function(){return function(input){return"New"===input?"Create":"Edit"===input?"Save":input}}),angular.module("timetableApp").filter("success_message",function(){return function(input,type){return type?"success"===input?"Edit"===type?"Meeting Edited":"Meeting Created":void 0:input}});var MainCtrl,__bind=function(fn,me){return function(){return fn.apply(me,arguments)}};MainCtrl=function(){function MainCtrl(scope,meetingsService,$ipCookie,$harmonyModal,$sce,window,analyticsSvc,$timeout,moment,recordingService){this.scope=scope,this.meetingsService=meetingsService,this.window=window,this.analyticsSvc=analyticsSvc,this.moment=moment,this.recordingService=recordingService,this.enterRoom=__bind(this.enterRoom,this),this.failedToEnterRoom=__bind(this.failedToEnterRoom,this),this.moveRecordingFailureCallback=__bind(this.moveRecordingFailureCallback,this),this.moveRecordingSuccessCallback=__bind(this.moveRecordingSuccessCallback,this),this.navigationCallback=__bind(this.navigationCallback,this),this.updateMeetings=__bind(this.updateMeetings,this),this.timeout=$timeout,this.navigationEnabled=!1,this.sce=$sce,this.modal=$harmonyModal,this.canMoveRecordings=!0,this.ip_cookie=$ipCookie,this.displayed_date=this.getDisplayedDate(),this.name="Meetings",this.meetings=this.meetingsService.getMeetingsByDate(this.utcDisplayedDate(),this.navigationCallback,this.navigationCallback),this.scope=this.scope}return MainCtrl.$inject=["$scope","MeetingsService","ipCookie","$harmonyModal","$sce","$window","TimetableAnalyticsService","$timeout","moment","RecordingService"],MainCtrl.prototype.announce=function(message){var announcer;return announcer=$("#a11y_announcer"),announcer.text(message)},MainCtrl.prototype.clear_announcer=function(){var announcer;return announcer=$("#a11y_announcer"),announcer.text("")},MainCtrl.prototype.utcDisplayedDate=function(){return this.moment.utc(this.moment(this.displayed_date,"YYYYMMDD")).format("YYYY-MM-DD HH:mm")},MainCtrl.prototype.updateMeetings=function(){return this.navigationEnabled=!1,this.meetings=this.meetingsService.getMeetingsByDate(this.utcDisplayedDate(),this.navigationCallback,this.navigationCallback)},MainCtrl.prototype.navigationCallback=function(){return this.navigationEnabled=!0},MainCtrl.prototype.getDisplayedDate=function(){var date;return this.meeting_session=this.ip_cookie("MeetingsSession"),this.meeting_session?date=this.meeting_session.date:(date=this.moment().format("YYYYMMDD"),this.ip_cookie("MeetingsSession",{date:date},{path:"/"})),date},MainCtrl.prototype.displayDate=function(){var moment;return this.moment.locale("en",{calendar:{lastDay:"[Yesterday]",sameDay:"[Today]",nextDay:"[Tomorrow]",lastWeek:"ddd[,] MMM Do",nextWeek:"ddd[,] MMM Do",sameElse:"ddd[,] MMM Do"}}),moment=this.moment(this.displayed_date,"YYYYMMDD"),moment.calendar()},MainCtrl.prototype.changeDisplayedDate=function(day_offset){var moment;return this.navigationEnabled=!1,this.analyticsSvc.sendNavigationByDayOrWeekEvent(day_offset),moment=this.moment(this.displayed_date,"YYYYMMDD"),this.displayed_date=moment.add(day_offset,"days").format("YYYYMMDD"),this.setCookie()},MainCtrl.prototype.resetDisplayDate=function(){var moment;return this.navigationEnabled=!1,this.analyticsSvc.sendNavigationByDayOrWeekEvent(0),moment=this.moment(),this.displayed_date=moment.format("YYYYMMDD"),this.setCookie()},MainCtrl.prototype.displayedDuration=function(seconds){var hours,hours_in_seconds,humanized_hours,humanized_minutes,humanized_time,minutes,minutes_in_seconds;return minutes_in_seconds=seconds%3600,hours_in_seconds=seconds-minutes_in_seconds,minutes=minutes_in_seconds>0?this.moment.duration(minutes_in_seconds,"seconds").as("minutes"):"",hours=this.moment.duration(hours_in_seconds,"seconds").as("hours"),humanized_minutes=""===minutes?"":minutes+" min.",humanized_hours=hours_in_seconds>0?hours+" hr. ":"",humanized_time=humanized_hours+humanized_minutes},MainCtrl.prototype.setCookie=function(){return this.ip_cookie("MeetingsSession",{date:this.displayed_date},{path:"/"}),this.meetings=this.meetingsService.getMeetingsByDate(this.utcDisplayedDate(),this.navigationCallback,this.navigationCallback)},MainCtrl.prototype.time_until=function(start_datetime){var delta_ms,now,result,start;return start=new Date(start_datetime),now=Date.now(),delta_ms=start-now,result=!(delta_ms<0)&&(!(delta_ms>9e5)&&parseInt(delta_ms/1e3,10))},MainCtrl.prototype.show_join_button=function(start_datetime,duration){var delta_ms,now,result,start;return start=new Date(start_datetime),now=Date.now(),delta_ms=start-now,result=!1,delta_ms>0?delta_ms<9e5&&(result=!0):-1*delta_ms<1e3*duration&&(result=!0),result},MainCtrl.prototype.getParticipants=function(occurrence){return this.meetingsService.getParticipants(occurrence)},MainCtrl.prototype.getRecording=function(meeting,recording){return this.recordingService.launchRecording(meeting,recording)},MainCtrl.prototype.moveRecording=function(meeting_id,action,recording_id){return this.canMoveRecordings=!1,this.meetingsService.moveRecording(meeting_id,action,recording_id,this.moveRecordingSuccessCallback,this.moveRecordingFailureCallback)},MainCtrl.prototype.removeRecording=function(meeting_id,recording_id){if(confirm("Are you sure you want to remove this recording?"))return this.canMoveRecordings=!1,this.meetingsService.removeRecording(meeting_id,recording_id,this.moveRecordingSuccessCallback,this.moveRecordingFailureCallback)},MainCtrl.prototype.moveRecordingSuccessCallback=function(){return this.canMoveRecordings=!0,this.window.meeeting_created="Your recording was successfully moved.",this.creationSuccess(),this.updateMeetings()},MainCtrl.prototype.moveRecordingFailureCallback=function(data){return this.canMoveRecordings=!0,this.actionFailure(data.data.message)},MainCtrl.prototype.actionFailure=function(message){var _this=this;return this.action_failure=message,this.action_fadein=!0,this.timeout(function(){return _this.announce(message)},1200),this.timeout(function(){return _this.action_fadein=!1},3e3),this.timeout(function(){return _this.action_failure=!1,_this.clear_announcer()},5e3)},MainCtrl.prototype.joinMeetingService=function(meeting){var failure,success,_this=this;return success=function(data){var join_time;return _this.window.open(data.join_url),join_time=_this.moment().toISOString(),_this.analyticsSvc.sendJoinedMeetingSuccessEvent(meeting,join_time)},failure=function(data){var attempted_join_time,message;return message="There was an error joining your meeting.",data.data.hasOwnProperty("error_codes")&&(message=_this.messageFromCode(data.data.error_codes[0])),_this.actionFailure(message),attempted_join_time=_this.moment().toISOString(),_this.analyticsSvc.sendJoinedMeetingFailureEvent(meeting,attempted_join_time)},this.meetingsService.joinMeeting(meeting.live_session_id,success,failure)},MainCtrl.prototype.messageFromCode=function(code){return"OutOfHostLicenses"===code?"There was an error in providing you access to this meeting.":"CouldNotLogin"===code?"There was a problem logging into the Adobe account.":void 0},MainCtrl.prototype.enterRoomService=function(){return this.meetingsService.enterMyRoom(this.enterRoom,this.failedToEnterRoom)},MainCtrl.prototype.failedToEnterRoom=function(data){var code,message;return message="There was an error entering your room.",data.data.hasOwnProperty("error_codes")&&(code=data.data.error_codes[0],"OutOfHostLicenses"===code&&(message="There was an error in providing you access to your room."),"CouldNotLogin"===code&&(message="There was a problem logging into the Adobe account.")),this.actionFailure(message)},MainCtrl.prototype.enterRoom=function(data){return this.analyticsSvc.sendEnterRoomEvent(),this.window.open(data.join_url)},MainCtrl.prototype.openMeetingModal=function(){var _this=this;return this.analyticsSvc.sendOpenModalEvent(this.scope.form_action),this.window.meeeting_created=!1,angular.element("body").addClass("u--no-scroll"),this.modalInstance=this.modal.open({animation:!0,backdrop:!0,openedClass:"u--no-scroll",templateUrl:"tt-meeting-form.html",windowTemplateUrl:"tt-modal-window.html",controller:"MeetingFormCtrl as meetingFormCtrl"}),this.modalInstance.result.then(function(){return _this.updateMeetings(),_this.creationSuccess(),angular.element("body").removeClass("u--no-scroll")})},MainCtrl.prototype.openInviteesModal=function(){return this.window.meeeting_created=!1,this.modalInstance=this.modal.open({animation:!0,backdrop:!0,templateUrl:"tt-invitees_modal.html",windowTemplateUrl:"tt-modal-window.html",scope:this.scope})},MainCtrl.prototype.creationSuccess=function(){var _this=this;if(this.window.meeeting_created)return this.creation_success=this.window.meeeting_created,this.creation_fadein=!0,this.timeout(function(){
var message;return $(".tt_header").focus(),message=$("#timetable .alert:not(.ng-hide)").text().trim(),_this.announce(message)},1200),this.timeout(function(){return _this.creation_fadein=!1},3e3),this.timeout(function(){return _this.creation_success=!1,_this.clear_announcer()},5e3)},MainCtrl.prototype.viewInvitees=function(occurrence){return this.getParticipants(occurrence),this.scope.occurrence=occurrence,this.openInviteesModal()},MainCtrl.prototype.newMeeting=function(){return this.scope.form_action={type:"New"},this.openMeetingModal()},MainCtrl.prototype.editMeeting=function(meeting_id){return this.scope.form_action={type:"Edit",meeting_id:meeting_id},this.openMeetingModal()},MainCtrl.prototype.duplicateMeeting=function(meeting_id){return this.scope.form_action={type:"Duplicate",meeting_id:meeting_id},this.openMeetingModal()},MainCtrl.prototype.notOnRecordingsPage=function(){return this.window.location.pathname.indexOf("recordings")===-1},MainCtrl}(),angular.module("timetableApp").controller("MainCtrl",MainCtrl);var MeetingFormCtrl,__bind=function(fn,me){return function(){return fn.apply(me,arguments)}},__indexOf=[].indexOf||function(item){for(var i=0,l=this.length;i<l;i++)if(i in this&&this[i]===item)return i;return-1};MeetingFormCtrl=function(){function MeetingFormCtrl(scope,rootScope,meetingsService,window,$filter,analyticsSvc,$timeout,$moment,log,Validator){this.scope=scope,this.rootScope=rootScope,this.meetingsService=meetingsService,this.window=window,this.analyticsSvc=analyticsSvc,this.log=log,this.Validator=Validator,this.allowHostSelection=__bind(this.allowHostSelection,this),this.isLoggedInUserAdmin=__bind(this.isLoggedInUserAdmin,this),this.deleteMeetingsSuccessCallback=__bind(this.deleteMeetingsSuccessCallback,this),this.failureCallback=__bind(this.failureCallback,this),this.successCallback=__bind(this.successCallback,this),this.dataToSave=__bind(this.dataToSave,this),this.failureGetUserCallback=__bind(this.failureGetUserCallback,this),this.successGetMembersCallback=__bind(this.successGetMembersCallback,this),this.onDatePickerSelect=__bind(this.onDatePickerSelect,this),this.updateMeetingDataBasedOnInvitees=__bind(this.updateMeetingDataBasedOnInvitees,this),this.cleanse_assignment_options_and_values_on_duplicate=__bind(this.cleanse_assignment_options_and_values_on_duplicate,this),this.setDefaultFormData=__bind(this.setDefaultFormData,this),this.myOcLoaded=__bind(this.myOcLoaded,this),this.setUpListners=__bind(this.setUpListners,this),this.rootScope.$on("myOcLoaded",this.myOcLoaded),this.setUpListners(),this.validator=this.Validator(),this.updatingDuration=!1,this.INVITE_ONLY=0,this.moment=$moment,this.ONLY_SECTION_ACCESS=1,this.ALL_SECTIONS_ACCESS=2,this.timeout=$timeout,this.form_data={},this.form_data.populated=!1,this.form_values=null,this.meeting_options_and_values=null,this.filter=$filter,"New"===this.scope.form_action.type?this.form_options=this.meetingsService.getNewMeetingFormData(this.setDefaultFormData):"Edit"!==this.scope.form_action.type&&"Duplicate"!==this.scope.form_action.type||(this.meeting_options_and_values=this.meetingsService.getMeetingFormData(this.scope.form_action.meeting_id,this.setDefaultFormData))}return MeetingFormCtrl.$inject=["$scope","$rootScope","MeetingsService","$window","$filter","TimetableAnalyticsService","$timeout","moment","$log","Validator"],MeetingFormCtrl.prototype.setUpListners=function(){return this.rootScope.$emit("getMyOc")},MeetingFormCtrl.prototype.myOcLoaded=function(event,data){return this.user=data.me},MeetingFormCtrl.prototype.inviteeUpdated=function(newValue,oldValue){var item,_ref;if(newValue!==oldValue)return null!=this.form_data.invitee&&0===function(){var _i,_len,_ref,_results;for(_ref=this.form_data.invitees,_results=[],_i=0,_len=_ref.length;_i<_len;_i++)item=_ref[_i],item.id===this.form_data.invitee.originalObject.id&&item.type===this.form_data.invitee.originalObject.type&&_results.push(item);return _results}.call(this).length&&("user"===this.form_data.invitee.originalObject.type&&this.form_data.invitees.push(this.form_data.invitee.originalObject),"group"!==(_ref=this.form_data.invitee.originalObject.type)&&"section"!==_ref&&"course"!==_ref||(this.form_data.invitees.push(this.form_data.invitee.originalObject),this.addMembers(this.form_data.invitee.originalObject))),this.displayInvitees=[].concat(this.form_data.invitees),this.updateMeetingDataBasedOnInvitees()},MeetingFormCtrl.prototype.showInviteesTable=function(){return null!=this.displayInvitees&&this.displayInvitees.length>0},MeetingFormCtrl.prototype.updateLastMeetingDate=function(){var date,last_meeting_date;return date=this.moment(this.form_data.start_datetime),last_meeting_date=date.add(this.form_data.recurring_weekly-1,"week"),this.last_meeting_date=last_meeting_date.format("MM/DD"),this.last_meeting_day=last_meeting_date.format("dddd")},MeetingFormCtrl.prototype.meetingTypeUpdated=function(){if("class discussion"!==this.form_data.meeting_type)return this.form_data.assignment=null},MeetingFormCtrl.prototype.removeInvitee=function(invitee){var item;return this.form_data.invitees=function(){var _i,_len,_ref,_results;for(_ref=this.form_data.invitees,_results=[],_i=0,_len=_ref.length;_i<_len;_i++)item=_ref[_i],item.id===invitee.id&&item.type===invitee.type||_results.push(item);return _results}.call(this),this.updateMeetingDataBasedOnInvitees(),this.keepFocusModal()},MeetingFormCtrl.prototype.getAssignments=function(){return this.isCourseMeeting()?this.form_data.invitees[0].assignments:[]},MeetingFormCtrl.prototype.setDefaultFormData=function(data){var moment,_ref,_this=this;return this.submitting=!1,null!=data.values?(this.meeting_options_and_values=data,this.form_values=data.values,this.form_options=data.options):this.form_options=data,this.form_data.invitees=[],this.displayInvitees=[].concat(this.form_data.invitees),this.form_data.host={originalObject:this.form_options.host},this.form_data.section_or_group=null,this.form_data.assignment=null,moment=this.moment(this.window.Date.now()).set("second",0),moment.add(15-moment.minutes()%15,"minute"),this.form_data.start_datetime=moment.toDate(),this.aria_time=moment.format("h mm a").toString(),this.aria_date=moment.format("dddd MMMM Do YYYY").toString(),this.form_data.start_datetime=this.filter("date")(this.form_data.start_datetime,"yyyy/MM/dd HH:mm Z"),this.form_data.duration=60,this.form_data.access=this.ONLY_SECTION_ACCESS,this.form_data.recording_access=0,this.form_data.recurring_weekly=2,this.form_values?(this.form_data.host={originalObject:this.form_values.host},this.inviteesSearchParam="hostid="+(null!=(_ref=this.form_data.host)?_ref.originalObject.id:void 0),this.form_data.section_or_group=this.form_values.section_or_group,this.form_data.assignment=this.form_values.assignment,this.form_data.name=this.form_values.name,this.form_data.description=this.form_values.description,this.form_data.start_datetime=this.filter("date")(this.form_values.start_datetime,"yyyy/MM/dd HH:mm Z"),moment=this.moment(this.form_values.start_datetime),this.aria_time=moment.format("h mm a").toString(),this.aria_date=moment.format("dddd MMMM Do YYYY").toString(),this.form_data.duration=this.form_values.duration,this.form_data.meeting_type=this.form_values.meeting_type,this.form_data.access=this.form_values.access,this.form_data.recording_access=this.form_values.recording_access):this.setDefaultMeetingTypesAndRecordingOptionsByHostRole(),this.form_data.populated=!0,this.scope.$watch("meetingFormCtrl.form_data.host",function(newValue,oldValue){return _this.hostUpdated(newValue,oldValue)}),this.scope.$watch("meetingFormCtrl.form_data.invitee",function(newValue,oldValue){return _this.inviteeUpdated(newValue,oldValue)}),this.form_values&&this.setupInviteesForEditing(),this.keepFocusModal(),this.addValidation(),this.updateLastMeetingDate()},MeetingFormCtrl.prototype.addValidation=function(){return this.validator.addRequired("input[name=name]")},MeetingFormCtrl.prototype.setDefaultMeetingTypesAndRecordingOptionsByHostRole=function(){return this.archive_access_options=[{name:"Only Me",value:0},{name:"Invitees",value:1}],this.isHostTeacherOrCourseCoordinatorOrProgramCoordinator()?(this.meeting_type_options=["study group","office hour"],this.form_data.meeting_type="office hour"):(this.form_data.meeting_type="study group",this.meeting_type_options=["study group"])},MeetingFormCtrl.prototype.setupInviteesForEditing=function(){var invitee,_i,_len,_ref;for(this.form_data.invitees=this.form_values.invitees||[],this.form_data.section_or_group&&this.form_data.invitees.push(this.form_data.section_or_group),this.displayInvitees=[].concat(this.form_data.invitees),_ref=this.form_data.invitees,_i=0,_len=_ref.length;_i<_len;_i++)invitee=_ref[_i],"user"!==invitee.type&&this.addMembers(invitee);return"Duplicate"===this.scope.form_action.type&&this.cleanse_assignment_options_and_values_on_duplicate(),this.updateMeetingDataBasedOnInvitees()},MeetingFormCtrl.prototype.cleanse_assignment_options_and_values_on_duplicate=function(){var _this=this;if(this.isCourseMeeting()&&null!=this.form_values.assignment)return this.form_data.invitees[0].assignments=this.form_data.invitees[0].assignments.filter(function(obj){return obj.id!==_this.form_values.assignment.id}),this.form_values.assignment=null,this.form_data.assignment=null},MeetingFormCtrl.prototype.unsetEntireCourseRecordingAccess=function(){if(2===this.form_data.recording_access)return this.form_data.recording_access=0},MeetingFormCtrl.prototype.resetFormDataAccess=function(){if(this.form_data.access===this.INVITE_ONLY||this.form_data.access===this.ALL_SECTIONS_ACCESS)return this.form_data.access=this.ONLY_SECTION_ACCESS},MeetingFormCtrl.prototype.updateMeetingDataBasedOnInvitees=function(){if(this.archive_access_options=[{name:"Only Me",value:0},{name:"Invitees",value:1}],this.isGroupMeeting())return this.form_data.meeting_type="group meeting",this.meeting_type_options=["group meeting"],this.form_data.assignment=null,this.unsetEntireCourseRecordingAccess(),void this.resetFormDataAccess();if(this.isCourseMeeting()){if(this.resetFormDataAccess(),!this.isHostTeacherOrCourseCoordinatorOrProgramCoordinator())return this.form_data.meeting_type="study group",this.meeting_type_options=["study group"],this.unsetEntireCourseRecordingAccess();if(this.meeting_type_options=["study group","office hour","class discussion"],null!=this.form_data.meeting_type&&"group meeting"!==this.form_data.meeting_type||(this.form_data.meeting_type="office hour"),this.isHostCourseCoordinator()&&(this.hasAllSectionsAccess()?this.archive_access_options=[{name:"Only Me",value:0},{name:"Invitees",value:1}]:this.archive_access_options=[{name:"Only Me",value:0},{name:"Invitees",value:1},{name:"Entire Course",value:2}]),this.hasAllSectionsAccess())return this.form_data.access=this.ALL_SECTIONS_ACCESS}else this.form_data.assignment=null,this.unsetEntireCourseRecordingAccess(),this.form_data.access=this.INVITE_ONLY,this.isHostTeacherOrCourseCoordinatorOrProgramCoordinator()?(this.meeting_type_options=["study group","office hour"],null!=this.form_data.meeting_type&&"group meeting"!==this.form_data.meeting_type&&"class discussion"!==this.form_data.meeting_type||(this.form_data.meeting_type="office hour")):(this.form_data.meeting_type="study group",this.meeting_type_options=["study group"])},MeetingFormCtrl.prototype.onDatePickerSelect=function(){var moment,now_datetime,original_start_datetime;return this.form_data.start_datetime=this.filter("date")(this.form_data.start_datetime,"yyyy/MM/dd HH:mm Z"),now_datetime=this.moment(this.window.Date.now()),now_datetime=now_datetime.set("second",0).add(5-now_datetime.minutes()%5,"minutes"),moment=this.moment(this.form_data.start_datetime),this.aria_time=moment.format("h mm a").toString(),this.aria_date=moment.format("dddd MMMM Do YYYY").toString(),original_start_datetime="Edit"===this.scope.form_action.type&&this.moment(this.form_values.start_datetime).isBefore(now_datetime)?this.moment(this.form_values.start_datetime):now_datetime,this.moment(this.form_data.start_datetime).isBefore(original_start_datetime)&&(this.form_data.start_datetime=original_start_datetime.toDate()),this.hasEnded()&&this.setMinStartTime(),this.updateLastMeetingDate()},MeetingFormCtrl.prototype.showAssignmentSelectOptions=function(){var assignments,_ref,_ref1;return assignments=this.getAssignments(),(null!=assignments?assignments.length:void 0)&&"class discussion"===this.form_data.meeting_type&&this.form_data.host&&"student"!==(null!=(_ref=this.form_data.host.originalObject)&&null!=(_ref1=_ref.role_data)?_ref1.role:void 0)},MeetingFormCtrl.prototype.isHostCourseCoordinator=function(){var role,_ref,_ref1,_ref2;return role=null!=(_ref=this.form_data.host)&&null!=(_ref1=_ref.originalObject)&&null!=(_ref2=_ref1.role_data)?_ref2.role:void 0,"coursecoordinator"===role},MeetingFormCtrl.prototype.isHostTeacherOrCourseCoordinatorOrProgramCoordinator=function(){var role,_ref,_ref1,_ref2;return role=null!=(_ref=this.form_data.host)&&null!=(_ref1=_ref.originalObject)&&null!=(_ref2=_ref1.role_data)?_ref2.role:void 0,"coursecoordinator"===role||"teacher"===role||"editingteacher"===role||"programcoordinator"===role},MeetingFormCtrl.prototype.showMeetingTypes=function(){var _ref,_ref1;return(null!=(_ref=this.meeting_type_options)?_ref.length:void 0)>1&&(null!=(_ref1=this.form_data.invitees)?_ref1.length:void 0)>0},MeetingFormCtrl.prototype.isGroupMeeting=function(){return null!=this.form_data.invitees&&1===this.form_data.invitees.length&&"group"===this.form_data.invitees[0].type},MeetingFormCtrl.prototype.invitedGroup=function(){return this.isGroupMeeting()?this.form_data.invitees[0]:null},MeetingFormCtrl.prototype.invitedCourseSection=function(){return this.isCourseMeeting()?this.form_data.invitees[0]:null},MeetingFormCtrl.prototype.isCourseMeeting=function(){return null!=this.form_data.invitees&&1===this.form_data.invitees.length&&("section"===this.form_data.invitees[0].type||"course"===this.form_data.invitees[0].type)},MeetingFormCtrl.prototype.hasAllSectionsAccess=function(){return null!=this.form_data.invitees&&1===this.form_data.invitees.length&&"course"===this.form_data.invitees[0].type},MeetingFormCtrl.prototype.expandSelectedSectionOrGroup=function(groupOrSection){var item,member,members,_i,_len;for(members=function(){var _i,_len,_ref,_results;for(_ref=groupOrSection.members,_results=[],_i=0,_len=_ref.length;_i<_len;_i++)member=_ref[_i],member.invitee_id!==this.form_data.host.originalObject.id&&_results.push(member);return _results}.call(this),this.form_data.invitees=function(){var _i,_len,_ref,_results;for(_ref=this.form_data.invitees,_results=[],_i=0,_len=_ref.length;_i<_len;_i++)item=_ref[_i],item.id===groupOrSection.id&&item.type===groupOrSection.type||_results.push(item);return _results}.call(this),_i=0,_len=members.length;_i<_len;_i++)member=members[_i],member.id=member.invitee_id,member.type=member.invitee_type,this.inInvitees(member)||this.form_data.invitees.push(member);return this.displayInvitees=[].concat(this.form_data.invitees),this.updateMeetingDataBasedOnInvitees(),this.keepFocusModal()},MeetingFormCtrl.prototype.addMembers=function(groupOrSection){if(!groupOrSection.members)return this.meetingsService.getParticipants({live_session_id:0,participants:[]},groupOrSection.type,groupOrSection.id,this.successGetMembersCallback,this.failureGetUserCallback)},MeetingFormCtrl.prototype.successGetMembersCallback=function(response){var item,originalInvitee;return response[0].id=response[0].invitee_id,response[0].type=response[0].invitee_type,originalInvitee=function(){var _i,_len,_ref,_results;for(_ref=this.form_data.invitees,_results=[],_i=0,_len=_ref.length;_i<_len;_i++)item=_ref[_i],item.id===response[0].id&&item.type===response[0].type&&_results.push(item);return _results}.call(this)[0],originalInvitee.members=function(){var _i,_len,_ref,_results;for(_ref=response[0].members,_results=[],_i=0,_len=_ref.length;_i<_len;_i++)item=_ref[_i],_results.push(item);return _results}(),this.displayInvitees=[].concat(this.form_data.invitees)},MeetingFormCtrl.prototype.inInvitees=function(invitee){var item,_i,_len,_ref;for(_ref=this.form_data.invitees,_i=0,_len=_ref.length;_i<_len;_i++)if(item=_ref[_i],item.id===invitee.id&&item.type===invitee.type)return!0;return!1},MeetingFormCtrl.prototype.failureGetUserCallback=function(response){return this.modal_error="Error occurred getting users for course or group"},MeetingFormCtrl.prototype.getArchiveAccessOptions=function(){return this.archive_access_options},MeetingFormCtrl.prototype.dataToSave=function(){var data;return data={},data.meeting_type=this.form_data.meeting_type,data.duration=this.form_data.duration,data.name=this.form_data.name,data.description=this.form_data.description,data.recording_access=this.form_data.recording_access,data.access=this.form_data.access,data.assignment=this.form_data.assignment,this.isCourseMeeting()||this.isGroupMeeting()?(data.section_or_group=this.form_data.invitees[0],data.invitees=[]):(data.access=this.INVITE_ONLY,data.invitees=this.form_data.invitees,data.section_or_group=null),this.form_data.host&&(data.host_id=this.form_data.host.originalObject.id),data.start_datetime=this.moment(this.form_data.start_datetime).utc().format("YYYY-MM-DDTHH:mm:ss"),this.form_data.recurring_weekly&&this.recurringMeeting&&(data.recurring_weekly=this.form_data.recurring_weekly),data},MeetingFormCtrl.prototype.submit=function(){var data;if(this.valid()&&!this.submitting){if(this.form_data.populated=!1,this.submitting=!0,data=this.dataToSave(),"New"===this.scope.form_action.type||"Duplicate"===this.scope.form_action.type)return this.meetingsService.createMeeting(data,this.successCallback,this.failureCallback);if("Edit"===this.scope.form_action.type)return this.meetingsService.editMeeting(data,this.scope.form_action.meeting_id,this.successCallback,this.failureCallback)}},MeetingFormCtrl.prototype.valid=function(){return!("group meeting"===this.form_data.meeting_type&&this.isCourseMeeting()||"group meeting"!==this.form_data.meeting_type&&this.isGroupMeeting())||(this.modal_error="Invalid combination of meeting type and course/group",!1)},MeetingFormCtrl.prototype.successCallback=function(response){return this.window.meeeting_created=response.status,"New"===this.scope.form_action.type||"Duplicate"===this.scope.form_action.type?this.analyticsSvc.sendCreateMeetingEvent(this.form_data):"Edit"===this.scope.form_action.type&&this.analyticsSvc.sendEditMeetingEvent(this.form_data,this.scope.form_action.meeting_id),this.closeModal()},MeetingFormCtrl.prototype.failureCallback=function(response){return this.submitting=!1,this.form_data.populated=!0,this.addValidation(),this.modal_error=response.data.errors[0]},MeetingFormCtrl.prototype.deleteMeeting=function(meeting_id){if(confirm("Are you sure you want to delete this meeting?"))return this.meetingsService.deleteMeeting(meeting_id,this.deleteMeetingsSuccessCallback)},MeetingFormCtrl.prototype.deleteMeetingsSuccessCallback=function(){return this.closeModal(),this.updateMeetings()},MeetingFormCtrl.prototype.closeModal=function(){return this.scope.$close()},MeetingFormCtrl.prototype.minDuration=function(){var ans,now,start_datetime;return ans=5,"Edit"===this.scope.form_action.type&&(this.formValuesMeetingIsOver()?ans=this.form_values.duration:(now=this.moment(this.window.Date.now()),start_datetime=this.moment(this.form_data.start_datetime),ans=5*Math.ceil((now.diff(start_datetime,"minutes")+1)/5))),Math.max(ans,5)},MeetingFormCtrl.prototype.keepFocusModal=function(){return this.timeout(function(){var first_select_box;return $("#timetable-modal").on("keydown","#invitee_value",function(e){if(27===e.which)return e.preventDefault(),e.stopPropagation(),$("#timetable-modal button").first().click()}),first_select_box=$("#timetable-modal input")[0],void 0!==first_select_box&&first_select_box.focus(),$("html").on("click","#timetable-modal",function(e){if("timetable-modal"===e.target.id)return first_select_box.focus()}),$("#timetable-modal").on("blur",'input[name="date"]',function(e){return e.relatedTarget?"meetingdescription"!==e.relatedTarget.id?$('#timetable-modal input[name="time"]').focus():e.relatedTarget.focus():$('#timetable-modal input[name="time"]').focus()}),$("#timetable-modal").on("blur",'input[name="time"]',function(e){return e.relatedTarget?$(e.relatedTarget).focus():$("#timetable-modal #meetingduration").focus()}),$("#timetable-modal").on("blur",'select[name="availability"]',function(e){if(e.relatedTarget&&__indexOf.call(e.relatedTarget.classList,"button--disabled")>=0)return $("#timetable-modal button").first().focus()})},200)},MeetingFormCtrl.prototype.setMinStartTime=function(){var moment,_results;if("Edit"===this.scope.form_action.type){if(this.formValuesMeetingIsOver())return this.form_data.start_datetime=this.moment(this.form_values.start_datetime).toDate();for(_results=[];this.hasEnded();)_results.push(this.form_data.start_datetime=this.moment(this.form_data.start_datetime).add(5,"minutes").toDate());return _results}return moment=this.moment(Date.now()).set("seconds",0),this.form_data.start_datetime=moment.add((15-moment.minutes()%15).toDate(),"minutes")},MeetingFormCtrl.prototype.updateDuration=function(){var _this=this;return(this.form_data.duration<this.minDuration()||void 0===this.form_data.duration)&&(this.form_data.duration=this.minDuration()),this.timeout(function(){return _this.updatingDuration=!1},2e3)},MeetingFormCtrl.prototype.updatingDurationisTrue=function(){return this.updatingDuration=!0},MeetingFormCtrl.prototype.canNotEditType=function(){var ans;return ans=!1,"Edit"===this.scope.form_action.type&&(ans=this.moment(Date.now())>this.moment(this.form_data.start_datetime)),ans},MeetingFormCtrl.prototype.formValuesMeetingIsOver=function(){var end_time;return end_time=this.moment(this.form_values.start_datetime).add(this.form_values.duration-1,"minutes"),end_time.isBefore(this.moment(Date.now()))},MeetingFormCtrl.prototype.hasEnded=function(){var end_time;return"Duplicate"!==this.scope.form_action.type&&(end_time=this.moment(this.form_data.start_datetime).add(this.form_data.duration-1,"minutes"),end_time.isBefore(this.moment(Date.now()))&&!this.updatingDuration)},MeetingFormCtrl.prototype.isLoggedInUserAdmin=function(){var _ref,_ref1;return"admin"===(_ref=null!=(_ref1=this.user)?_ref1.role:void 0)||"contentadmin"===_ref||"limitedpesadministrator"===_ref||"pesadministrator"===_ref||"programcoordinator"===_ref||"studentsupportadmin"===_ref},MeetingFormCtrl.prototype.allowHostSelection=function(){return this.isLoggedInUserAdmin()},MeetingFormCtrl.prototype.hostUpdated=function(newValue,oldValue){if(newValue!==oldValue)return this.form_data.assignment=null,this.form_data.invitees=[],this.displayInvitees=[].concat(this.form_data.invitees),null!=this.form_data.host?this.inviteesSearchParam="hostid="+this.form_data.host.originalObject.id:void 0},MeetingFormCtrl}(),angular.module("timetableApp").controller("MeetingFormCtrl",MeetingFormCtrl);var RecordingService;RecordingService=function(){function RecordingService(meetingsService,window,timetableAnalyticsService){this.meetingsService=meetingsService,this.window=window,this.timetableAnalyticsService=timetableAnalyticsService}return RecordingService.$inject=["MeetingsService","$window","TimetableAnalyticsService"],RecordingService.prototype.launchRecording=function(meeting,recording){var success,_this=this;return success=function(data){return _this.timetableAnalyticsService.sendViewedRecordingSuccessEvent(meeting,recording),_this.window.open(data.join_url)},this.meetingsService.launchRecording(meeting.live_session_id,recording.url,success)},RecordingService}(),angular.module("timetableApp").service("RecordingService",RecordingService);var RecordingsCtrl,UpcomingMeetingsCtrl,_ref,__bind=function(fn,me){return function(){return fn.apply(me,arguments)}},__hasProp={}.hasOwnProperty,__extends=function(child,parent){function ctor(){this.constructor=child}for(var key in parent)__hasProp.call(parent,key)&&(child[key]=parent[key]);return ctor.prototype=parent.prototype,child.prototype=new ctor,child.__super__=parent.prototype,child};RecordingsCtrl=function(){function RecordingsCtrl(scope,rootScope,meetingsService,window,analyticsSvc,modal,filter,moment,recordingService,analyticsService){this.scope=scope,this.rootScope=rootScope,this.meetingsService=meetingsService,this.window=window,this.analyticsSvc=analyticsSvc,this.modal=modal,this.filter=filter,this.moment=moment,this.recordingService=recordingService,this.analyticsService=analyticsService,this.serverCallFailed=__bind(this.serverCallFailed,this),this.subFilterMeetings=__bind(this.subFilterMeetings,this),this.onCourseSelect=__bind(this.onCourseSelect,this),this.availableHosts=__bind(this.availableHosts,this),this.availableTypes=__bind(this.availableTypes,this),this.availableCourseSections=__bind(this.availableCourseSections,this),this.availableGroups=__bind(this.availableGroups,this),this.availableCourses=__bind(this.availableCourses,this),this.setUpFilters=__bind(this.setUpFilters,this),this.meetingsLoaded=__bind(this.meetingsLoaded,this),this.hostInputChange=__bind(this.hostInputChange,this),this.typeInputChange=__bind(this.typeInputChange,this),this.groupInputChange=__bind(this.groupInputChange,this),this.sectionInputChange=__bind(this.sectionInputChange,this),this.courseInputChange=__bind(this.courseInputChange,this),this.courseSelected=void 0,this.disableSectionSelection=!0,this.serverCallInProgress=!0,this.today=this.start_date=this.end_date=this.moment().set("hours",0).set("minutes",0).set("seconds",0),this.sendPageEvent(),this.navigate("today")}return RecordingsCtrl.$inject=["$scope","$rootScope","MeetingsService","$window","TimetableAnalyticsService","$harmonyModal","$filter","moment","RecordingService","analytics_service"],RecordingsCtrl.prototype.courseInputChange=function(currentValue){if(""===currentValue)return this.courseSelected=void 0},RecordingsCtrl.prototype.sectionInputChange=function(currentValue){if(""===currentValue)return this.sectionSelected=void 0},RecordingsCtrl.prototype.groupInputChange=function(currentValue){if(""===currentValue)return this.groupSelected=void 0},RecordingsCtrl.prototype.typeInputChange=function(currentValue){if(""===currentValue)return this.typeSelected=void 0},RecordingsCtrl.prototype.hostInputChange=function(currentValue){if(""===currentValue)return this.hostSelected=void 0},RecordingsCtrl.prototype.meetingsLoaded=function(data){var _this=this;return this.serverCallInProgress=!1,this.meetings=data.meetings.occurrences,this.meetingsSubFiltered=this.meetingsFiltered=this.meetings,this.setUpFilters(),this.setUpSubFilters(),this.scope.$watch(function(){return _this.courseSelected},function(newV,oldV){if(newV!==oldV)return _this.onCourseSelect()}),this.scope.$watch(function(){return _this.sectionSelected},function(newV,oldV){if(newV!==oldV)return _this.onSectionSelect()}),this.scope.$watch(function(){return _this.groupSelected},function(newV,oldV){if(newV!==oldV)return _this.onGroupSelect()}),this.scope.$watch(function(){return _this.typeSelected},function(newV,oldV){if(newV!==oldV)return _this.onTypeSelect()}),this.scope.$watch(function(){return _this.hostSelected},function(newV,oldV){if(newV!==oldV)return _this.onHostSelect()}),this.filterMeetings(!1),this.subFilterMeetings()},RecordingsCtrl.prototype.setUpFilters=function(){return this.availableCourses(),this.availableGroups()},RecordingsCtrl.prototype.setUpSubFilters=function(){return this.availableTypes(),this.availableHosts()},RecordingsCtrl.prototype.availableCourses=function(){var meeting;return this.availableCourseList=_.uniq(function(){var _i,_len,_ref,_results;for(_ref=this.meetings,_results=[],_i=0,_len=_ref.length;_i<_len;_i++)meeting=_ref[_i],meeting.course_id&&_results.push({name:meeting.course_name,id:meeting.course_id});return _results}.call(this),"id"),this.availableCourseList.unshift({name:"All"})},RecordingsCtrl.prototype.availableGroups=function(){var meeting;return this.availableGroupList=_.uniq(function(){var _i,_len,_ref,_results;for(_ref=this.meetings,_results=[],_i=0,_len=_ref.length;_i<_len;_i++)meeting=_ref[_i],meeting.group_id&&_results.push({name:meeting.group_name,id:meeting.group_id});return _results}.call(this),"id"),this.availableGroupList.unshift({name:"All"})},RecordingsCtrl.prototype.availableCourseSections=function(){var meeting;return this.availableSectionList=_.uniq(function(){var _i,_len,_ref,_results;for(_ref=this.meetings,_results=[],_i=0,_len=_ref.length;_i<_len;_i++)meeting=_ref[_i],meeting.section_id&&meeting.course_id===this.courseSelected.originalObject.id&&_results.push({name:meeting.section_name,id:meeting.section_id});return _results}.call(this),"id"),this.availableSectionList.unshift({name:"None"})},RecordingsCtrl.prototype.availableTypes=function(){return this.availableTypeList=_.uniq(this.meetingsFiltered.map(function(m){return{name:m.type}}),"name"),this.availableTypeList.unshift({name:"All"})},RecordingsCtrl.prototype.availableHosts=function(){return this.availableHostList=_.uniq(this.meetingsFiltered.map(function(m){return{id:m.host_id,name:m.host}}),"id"),this.availableHostList.unshift({id:null,name:"All"})},RecordingsCtrl.prototype.onCourseSelect=function(){var _ref,_ref1;return"All"!==(_ref=null!=(_ref1=this.courseSelected)?_ref1.originalObject.name:void 0)&&void 0!==_ref?(this.scope.$broadcast("angucomplete-alt:clearInput","filter-group"),this.disableSectionSelection=!1,this.availableCourseSections()):(this.sectionSelected=null,this.disableSectionSelection=!0,this.meetingsFiltered=this.meetings),this.scope.$broadcast("angucomplete-alt:clearInput","filter-section"),this.filterMeetings()},RecordingsCtrl.prototype.onSectionSelect=function(){return this.filterMeetings()},RecordingsCtrl.prototype.onGroupSelect=function(){var _ref,_ref1;return"All"!==(_ref=null!=(_ref1=this.groupSelected)?_ref1.originalObject.name:void 0)&&void 0!==_ref&&this.scope.$broadcast("angucomplete-alt:clearInput","filter-course"),this.filterMeetings()},RecordingsCtrl.prototype.onTypeSelect=function(){var _ref,_ref1;if("All"!==(_ref=null!=(_ref1=this.typeSelected)?_ref1.originalObject.name:void 0)&&void 0!==_ref)return this.scope.$broadcast("angucomplete-alt:clearInput","filter-host"),this.subFilterMeetings()},RecordingsCtrl.prototype.onHostSelect=function(){var _ref,_ref1;if("All"!==(_ref=null!=(_ref1=this.hostSelected)?_ref1.originalObject.name:void 0)&&void 0!==_ref)return this.scope.$broadcast("angucomplete-alt:clearInput","filter-type"),this.subFilterMeetings()},RecordingsCtrl.prototype.filterMeetings=function(shouldResetSubFilters){var meeting,_ref,_ref1,_ref2,_ref3,_ref4,_ref5;return null==shouldResetSubFilters&&(shouldResetSubFilters=!0),shouldResetSubFilters&&this.resetSubFilters(),this.meetingsFiltered=this.meetings,"All"!==(_ref=null!=(_ref1=this.courseSelected)?_ref1.originalObject.name:void 0)&&void 0!==_ref&&(this.meetingsFiltered=function(){var _i,_len,_ref2,_ref3,_results;for(_ref2=this.meetings,_results=[],_i=0,_len=_ref2.length;_i<_len;_i++)meeting=_ref2[_i],meeting.course_id===(null!=(_ref3=this.courseSelected)?_ref3.originalObject.id:void 0)&&_results.push(meeting);return _results}.call(this)),"None"!==(_ref2=null!=(_ref3=this.sectionSelected)?_ref3.originalObject.name:void 0)&&void 0!==_ref2&&(this.meetingsFiltered=function(){var _i,_len,_ref4,_ref5,_results;for(_ref4=this.meetings,_results=[],_i=0,_len=_ref4.length;_i<_len;_i++)meeting=_ref4[_i],meeting.section_id===(null!=(_ref5=this.sectionSelected)?_ref5.originalObject.id:void 0)&&_results.push(meeting);return _results}.call(this)),"All"!==(_ref4=null!=(_ref5=this.groupSelected)?_ref5.originalObject.name:void 0)&&void 0!==_ref4&&(this.meetingsFiltered=function(){var _i,_len,_ref6,_ref7,_results;for(_ref6=this.meetings,_results=[],_i=0,_len=_ref6.length;_i<_len;_i++)meeting=_ref6[_i],meeting.group_id===(null!=(_ref7=this.groupSelected)?_ref7.originalObject.id:void 0)&&_results.push(meeting);
return _results}.call(this)),this.setUpSubFilters(),this.meetingsSubFiltered=this.meetingsFiltered},RecordingsCtrl.prototype.subFilterMeetings=function(){var meeting,_ref,_ref1,_ref2,_ref3;if(this.meetingsSubFiltered=this.meetingsFiltered,"All"!==(_ref=null!=(_ref1=this.typeSelected)?_ref1.originalObject.name:void 0)&&void 0!==_ref&&(this.meetingsSubFiltered=function(){var _i,_len,_ref2,_ref3,_results;for(_ref2=this.meetingsFiltered,_results=[],_i=0,_len=_ref2.length;_i<_len;_i++)meeting=_ref2[_i],meeting.type===(null!=(_ref3=this.typeSelected)?_ref3.originalObject.name:void 0)&&_results.push(meeting);return _results}.call(this)),"All"!==(_ref2=null!=(_ref3=this.hostSelected)?_ref3.originalObject.name:void 0)&&void 0!==_ref2)return this.meetingsSubFiltered=function(){var _i,_len,_ref4,_ref5,_results;for(_ref4=this.meetingsFiltered,_results=[],_i=0,_len=_ref4.length;_i<_len;_i++)meeting=_ref4[_i],meeting.host_id===(null!=(_ref5=this.hostSelected)?_ref5.originalObject.id:void 0)&&_results.push(meeting);return _results}.call(this)},RecordingsCtrl.prototype.resetFilters=function(){var element,_i,_len,_ref;for(_ref=["course","section","group","type","host"],_i=0,_len=_ref.length;_i<_len;_i++)element=_ref[_i],this.scope.$broadcast("angucomplete-alt:clearInput","filter-"+element);return this.courseSelected=null,this.sectionSelected=null,this.groupSelected=null,this.typeSelected=null,this.hostSelected=null,this.filterMeetings()},RecordingsCtrl.prototype.resetSubFilters=function(){return this.scope.$broadcast("angucomplete-alt:clearInput","filter-type"),this.scope.$broadcast("angucomplete-alt:clearInput","filter-host")},RecordingsCtrl.prototype.isServerCallInProgress=function(){return this.serverCallInProgress},RecordingsCtrl.prototype.serverCallFailed=function(){return this.serverCallInProgress=!1},RecordingsCtrl.prototype.setupDatesForToday=function(){return this.end_date=this.moment(new Date).set("hours",23).set("minutes",59).set("seconds",59),this.start_date=this.moment(this.end_date).subtract(30,"days").add(1,"seconds")},RecordingsCtrl.prototype.navigate=function(type){return"prev"===type?(this.end_date=this.moment(this.end_date).subtract(30,"days"),this.start_date=this.moment(this.start_date).subtract(30,"days")):"next"===type?(this.start_date=this.moment(this.start_date).add(30,"days"),this.end_date=this.moment(this.end_date).add(30,"days")):"today"===type&&this.setupDatesForToday(),this.updateView()},RecordingsCtrl.prototype.disableForwardNav=function(){return this.end_date.dayOfYear()===this.today.dayOfYear()||this.isServerCallInProgress()},RecordingsCtrl.prototype.disableBackwardsNav=function(){return this.isServerCallInProgress()},RecordingsCtrl.prototype.updateView=function(){var end_in_utc,start_in_utc;return end_in_utc=this.end_date.format("YYYY-MM-DD HH:mm"),start_in_utc=this.start_date.format("YYYY-MM-DD HH:mm"),this.serverCallInProgress=!0,this.meetingsService.getAllMeetings(start_in_utc,end_in_utc,null,null,null,null,null,!0,this.meetingsLoaded,this.serverCallFailed)},RecordingsCtrl.prototype.sendPageEvent=function(){return this.analyticsService.page(this.pageName())},RecordingsCtrl.prototype.name=function(){return"RecordingsCtrl"},RecordingsCtrl.prototype.pageName=function(){return"Live Session Recordings"},RecordingsCtrl.prototype.referrer=function(){return this.window.document.referrer},RecordingsCtrl.prototype.displayedDates=function(){return[this.start_date.format("MMM Do YYYY"),this.end_date.format("MMM Do YYYY")]},RecordingsCtrl.prototype.getRecording=function(meeting,recording){return this.recordingService.launchRecording(meeting,recording)},RecordingsCtrl.prototype.viewInvitees=function(meeting){return this.getParticipants(meeting),this.scope.occurrence=meeting,this.openInviteesModal()},RecordingsCtrl.prototype.openInviteesModal=function(){return this.window.meeeting_created=!1,this.modalInstance=this.modal.open({animation:!0,backdrop:!0,templateUrl:"tt-invitees_modal.html",windowTemplateUrl:"tt-modal-window.html",scope:this.scope})},RecordingsCtrl.prototype.editMeeting=function(meeting_id){return this.scope.form_action={type:"Edit",meeting_id:meeting_id},this.openMeetingModal()},RecordingsCtrl.prototype.openMeetingModal=function(){var _this=this;return this.analyticsSvc.sendOpenModalEvent(this.scope.form_action),this.window.meeeting_created=!1,angular.element("body").addClass("u--no-scroll"),this.modalInstance=this.modal.open({animation:!0,backdrop:!0,openedClass:"u--no-scroll",templateUrl:"tt-meeting-form.html",windowTemplateUrl:"tt-modal-window.html",controller:"MeetingFormCtrl as meetingFormCtrl"}),this.modalInstance.result.then(function(){return _this.updateView(),angular.element("body").removeClass("u--no-scroll")})},RecordingsCtrl.prototype.getParticipants=function(occurrence){return this.meetingsService.getParticipants(occurrence)},RecordingsCtrl}(),UpcomingMeetingsCtrl=function(_super){function UpcomingMeetingsCtrl(){return _ref=UpcomingMeetingsCtrl.__super__.constructor.apply(this,arguments)}return __extends(UpcomingMeetingsCtrl,_super),UpcomingMeetingsCtrl.prototype.name=function(){return"UpcomingMeetingsCtrl"},UpcomingMeetingsCtrl.prototype.pageName=function(){return"View Upcomming Meetings"},UpcomingMeetingsCtrl.prototype.setupDatesForToday=function(){return this.start_date=this.moment(new Date).set("hours",0).set("minutes",0).set("seconds",0),this.end_date=this.moment(this.start_date).add(30,"days").subtract(1,"seconds")},UpcomingMeetingsCtrl.prototype.disableForwardNav=function(){return this.isServerCallInProgress()},UpcomingMeetingsCtrl.prototype.disableBackwardsNav=function(){return this.start_date.dayOfYear()===this.today.dayOfYear()||this.isServerCallInProgress()},UpcomingMeetingsCtrl.prototype.updateView=function(){var end_in_utc,start_in_utc;return end_in_utc=this.end_date.format("YYYY-MM-DD HH:mm"),start_in_utc=this.start_date.format("YYYY-MM-DD HH:mm"),this.serverCallInProgress=!0,this.meetingsService.getAllMeetings(start_in_utc,end_in_utc,null,null,null,null,null,null,this.meetingsLoaded,this.serverCallFailed)},UpcomingMeetingsCtrl}(RecordingsCtrl),angular.module("timetableApp").controller("UpcomingMeetingsCtrl",UpcomingMeetingsCtrl),angular.module("timetableApp").controller("RecordingsCtrl",RecordingsCtrl),angular.module("timetableApp").directive("recordings",function(){return{restrict:"EA",controller:"RecordingsCtrl as recordingsCtrl",template:"<div recordings-filter></div>\n<div recordings-table></div>"}}),angular.module("timetableApp").directive("recordingsFilter",function(){return{restrict:"EA",templateUrl:"tt-recordings-filter.html",replace:!0,require:"^recordings"}}),angular.module("timetableApp").directive("recordingsTable",function(){return{restrict:"EA",templateUrl:"tt-recordings-table.html",require:"^recordings",replace:!0}});var MeetingsService;MeetingsService=function(){function MeetingsService(resource){this.resource=resource,this.apiBaseUrl="/api/",this.Meetings=this.resource(this.apiBaseUrl+"meetings/:id"),this.JoinOccurrence=this.resource(this.apiBaseUrl+"meetings/:occurrence_id/join"),this.LaunchRecording=this.resource(this.apiBaseUrl+"meetings/:id/recording/:cpurl"),this.EditMeetingForm=this.resource(this.apiBaseUrl+"meetings/:id/edit"),this.NewMeetingForm=this.resource(this.apiBaseUrl+"meetings/new"),this.EnterRoom=this.resource(this.apiBaseUrl+"meetings/join"),this.RoleForUserInCourse=this.resource(this.apiBaseUrl+"roles/:id"),this.GetParticipants=this.resource(this.apiBaseUrl+"meetings/:id/participants")}return MeetingsService.$inject=["$resource"],MeetingsService.prototype.getMeetingsByDate=function(date,successCallback,failureCallback){return this.Meetings.get({date:date},successCallback,failureCallback)},MeetingsService.prototype.getAllMeetings=function(from,to,host_id,course_id,section_id,session_type,group_id,recordings,successCallback,failureCallback){return this.Meetings.get({since_ts:from,until_ts:to,host_id:host_id,course_section_id:section_id,session_type:session_type,course_id:course_id,group_id:group_id,recordings:recordings},successCallback,failureCallback)},MeetingsService.prototype.getMeetingFullData=function(live_session_id,successCallback,failureCallback){return this.Meetings.get({id:live_session_id},successCallback,failureCallback)},MeetingsService.prototype.joinMeeting=function(occurrence_id,successCallback,failureCallback){return this.JoinOccurrence.get({occurrence_id:occurrence_id},successCallback,failureCallback)},MeetingsService.prototype.enterMyRoom=function(successCallback,failureCallback){return this.EnterRoom.get(successCallback,failureCallback)},MeetingsService.prototype.launchRecording=function(meeting_id,recording_url,successCallback){return this.LaunchRecording.get({id:meeting_id,cpurl:recording_url},successCallback)},MeetingsService.prototype.getNewMeetingFormData=function(successCallback){return this.NewMeetingForm.get(successCallback)},MeetingsService.prototype.getMeetingFormData=function(meeting_id,successCallback){return this.EditMeetingForm.get({id:meeting_id},successCallback)},MeetingsService.prototype.createMeeting=function(form,successCallback,failureCallback){return this.Meetings.save(form,successCallback,failureCallback)},MeetingsService.prototype.editMeeting=function(form,meeting_id,successCallback,failureCallback){return this.resource(this.apiBaseUrl+"meetings/:meeting_id",{meeting_id:meeting_id},{put:{method:"PUT"}}).put(form,successCallback,failureCallback)},MeetingsService.prototype.deleteMeeting=function(meeting_id,successCallback){return this.resource(this.apiBaseUrl+"meetings/:meeting_id",{meeting_id:meeting_id},{"delete":{method:"DELETE"}})["delete"](successCallback)},MeetingsService.prototype.removeRecording=function(meeting_id,recording_id,successCallback,failureCallback){return this.resource(this.apiBaseUrl+"meetings/:meeting_id/recording/:recording_id",{meeting_id:meeting_id,recording_id:recording_id},{"delete":{method:"DELETE"}})["delete"](successCallback,failureCallback)},MeetingsService.prototype.moveRecording=function(meeting_id,action,recording_id,successCallback,failureCallback){return this.resource(this.apiBaseUrl+"meetings/:meeting_id/recording/:recording_id",{meeting_id:meeting_id,recording_id:recording_id},{put:{method:"PUT"}}).put(action,successCallback,failureCallback)},MeetingsService.prototype.getParticipants=function(meeting,course_or_section_or_group_type,course_or_section_or_group_id,successCallback,failureCallback){var success;if(null==meeting.participants||0===meeting.participants.length)return success=function(participants){if(meeting.participants=participants,meeting.participantsDisplayed=participants,successCallback)return successCallback(participants)},this.GetParticipants.query({id:meeting.live_session_id,type:course_or_section_or_group_type,course_or_section_or_group_id:course_or_section_or_group_id},success,failureCallback)},MeetingsService.prototype.getRecordingFilters=function(successCallback,failureCallback){return this.GetRecordingFilters.get(successCallback,failureCallback)},MeetingsService}(),angular.module("timetableApp").service("MeetingsService",MeetingsService);var TimetableAnalyticsService;TimetableAnalyticsService=function(){function TimetableAnalyticsService(analytics_service,window){this.analytics_service=analytics_service,this.window=window}return TimetableAnalyticsService.$inject=["analytics_service","$window"],TimetableAnalyticsService.prototype._joinedMeetingEvent=function(meeting,action_id,join_time){var props,_ref,_ref1,_ref2,_ref3,_ref4,_ref5;return props={action_id:action_id,meeting_activity_start_time:join_time,site:null!=(_ref=this.window.i11l)&&null!=(_ref1=_ref.LMSContext)&&null!=(_ref2=_ref1.site)?_ref2.id:void 0,courseRole:null!=(_ref3=this.window.i11l)&&null!=(_ref4=_ref3.LMSContext)&&null!=(_ref5=_ref4.course)?_ref5.role:void 0},props=this._addMeetingToProps(meeting,props),this.analytics_service.track("Joined Meeting",props)},TimetableAnalyticsService.prototype._viewedRecordingEvent=function(meeting,action_id,recording){var props,_ref,_ref1,_ref2,_ref3,_ref4,_ref5;return props={action_id:action_id,recording_id:recording.id,recording_url:recording.url,recording_starttime:recording.starttime,site:null!=(_ref=this.window.i11l)&&null!=(_ref1=_ref.LMSContext)&&null!=(_ref2=_ref1.site)?_ref2.id:void 0,courseRole:null!=(_ref3=this.window.i11l)&&null!=(_ref4=_ref3.LMSContext)&&null!=(_ref5=_ref4.course)?_ref5.role:void 0},props=this._addMeetingToProps(meeting,props),this.analytics_service.track("Viewed Recording",props)},TimetableAnalyticsService.prototype._addMeetingToProps=function(meeting,props){var key,meeting_props,val;meeting_props={meeting_id:meeting.room_id,meeting_type:meeting.type,course:meeting.course_name,course_uuid:meeting.course_uuid,section:meeting.section_name,section_uuid:meeting.section_uuid,livesession:meeting.name,lms_event_id:meeting.id,lms_live_session_id:meeting.live_session_id};for(key in meeting_props)val=meeting_props[key],props[key]=val;return props},TimetableAnalyticsService.prototype._addFormDataToProps=function(form_data,props){var key,meeting_props,val,_ref,_ref1,_ref2,_ref3,_ref4;meeting_props={meeting_access:form_data.access,meeting_assignment_id:null!=(_ref=form_data.assignment)?_ref.id:void 0,meeting_assignment_name:null!=(_ref1=form_data.assignment)?_ref1.name:void 0,meeting_coursesection_or_group:null!=(_ref2=form_data.section_or_group)?_ref2.display_type:void 0,meeting_coursesection_or_group_id:null!=(_ref3=form_data.section_or_group)?_ref3.id:void 0,meeting_coursesection_or_group_name:null!=(_ref4=form_data.section_or_group)?_ref4.name:void 0,meeting_duration_minutes:form_data.duration,meeting_name:form_data.name,meeting_recording_access:form_data.recording_access,meeting_start_datetime:form_data.start_datetime,meeting_type:form_data.meeting_type};for(key in meeting_props)val=meeting_props[key],props[key]=val;return props},TimetableAnalyticsService.prototype.sendJoinedMeetingSuccessEvent=function(meeting,join_time){return this._joinedMeetingEvent(meeting,"lms.user.meeting.success.signed_in",join_time)},TimetableAnalyticsService.prototype.sendJoinedMeetingFailureEvent=function(meeting,join_time){return this._joinedMeetingEvent(meeting,"lms.user.meeting.failed.signed_in",join_time)},TimetableAnalyticsService.prototype.sendViewedRecordingSuccessEvent=function(meeting,recording){return this._viewedRecordingEvent(meeting,"lms.user.meeting.success.viewed_recording",recording)},TimetableAnalyticsService.prototype.sendNavigationByDayOrWeekEvent=function(offset){var page_name;switch(offset){case-1:page_name="Previous Day Meetings";break;case-7:page_name="Previous Week Meetings";break;case 1:page_name="Next Day Meetings";break;case 7:page_name="Next Week Meetings";break;case 0:page_name="Todays Meetings"}return this.analytics_service.page(page_name)},TimetableAnalyticsService.prototype.sendTodayButtonEvent=function(){var props,_ref,_ref1,_ref2,_ref3,_ref4,_ref5;return props={site:null!=(_ref=this.window.i11l)&&null!=(_ref1=_ref.LMSContext)&&null!=(_ref2=_ref1.site)?_ref2.id:void 0,courseRole:null!=(_ref3=this.window.i11l)&&null!=(_ref4=_ref3.LMSContext)&&null!=(_ref5=_ref4.course)?_ref5.role:void 0,action_id:"CLICK TODAY BUTTON"},this.analytics_service.track("Today Button in Timetable Widget",props)},TimetableAnalyticsService.prototype.sendEnterRoomEvent=function(){return this.analytics_service.page("My Adobe Room")},TimetableAnalyticsService.prototype.sendOpenModalEvent=function(form_action){var action_id,meeting_id;switch(meeting_id=void 0,form_action.type){case"New":action_id="New Meeting Modal";break;case"Edit":action_id="Edit Meeting Modal";break;case"Duplicate":action_id="Duplicate Meeting Modal"}return this.analytics_service.page(action_id)},TimetableAnalyticsService.prototype.sendContractDetailsEvent=function(meeting){return this.clickTitleEvent(meeting,"CONTRACTED DETAILS EVENT")},TimetableAnalyticsService.prototype.sendExpandDetailsEvent=function(meeting){return this.clickTitleEvent(meeting,"EXPANDED DETAILS EVENT")},TimetableAnalyticsService.prototype.clickTitleEvent=function(meeting,action_id){var props,_ref,_ref1,_ref2,_ref3,_ref4,_ref5;return props={action_id:action_id,site:null!=(_ref=this.window.i11l)&&null!=(_ref1=_ref.LMSContext)&&null!=(_ref2=_ref1.site)?_ref2.id:void 0,courseRole:null!=(_ref3=this.window.i11l)&&null!=(_ref4=_ref3.LMSContext)&&null!=(_ref5=_ref4.course)?_ref5.role:void 0},props=this._addMeetingToProps(meeting,props),this.analytics_service.track("Clicked Title",props)},TimetableAnalyticsService.prototype.sendClickSectionEvent=function(meeting){var props,_ref,_ref1,_ref2,_ref3,_ref4,_ref5;return props={action_id:"CLICKED ON SECTION LINK",site:null!=(_ref=this.window.i11l)&&null!=(_ref1=_ref.LMSContext)&&null!=(_ref2=_ref1.site)?_ref2.id:void 0,courseRole:null!=(_ref3=this.window.i11l)&&null!=(_ref4=_ref3.LMSContext)&&null!=(_ref5=_ref4.course)?_ref5.role:void 0},props=this._addMeetingToProps(meeting,props),this.analytics_service.track("Clicked Section Link",props)},TimetableAnalyticsService.prototype.sendClickCourseEvent=function(meeting){var props,_ref,_ref1,_ref2,_ref3,_ref4,_ref5;return props={action_id:"CLICKED ON COURSE LINK",site:null!=(_ref=this.window.i11l)&&null!=(_ref1=_ref.LMSContext)&&null!=(_ref2=_ref1.site)?_ref2.id:void 0,courseRole:null!=(_ref3=this.window.i11l)&&null!=(_ref4=_ref3.LMSContext)&&null!=(_ref5=_ref4.course)?_ref5.role:void 0},props=this._addMeetingToProps(meeting,props),this.analytics_service.track("Clicked Course Link",props)},TimetableAnalyticsService.prototype.sendClickGroupEvent=function(meeting){var props,_ref,_ref1,_ref2,_ref3,_ref4,_ref5;return props={action_id:"CLICKED ON GROUP LINK",site:null!=(_ref=this.window.i11l)&&null!=(_ref1=_ref.LMSContext)&&null!=(_ref2=_ref1.site)?_ref2.id:void 0,courseRole:null!=(_ref3=this.window.i11l)&&null!=(_ref4=_ref3.LMSContext)&&null!=(_ref5=_ref4.course)?_ref5.role:void 0},props=this._addMeetingToProps(meeting,props),this.analytics_service.track("Clicked Group Link",props)},TimetableAnalyticsService.prototype.sendClickHostEvent=function(meeting){var props,_ref,_ref1,_ref2,_ref3,_ref4,_ref5;return props={action_id:"CLICKED ON HOST LINK",site:null!=(_ref=this.window.i11l)&&null!=(_ref1=_ref.LMSContext)&&null!=(_ref2=_ref1.site)?_ref2.id:void 0,courseRole:null!=(_ref3=this.window.i11l)&&null!=(_ref4=_ref3.LMSContext)&&null!=(_ref5=_ref4.course)?_ref5.role:void 0},props=this._addMeetingToProps(meeting,props),this.analytics_service.track("Clicked Host Link",props)},TimetableAnalyticsService.prototype.sendClickAssignmentEvent=function(meeting){var props,_ref,_ref1,_ref2,_ref3,_ref4,_ref5;return props={action_id:"CLICKED ON ASSIGNMENT LINK",site:null!=(_ref=this.window.i11l)&&null!=(_ref1=_ref.LMSContext)&&null!=(_ref2=_ref1.site)?_ref2.id:void 0,courseRole:null!=(_ref3=this.window.i11l)&&null!=(_ref4=_ref3.LMSContext)&&null!=(_ref5=_ref4.course)?_ref5.role:void 0},props=this._addMeetingToProps(meeting,props),this.analytics_service.track("Clicked Assignment Link",props)},TimetableAnalyticsService.prototype.sendCreateMeetingEvent=function(form_data){var props,_ref,_ref1,_ref2,_ref3,_ref4,_ref5;return props={action_id:"lms.user.meeting.success.created_meeting",site:null!=(_ref=this.window.i11l)&&null!=(_ref1=_ref.LMSContext)&&null!=(_ref2=_ref1.site)?_ref2.id:void 0,courseRole:null!=(_ref3=this.window.i11l)&&null!=(_ref4=_ref3.LMSContext)&&null!=(_ref5=_ref4.course)?_ref5.role:void 0},props=this._addFormDataToProps(form_data,props),this.analytics_service.track("Create Meeting",props)},TimetableAnalyticsService.prototype.sendEditMeetingEvent=function(form_data,meeting_id){var props,_ref,_ref1,_ref2,_ref3,_ref4,_ref5;return props={action_id:"lms.user.meeting.success.edited_meeting",site:null!=(_ref=this.window.i11l)&&null!=(_ref1=_ref.LMSContext)&&null!=(_ref2=_ref1.site)?_ref2.id:void 0,courseRole:null!=(_ref3=this.window.i11l)&&null!=(_ref4=_ref3.LMSContext)&&null!=(_ref5=_ref4.course)?_ref5.role:void 0,livesession_id:meeting_id},props=this._addFormDataToProps(form_data,props),this.analytics_service.track("Edited Meeting",props)},TimetableAnalyticsService.prototype.sendDeleteMeetingEvent=function(form_data,meeting_id){var props,_ref,_ref1,_ref2,_ref3,_ref4,_ref5;return props={action_id:"DELETED MEETING",site:null!=(_ref=this.window.i11l)&&null!=(_ref1=_ref.LMSContext)&&null!=(_ref2=_ref1.site)?_ref2.id:void 0,courseRole:null!=(_ref3=this.window.i11l)&&null!=(_ref4=_ref3.LMSContext)&&null!=(_ref5=_ref4.course)?_ref5.role:void 0,livesession_id:meeting_id},props=this._addFormDataToProps(form_data,props),this.analytics_service.track("Deleted Meeting",props)},TimetableAnalyticsService.prototype.sendCancelMeetingFormEvent=function(form_action){var props,_ref,_ref1,_ref2,_ref3,_ref4,_ref5;return props={action_id:"CANCEL MEETING FORM",site:null!=(_ref=this.window.i11l)&&null!=(_ref1=_ref.LMSContext)&&null!=(_ref2=_ref1.site)?_ref2.id:void 0,courseRole:null!=(_ref3=this.window.i11l)&&null!=(_ref4=_ref3.LMSContext)&&null!=(_ref5=_ref4.course)?_ref5.role:void 0,livesession_id:form_action.meeting_id,meeting_form_type:form_action.type},this.analytics_service.track("Cancelled Meeting Form",props)},TimetableAnalyticsService}(),angular.module("timetableApp").service("TimetableAnalyticsService",TimetableAnalyticsService),angular.module("timetableApp").factory("Validator",["$window",function(window){return function(){return new window.u.harmony_validator.HarmonyValidator([])}}]),angular.module("onlineCampusApp").config(function(featureFlagsProvider){return featureFlagsProvider.setInitialFlags([{key:"updated api",active:!1,name:"updated api",description:"To be used with changes to the OC that require an API deployment."}])});
//# sourceMappingURL=oc_ui.min.js.map
angular.module('graderReport').run(['$templateCache', function($templateCache) {
  'use strict';

  $templateCache.put('gr-grades-nav.html',
    "\n" +
    "<div class=\"grades__nav\">\n" +
    "  <div ng-repeat=\"tab in navCtrl.tabs\" class=\"grades__nav-row\"><a ng-click=\"navCtrl.changeActiveTab(tab)\" ng-class=\"{'grader-tab--active': navCtrl.activeTab == tab}\">{{ tab.label }}</a></div>\n" +
    "</div>"
  );


  $templateCache.put('gr-summary-page.html',
    "\n" +
    "<div id=\"grader-report-summary\" class=\"container\">\n" +
    "  <div class=\"row grader-report__data\">\n" +
    "    <div class=\"col-12\">\n" +
    "      <div ng-if=\"grSummaryController.gradeItems.length == 0\">No data to display</div>\n" +
    "      <ul>\n" +
    "        <li ng-repeat=\"grade_item in grSummaryController.gradeItems\" class=\"grader-report-summary__assessment-list-item\">\n" +
    "          <h1>{{ grade_item.item_name }}</h1>\n" +
    "          <div id=\"chart-{{grade_item.grade_item_id}}\"></div>\n" +
    "        </li>\n" +
    "      </ul>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "</div>"
  );

}]);

angular.module('timetableApp').run(['$templateCache', function($templateCache) {
  'use strict';

  $templateCache.put('2u-st-pagination.html',
    "<nav ng-if=\"pages.length >= 2\">\n" +
    "    <div class=\"button-group\">\n" +
    "        <button ng-click=\"selectPage(page)\"\n" +
    "                role=\"link\"\n" +
    "                class=\"button button--small\"\n" +
    "                ng-repeat=\"page in pages\"\n" +
    "                ng-class=\"{'button--action': page === currentPage}\">{{page}}\n" +
    "        </button>\n" +
    "    </div>\n" +
    "</nav>\n"
  );


  $templateCache.put('datepicker.tpl.html',
    "<div class=\"dropdown-menu datepicker\" ng-class=\"'datepicker-mode-' + $mode\" style=\"max-width: 320px; top: 50px;\" aria-label=\"Live session date filter\">\n" +
    "    <table class=\"card\" style=\"width: 97%; padding: 3px;\">\n" +
    "        <thead>\n" +
    "            <tr class=\"text-center\">\n" +
    "                <th>\n" +
    "                    <button type=\"button\" class=\"button button--small pull-left\" ng-click=\"$selectPane(-1)\">\n" +
    "                        <i class=\"icon icon--chevron-left\"></i>\n" +
    "                    </button>\n" +
    "                </th>\n" +
    "                <th colspan=\"{{ rows[0].length - 2 }}\">\n" +
    "                    <button type=\"button\" class=\"button button--small button--block\" ng-click=\"$toggleMode()\">\n" +
    "                        <strong class=\"small-caps\" ng-bind=\"title\"></strong>\n" +
    "                    </button>\n" +
    "                </th>\n" +
    "                <th>\n" +
    "                    <button type=\"button\" class=\"button button--small pull-right\" ng-click=\"$selectPane(+1)\">\n" +
    "                        <i class=\"icon icon--chevron-right\"></i>\n" +
    "                    </button>\n" +
    "                </th>\n" +
    "            </tr>\n" +
    "            <tr class=\"small-caps\" ng-if=\"showLabels\" ng-bind-html=\"labels\"></tr>\n" +
    "        </thead>\n" +
    "        <tbody>\n" +
    "            <tr ng-repeat=\"(i, row) in rows\" height=\"{{ 100 / rows.length }}%\">\n" +
    "                <td class=\"text-center\" ng-repeat=\"(j, el) in row\">\n" +
    "                    <button type=\"button\" class=\"button button--small\" style=\"width: 100%\" ng-class=\"{'button--action': el.selected, 'button--accent': el.isToday && !el.selected}\"\n" +
    "                    ng-click=\"$select(el.date)\" ng-disabled=\"el.disabled\">\n" +
    "                        <span ng-class=\"{'text-muted': el.muted}\" ng-bind=\"el.label\"></span>\n" +
    "                    </button>\n" +
    "                </td>\n" +
    "            </tr>\n" +
    "        </tbody>\n" +
    "    </table>\n" +
    "</div>\n"
  );


  $templateCache.put('timepicker.tpl.html',
    "<div class=\"dropdown-menu timepicker\" style=\"min-width: 0px;width: auto;\">\n" +
    "    <table height=\"100%\" class=\"card\">\n" +
    "        <thead>\n" +
    "            <tr class=\"text-center\">\n" +
    "                <th>\n" +
    "                    <button tabindex=\"-1\" type=\"button\" class=\"button button--small pull-left\" ng-click=\"$arrowAction(1, 0)\">\n" +
    "                        <i class=\"icon icon--chevron-up\"></i>\n" +
    "                    </button>\n" +
    "                </th>\n" +
    "                <th>\n" +
    "                    &nbsp;\n" +
    "                </th>\n" +
    "                <th>\n" +
    "                    <button tabindex=\"-1\" type=\"button\" class=\"button button--small pull-left\" ng-click=\"$arrowAction(1, 1)\">\n" +
    "                        <i class=\"icon icon--chevron-up\"></i>\n" +
    "                    </button>\n" +
    "                </th>\n" +
    "                <th>\n" +
    "                    &nbsp;\n" +
    "                </th>\n" +
    "                <th>\n" +
    "                    <button ng-if=\"showSeconds\" tabindex=\"-1\" type=\"button\" class=\"button button--small pull-left\" ng-click=\"$arrowAction(-1, 2)\">\n" +
    "                        <i class=\"icon icon--chevron-up\"></i>\n" +
    "                    </button>\n" +
    "                </th>\n" +
    "            </tr>\n" +
    "        </thead>\n" +
    "        <tbody>\n" +
    "            <tr ng-repeat=\"(i, row) in rows\">\n" +
    "                <td class=\"text-center\">\n" +
    "                    <button tabindex=\"-1\" style=\"width: 100%\" type=\"button\" class=\"button button--small\" ng-class=\"{'button--action': row[0].selected}\"\n" +
    "                    ng-click=\"$select(row[0].date, 0)\" ng-disabled=\"row[0].disabled\">\n" +
    "                        <span ng-class=\"{'text-muted': row[0].muted}\" ng-bind=\"row[0].label\"></span>\n" +
    "                    </button>\n" +
    "                </td>\n" +
    "                <td>\n" +
    "                    <span ng-bind=\"i == midIndex ? timeSeparator : ' '\"></span>\n" +
    "                </td>\n" +
    "                <td class=\"text-center\">\n" +
    "                    <button tabindex=\"-1\" ng-if=\"row[1].date\" style=\"width: 100%\" type=\"button\" class=\"button button--small\" ng-class=\"{'button--action': row[1].selected}\"\n" +
    "                    ng-click=\"$select(row[1].date, 1)\" ng-disabled=\"row[1].disabled\">\n" +
    "                        <span ng-class=\"{'text-muted': row[1].muted}\" ng-bind=\"row[1].label\"></span>\n" +
    "                    </button>\n" +
    "                </td>\n" +
    "                <td>\n" +
    "                    <span ng-bind=\"i == midIndex ? timeSeparator : ' '\"></span>\n" +
    "                </td>\n" +
    "                <td class=\"text-center\">\n" +
    "                    <button tabindex=\"-1\" ng-if=\"showSeconds && row[2].date\" style=\"width: 100%\" type=\"button\" class=\"button button--small\" ng-class=\"{'button--action': row[2].selected}\"\n" +
    "                    ng-click=\"$select(row[2].date, 2)\" ng-disabled=\"row[2].disabled\">\n" +
    "                        <span ng-class=\"{'text-muted': row[2].muted}\" ng-bind=\"row[2].label\"></span>\n" +
    "                    </button>\n" +
    "                </td>\n" +
    "                <td ng-if=\"showAM\">\n" +
    "                    &nbsp;\n" +
    "                </td>\n" +
    "                <td ng-if=\"showAM\">\n" +
    "                    <button tabindex=\"-1\" ng-show=\"i == midIndex - !isAM * 1\" style=\"width: 100%\" type=\"button\" ng-class=\"{'button--action': !!isAM}\"\n" +
    "                    class=\"button button--small\" ng-click=\"$switchMeridian()\" ng-disabled=\"el.disabled\">AM</button>\n" +
    "                    <button tabindex=\"-1\" ng-show=\"i == midIndex + 1 - !isAM * 1\" style=\"width: 100%\" type=\"button\" ng-class=\"{'button--action': !isAM}\"\n" +
    "                    class=\"button button--small\" ng-click=\"$switchMeridian()\" ng-disabled=\"el.disabled\">PM</button>\n" +
    "                </td>\n" +
    "            </tr>\n" +
    "        </tbody>\n" +
    "        <tfoot>\n" +
    "            <tr class=\"text-center\">\n" +
    "                <th>\n" +
    "                    <button tabindex=\"-1\" type=\"button\" class=\"button button--small pull-left\" ng-click=\"$arrowAction(-1, 0)\">\n" +
    "                        <i class=\"icon icon--chevron-down\"></i>\n" +
    "                    </button>\n" +
    "                </th>\n" +
    "                <th>\n" +
    "                    &nbsp;\n" +
    "                </th>\n" +
    "                <th>\n" +
    "                    <button tabindex=\"-1\" type=\"button\" class=\"button button--small pull-left\" ng-click=\"$arrowAction(-1, 1)\">\n" +
    "                        <i class=\"icon icon--chevron-down\"></i>\n" +
    "                    </button>\n" +
    "                </th>\n" +
    "                <th>\n" +
    "                    &nbsp;\n" +
    "                </th>\n" +
    "                <th>\n" +
    "                    <button ng-if=\"showSeconds\" tabindex=\"-1\" type=\"button\" class=\"button button--small pull-left\" ng-click=\"$arrowAction(1, 2)\">\n" +
    "                        <i class=\"icon icon--chevron-down\"></i>\n" +
    "                    </button>\n" +
    "                </th>\n" +
    "            </tr>\n" +
    "        </tfoot>\n" +
    "    </table>\n" +
    "</div>"
  );


  $templateCache.put('tooltip/tooltip.tpl.html',
    "<div class=\"tooltip in\" ng-show=\"title\">\n" +
    "      <div class=\"tooltip-arrow\"></div>\n" +
    "      <div class=\"tooltip-inner\" ng-bind=\"title\"></div>\n" +
    "</div>\n" +
    "\n"
  );


  $templateCache.put('tt-invitees_modal.html',
    "<div class=\"modal-container\" invitees_view>\n" +
    "    <header class=\"modal-header\">\n" +
    "        <div class=\"modal-header__info-block\">\n" +
    "            <h1 class=\"modal-header__info-block__meta smaller-caps\">{{occurrence.type}}</h1>\n" +
    "        </div>\n" +
    "        <div class=\"modal__icon-group\">\n" +
    "            <button ng-click=\"$close()\" class=\"modal__close-button close-modal\" aria-label=\"Close\">\n" +
    "                <span class=\"icon icon--close\" aria-hidden=\"true\"></span>\n" +
    "            </button>\n" +
    "        </div>\n" +
    "    </header>\n" +
    "\n" +
    "    <h2 class=\"modal-header__info-block__title\">{{occurrence.name}}</h2>\n" +
    "\n" +
    "    <div class=\"invitee-results__wrapper\">\n" +
    "        <div ng-repeat=\"participant in occurrence.participants\">\n" +
    "            <div ng-if=\"participant.members.length > 0\">\n" +
    "                <div class=\"card card--invitee\">\n" +
    "                    <span ng-switch on=\"participant.invitee_type\">\n" +
    "                      <div class=\"icon--square\">\n" +
    "                          <i class=\"icon icon--course\" ng-switch-when=\"section\"></i>\n" +
    "                          <i class=\"icon icon--course\" ng-switch-when=\"course\"></i>\n" +
    "                          <i class=\"icon icon--group\" ng-switch-when=\"group\"></i>\n" +
    "                      </div>\n" +
    "                  </span>\n" +
    "                    <div class=\"card__info\">\n" +
    "                        <a ng-href=\"{{participant.url}}\">{{participant.name}}</a>\n" +
    "                    </div>\n" +
    "                    <div class=\"card--badge\">\n" +
    "                        <button class=\"button button--small\" ng-click=\"showMembers = !showMembers\">\n" +
    "                            <i class=\"button__inline-icon icon icon--plus\" ng-if=\"!showMembers\"></i>\n" +
    "                            <i class=\"button__inline-icon icon icon--minus\" ng-if=\"showMembers\"></i>\n" +
    "                            <span class=\"smaller-caps\">{{participant.members.length}} members</span>\n" +
    "                        </button>\n" +
    "                    </div>\n" +
    "                </div>\n" +
    "                <div class=\"nested--wrapper\">\n" +
    "                    <div class=\"card card--invitee--user card--invitee--user__nested\" ng-repeat=\"member in participant.members\" ng-show=\"showMembers\">\n" +
    "                        <div class=\"icon--square\">\n" +
    "                            <i class=\"icon icon--user\"></i>\n" +
    "                        </div>\n" +
    "                        <div class=\"card__info\">\n" +
    "                            <a ng-href=\"{{member.url}} \">{{member.name}}</a>\n" +
    "                        </div>\n" +
    "                    </div>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "            <div ng-if=\"participant.invitee_type=='user'\" class=\"card card--invitee--user\">\n" +
    "                <div class=\"icon--square\">\n" +
    "                    <i class=\"icon icon--user \"></i>\n" +
    "                </div>\n" +
    "                <div class=\"card__info\">\n" +
    "                    <a ng-href=\"{{participant.url}}\">{{participant.name}}</a>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</div>\n"
  );


  $templateCache.put('tt-meeting-form.html',
    "<div meetingform id=\"timetable-modal\" ng-show='meetingFormCtrl.form_data.populated'>\n" +
    "    <div class=\"modal__icon-group\">\n" +
    "        <button ng-keymodaltab\n" +
    "                class=\"modal__close-button close-modal\"\n" +
    "                ng-click=\"meetingFormCtrl.closeModal(modalInstance)\"\n" +
    "                aria-label='This button will close the form.'><i class=\"icon icon--close\"></i></button>\n" +
    "    </div>\n" +
    "    <h3 class=\"h3 u--text-align-center\">{{form_action.type}} Meeting</h3>\n" +
    "    <div>\n" +
    "        <form novalidate autocomplete=\"off\" name=\"meeting_form\">\n" +
    "            <div role=\"alert\" aria-live=\"assertive\" class=\"alert alert--danger\" ng-if=\"meetingFormCtrl.modal_error.length > 0\">\n" +
    "                {{meetingFormCtrl.modal_error}}\n" +
    "            </div>\n" +
    "            <!-- End search host div -->\n" +
    "            <div class='form-group select-meeting-host' ng-if=\"meetingFormCtrl.allowHostSelection()\">\n" +
    "                <label class=\"form-group__label\">Select host:</label>\n" +
    "                <div angucomplete-alt\n" +
    "                     id=\"host\"\n" +
    "                     placeholder=\"Search host\"\n" +
    "                     pause=\"400\"\n" +
    "                     minlength=\"3\"\n" +
    "                     selected-object=\"meetingFormCtrl.form_data.host\"\n" +
    "                     initial-value=\"meetingFormCtrl.form_data.host.originalObject.fullname\"\n" +
    "                     remote-url=\"/api/users/search?q=\"\n" +
    "                     title-field=\"first_name,last_name\"\n" +
    "                     description-field=\"username\"\n" +
    "                     image-field=\"thumbnail_url\"\n" +
    "                     input-class=\"form-group__input\">\n" +
    "                </div>\n" +
    "            </div>\n" +
    "            <div class='form-group'>\n" +
    "                <!-- Meeting Invite -->\n" +
    "                <label class=\"form-group__label\">Select Invitees:</label>\n" +
    "                <div angucomplete-alt\n" +
    "                     id=\"invitee\"\n" +
    "                     placeholder=\"Search section, group or user to invite\"\n" +
    "                     pause=\"400\"\n" +
    "                     minlength=\"3\"\n" +
    "                     selected-object=\"meetingFormCtrl.form_data.invitee\"\n" +
    "                     remote-url=\"/api/meetings/invitees/search?{{meetingFormCtrl.inviteesSearchParam}}&q=\"\n" +
    "                     type-field=\"type\"\n" +
    "                     title-field=\"title\"\n" +
    "                     description-field=\"description\"\n" +
    "                     image-field=\"thumbnail_url\"\n" +
    "                     clear-selected=\"true\"\n" +
    "                     disable-input=\"meetingFormCtrl.audienceSelectionDisabled()\"\n" +
    "                     input-class=\"form-group__input\">\n" +
    "                </div>\n" +
    "            </div>\n" +
    "            <div class=\"form-group\" ng-if=\"meetingFormCtrl.displayInvitees.length\">\n" +
    "                <label class=\"form-group__label\">Current Invitees</label>\n" +
    "                <table class=\"table\" st-table='meetingFormCtrl.displayInvitees' st-safe-src='meetingFormCtrl.form_data.invitees' ng-if='meetingFormCtrl.showInviteesTable()'>\n" +
    "                    <tbody>\n" +
    "                        <tr ng-repeat-start='invitee in meetingFormCtrl.displayInvitees'>\n" +
    "                            <td class=\"table__data\">\n" +
    "                                <button class=\"button button--small\"\n" +
    "                                    ng-click=\"showMembers = !showMembers\"\n" +
    "                                    ng-hide=\"invitee.type == 'user'\"\n" +
    "                                    style=\"margin-right:20px;\">\n" +
    "                                    <i style=\"font-size: 1rem;\"\n" +
    "                                       ng-if=\"!showMembers\"\n" +
    "                                       class=\"icon icon--chevron-right\"\n" +
    "                                       aria-label=\"This button will expand the {{invitee.type}} for editing\"></i>\n" +
    "                                    <i style=\"font-size: 1rem;\"\n" +
    "                                       ng-if=\"showMembers\"\n" +
    "                                       class=\"icon icon--chevron-down\"\n" +
    "                                       aria-label=\"This button will close the {{invitee.type}}\"></i>\n" +
    "                                </button>\n" +
    "\n" +
    "                                    <span ng-switch on=\"invitee.type\">\n" +
    "                                        <i ng-switch-when=\"group\" class=\"icon icon--group\" aria-label=\"{{ invitee.type }}\"></i>\n" +
    "                                        <i ng-switch-when=\"course\" class=\"icon icon--course\" aria-label=\"{{ invitee.type }}\"></i>\n" +
    "                                        <i ng-switch-when=\"section\" class=\"icon icon--course\" aria-label=\"{{ invitee.type }}\"></i>\n" +
    "                                        <i ng-switch-when=\"user\" class=\"icon icon--user\" aria-label=\"{{ invitee.type }}\"></i>\n" +
    "                                    </span>\n" +
    "                                    <span class=\"st-invitee-name\">{{invitee.name}}</span>\n" +
    "                            </td>\n" +
    "                            <td class=\"table__data\">\n" +
    "                               <span ng-if='invitee.members.length > 0'\n" +
    "                                     class=\"badge pull-right\">\n" +
    "                                     {{invitee.members.length}} members\n" +
    "                                </span>\n" +
    "                            </td>\n" +
    "                            <td class=\"table__data\">\n" +
    "                                <button class=\"modal__close-button\"\n" +
    "                                        style=\"font-size: 1rem; margin-top: 2px;\"\n" +
    "                                        ng-click=\"meetingFormCtrl.removeInvitee(invitee)\"\n" +
    "                                        aria-label='This button will remove {{invitee.name}} from this meeting'>\n" +
    "                                    <i class=\"icon icon--close\" style=\"text-align: right\"></i>\n" +
    "                                </button>\n" +
    "                            </td>\n" +
    "                        </tr>\n" +
    "                        <tr ng-repeat-end>\n" +
    "                            <td ng-if=\"showMembers\" class=\"table__data\" colspan=\"4\">\n" +
    "                                <div>\n" +
    "                                    <button class=\"button button--small\"\n" +
    "                                            ng-click=\"meetingFormCtrl.expandSelectedSectionOrGroup(invitee)\"\n" +
    "                                            ng-show=\"showMembers\"\n" +
    "                                            aria-label=\"This button will remove {{invitee.name}} and replace it will the people in this {{invitee.type}}\">\n" +
    "                                        Edit invited members\n" +
    "                                    </button>\n" +
    "                                    <span class=\"text--muted u--pull-right\">\n" +
    "                                        THIS WILL REMOVE THE COURSE OR GROUP\n" +
    "                                    </span>\n" +
    "                                    <ul class=\"menu__list edit-wrapper\">\n" +
    "                                        <li class=\"menu__list-item\" ng-repeat=\"member in invitee.members\">\n" +
    "                                            <a ng-href=\"{{member.url}}\">{{member.name}}</a>\n" +
    "                                        </li>\n" +
    "                                    </ul>\n" +
    "                                </div>\n" +
    "                            </td>\n" +
    "                        </tr>\n" +
    "                    </tbody>\n" +
    "                    <tfoot ng-if=\"meetingFormCtrl.form_data.invitees.length > 5\">\n" +
    "                        <tr>\n" +
    "                            <td colspan=\"5\" class=\"text-center\">\n" +
    "                                <div st-pagination=\"\" st-items-by-page=\"5\" st-displayed-pages=\"5\" st-template=\"2u-st-pagination.html\">\n" +
    "                                </div>\n" +
    "                            </td>\n" +
    "                        </tr>\n" +
    "                    </tfoot>\n" +
    "                </table>\n" +
    "            </div>\n" +
    "            <div class=\"flex-row\">\n" +
    "                <div class='form-group' id=\"meetingtype\" ng-show=\"meetingFormCtrl.showMeetingTypes()\">>\n" +
    "                    <label class=\"form-group__label\">Select meeting type</label>\n" +
    "                    <select ng-disabled='meetingFormCtrl.canNotEditType()'\n" +
    "                            ng-class=\"{'disabled' : meetingFormCtrl.canNotEditType()}\"\n" +
    "                            ng-change=\"meetingFormCtrl.meetingTypeUpdated()\"\n" +
    "                            ng-model='meetingFormCtrl.form_data.meeting_type'\n" +
    "                            name='meeting_type' class='form-group__select'\n" +
    "                            ng-required='true'\n" +
    "                            ng-options='option for option in meetingFormCtrl.meeting_type_options'>\n" +
    "                    </select>\n" +
    "                    <span class=\"help-block\"></span>\n" +
    "                </div>\n" +
    "                <span class=\"help-block\"></span>\n" +
    "                <div class=\"form-group\" id=\"meetingname\">\n" +
    "                    <!-- Meeting Name -->\n" +
    "                    <label for=\"name\" class=\"form-group__label\">Name your new meeting (required)</label>\n" +
    "                    <input type=\"text\"\n" +
    "                           name=\"name\"\n" +
    "                           class=\"form-group__input\"\n" +
    "                           ng-disabled='meetingFormCtrl.hasEnded()'\n" +
    "                           ng-model='meetingFormCtrl.form_data.name'\n" +
    "                           ng-blur='meeting_form.name.$dirty = true'\n" +
    "                           ng-required='true'\n" +
    "                           aria-label='Name of the meeting'>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "            <div class=\"form-group\">\n" +
    "                <!-- Meeting Description -->\n" +
    "                <label for=\"meetingdescription\" class=\"form-group__label\">\n" +
    "                    Describe your new meeting\n" +
    "                </label>\n" +
    "                <textarea id=\"meetingdescription\"\n" +
    "                          ng-disabled='meetingFormCtrl.hasEnded()'\n" +
    "                          ng-class=\"{'disabled' : meetingFormCtrl.hasEnded()}\"\n" +
    "                          ng-model='meetingFormCtrl.form_data.description'\n" +
    "                          aria-label='Description for the meeting'\n" +
    "                          name=\"description\"\n" +
    "                          rows=\"1\"\n" +
    "                          class=\"form-group__textarea\">\n" +
    "                </textarea>\n" +
    "            </div>\n" +
    "            <div class='form-group' ng-if='meetingFormCtrl.showAssignmentSelectOptions()'>\n" +
    "                <label class=\"form-group__label\">Attendance Tracking</label>\n" +
    "                <select ng-disabled='meetingFormCtrl.hasEnded()'\n" +
    "                        ng-class=\"{'disabled' : meetingFormCtrl.hasEnded()}\"\n" +
    "                        ng-model='meetingFormCtrl.form_data.assignment'\n" +
    "                        ng-options='item as item.name for item in meetingFormCtrl.getAssignments() track by item.id'\n" +
    "                        class='form-group__select'>\n" +
    "                    <option value='' class=''>--None--</option>\n" +
    "                </select>\n" +
    "            </div>\n" +
    "            <div class=\"flex-row\">\n" +
    "                <div class=\"form-group meeting-date\">\n" +
    "                    <!-- Meeting Date -->\n" +
    "                    <label for=\"meetingdate\" class=\"form-group__label\">\n" +
    "                        Date\n" +
    "                        <span aria-live='assertive' role='alert' class='form-group__help-text' ng-if='meeting_form.date.$dirty && meeting_form.date.$error.required'>\n" +
    "                          Please use MM/DD/YY\n" +
    "                        </span>\n" +
    "                        <span class='form-group__error-text' ng-show='meetingFormCtrl.bad_time'>\n" +
    "                        {{ meetingFormCtrl.bad_time }}\n" +
    "                    </span>\n" +
    "                    </label>\n" +
    "\n" +
    "                    <input id=\"meetingdate\"\n" +
    "                           placeholder=\"(mm/dd/yy)\"\n" +
    "                           ng-disabled='meetingFormCtrl.hasEnded()'\n" +
    "                           ng-class=\"{'disabled' : meetingFormCtrl.hasEnded()}\"\n" +
    "                           type='text'\n" +
    "                           name='date'\n" +
    "                           data-min-date='today'\n" +
    "                           ng-required=\"true\"\n" +
    "                           ng-model='meetingFormCtrl.form_data.start_datetime'\n" +
    "                           data-autoclose='true'\n" +
    "                           ng-change='meetingFormCtrl.onDatePickerSelect()'\n" +
    "                           data-timeformat='MM/dd/yy'\n" +
    "                           template='datepicker.tpl.html'\n" +
    "                           class='form-group__input'\n" +
    "                           aria-label='Meeting Date: {{ meetingFormCtrl.aria_date }}'\n" +
    "                           aria-live='assertive'\n" +
    "                           bs-datepicker>\n" +
    "                    <i class=\"form-group__validation-icon\"></i>\n" +
    "                </div>\n" +
    "                <div class=\"form-group meeting-time\">\n" +
    "                    <!-- Meeting Time -->\n" +
    "                    <label for=\"meetingtime\" class=\"form-group__label\">\n" +
    "                        Time\n" +
    "                    </label>\n" +
    "                    <input id=\"meetingtime\"\n" +
    "                           placeholder=\"(h:mm AM/PM)\"\n" +
    "                           ng-disabled='meetingFormCtrl.hasEnded()'\n" +
    "                           ng-class=\"{'button--disabled' : meetingFormCtrl.hasEnded()}\"\n" +
    "                           type='text'\n" +
    "                           time-type='date'\n" +
    "                           name='time'\n" +
    "                           autoclose='false'\n" +
    "                           template='timepicker.tpl.html'\n" +
    "                           ng-required=\"true\"\n" +
    "                           ng-model='meetingFormCtrl.form_data.start_datetime'\n" +
    "                           ng-change='meetingFormCtrl.onDatePickerSelect()'\n" +
    "                           data-time-format='h:mm a'\n" +
    "                           class='form-group__input'\n" +
    "                           minute-step=\"5\"\n" +
    "                           arrow-behavior='picker'\n" +
    "                           aria-live='assertive'\n" +
    "                           aria-label='Start Time of meeting: {{ meetingFormCtrl.aria_time }}'\n" +
    "                           bs-timepicker>\n" +
    "                    <span aria-live='assertive' role='alert' class='help-block' ng-if='meeting_form.time.$dirty && meeting_form.time.$error.required'>\n" +
    "                        Required\n" +
    "                    </span>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "            <div class=\"row\">\n" +
    "                <div class=\"form-group meeting-duration col-xs-4\">\n" +
    "                    <!-- Meeting Duration -->\n" +
    "                    <label for=\"meetingduration\" class=\"form-group__label\">\n" +
    "                        Duration in Minutes\n" +
    "                    </label>\n" +
    "                    <input id=\"meetingduration\"\n" +
    "                           ng-blur='meetingFormCtrl.updateDuration()'\n" +
    "                           ng-change='meetingFormCtrl.updatingDurationisTrue()'\n" +
    "                           ng-disabled='meetingFormCtrl.hasEnded()'\n" +
    "                           ng-class=\"{'disabled' : meetingFormCtrl.hasEnded()}\"\n" +
    "                           type='number'\n" +
    "                           name='duration'\n" +
    "                           ng-model='meetingFormCtrl.form_data.duration'\n" +
    "                           min='5'\n" +
    "                           max='480'\n" +
    "                           ng-required=\"true\"\n" +
    "                           class='form-group__input'\n" +
    "                           aria-live='assertive'\n" +
    "                           step='5'\n" +
    "                           aria-label='Duration of meeting: {{ meetingFormCtrl.form_data.duration }}'>\n" +
    "                    <span aria-live='assertive' role='alert' class='help-block' ng-if='meeting_form.duration.$dirty && meeting_form.duration.$error.required'>\n" +
    "                        Numerical value required\n" +
    "                    </span>\n" +
    "                    <span aria-live='assertive' role='alert' class='help-block' ng-if='meeting_form.duration.$dirty && meeting_form.duration.$error.min'>\n" +
    "                         Meeting must be for {{ meetingFormCtrl.minDuration() }} minutes or more\n" +
    "                    </span>\n" +
    "                    <span aria-live='assertive' role='alert' class='help-block' ng-if='meeting_form.duration.$dirty && meeting_form.duration.$error.max'>\n" +
    "                        Meeting cannot be more than 8 hours\n" +
    "                    </span>\n" +
    "                </div>\n" +
    "                <div class='form-group recording-access col-xs-5 col-xs-offset-3'>\n" +
    "                    <label class=\"form-group__label\">Recording availability:</label>\n" +
    "                    <select ng-model='meetingFormCtrl.form_data.recording_access'\n" +
    "                            ng-required='true'\n" +
    "                            name='availability'\n" +
    "                            ng-options='option.value as option.name for option in meetingFormCtrl.getArchiveAccessOptions()'\n" +
    "                            class='form-group__select'\n" +
    "                            aria-label='Select who has permission to see a recording of this meeting'>\n" +
    "                    </select>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "            <div class='recurring-meeting' ng-if=\"form_action.type == 'New'\">\n" +
    "                <div class='form__group recurring-checkbox'>\n" +
    "                    <div class='checkbox'>\n" +
    "                        <input ng-model=\"meetingFormCtrl.recurringMeeting\"\n" +
    "                               type=\"checkbox\"\n" +
    "                               id=\"recurringMeeting\"\n" +
    "                               class=\"checkbox__input\"\n" +
    "                               name=\"recurring-radio\">\n" +
    "                        <label for=\"recurringMeeting\" class='checkbox__label'>Repeat meeting\n" +
    "                        </label>\n" +
    "                        <div class='recurring-meeting-input'>\n" +
    "                          <span class='recurring-meeting-container' ng-if='meetingFormCtrl.recurringMeeting'>\n" +
    "                              <span> for </span>\n" +
    "                              <span>\n" +
    "                                  <input\n" +
    "                                      id='recurring_weekly'\n" +
    "                                      ng-disabled='meetingFormCtrl.hasEnded()'\n" +
    "                                      ng-class=\"{'disabled' : meetingFormCtrl.hasEnded()}\"\n" +
    "                                      ng-model='meetingFormCtrl.form_data.recurring_weekly'\n" +
    "                                      ng-change='meetingFormCtrl.updateLastMeetingDate()'\n" +
    "                                      aria-label='Meeting recurs weekly'\n" +
    "                                      name='recurring_weekly'\n" +
    "                                      type='number'\n" +
    "                                      value='2'\n" +
    "                                      step='1'\n" +
    "                                      min='2'\n" +
    "                                      max='25'>\n" +
    "                              </span>\n" +
    "                              <span class=\"recurring-meeting-weeks\">weeks</span>\n" +
    "                          </span>\n" +
    "                      </div>\n" +
    "                    </div>\n" +
    "                </div>\n" +
    "                <div class='last-meeting-date'>\n" +
    "                    <p ng-show='meetingFormCtrl.recurringMeeting'>{{ meetingFormCtrl.form_data.recurring_weekly }} meetings, {{ meetingFormCtrl.last_meeting_day }}s until {{ meetingFormCtrl.last_meeting_date }}</p>\n" +
    "                </div>\n" +
    "                <span aria-live='assertive'\n" +
    "                      role='alert'\n" +
    "                      class='help-block'\n" +
    "                      ng-if='meeting_form.recurring_weekly.$dirty && meeting_form.recurring_weekly.$error.min'>Must be at least 2 meetings</span>\n" +
    "                <span aria-live='assertive'\n" +
    "                      role='alert'\n" +
    "                      class='help-block'\n" +
    "                      ng-if='meeting_form.recurring_weekly.$dirty && meeting_form.recurring_weekly.$error.step'>Must be a whole number</span>\n" +
    "                <span aria-live='assertive'\n" +
    "                      role='alert'\n" +
    "                      class='help-block'\n" +
    "                      ng-if='meeting_form.recurring_weekly.$dirty && meeting_form.recurring_weekly.$error.max'>Max recurring meetings is 25</span>\n" +
    "                <span aria-live='assertive'\n" +
    "                      role='alert'\n" +
    "                      class='help-block'\n" +
    "                      ng-if='meeting_form.recurring_weekly.$dirty && meeting_form.recurring_weekly.$error.number'>Must be a number</span>\n" +
    "            </div>\n" +
    "            <div class=\"row\">\n" +
    "                <div class=\"col-xs-6\">\n" +
    "                    <button ng-if='meeting_form.$valid'\n" +
    "                            ng-click='meetingFormCtrl.submit($event)'\n" +
    "                            ng-keymodaltab\n" +
    "                            aria-label='{{ form_action.type | new_create }} this Meeting, Title: {{meetingFormCtrl.form_data.name}}, Course or Group, {{ meetingFormCtrl.form_data.section_or_group.name }}, Descrption: {{meetingFormCtrl.form_data.description}}, Starting at: {{meetingFormCtrl.aria_date }}, {{meetingFormCtrl.aria_time }}, for {{ meetingFormCtrl.form_data.duration }} minutes.'\n" +
    "                            class=\"button button--brand col-xs-6 save-edit-btn\"\n" +
    "                            style=\"flex 1\">{{ form_action.type | new_create }}</button>\n" +
    "                    <button ng-if='!meeting_form.$valid'\n" +
    "                            ng-keymodaltab\n" +
    "                            aria-label='Please validate the form to submit.  Section or Group, Name of meeting, start datetime and duration are all required.'\n" +
    "                            aria-disabled='true'\n" +
    "                            class=\"button button--brand col-xs-8 button--disabled\"\n" +
    "                            style=\"flex 1\">{{ form_action.type | new_create }}</button>\n" +
    "                </div>\n" +
    "                <div class=\"col-xs-6 delete-btn\">\n" +
    "                    <button ng-if='form_action.type == \"Edit\" && !meetingFormCtrl.hasEnded()'\n" +
    "                        ng-click='meetingFormCtrl.deleteMeeting(form_action.meeting_id)'\n" +
    "                        class='button button--danger col-xs-6'\n" +
    "                        ng-keymodaltab\n" +
    "                        aria-label='Delete'>Delete</button>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "        </form>\n" +
    "    </div>\n" +
    "</div>\n"
  );


  $templateCache.put('tt-modal-window.html',
    "<div modal-render=\"{{$isRendered}}\"\n" +
    "     tabindex=\"-1\"\n" +
    "     role=\"dialog\"\n" +
    "     uib-modal-animation-class=\"fade\"\n" +
    "     modal-in-class=\"in\"\n" +
    "     class=\"modal\"\n" +
    "     ng-style=\"{'z-index': 1050 + index*10, display: 'block'}\">\n" +
    "  <div class=\"modal__content\" uib-modal-transclude></div>\n" +
    "</div>\n"
  );


  $templateCache.put('tt-recordings-table.html',
    "<div class=\"page__body\">\n" +
    "    <div class=\"page__recordings\">\n" +
    "        <table class=\"recordings\">\n" +
    "            <caption ng-if='recordingsCtrl.name() == \"RecordingsCtrl\"'>Recordings</caption>\n" +
    "            <caption ng-if='recordingsCtrl.name() == \"UpcomingMeetingsCtrl\"'>Upcoming Live Sessions</caption>\n" +
    "            <thead>\n" +
    "                <tr>\n" +
    "                    <th ng-if='recordingsCtrl.name() == \"RecordingsCtrl\"'\n" +
    "                        class=\"recording__cell recording__cell--title screen-reader-only\">Launch Recording</th>\n" +
    "                    <th class=\"recording__cell recording__cell--title recording__cell--large\">Name</th>\n" +
    "                    <th class=\"recording__cell recording__cell--title\">Host</th>\n" +
    "                    <th class=\"recording__cell recording__cell--title\">Course/Section/Group</th>\n" +
    "                    <th class=\"recording__cell recording__cell--title recording__cell--small\">Date</th>\n" +
    "                    <th class=\"recording__cell recording__cell--title recording__cell--small\">Time</th>\n" +
    "                    <th class=\"recording__cell recording__cell--title recording__cell--small screen-reader-only\">View/Edit Meeting Details</th>\n" +
    "                </tr>\n" +
    "            </thead>\n" +
    "            <tbody>\n" +
    "                <tr ng-show=\"!recordingsCtrl.isServerCallInProgress() && recordingsCtrl.meetingsFiltered.length\"\n" +
    "                    class=\"recording\"\n" +
    "                    ng-repeat=\"meeting in recordingsCtrl.meetingsSubFiltered | orderBy:'start_datetime'\" ng-cloak>\n" +
    "                    <td ng-if='recordingsCtrl.name() == \"RecordingsCtrl\"'\n" +
    "                        class=\"recording__cell recording__cell--watch\">\n" +
    "                        <button ng-repeat='recording in meeting.recordings'\n" +
    "                                ng-click='recordingsCtrl.getRecording(meeting, recording)'\n" +
    "                                class=\"button button--small\"\n" +
    "                                aria-label=\"Watch {{meeting.name}}\">\n" +
    "                            <i class=\"icon icon--play\"></i>Watch</button>\n" +
    "                    </td>\n" +
    "                    <td class=\"recording__cell recording__cell--large recording__cell--meeting-name\">\n" +
    "                        <strong>{{ meeting.name }}</strong>\n" +
    "                    </td>\n" +
    "                    <td class=\"recording__cell\"><a ng-attr-href=\"/my/profile?id={{meeting.host_id}}\">{{ meeting.host }}</a></td>\n" +
    "                    <td ng-switch=\"meeting.access\" class=\"recording__cell\">\n" +
    "                        <a ng-switch-when=\"My Section Only\"\n" +
    "                           ng-href=\"/course/view.php?id={{ meeting.course_id }}&group={{ meeting.section_id }}\">{{ meeting.section_name }}</a>\n" +
    "                        <a ng-switch-when=\"All Course Sections\"\n" +
    "                           ng-href=\"/course/view.php?id={{ meeting.course_id }}\">{{ meeting.enrolled_section || meeting.course_name }}</a>\n" +
    "                        <a ng-switch-when=\"The Group\"\n" +
    "                           ng-href=\"/local/groups/group.php?groupid={{ meeting.group_id }}&page=wall&type={{ meeting.group_type }}\">{{ meeting.group_name }}\n" +
    "                    </td>\n" +
    "                    <td class=\"recording__cell recording__cell--small\">{{ meeting.start_datetime | date:'MMM d, y' }}</td>\n" +
    "                    <td class=\"recording__cell recording__cell--small\">{{ meeting.start_datetime | date:'h:mm a' }}</td>\n" +
    "                    <td ng-if='!meeting.is_my_meeting'\n" +
    "                        class=\"recording__cell recording__cell--view-invitees\">\n" +
    "                        <button class=\"button button--small\"\n" +
    "                                aria-label=\"View Invitees for {{meeting.name}}\"\n" +
    "                                ng-click=\"recordingsCtrl.viewInvitees(meeting)\">View Invitees</button>\n" +
    "                    </td>\n" +
    "                    <td ng-if='meeting.is_my_meeting'\n" +
    "                        class=\"recording__cell recording__cell--view-invitees\">\n" +
    "                        <button class=\"button button--small\"\n" +
    "                                ng-click=\"recordingsCtrl.editMeeting(meeting.live_session_id)\"\n" +
    "                                aria-label=\"Edit {{meeting.name}}\">Edit Meeting</button>\n" +
    "                    </td>\n" +
    "                </tr>\n" +
    "                <tr class=\"recordings__loading\" ng-show=\"recordingsCtrl.isServerCallInProgress()\">\n" +
    "                    <td colspan=\"6\">\n" +
    "                        <div class=\"progress\">\n" +
    "                            <div class=\"progress__max\">\n" +
    "                                <div class=\"progress__bar progress__bar--loading\"></div>\n" +
    "                            </div>\n" +
    "                        </div>\n" +
    "                         <div class=\"null-item\">\n" +
    "                            Please Standby. Loading Meetings...\n" +
    "                        </div>\n" +
    "                    </td>\n" +
    "                </tr>\n" +
    "                <tr class=\"recordings__null\" ng-if=\"!recordingsCtrl.isServerCallInProgress() && !recordingsCtrl.meetings.length\">\n" +
    "                    <td colspan=\"6\">\n" +
    "                        <div ng-if='recordingsCtrl.name() == \"RecordingsCtrl\"' class=\"null-item\">No Recordings Available</div>\n" +
    "                        <div ng-if='recordingsCtrl.name() == \"UpcomingMeetingsCtrl\"' class=\"null-item\">No Upcoming Meetings</div>\n" +
    "                    </td>\n" +
    "                </tr>\n" +
    "        </table>\n" +
    "    </div>\n"
  );


  $templateCache.put('tt-widget.html',
    "<div id=\"timetable\">\n" +
    "    <div class=\"timetable__controls\">\n" +
    "        <div class\"button-group\">\n" +
    "            <button id=\"open-create-modal\"\n" +
    "                    class=\"button button--action\"\n" +
    "                    ng-click=\"mainCtrl.newMeeting()\">Create Meeting</button>\n" +
    "            <button class=\"button\"\n" +
    "                    id=\"enter-my-room\"\n" +
    "                    ng-click=\"mainCtrl.enterRoomService()\">Enter My Room</button>\n" +
    "        </div>\n" +
    "        <hr>\n" +
    "        <span class=\"timetable__view-all-links\">\n" +
    "            <a id=\"view-recordings\"\n" +
    "               ng-href=\"/recordings.php\">Recordings</a>\n" +
    "            <a id=\"view-upcoming-meetings\"\n" +
    "               ng-href=\"/upcoming_sessions.php\">Upcoming Meetings</a>\n" +
    "        </span>\n" +
    "        <hr>\n" +
    "    </div>\n" +
    "    <div class=\"timetable__datepicker\" aria-label='Live session date filter' tabindex=\"0\">\n" +
    "        <button ng-disabled=\"!mainCtrl.navigationEnabled\"\n" +
    "                class=\"timetable__button\"\n" +
    "                ng-click=\"mainCtrl.changeDisplayedDate(-7)\"\n" +
    "                title=\"Back one week\"\n" +
    "                aria-label='This button will update the content below by navigating back one week'>\n" +
    "            <i class=\"icon icon--chevron-left\"></i><i class=\"icon icon--chevron-left\"></i>\n" +
    "        </button>\n" +
    "        <button class=\"timetable__button\"\n" +
    "                ng-disabled=\"!mainCtrl.navigationEnabled\"\n" +
    "                ng-click=\"mainCtrl.changeDisplayedDate(-1)\"\n" +
    "                title=\"Go to previous day\"\n" +
    "                aria-label='This button will update the content below by navigating back one day'>\n" +
    "            <i class=\"icon icon--chevron-left\"></i>\n" +
    "        </button>\n" +
    "        <span class=\"timetable__day\"\n" +
    "              title=\"Go to today\"\n" +
    "              aria-label='This button will update the content below by navigating to today'\n" +
    "              ng-click=\"mainCtrl.resetDisplayDate()\"\n" +
    "              role=\"button\">\n" +
    "            {{ mainCtrl.displayDate() }}\n" +
    "        </span>\n" +
    "        <button class=\"timetable__button\"\n" +
    "                ng-disabled=\"!mainCtrl.navigationEnabled\"\n" +
    "                ng-click=\"mainCtrl.changeDisplayedDate(1)\"\n" +
    "                title=\"Go to next day\"\n" +
    "                aria-label='This button will update the content below by navigating forward one day'>\n" +
    "            <i class=\"icon icon--chevron-right\"></i>\n" +
    "        </button>\n" +
    "        <button class=\"timetable__button\"\n" +
    "                ng-disabled=\"!mainCtrl.navigationEnabled\"\n" +
    "                ng-click=\"mainCtrl.changeDisplayedDate(7)\"\n" +
    "                title=\"Go to next week\"\n" +
    "                aria-label='This button will update the content below by navigating forward one week'>\n" +
    "            <i class=\"icon icon--chevron-right\"></i><i class=\"icon icon--chevron-right\"></i>\n" +
    "        </button>\n" +
    "    </div>\n" +
    "    <div id=\"a11y_announcer\" class=\"screen-reader-only\"></div>\n" +
    "    <div ng-if=\"mainCtrl.creation_success\"\n" +
    "         class=\"timetable__alert alert alert--success\"\n" +
    "         role=\"alert\">\n" +
    "        <p class=\"alert__text\">\n" +
    "            {{ mainCtrl.creation_success | success_message:mainCtrl.scope.form_action.type }}\n" +
    "        </p>\n" +
    "    </div>\n" +
    "    <div ng-if=\"mainCtrl.action_failure\"\n" +
    "         class=\"timetable__alert alert alert--danger\"\n" +
    "         role=\"alert\">\n" +
    "        <p class=\"alert__text\">{{ mainCtrl.action_failure }} Please try again.</p>\n" +
    "    </div>\n" +
    "    <div ng-show=\"!mainCtrl.meetings.$resolved\" class=\"progress\">\n" +
    "        <div class=\"progress__max\"><div class=\"progress__bar progress__bar--loading\"></div></div>\n" +
    "    </div>\n" +
    "    <div ng-show=\"mainCtrl.meetings.$resolved\" >\n" +
    "        <div class=\"timetable__null-item\"\n" +
    "             ng-if=\"!mainCtrl.meetings.meetings.occurrences.length\">\n" +
    "             No Events Scheduled\n" +
    "        </div>\n" +
    "        <div class=\"timetable__event\"\n" +
    "             ng-class=\"{'timetable__event--expanded': showDetails}\"\n" +
    "             ng-repeat=\"occurrence in mainCtrl.meetings.meetings.occurrences\">\n" +
    "\n" +
    "            <div class=\"timetable__header\"\n" +
    "                 ng-click=\"showDetails = !showDetails;\"\n" +
    "                 aria-expanded=\"{{ showDetails == true }}\"\n" +
    "                 role='region'>\n" +
    "                <span>\n" +
    "                    <time-range\n" +
    "                        starts=\"{{occurrence.start_datetime}}\"\n" +
    "                        duration=\"{{occurrence.duration}}\">\n" +
    "                    </time-range>&nbsp;<span class =\"timetable__time\">/ {{ mainCtrl.displayedDuration(occurrence.duration) }}</span>\n" +
    "                </span>\n" +
    "                <h3 class=\"timetable__title\">{{occurrence.name}}</h3>\n" +
    "                <p class=\"timetable__section\">\n" +
    "                    <span ng-switch=\"occurrence.access\">\n" +
    "\n" +
    "                        <a ng-switch-when=\"My Section Only\"\n" +
    "                           ng-href=\"/course/view.php?id={{ occurrence.course_id }}&group={{ occurrence.section_id }}\"\n" +
    "                           ng-click=\"mainCtrl.sendClickCourseOrGroupEvent('section', occurrence)\">\n" +
    "                            {{ occurrence.section_name }}\n" +
    "                        </a>\n" +
    "\n" +
    "                        <a ng-switch-when=\"All Course Sections\"\n" +
    "                           ng-href=\"/course/view.php?id={{ occurrence.course_id }}\"\n" +
    "                           ng-click=\"mainCtrl.sendClickCourseOrGroupEvent('course', occurrence)\">\n" +
    "                            {{ occurrence.enrolled_section }}\n" +
    "                        </a>\n" +
    "\n" +
    "                        <a ng-switch-when=\"The Group\"\n" +
    "                           ng-href=\"/local/groups/group.php?groupid={{ occurrence.group_id }}&page=wall&type={{ occurrence.group_type }}\"\n" +
    "                           ng-click=\"mainCtrl.sendClickCourseOrGroupEvent('group', occurrence)\">\n" +
    "                            {{ occurrence.group_name }}\n" +
    "                        </a>\n" +
    "\n" +
    "                    </span>\n" +
    "                </p>\n" +
    "                <button ng-click=\"mainCtrl.joinMeetingService(occurrence)\"\n" +
    "                        ng-if=\"mainCtrl.show_join_button(occurrence.start_datetime, occurrence.duration)\"\n" +
    "                        role=\"link\"\n" +
    "                        class=\"timetable__join-now button button--success\">\n" +
    "                        Join Now\n" +
    "                 </button>\n" +
    "            </div>\n" +
    "\n" +
    "            <div class=\"timetable__details\" ng-show=\"showDetails\">\n" +
    "                <div class=\"timetable__details-body\">\n" +
    "                    <span class=\"timetable__label\">Host</span>\n" +
    "                    <p class=\"timetable__text\">\n" +
    "                        <a ng-href=\"/my/profile.php?id={{occurrence.host_id}}\"\n" +
    "                           ng-click=\"mainCtrl.sendClickAssignmentEvent(occurrence)\">\n" +
    "                           {{ occurrence.host }}\n" +
    "                        </a>\n" +
    "                    </p>\n" +
    "\n" +
    "                    <span class=\"timetable__label\">Invitees</span>\n" +
    "                    <div class=\"timetable__text\">\n" +
    "                        <div>\n" +
    "                            <button ng-click=\"mainCtrl.viewInvitees(occurrence)\"\n" +
    "                                    class=\"timetable__more-invitees button button--small\">\n" +
    "                                View Invitees\n" +
    "                            </button>\n" +
    "                        </div>\n" +
    "                    </div>\n" +
    "\n" +
    "                    <span ng-if=\"occurrence.assignment_name\">\n" +
    "                        <span class=\"timetable__label\">Assignment</span>\n" +
    "                        <p class=\"timetable__text\">\n" +
    "                            <a ng-href=\"/mod/assignment/view.php?id={{occurrence.course_module_id}}\"\n" +
    "                               ng-click=\"mainCtrl.sendClickAssignmentEvent(occurrence)\">\n" +
    "                               {{ occurrence.assignment_name }}\n" +
    "                            </a>\n" +
    "                        </p>\n" +
    "                    </span>\n" +
    "\n" +
    "                    <span class=\"timetable__label\">Type</span>\n" +
    "                        <p class=\"timetable__text\">{{ occurrence.type }}</p>\n" +
    "                        <span ng-if=\"occurrence.details.length > 0\">\n" +
    "                            <span class=\"timetable__label\">Details</span>\n" +
    "                            <p class=\"timetable__text\">{{ occurrence.details }}</p>\n" +
    "                        </span>\n" +
    "                        <span ng-if=\"occurrence.recordings\"\n" +
    "                              ng-repeat=\"recording in occurrence.recordings\">\n" +
    "                            <span class=\"timetable__label\">Recordings</span>\n" +
    "                            <div class=\"timetable__text\">\n" +
    "                                <button class=\"button button--small\"\n" +
    "                                        ng-role=\"link\"\n" +
    "                                        ng-if=\"occurrence.recordings.length == 1\"\n" +
    "                                        ng-click=\"mainCtrl.getRecording(occurrence, recording)\">\n" +
    "                                    Watch Recording\n" +
    "                                </button>\n" +
    "                                <button class=\"button button--small\"\n" +
    "                                        ng-role=\"link\"\n" +
    "                                        ng-if=\"occurrence.recordings.length > 1\"\n" +
    "                                        ng-click=\"mainCtrl.getRecording(occurrence, recording)\">\n" +
    "                                    Watch Recording #{{$index + 1}}\n" +
    "                                </button>\n" +
    "                            </div>\n" +
    "                            <div class=\"icon-group\" ng-if=\"occurrence.is_my_meeting\">\n" +
    "                                <button ng-click=\"mainCtrl.moveRecording(occurrence.id, 'previous', recording.id)\"\n" +
    "                                        ng-disabled=\"!mainCtrl.canMoveRecordings\"\n" +
    "                                        class=\"icon-group__button\">\n" +
    "\n" +
    "                                    <i class=\"icon icon--chevron-up\"></i>\n" +
    "                                </button>\n" +
    "                                <button ng-click=\"mainCtrl.removeRecording(occurrence.id, recording.id)\"\n" +
    "                                        ng-disabled=\"!mainCtrl.canMoveRecordings\" class=\"icon-group__button\">\n" +
    "                                    <span class=\"screen-reader-only\">Remove recording</span>\n" +
    "                                    <i aria-hidden=\"true\" class=\"icon icon--trash\"></i>\n" +
    "                                </button>\n" +
    "                                <button ng-click=\"mainCtrl.moveRecording(occurrence.id, 'next', recording.id)\"\n" +
    "                                        ng-disabled=\"!mainCtrl.canMoveRecordings\"\n" +
    "                                        class=\"icon-group__button\">\n" +
    "                                    <i class=\"icon icon--chevron-down\"></i>\n" +
    "                                </button>\n" +
    "                            </div>\n" +
    "                        </span>\n" +
    "                    </div>\n" +
    "\n" +
    "                    <div class=\"timetable__details-footer\" ng-if=\"occurrence.is_my_meeting\">\n" +
    "                    <button class=\"button button--small\"\n" +
    "                            ng-if=\"occurrence.is_my_meeting\"\n" +
    "                            ng-click=\"mainCtrl.editMeeting(occurrence.live_session_id)\"\n" +
    "                            aria-label=\"Edit {{ occurrence.name }}\">\n" +
    "                            Edit\n" +
    "                    </button>\n" +
    "                    <button class=\"button button--small\"\n" +
    "                            ng-if=\"occurrence.is_my_meeting\"\n" +
    "                            ng-click=\"mainCtrl.duplicateMeeting(occurrence.live_session_id)\">\n" +
    "                            Duplicate\n" +
    "                    </button>\n" +
    "                </div>\n" +
    "             </div>\n" +
    "         </div>\n" +
    "     </div>\n" +
    "</div>\n"
  );

}]);

angular.module('onlineCampusApp').run(['$templateCache', function($templateCache) {
  'use strict';

  $templateCache.put('content-nav.html',
    "<nav class=\"content-nav-bar\" ng-if='contentNavCtrl.shouldRender'>\n" +
    "\t<a class=\"coursework-link\" ng-attr-href=\"{{contentNavCtrl.courseworkPageLink}}\">\n" +
    "\t\t<i class=\"icon icon--chevron-left\"></i>\n" +
    "\t\t<span class=\"course-name\">&nbsp;&nbsp;{{contentNavCtrl.course.name}}</span>\n" +
    "\t</a>\n" +
    "\t<div class=\"pull-right display-flex\">\n" +
    "\t\t<div\n" +
    "\t\t\tng-if=\"contentNavCtrl.canMarkComplete()\"\n" +
    "\t\t\tclass=\"mark-as-complete display-flex\"\n" +
    "\t\t\tng-click=\"contentNavCtrl.toggleMarkAsComplete()\"\n" +
    "\t\t\tng-attr-aria-label=\"{{contentNavCtrl.markCompletedAriaLabel()}}\">\n" +
    "\t\t\t<i class=\"icon icon--checkbox\" ng-if=\"!contentNavCtrl.isCompleted\"></i>\n" +
    "\t\t\t<i class=\"icon icon--checkbox-checked\" ng-if=\"contentNavCtrl.isCompleted\"></i>\n" +
    "\t\t\t<span class=\"small-caps\">&nbsp;mark as complete</span>\n" +
    "\t\t</div>\n" +
    "\t\t<a class=\"prev-link small-caps\" title=\"Previous Topic\" aria-label=\"Previous Topic\" ng-attr-href=\"{{contentNavCtrl.prevModule.link}}\" ng-if=\"contentNavCtrl.prevModule.exists\">\n" +
    "\t\t\t<i class=\"icon icon--chevron-left\" aria-hidden=\"true\"></i>\n" +
    "\t\t\t&nbsp;Previous Topic\n" +
    "\t\t</a>\n" +
    "\t\t<a class=\"next-link small-caps\" title=\"Next Topic\" aria-label=\"Next Topic\" ng-attr-href=\"{{contentNavCtrl.nextModule.link}}\" ng-if=\"contentNavCtrl.nextModule.exists\">\n" +
    "\t\t\tNext Topic&nbsp;\n" +
    "\t\t\t<i class=\"icon icon--chevron-right\" aria-hidden=\"true\"></i>\n" +
    "\t\t</a>\n" +
    "\t</div>\n" +
    "</nav>\n"
  );


  $templateCache.put('course-player.html',
    "\n" +
    "<div class=\"course-player\">\n" +
    "  <iframe ng-src=\"{{contentURI}}\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"></iframe>\n" +
    "</div>"
  );


  $templateCache.put('download-apps.html',
    "<div ng-if=\"twoBarCtrl.hasDownloadInfo()\" class=\"download-apps\">\n" +
    "    <div class=\"download-apps__header\">\n" +
    "        <h2 class=\"download-apps__header-title\">Downloads</h2>\n" +
    "    </div>\n" +
    "    <ul class=\"download-apps__list\">\n" +
    "        <li class=\"download-apps__link\" ng-if=\"twoBarCtrl.supportInfo.downloads.iphone_app_link\">\n" +
    "            <a target=\"_blank\" ng-href=\"{{twoBarCtrl.supportInfo.downloads.iphone_app_link}}\">\n" +
    "                iPhone App\n" +
    "            </a>\n" +
    "        </li>\n" +
    "        <li class=\"download-apps__link\" ng-if=\"twoBarCtrl.supportInfo.downloads.android_app_link\">\n" +
    "            <a target=\"_blank\" ng-href=\"{{twoBarCtrl.supportInfo.downloads.android_app_link}}\">\n" +
    "                Android App\n" +
    "            </a>\n" +
    "        </li>\n" +
    "        <li class=\"download-apps__link\" ng-if=\"twoBarCtrl.supportInfo.downloads.kaltura_eu_mac\">\n" +
    "            <a target=\"_blank\" ng-href=\"{{twoBarCtrl.supportInfo.downloads.kaltura_eu_mac}}\">\n" +
    "                Express Uploader Mac\n" +
    "            </a>\n" +
    "        </li>\n" +
    "        <li class=\"download-apps__link\" ng-if=\"twoBarCtrl.supportInfo.downloads.kaltura_eu_win\">\n" +
    "            <a target=\"_blank\" ng-href=\"{{twoBarCtrl.supportInfo.downloads.kaltura_eu_win}}\">\n" +
    "                Express Uploader Win\n" +
    "            </a>\n" +
    "        </li>\n" +
    "    </ul>\n" +
    "</div>\n"
  );


  $templateCache.put('footer.html',
    "\n" +
    "<div ng-if=\"footerController.shouldRender\" class=\"footer__links\">\n" +
    "  <ul>\n" +
    "    <li><a href=\"/public/terms.php\">Terms of Use</a></li>\n" +
    "    <li>|</li>\n" +
    "    <li><a href=\"/public/privacy.php\">Privacy Statement</a></li>\n" +
    "  </ul>\n" +
    "</div>"
  );


  $templateCache.put('interactive-video.html',
    "\n" +
    "<div class=\"interactive-video\">\n" +
    "  <iframe ng-src=\"{{contentURI}}\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"></iframe>\n" +
    "</div>"
  );


  $templateCache.put('masthead.html',
    "\n" +
    "<div class=\"page__header\">\n" +
    "  <h1 class=\"page__title\">{{ mastheadController.pageTitle }}</h1>\n" +
    "  <h3 ng-if=\"mastheadController.pageSubtitle &amp;&amp; !mastheadController.showSectionsSelection()\" class=\"page__subtitle\">{{ mastheadController.pageSubtitle }}</h3>\n" +
    "  <div ng-if=\"mastheadController.showSectionsSelection()\" class=\"section-filter\">\n" +
    "    <div class=\"filter-group filter-group\"><span class=\"filter-group__label\">section</span>\n" +
    "      <div class=\"filter-group__row\">\n" +
    "        <div harmony-select=\"mastheadController.sectionsInCourse\" role=\"link\" dropdown-model=\"mastheadController.selectedSection\" dropdown-item-label=\"name\" dropdown-onchange=\"mastheadController.changeSections()\"></div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "</div>\n" +
    "<nav ng-if=\"mastheadController.currentTabs.length &gt; 0\" class=\"page__nav\">\n" +
    "  <div class=\"tab-group\">\n" +
    "    <ul>\n" +
    "      <li ng-repeat=\"tab in mastheadController.currentTabs\"><a ng-click=\"tab.activate($event)\" ng-class=\"{ 'tab--active' : tab.active }\" href=\"{{ tab.location }}\" class=\"tab\">{{tab.label}}</a></li>\n" +
    "      <li><span id=\"ares_link\" ng-if=\"mastheadController.pageContext == &quot;course&quot;\"><a id=\"leftnav_library_resources\" href=\"#\" target=\"_blank\" class=\"tab\">Library Resources</a></span></li>\n" +
    "    </ul>\n" +
    "  </div>\n" +
    "</nav>\n" +
    "<div class=\"live-session-button-container\"><a ng-if=\"mastheadController.liveSessionPlanURL\" href=\"{{ mastheadController.liveSessionPlanURL }}\" target=\"_blank\" class=\"button button--small\">Live Session Plans</a></div>"
  );


  $templateCache.put('notifications.html',
    "<div class=\"notifications\">\n" +
    "    <div class=\"notifications__list\">\n" +
    "        <div ng-if=\"notificationsCtrl.allNotifications.length == 0\">\n" +
    "            <h2>You have no notifications!</h2>\n" +
    "        </div>\n" +
    "        <a class=\"notification\" ng-repeat=\"notification in notificationsCtrl.allNotifications\" ng-attr-href=\"{{notification.linkUrl}}\" focus-first-item>\n" +
    "            <p class=\"notification-text\" data-ng-bind-html=\"notification.renderMessage()\"></p>\n" +
    "            <div>\n" +
    "                <span class=\"notification-meta\">{{ notification.humanFriendlyNotificationCreateTime()}}</span>\n" +
    "                <div id=\"notification-action-buttons-{{notification.notification.id}}\">\n" +
    "                    <span ng-repeat=\"actionButton in notification.actionButtonDefinitions\">\n" +
    "                        <button ng-class=\"actionButton.primary == true ? 'button--action' : ''\"\n" +
    "                                class='button button--small {{actionButton.text | lowercase }}'\n" +
    "                                ng-click=\"notificationsCtrl.notificationActionButtonClicked(actionButton, notification); $event.stopPropagation();\">\n" +
    "                            {{ actionButton.text }}\n" +
    "                        </button>\n" +
    "                    </span>\n" +
    "                    <p id=\"notification-action-status-{{notification.notification.id}}\"\n" +
    "                        ng-show='notification.actionStatusMessage' class='alert__text'>\n" +
    "                        {{ notification.actionStatusMessage }}\n" +
    "                    </p>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "        </a>\n" +
    "    </div>\n" +
    "    <div class=\"pagination\" ng-show=\"notificationsCtrl.totalCount > 0\">\n" +
    "        <div class=\"pagination__controls\">\n" +
    "            <div aria-label=\"Showing notifications {{ notificationsCtrl.currentPageStart }} through {{ notificationsCtrl.currentPageEnd }} of {{ notificationsCtrl.totalCount }} total notifications\">\n" +
    "                <span class=\"pagination__text\">\n" +
    "                    {{ notificationsCtrl.currentPageStart }}&ndash;{{ notificationsCtrl.currentPageEnd }} of {{ notificationsCtrl.totalCount }}\n" +
    "                </span>\n" +
    "            </div>\n" +
    "            <button aria-label=\"Previous page\" class=\"pagination__arrow\" ng-click=\"notificationsCtrl.previousPage()\">\n" +
    "                <i class=\"icon icon--chevron-left\"></i>\n" +
    "            </button>\n" +
    "            <button aria-label=\"Next page\" class=\"pagination__arrow\" ng-click=\"notificationsCtrl.nextPage()\">\n" +
    "                <i class=\"icon icon--chevron-right\"></i>\n" +
    "            </button>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "\n" +
    "</div>\n"
  );


  $templateCache.put('profile-image.html',
    "\n" +
    "<div class=\"profile_image_link\"><a href=\"/my/profile.php?id={{ profileImageCtrl.profile.id }}\" ng-if=\"profileImageCtrl.profile\"><span><img ng-src=\"{{ profileImageCtrl.imageUrl }}\"/></span></a></div>"
  );


  $templateCache.put('program-resources.html',
    "\n" +
    "<div ng-if=\"programResourcesCtrl.resources\" class=\"program-resource\">\n" +
    "  <div class=\"program-resource__header\">\n" +
    "    <h2 class=\"program-resource__header-title\">Resources</h2>\n" +
    "  </div>\n" +
    "  <ul class=\"program-resource__list\">\n" +
    "    <li ng-repeat=\"resource in programResourcesCtrl.resources\" class=\"program-resource__link\"><a target=\"_blank\" ng-href=\"{{resource.url}}\">{{resource.name}}</a></li>\n" +
    "  </ul>\n" +
    "</div>"
  );


  $templateCache.put('quiz-reports-menu.html',
    "<div ng-show=\"contentNavCtrl.isQuiz\">\n" +
    "    <div ng-show=\"contentNavCtrl.displayQuizReports()\" class=\"quiz-menu-wrapper\">\n" +
    "        <span class=\"small-caps\">{{contentNavCtrl.linkBlock.title}}</span>\n" +
    "        <div class=\"tab-group tab-group--vertical\">\n" +
    "            <a ng-repeat=\"link in contentNavCtrl.linkBlock.links\" ng-if=\"link.show\" ng-attr-href=\"{{link.url}}\" ng-class=\"{'tab--active': contentNavCtrl.linkBlock.activeTab == link.text}\" class=\"tab\">{{link.text}}</a>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "    <a ng-show=\"contentNavCtrl.displayApGradeLink()\" class=\"ap-grade-link-wrapper\" ng-attr-href=\"{{contentNavCtrl.apRedirectUrl}}\" target=\"_blank\">{{contentNavCtrl.goToGradeBookLink}}</a>\n" +
    "    <div class='transcluded' ng-transclude></div>\n" +
    "</div>\n"
  );


  $templateCache.put('tt-recordings-filter.html',
    "\n" +
    "<nav class=\"page__filters\">\n" +
    "  <div class=\"recordings-filters\">\n" +
    "    <div class=\"filter-groups date-filters\"><span class=\"filter-group__label\">Date Range</span>\n" +
    "      <div class=\"filter-group__row\">\n" +
    "        <div ng-disabled=\"recordingsCtrl.disableBackwardsNav()\" ng-class=\"{'button--disabled': recordingsCtrl.disableBackwardsNav()}\" ng-click=\"recordingsCtrl.navigate('prev')\" class=\"filter filter--button\"><i class=\"icon icon--chevron-left\"></i></div>\n" +
    "        <div class=\"filter filter--time\">{{ recordingsCtrl.displayedDates()[0] }} – {{ recordingsCtrl.displayedDates()[1] }}</div>\n" +
    "        <div ng-disabled=\"recordingsCtrl.disableForwardNav()\" ng-class=\"{'button--disabled': recordingsCtrl.disableForwardNav()}\" ng-click=\"recordingsCtrl.navigate('next')\" class=\"filter filter--button\"><i class=\"icon icon--chevron-right\"></i></div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "    <div class=\"filter-groups dropdown-filters\">\n" +
    "      <div class=\"primary-filters\">\n" +
    "        <div class=\"filter-groups-row\">\n" +
    "          <div aria-label=\"Filter by Course\" class=\"form-group filter-groups-option\">\n" +
    "            <label for=\"filter-course\" class=\"label filter-groups-option-label\">Course</label>\n" +
    "            <div id=\"filter-course\" angucomplete-alt=\"\" input-changed=\"recordingsCtrl.courseInputChange\" placeholder=\"Course\" minlength=\"0\" local-data=\"recordingsCtrl.availableCourseList\" selected-object=\"recordingsCtrl.courseSelected\" title-field=\"name\" search-fields=\"name\" input-class=\"form-group__input\"></div>\n" +
    "          </div>\n" +
    "          <div aria-label=\"Filter by Section\" class=\"form-group filter-groups-option\">\n" +
    "            <label for=\"section-options\" class=\"label filter-groups-option-label\">Section</label>\n" +
    "            <div id=\"filter-section\" angucomplete-alt=\"\" input-changed=\"recordingsCtrl.sectionInputChange\" placeholder=\"Section\" minlength=\"0\" local-data=\"recordingsCtrl.availableSectionList\" selected-object=\"recordingsCtrl.sectionSelected\" title-field=\"name\" search-fields=\"name\" initial-value=\"\" disable-input=\"recordingsCtrl.disableSectionSelection\" input-class=\"form-group__input\"></div>\n" +
    "          </div>\n" +
    "          <div aria-label=\"Filter tby Group\" class=\"form-group filter-groups-option last-option\">\n" +
    "            <label for=\"group-options\" class=\"label filter-groups-option-label\">Group</label>\n" +
    "            <div id=\"filter-group\" angucomplete-alt=\"\" input-changed=\"recordingsCtrl.groupInputChange\" placeholder=\"Group\" minlength=\"0\" local-data=\"recordingsCtrl.availableGroupList\" selected-object=\"recordingsCtrl.groupSelected\" title-field=\"name\" search-fields=\"name\" input-class=\"form-group__input\"></div>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "      <div class=\"filter-groups secondary-filters\">\n" +
    "        <div class=\"filter-groups-row\">\n" +
    "          <div aria-label=\"Filter by Type\" class=\"form-group filter-groups-option\">\n" +
    "            <label for=\"filter-type\" class=\"label filter-groups-option-label\">Type</label><br/>\n" +
    "            <div id=\"filter-type\" angucomplete-alt=\"\" placeholder=\"Meeting Type\" minlength=\"0\" local-data=\"recordingsCtrl.availableTypeList\" selected-object=\"recordingsCtrl.typeSelected\" title-field=\"name\" search-fields=\"name\" input-changed=\"recordingsCtrl.typeInputChange\" input-class=\"form-group__input\"></div>\n" +
    "          </div>\n" +
    "          <div aria-label=\"Filter by Host\" class=\"form-group filter-groups-option last-option\">\n" +
    "            <label for=\"meeting-hosts\" class=\"label filter-groups-option-label\">Host</label><br/>\n" +
    "            <div id=\"filter-host\" angucomplete-alt=\"\" placeholder=\"Meeting Host\" minlength=\"0\" local-data=\"recordingsCtrl.availableHostList\" selected-object=\"recordingsCtrl.hostSelected\" title-field=\"name\" search-fields=\"name\" input-changed=\"recordingsCtrl.hostInputChange\" input-class=\"form-group__input\"></div>\n" +
    "          </div>\n" +
    "          <div class=\"form-group filter-groups-option\">\n" +
    "            <button id=\"reset-button\" ng-click=\"recordingsCtrl.resetFilters()\" class=\"button\">Reset Filters</button>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "  <hr/>\n" +
    "</nav>"
  );


  $templateCache.put('twobar.html',
    "\n" +
    "<nav ng-class=\"{'two-bar--open two-bar--fade': twoBarCtrl.activeTab &amp;&amp; twoBarCtrl.activeTab != twoBarCtrl.PROFILE}\" class=\"two-bar\">\n" +
    "  <div ng-click=\"twoBarCtrl.closePanels()\" ng-if=\"twoBarCtrl.activeTab &amp;&amp; twoBarCtrl.activeTab != twoBarCtrl.PROFILE\" aria-label=\"Click to close navigation\" class=\"two-bar__overlay\"><img src=\"https://whitelabel.2u.com/cdn/v1/syr-ist/watermark.png\" alt=\"\"/></div>\n" +
    "  <ul ng-keyup=\"twoBarCtrl.closeIfEscape($event)\" class=\"two-bar__bar\">\n" +
    "    <li><a href=\"/local/index.php\" aria-label=\"Home\" ng-focus=\"twoBarCtrl.closePanels()\" class=\"two-bar__drop-cap tooltip tooltip--right two-bar__toggle-home\"><img src=\"https://whitelabel.2u.com/cdn/v1/syr-ist/logomark.svg\" alt=\"Home\" class=\"inject-me\"/></a></li>\n" +
    "    <li ng-class=\"{'two-bar__toggle--active': twoBarCtrl.activeTab == twoBarCtrl.COURSES}\">\n" +
    "      <button ng-click=\"twoBarCtrl.toggleCourses()\" aria-label=\"Courses\" aria-expanded=\"{{twoBarCtrl.activeTab == twoBarCtrl.COURSES}}\" ng-focus=\"twoBarCtrl.activeTab != twoBarCtrl.COURSES &amp;&amp; twoBarCtrl.closePanels()\" ng-class=\"{tooltip: twoBarCtrl.activeTab != twoBarCtrl.COURSES}\" class=\"two-bar__toggle tooltip--right\"><i aria-hidden=\"true\" class=\"icon icon--course\"></i></button>\n" +
    "      <div ng-show=\"twoBarCtrl.activeTab == twoBarCtrl.COURSES\" class=\"two-bar__panel two-bar__panel--active\">\n" +
    "        <div class=\"two-bar__panel-header\">\n" +
    "          <h3 class=\"two-bar__panel-title\">Courses</h3><a href=\"/my/courses.php\" class=\"two-bar__panel-link\"><span>View All</span><i aria-hidden=\"true\" class=\"icon icon--chevron-right\"></i></a>\n" +
    "        </div>\n" +
    "        <div class=\"two-bar__panel-body\">\n" +
    "          <ul>\n" +
    "            <li ng-repeat=\"course in twoBarCtrl.courseList\"><a ng-href=\"{{course.url}}\" class=\"two-bar__list-item\"><span class=\"two-bar__list-item-title\">{{course.title}}</span><span class=\"two-bar__list-item-meta\"><span>{{course.meta}}</span></span></a></li>\n" +
    "          </ul>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </li>\n" +
    "    <li ng-class=\"{'two-bar__toggle--active': twoBarCtrl.activeTab == twoBarCtrl.GROUPS}\">\n" +
    "      <button ng-click=\"twoBarCtrl.toggleGroups()\" aria-label=\"Groups\" aria-expanded=\"{{twoBarCtrl.activeTab == twoBarCtrl.GROUPS}}\" ng-focus=\"twoBarCtrl.activeTab != twoBarCtrl.GROUPS &amp;&amp; twoBarCtrl.closePanels()\" ng-class=\"{tooltip: twoBarCtrl.activeTab != twoBarCtrl.GROUPS}\" class=\"two-bar__toggle tooltip--right\"><i aria-hidden=\"true\" class=\"icon icon--group\"></i></button>\n" +
    "      <div ng-show=\"twoBarCtrl.activeTab == twoBarCtrl.GROUPS\" class=\"two-bar__panel two-bar__panel--active\">\n" +
    "        <div class=\"two-bar__panel-header\">\n" +
    "          <h3 class=\"two-bar__panel-title\">Groups</h3><a href=\"/local/groups/searchgroups.php\" class=\"two-bar__panel-link\"><span>View All</span><i aria-hidden=\"true\" class=\"icon icon--chevron-right\"></i></a>\n" +
    "          <ul class=\"tab-group\">\n" +
    "            <li role=\"presentation\" ng-repeat=\"groupButtonItem in twoBarCtrl.groupsButtonItems\">\n" +
    "              <button ng-click=\"twoBarCtrl.activeMultiList = $index\" ng-attr-aria-label=\"{{groupButtonItem.title}} Groups\" ng-class=\"{'tab--active': twoBarCtrl.activeMultiList == $index}\" axs-menu-item=\"axs-menu-item\" aria-selected=\"{{twoBarCtrl.activeMultiList == $index}}\" role=\"tab\" class=\"tab\">{{groupButtonItem.title}}</button>\n" +
    "            </li>\n" +
    "          </ul>\n" +
    "        </div>\n" +
    "        <div class=\"two-bar__panel-body\">\n" +
    "          <ul>\n" +
    "            <li ng-repeat=\"group in twoBarCtrl.getGroupList()\"><a ng-href=\"{{group.url}}\" class=\"two-bar__list-item\"><span class=\"two-bar__list-item-title\">{{group.title}}</span><span class=\"two-bar__list-item-meta\">\n" +
    "                  <ng-pluralize count=\"group.meta\" when=\"{'0': 'No Members', 'one': '1 Member', 'other': '{} Members'}\"></ng-pluralize></span></a></li>\n" +
    "          </ul><a ng-href=\"{{twoBarCtrl.groupsButtonItems[twoBarCtrl.activeMultiList].createLink}}\" class=\"create-button\"><span aria-hidden=\"true\" class=\"icon icon--plus\"></span>Create New {{twoBarCtrl.groupsButtonItems[twoBarCtrl.activeMultiList].title}} Group</a>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </li>\n" +
    "    <li ng-class=\"{'two-bar__toggle--active': twoBarCtrl.activeTab == twoBarCtrl.NOTIFICATIONS}\">\n" +
    "      <button ng-click=\"twoBarCtrl.toggleNotifications()\" aria-label=\"Notifications\" aria-expanded=\"{{twoBarCtrl.activeTab == twoBarCtrl.NOTIFICATIONS}}\" ng-focus=\"twoBarCtrl.activeTab != twoBarCtrl.NOTIFICATIONS &amp;&amp; twoBarCtrl.closePanels()\" ng-class=\"{tooltip: twoBarCtrl.activeTab != twoBarCtrl.NOTIFICATIONS}\" class=\"two-bar__toggle tooltip--right\"><i aria-hidden=\"true\" class=\"icon icon--notification\"></i><span ng-if=\"twoBarCtrl.notificationsCount()\" class=\"two-bar__toggle-indicator\">{{twoBarCtrl.notificationsCount()}}</span></button>\n" +
    "      <div ng-show=\"twoBarCtrl.activeTab == twoBarCtrl.NOTIFICATIONS\" class=\"two-bar__panel two-bar__panel--active\">\n" +
    "        <div class=\"two-bar__panel-header\">\n" +
    "          <h3 class=\"two-bar__panel-title\">Notifications</h3><a href=\"/notifications/all_notifications.php\" class=\"two-bar__panel-link\"><span>View All</span><i aria-hidden=\"true\" class=\"icon icon--chevron-right\"></i></a>\n" +
    "        </div>\n" +
    "        <div class=\"two-bar__panel-body\">\n" +
    "          <div ng-show=\"!twoBarCtrl.notifications.length\" class=\"two-bar__null-item\">No New Notifications</div>\n" +
    "          <ul>\n" +
    "            <li ng-repeat=\"notification in twoBarCtrl.notifications\"><a ng-attr-href=\"{{notification.linkUrl}}\" class=\"two-bar__list-item\"><span data-ng-bind-html=\"notification.renderMessage()\" class=\"two-bar__list-item-text\"></span><span class=\"two-bar__list-item-meta\">{{notification.humanFriendlyNotificationCreateTime()}}</span>\n" +
    "                <div ng-attr-id=\"notification-action-buttons-{{notification.notification.id}}\"><span ng-repeat=\"actionButton in notification.actionButtonDefinitions\">\n" +
    "                    <button ng-class=\"actionButton.primary == true ? 'button--action' : ''\" ng-click=\"twoBarCtrl.notificationActionButtonClicked(actionButton, notification); $event.stopPropagation();\" class=\"button button--small {{actionButton.text | lowercase }}\">{{ actionButton.text }}</button></span>\n" +
    "                  <p ng-attr-id=\"notification-action-status-{{notification.notification.id}}\" ng-show=\"notification.actionStatusMessage\" class=\"alert__text\">{{ notification.actionStatusMessage }}</p>\n" +
    "                </div></a></li>\n" +
    "          </ul>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </li>\n" +
    "    <li ng-if=\"twoBarCtrl.zoomEnabled\" ng-class=\"{'two-bar__toggle--active': twoBarCtrl.activeTab == twoBarCtrl.ZOOM}\">\n" +
    "      <button ng-click=\"twoBarCtrl.navigateMeetingsLandingPage()\" aria-label=\"Meetings\" aria-expanded=\"{{twoBarCtrl.activeTab == twoBarCtrl.ZOOM}}\" ng-focus=\"twoBarCtrl.activeTab != twoBarCtrl.ZOOM &amp;&amp; twoBarCtrl.closePanels()\" ng-class=\"{tooltip: twoBarCtrl.activeTab != twoBarCtrl.ZOOM}\" class=\"two-bar__toggle tooltip--right\"><i class=\"icon zoom material-icons\">&#xE878</i></button>\n" +
    "    </li>\n" +
    "    <li ng-if=\"twoBarCtrl.showPlacements\" ng-class=\"{'two-bar__toggle--active': twoBarCtrl.activeTab == twoBarCtrl.PLACEMENTS}\" class=\"placement\"><a href=\"/placements\" aria-label=\"Placement Portal\" aria-expanded=\"{{twoBarCtrl.activeTab == twoBarCtrl.PLACEMENTS}}\" ng-focus=\"twoBarCtrl.activeTab != twoBarCtrl.PLACEMENTS &amp;&amp; twoBarCtrl.closePanels()\" ng-class=\"{tooltip: twoBarCtrl.activeTab != twoBarCtrl.PLACEMENTS}\" class=\"two-bar__toggle tooltip--right\"><i class=\"icon material-icons\">room</i></a></li>\n" +
    "    <li ng-class=\"{'two-bar__toggle--active': twoBarCtrl.activeTab == twoBarCtrl.SUPPORT}\">\n" +
    "      <button ng-click=\"twoBarCtrl.toggleSupportBar()\" aria-label=\"Support\" aria-expanded=\"{{twoBarCtrl.activeTab == twoBarCtrl.SUPPORT}}\" ng-focus=\"twoBarCtrl.activeTab != twoBarCtrl.SUPPORT &amp;&amp; twoBarCtrl.closePanels()\" ng-class=\"{tooltip: twoBarCtrl.activeTab != twoBarCtrl.SUPPORT}\" class=\"two-bar__toggle tooltip--right\"><i aria-hidden=\"true\" class=\"icon icon--help\"></i></button>\n" +
    "      <div ng-show=\"twoBarCtrl.activeTab == twoBarCtrl.SUPPORT\" class=\"two-bar__panel two-bar__panel--active\">\n" +
    "        <div class=\"two-bar__panel-header\">\n" +
    "          <h3 class=\"two-bar__panel-title\">{{twoBarCtrl.role}} Support</h3>\n" +
    "        </div>\n" +
    "        <div class=\"two-bar__support\">\n" +
    "          <div class=\"two-bar__support-form-group\">\n" +
    "            <label for=\"phone\" class=\"form-group__label\">Phone</label>\n" +
    "            <div aria-label=\"Copied\" class=\"input-group\">\n" +
    "              <input value=\"{{ twoBarCtrl.contactInfo.phone }}\" readonly=\"\" ng-click=\"twoBarCtrl.copyToClipBoard($event)\" class=\"input-group__input\"/><a ng-href=\"tel:{{twoBarCtrl.contactInfo.unFormattedPhone}}\" class=\"button control-group__button\"><span aria-hidden=\"true\" class=\"icon icon--phone\"></span></a>\n" +
    "            </div><span class=\"two-bar__support-click-instruction\">Click to copy</span>\n" +
    "          </div>\n" +
    "          <div class=\"two-bar__support-form-group\">\n" +
    "            <label for=\"email\" class=\"form-group__label\">Email</label>\n" +
    "            <div aria-label=\"Copied\" class=\"input-group\">\n" +
    "              <input value=\"{{ twoBarCtrl.contactInfo.email }}\" readonly=\"\" ng-click=\"twoBarCtrl.copyToClipBoard($event)\" class=\"input-group__input\"/><a ng-href=\"mailto:{{ twoBarCtrl.contactInfo.email }}\" class=\"button control-group__button\"><span aria-hidden=\"true\" class=\"icon icon--email\"></span></a>\n" +
    "            </div><span class=\"two-bar__support-click-instruction\">Click to copy</span>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </li>\n" +
    "    <li ng-if=\"twoBarCtrl.showAdminSettings()\" class=\"two-bar__admin-setting\"><a href=\"{{twoBarCtrl.adminCoursesUrl}}\" aria-label=\"Admin Settings\" class=\"two-bar__toggle tooltip tooltip--right\"><span aria-hidden=\"true\" class=\"icon icon--gear\"></span></a></li>\n" +
    "    <li ng-class=\"{'two-bar__profile--active': twoBarCtrl.activeTab == twoBarCtrl.PROFILE}\" class=\"two-bar__profile\">\n" +
    "      <button ng-click=\"twoBarCtrl.toggleProfile()\" aria-label=\"Profile\" aria-expanded=\"{{twoBarCtrl.activeTab == twoBarCtrl.PROFILE}}\" ng-focus=\"twoBarCtrl.activeTab != twoBarCtrl.PROFILE &amp;&amp; twoBarCtrl.closePanels()\" ng-class=\"{tooltip: twoBarCtrl.activeTab != twoBarCtrl.PROFILE}\" class=\"picture tooltip tooltip--right\"><img ng-src=\"{{ twoBarCtrl.imageUrl }}\"/></button>\n" +
    "      <ul ng-show=\"twoBarCtrl.activeTab == twoBarCtrl.PROFILE\" class=\"two-bar__menu\">\n" +
    "        <li class=\"menu__title\">\n" +
    "          <div class=\"two-bar__menu-name\">{{twoBarCtrl.getFullName()}}</div><span class=\"two-bar__menu-username u--ellipsis\">{{twoBarCtrl.role}}</span>\n" +
    "        </li>\n" +
    "        <li role=\"separator\" class=\"menu__separator\"></li>\n" +
    "        <li class=\"menu__item\"><a href=\"/my/profile.php\">View profile</a></li>\n" +
    "        <li class=\"menu__item\"><a href=\"/local/settings/index.php\">Edit settings</a></li>\n" +
    "        <li class=\"menu__item\"><a href=\"/ap/profiles/{{ twoBarCtrl.profile.uuid }}/edit\">Change profile photo</a></li>\n" +
    "        <li role=\"separator\" class=\"menu__separator\"></li>\n" +
    "        <li class=\"menu__item\"><a ng-click=\"twoBarCtrl.logout()\">Sign out</a></li>\n" +
    "        <div class=\"block-item footer\"></div>\n" +
    "      </ul>\n" +
    "    </li>\n" +
    "  </ul>\n" +
    "</nav>"
  );


  $templateCache.put('upcoming-coursework.html',
    "<div ng-if=\"upcomingCourseworkCtrl.hasUpcomingCoursework()\" class=\"upcoming-coursework\">\n" +
    "    <div class=\"upcoming-coursework__header\">\n" +
    "        <h2 class=\"upcoming-coursework__header-title\">Coursework: Up Next</h2>\n" +
    "    </div>\n" +
    "    <ul>\n" +
    "        <li id=\"upcoming_coursework__list_item\" ng-repeat=\"module in upcomingCourseworkCtrl.sections\" ng-if=\"module.course.upcoming_coursework.name\">\n" +
    "            <a class=\"upcoming-coursework__item\" ng-href=\"/mod/{{module.course.upcoming_coursework.type}}/view.php?id={{module.course.upcoming_coursework.cmid}}&group={{module.id}}\">\n" +
    "                <span class=\"upcoming-coursework__item-title\">{{module.course.upcoming_coursework.name}}</span>\n" +
    "                <span class=\"upcoming-coursework__item-course\">{{module.name}}</span>\n" +
    "            </a>\n" +
    "        </li>\n" +
    "    </ul>\n" +
    "</div>\n"
  );

}]);
